# Generated with h2o 0.1.18

# autogenerated bash script

_delly()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          call) _delly_call
            return
            ;;

          merge) _delly_merge
            return
            ;;

          filter) _delly_filter
            return
            ;;

          lr) _delly_lr
            return
            ;;

          cnv) _delly_cnv
            return
            ;;

          classify) _delly_classify
            return
            ;;

      *)
          word_list=" call merge filter lr cnv classify " 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_delly_call ()
{
    local cur word_list
    word_list=" -? --help -t --svtype -g --genome -x --exclude -o --outfile -q --map-qual -r --qual-tra -s --mad-cutoff -c --minclip -z --min-clique-size -m --minrefsep -n --maxreadsep -v --vcffile -u --geno-qual -d --dump" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_delly_merge ()
{
    local cur word_list
    word_list=" -? --help -o --outfile -u --chunks -a --vaf -v --coverage -m --minsize -n --maxsize -e --cnvmode -c --precise -p --pass -b --bp-offset -r --rec-overlap" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_delly_filter ()
{
    local cur word_list
    word_list=" -? --help -f --filter -o --outfile -a --altaf -m --minsize -n --maxsize -r --ratiogeno -p --pass -s --samples -v --coverage -c --controlcontamination -q --gq -e --rddel -u --rddup" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_delly_lr ()
{
    local cur word_list
    word_list=" -? --help -t --svtype -y --technology -g --genome -x --exclude -o --outfile -q --mapqual -c --minclip -z --min-clique-size -m --minrefsep -n --maxreadsep -p --max-reads -f --flank-size -a --flank-quality -u --geno-qual -d --dump" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_delly_cnv ()
{
    local cur word_list
    word_list=" -? --help -g --genome -q --quality -m --mappability -y --ploidy -o --outfile -c --covfile -x --sdrd -t --cn-offset -z --cnv-size -l --svfile -v --vcffile -u --segmentation -i --window-size -j --window-offset -b --bed-intervals -k --fraction-window -a --adaptive-windowing -w --scan-window -f --fraction-unique -r --scan-regions -d --mad-cutoff -p --percentile -n --no-window-selection" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_delly_classify ()
{
    local cur word_list
    word_list=" -? --help -f --filter -o --outfile -m --minsize -n --maxsize -p --pass -s --samples -e --pgerm -t --cn-offset -y --ploidy -q --qual -x --maxsd" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _delly delly
