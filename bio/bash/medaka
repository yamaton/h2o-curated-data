# Generated with h2o 0.1.18

# autogenerated bash script

_medaka()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          compress_bam) _medaka_compress_bam
            return
            ;;

          features) _medaka_features
            return
            ;;

          train) _medaka_train
            return
            ;;

          consensus) _medaka_consensus
            return
            ;;

          smolecule) _medaka_smolecule
            return
            ;;

          consensus_from_features) _medaka_consensus_from_features
            return
            ;;

          fastrle) _medaka_fastrle
            return
            ;;

          stitch) _medaka_stitch
            return
            ;;

          variant) _medaka_variant
            return
            ;;

          snp) _medaka_snp
            return
            ;;

          tools) _medaka_tools
            return
            ;;

      *)
          word_list=" compress_bam features train consensus smolecule consensus_from_features fastrle stitch variant snp tools -h --help --version" 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_medaka_compress_bam ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --regions --threads --use_fast5_info" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_features ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --batch_size --chunk_len --chunk_ovlp --regions --truth --truth_haplotag --threads --label_scheme --label_scheme_args --feature_encoder --feature_encoder_args" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_train ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --train_name --model --epochs --batch_size --max_samples --mini_epochs --seed --threads_io --device --optimizer --optim_args --validation_split --validation_features" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_consensus ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --batch_size --chunk_len --chunk_ovlp --regions --model --threads --bam_workers --bam_chunk --check_output --save_features --RG --tag_name --tag_value --tag_keep_missing" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_smolecule ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --batch_size --chunk_len --chunk_ovlp --model --method --depth --length --threads --check_output --save_features" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_consensus_from_features ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --model" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_fastrle ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --block_size" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_stitch ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --regions --threads --no-fillgaps" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_variant ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --regions --verbose --ambig_ref --gvcf" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_snp ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet --regions --threshold --ref_vcf --verbose" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_medaka_tools ()
{
    local cur word_list
    word_list=" -h --help --debug --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _medaka medaka
