# Generated with h2o 0.1.18

# autogenerated bash script

_salmon()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          alevin) _salmon_alevin
            return
            ;;

          index) _salmon_index
            return
            ;;

          quant) _salmon_quant
            return
            ;;

          quantmerge) _salmon_quantmerge
            return
            ;;

      *)
          word_list=" alevin index quant quantmerge " 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_salmon_alevin ()
{
    local cur word_list
    word_list=" -l --libType -i --index -r --unmatedReads -1 --mates1 -2 --mates2 -v --version -h --help -o --output -j --rad --sketch -p --threads --tgMap --hash --dropseq --chromiumV3 --chromium --gemcode --citeseq --celseq --celseq2 --quartzseq2 --whitelist --featureStart --featureLength --noQuant --numCellBootstraps --numCellGibbsSamples --forceCells --expectCells --mrna --rrna --keepCBFraction --read-geometry --bc-geometry --umi-geometry --end --umiLength --barcodeLength --noem --freqThreshold --umiEditDistance --dumpfq --dumpBfh --dumpArborescences --dumpUmiGraph --dumpCellEq --dumpFeatures --dumpMtx --lowRegionMinNumBarcodes --maxNumBarcodes" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_salmon_index ()
{
    local cur word_list
    word_list=" -v -h -t -t --transcripts -t -t --transcripts -k -k --kmerLen -k -k --kmerLen -i -i --index -i -i --index --gencode --features --keepDuplicates -p -p --threads -p -p --threads --keepFixedFasta -f -f --filterSize -f -f --filterSize --tmpdir --sparse -d -d --decoys -d -d --decoys --type" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_salmon_quant ()
{
    local cur word_list
    word_list=" --help-reads --help-alignment" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_salmon_quantmerge ()
{
    local cur word_list
    word_list=" -v --version -h --help --quants --names -c --column --genes --missing -o --output" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _salmon salmon
