# autogenerated bash script

_samtools()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          dict) _samtools_dict
            return
            ;;

          faidx) _samtools_faidx
            return
            ;;

          fqidx) _samtools_fqidx
            return
            ;;

          index) _samtools_index
            return
            ;;

          calmd) _samtools_calmd
            return
            ;;

          fixmate) _samtools_fixmate
            return
            ;;

          reheader) _samtools_reheader
            return
            ;;

          targetcut) _samtools_targetcut
            return
            ;;

          addreplacerg) _samtools_addreplacerg
            return
            ;;

          markdup) _samtools_markdup
            return
            ;;

          ampliconclip) _samtools_ampliconclip
            return
            ;;

          collate) _samtools_collate
            return
            ;;

          cat) _samtools_cat
            return
            ;;

          merge) _samtools_merge
            return
            ;;

          mpileup) _samtools_mpileup
            return
            ;;

          sort) _samtools_sort
            return
            ;;

          split) _samtools_split
            return
            ;;

          quickcheck) _samtools_quickcheck
            return
            ;;

          fastq) _samtools_fastq
            return
            ;;

          fasta) _samtools_fasta
            return
            ;;

          import) _samtools_import
            return
            ;;

          bedcov) _samtools_bedcov
            return
            ;;

          coverage) _samtools_coverage
            return
            ;;

          depth) _samtools_depth
            return
            ;;

          flagstat) _samtools_flagstat
            return
            ;;

          idxstats) _samtools_idxstats
            return
            ;;

          phase) _samtools_phase
            return
            ;;

          stats) _samtools_stats
            return
            ;;

          ampliconstats) _samtools_ampliconstats
            return
            ;;

          flags) _samtools_flags
            return
            ;;

          tview) _samtools_tview
            return
            ;;

          view) _samtools_view
            return
            ;;

          depad) _samtools_depad
            return
            ;;

      *)
          word_list=" dict faidx fqidx index calmd fixmate reheader targetcut addreplacerg markdup ampliconclip collate cat merge mpileup sort split quickcheck fastq fasta import bedcov coverage depth flagstat idxstats phase stats ampliconstats flags tview view depad " 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_samtools_dict ()
{
    local cur word_list
    word_list=" -a --assembly -A --alias --alternative-name -H --no-header -o --output -s --species -u --uri" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_faidx ()
{
    local cur word_list
    word_list=" -o --output -n --length -c --continue -r --region-file -f --fastq -i --reverse-complement --mark-strand --fai-idx --gzi-idx -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_fqidx ()
{
    local cur word_list
    word_list=" -o --output -n --length -c --continue -r --region-file -i --reverse-complement --mark-strand --fai-idx --gzi-idx -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_index ()
{
    local cur word_list
    word_list=" -b -c -m -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_calmd ()
{
    local cur word_list
    word_list=" -A -e -u -b -C -r -E --no-PG -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_fixmate ()
{
    local cur word_list
    word_list=" -r -p -c -m -u -O --no-PG -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_reheader ()
{
    local cur word_list
    word_list=" -P --no-PG -i --in-place -c --command" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_targetcut ()
{
    local cur word_list
    word_list=" -Q -i -0 -1 -2 -f" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_addreplacerg ()
{
    local cur word_list
    word_list=" -r -R -m -o -u -w --no-PG -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_markdup ()
{
    local cur word_list
    word_list=" -l -r -s -T -S -f -d -c -t -m --mode -u --include-fails --no-multi-dup --no-PG -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_ampliconclip ()
{
    local cur word_list
    word_list=" -b -o -f -u --soft-clip --hard-clip --both-ends --strand --clipped --fail --filter-len --fail-len --no-excluded --rejects-file --original --keep-tag --tolerance --no-PG" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_collate ()
{
    local cur word_list
    word_list=" -O -o -u -l -n -f -r --no-PG -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_cat ()
{
    local cur word_list
    word_list=" -b -h -o --no-PG -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_merge ()
{
    local cur word_list
    word_list=" -1 -b -f -h -n -o -t -R -r -u -c -p -X -L --no-PG -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_mpileup ()
{
    local cur word_list
    word_list=" -6 --illumina1.3+ -A --count-orphans -b --bam-list -B --no-BAQ -C --adjust-MQ -d --max-depth -E --redo-BAQ -f --fasta-ref -G --exclude-RG -l --positions -q --min-MQ -Q --min-BQ -r --region -R --ignore-RG --rf --incl-flags --ff --excl-flags -x --ignore-overlaps -X -o --output -O --output-BP -s --output-MQ --output-QNAME --output-extra --output-sep --output-empty --reverse-del -a -a -aa" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_sort ()
{
    local cur word_list
    word_list=" -K -l -u -m -M -n -t -o -O -T -@ --no-PG" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_split ()
{
    local cur word_list
    word_list=" -u -h -f -v --no-PG -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_quickcheck ()
{
    local cur word_list
    word_list=" -v -q -u" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_fastq ()
{
    local cur word_list
    word_list=" -n -N -O -s -t -T -1 -2 -o -0 -f -F -G -i -c --i1 --i2 --barcode-tag --quality-tag -@ --threads --index-format" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_fasta ()
{
    local cur word_list
    word_list=" -n -N -O -s -t -T -1 -2 -o -0 -f -F -G -i -c --i1 --i2 --barcode-tag --quality-tag -@ --threads --index-format" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_import ()
{
    local cur word_list
    word_list=" -s -0 -1 -2 --i1 --i2 -i --barcode-tag --quality-tag -oFILE --order -r --rg-line -R --rg -u -T" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_bedcov ()
{
    local cur word_list
    word_list=" -Q -g -G -j -d -X" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_coverage ()
{
    local cur word_list
    word_list=" -b --bam-list -l --min-read-len -q --min-MQ -Q --min-BQ --rf --incl-flags --ff --excl-flags -d --depth -m --histogram -A --ascii -o --output -H --no-header -w --n-bins -r --region -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_depth ()
{
    local cur word_list
    word_list=" -a -a -aa -b -f -H -l -m -d -o -q -Q -r -X -g -G -J -s" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_flagstat ()
{
    local cur word_list
    word_list=" -@ -O" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_phase ()
{
    local cur word_list
    word_list=" -A -b -F -k -q -Q --no-PG" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_stats ()
{
    local cur word_list
    word_list=" -q -c --coverage -d --remove-dups -f --required-flag -F --filtering-flag --GC-depth -h --help -i --insert-size -I --id -l --read-length -m --most-inserts -P --split-prefix -q --trim-quality -r --ref-seq -S --split -t --target-regions -x --sparse -p --remove-overlaps -g --cov-threshold -X -@ --threads" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_ampliconstats ()
{
    local cur word_list
    word_list=" -f --required-flag -F --filter-flag -a --max-amplicons -b --tcoord-bin -c --tcoord-min-count -d --min-depth -D --depth-bin -l --max-amplicon-length -m --pos-margin -o -s --use-sample-name -S --single-ref -t --tlen-adjust -@" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_tview ()
{
    local cur word_list
    word_list=" -d -p -s -X" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_view ()
{
    local cur word_list
    word_list=" -b --bam -C --cram -1 --fast -u --uncompressed -h --with-header -H --header-only --no-header -c --count -? --help -o --output -U --unoutput --output-unselected -t --fai-reference -T --reference -L --target-file --targets-file -M --use-index --region-file --regions-file -N --qname-file -r --read-group -R --read-group-file -d --tag -D --tag-file -q --min-MQ -l --library -m --min-qlen -e --expr -f --require-flags -F --excl-flags --exclude-flags -G -x --remove-tag -B --remove-B --add-flags --remove-flags --subsample --subsample-seed -s -@ --threads -S -X --customized-index --no-PG" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_samtools_depad ()
{
    local cur word_list
    word_list=" -S -s -C -u -1 -T -o --no-PG" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _samtools samtools
