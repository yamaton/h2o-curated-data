# Generated with h2o 0.1.18

# autogenerated bash script

_seqtk()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          seq) _seqtk_seq
            return
            ;;

          comp) _seqtk_comp
            return
            ;;

          sample) _seqtk_sample
            return
            ;;

          subseq) _seqtk_subseq
            return
            ;;

          fqchk) _seqtk_fqchk
            return
            ;;

          mergepe) _seqtk_mergepe
            return
            ;;

          trimfq) _seqtk_trimfq
            return
            ;;

          hety) _seqtk_hety
            return
            ;;

          gc) _seqtk_gc
            return
            ;;

          mutfa) _seqtk_mutfa
            return
            ;;

          mergefa) _seqtk_mergefa
            return
            ;;

          famask) _seqtk_famask
            return
            ;;

          dropse) _seqtk_dropse
            return
            ;;

          rename) _seqtk_rename
            return
            ;;

          randbase) _seqtk_randbase
            return
            ;;

          cutN) _seqtk_cutN
            return
            ;;

          listhet) _seqtk_listhet
            return
            ;;

      *)
          word_list=" seq comp sample subseq fqchk mergepe trimfq hety gc mutfa mergefa famask dropse rename randbase cutN listhet " 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_seqtk_seq ()
{
    local cur word_list
    word_list=" -X -n -l -Q -s -f -M -L -F -c -r -A -C -N -1 -2 -V -U -S" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_comp ()
{
    local cur word_list
    word_list=" -u -r" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_sample ()
{
    local cur word_list
    word_list=" -s -2" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_subseq ()
{
    local cur word_list
    word_list=" -t -l" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_fqchk ()
{
    local cur word_list
    word_list=" -q" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_trimfq ()
{
    local cur word_list
    word_list=" -q -l -b -e -L -Q" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_hety ()
{
    local cur word_list
    word_list=" -w -t -m" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_gc ()
{
    local cur word_list
    word_list=" -w -f -l -x" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_mergefa ()
{
    local cur word_list
    word_list=" -q -i -m -r -h" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqtk_cutN ()
{
    local cur word_list
    word_list=" -n -p -g" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _seqtk seqtk
