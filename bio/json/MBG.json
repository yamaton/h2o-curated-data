{"name":"MBG","description":"Minimizer based sparse de Bruijn Graph constructor","usage":"MBG -i input_reads.fa -o output_graph.gfa -k kmer_size -w window_size -a kmer_min_abundance -u unitig_min_abundance","options":[{"names":["-h","--help"],"argument":"","description":"Print help"},{"names":["-v","--version"],"argument":"","description":"Print version"},{"names":["-i","--in"],"argument":"<files>","description":"Input reads. Multiple files can be input with -i file1.fa -i file2.fa etc (required)"},{"names":["-o","--out"],"argument":"<file>","description":"Output graph (required)"},{"names":["-t"],"argument":"<number>","description":"Number of threads (default: 1)"},{"names":["-k"],"argument":"<size>","description":"K-mer size. Must be odd and >=31 (required)"},{"names":["-w"],"argument":"<size>","description":"Window size. Must be 1 <= w <= k-30 (default: k-30)"},{"names":["-a","--kmer-abundance"],"argument":"<number>","description":"Minimum k-mer abundance (default: 1)"},{"names":["-u","--unitig-abundance"],"argument":"<number>","description":"Minimum average unitig abundance (default: 2)"},{"names":["--error-masking"],"argument":"{no,hpc,dinuc,msat,collapse,collapse-dinuc,collapse-msat}","description":"Error masking (default: hpc)"},{"names":["--blunt"],"argument":"","description":"Output a bluntified graph without edge overlaps"},{"names":["--include-end-kmers"],"argument":"","description":"Force k-mers at read ends to be included"},{"names":["--output-sequence-paths"],"argument":"arg","description":"Output the paths of the input sequences to a file (.gaf)"},{"names":["-r","--resolve-maxk"],"argument":"arg","description":"Maximum k-mer size for multiplex DBG resolution"},{"names":["-R","--resolve-maxk-allowgaps"],"argument":"arg","description":"Allow multiplex resolution to add gaps up to this k-mer size"},{"names":["--node-name-prefix"],"argument":"arg","description":"Add a prefix to output node names"},{"names":["--sequence-cache-file"],"argument":"arg","description":"Use a temporary sequence cache file to speed up graph construction"},{"names":["--keep-gaps"],"argument":"","description":"Don't remove low coverage nodes if it would leave a gap in the graph"},{"names":["--hpc-variant-onecopy-coverage"],"argument":"arg","description":"Separate k-mers based on hpc variants, using arg as single copy coverage"},{"names":["--do-unsafe-guesswork-resolutions"],"argument":"","description":"Use extra heuristics during multiplex resolution"},{"names":["--copycount-filter-heuristic"],"argument":"","description":"Use coverage based heuristic filter during multiplex resolution"},{"names":["--only-local-resolve"],"argument":"","description":"Only resolve nodes which are repetitive within a read"},{"names":["--output-homology-map"],"argument":"arg","description":"Output a list of homologous k-mer locations"},{"names":["--no-kmer-filter-inside-unitig"],"argument":"","description":"Don't filter out k-mers which are completely contained by two other k-mers"},{"names":["--no-multiplex-cleaning"],"argument":"","description":"Don't clean low coverage tips and structures during multiplex resolution"}],"version":"MBG bioconda 1.0.15"}
