{"name":"Trinity","description":"Trinity","options":[{"names":["--seqType"],"argument":"<string>","description":"type of reads: ('fa' or 'fq')"},{"names":["--max_memory"],"argument":"<string>","description":"suggested max memory to use by Trinity where limiting can be enabled. (jellyfish, sorting, etc) provided in Gb of RAM, ie. '--max_memory 10G'"},{"names":["--left"],"argument":"<string>","description":"left reads, one or more file names (separated by commas, no spaces)"},{"names":["--right"],"argument":"<string>","description":"right reads, one or more file names (separated by commas, no spaces)"},{"names":["--single"],"argument":"<string>","description":"single reads, one or more file names, comma-delimited (note, if single file contains pairs, can use flag: --run_as_paired )"},{"names":["--samples_file"],"argument":"<string>","description":"tab-delimited text file indicating biological replicate relationships."},{"names":["--include_supertranscripts"],"argument":"","description":"yield supertranscripts fasta and gtf files as outputs."},{"names":["--SS_lib_type"],"argument":"<string>","description":"Strand-specific RNA-Seq read orientation.   if paired: RF or FR, if single: F or R. (dUTP method = RF) See web documentation."},{"names":["--CPU"],"argument":"<int>","description":"number of CPUs to use, default: 2"},{"names":["--min_contig_length"],"argument":"<int>","description":"minimum assembled contig length to report   (def=200)"},{"names":["--long_reads"],"argument":"<string>","description":"fasta file containing error-corrected or circular consensus (CCS) pac bio reads (** note: experimental parameter **, this functionality continues to be under development"},{"names":["--genome_guided_bam"],"argument":"<string>","description":"genome guided mode, provide path to coordinate-sorted bam file.   (see genome-guided param section under --show_full_usage_info)"},{"names":["--long_reads_bam"],"argument":"<string>","description":"long reads to include for genome-guided Trinity   (bam file consists of error-corrected or circular consensus (CCS) pac bio read aligned to the genome)"},{"names":["--jaccard_clip"],"argument":"","description":"option, set if you have paired reads and   you expect high gene density with UTR overlap (use FASTQ input file format for reads). (note: jaccard_clip is an expensive operation, so avoid using it unless necessary due to finding excessive fusion transcripts w/o it.)"},{"names":["--trimmomatic"],"argument":"","description":"run Trimmomatic to quality trim reads   see '--quality_trimming_params' under full usage info for tailored settings."},{"names":["--output"],"argument":"<string>","description":"name of directory for output (will be   created if it doesn't already exist) default: (your current working directory) note: must include 'trinity' in the name as a safety precaution! )"},{"names":["--full_cleanup"],"argument":"","description":"only retain the Trinity fasta file, rename as ${output_dir}.Trinity.fasta"},{"names":["--cite"],"argument":"","description":"show the Trinity literature citation"},{"names":["--verbose"],"argument":"","description":"provide additional job status info during the run."},{"names":["--version"],"argument":"","description":"reports Trinity version (Trinity-v2.13.2) and exits."},{"names":["--show_full_usage_info"],"argument":"","description":"show the many many more options available for running Trinity (expert usage)."},{"names":["--no_super_reads"],"argument":"","description":"turn off super-reads mode"},{"names":["--prep"],"argument":"","description":"Only prepare files (high I/O usage) and stop before kmer counting."},{"names":["--no_cleanup"],"argument":"","description":"retain all intermediate input files."},{"names":["--no_version_check"],"argument":"","description":"dont run a network check to determine if software updates are available."},{"names":["--no_symlink"],"argument":"","description":"dont symlink, just copy files instead (sets env var NO_SYMLINK=TRUE)"},{"names":["--monitoring"],"argument":"","description":"use collectl to monitor all steps of Trinity"},{"names":["--monitor_sec"],"argument":"<int>","description":"number of seconds for each interval of runtime monitoring (default: 60)"},{"names":["--no_distributed_trinity_exec"],"argument":"","description":"do not run Trinity phase 2 (assembly of partitioned reads), and stop after generating command list."},{"names":["--workdir"],"argument":"<string>","description":"where Trinity phase-2 assembly computation takes place (defaults to --output setting). (can set this to a node-local drive or RAM disk)"},{"names":["--min_kmer_cov"],"argument":"<int>","description":"min count for K-mers to be assembled by   Inchworm (default: 1)"},{"names":["--inchworm_cpu"],"argument":"<int>","description":"number of CPUs to use for Inchworm, default is min(6, --CPU option)"},{"names":["--no_run_inchworm"],"argument":"","description":"stop after running jellyfish, before inchworm. (phase 1, read clustering only)"},{"names":["--max_reads_per_graph"],"argument":"<int>","description":"maximum number of reads to anchor within   a single graph (default: 200000)"},{"names":["--min_glue"],"argument":"<int>","description":"min number of reads needed to glue two inchworm contigs   together. (default: 2)"},{"names":["--max_chrysalis_cluster_size"],"argument":"<int>","description":"max number of Inchworm contigs to be included in a single Chrysalis cluster. (default: 25)"},{"names":["--no_bowtie"],"argument":"","description":"dont run bowtie to use pair info in chrysalis clustering."},{"names":["--no_run_chrysalis"],"argument":"","description":"stop after running inchworm, before chrysalis. (phase 1, read clustering only)"},{"names":["--bfly_algorithm"],"argument":"<string>","description":"assembly algorithm to use. Options: ORIGINAL PASAFLY"},{"names":["--bfly_opts"],"argument":"<string>","description":"additional parameters to pass through to butterfly   (see butterfly options: java -jar Butterfly.jar ). (note: only for expert or experimental use. Commonly used parameters are exposed through this Trinity menu here)."},{"names":["--group_pairs_distance"],"argument":"<int>","description":"maximum length expected between fragment pairs (default: 500)   (reads outside this distance are treated as single-end)"},{"names":["--path_reinforcement_distance"],"argument":"<int>","description":"minimum overlap of reads with growing transcript path (default: PE: 25, SE: 25) Set to 1 for the most lenient path extension requirements."},{"names":["--no_path_merging"],"argument":"","description":"all final transcript candidates are output (including SNP variations, however, some SNPs may be unphased)"},{"names":["--min_per_id_same_path"],"argument":"<int>","description":"min percent identity for two paths to be merged into single paths (default: 98)"},{"names":["--max_diffs_same_path"],"argument":"<int>","description":"max allowed differences encountered between path sequences to combine them (default: 2)"},{"names":["--max_internal_gap_same_path"],"argument":"<int>","description":"maximum number of internal consecutive gap characters allowed for paths to be merged into single paths. (default: 10)"},{"names":["--bflyHeapSpaceMax"],"argument":"<string>","description":"java max heap space setting for butterfly   (default: 10G) => yields command 'java -Xmx10G -jar Butterfly.jar ... $bfly_opts'"},{"names":["--bflyHeapSpaceInit"],"argument":"<string>","description":"java initial heap space settings for   butterfly (default: 1G) => yields command 'java -Xms1G -jar Butterfly.jar ... $bfly_opts'"},{"names":["--bflyGCThreads"],"argument":"<int>","description":"threads for garbage collection   (default: 2))"},{"names":["--bflyCPU"],"argument":"<int>","description":"CPUs to use (default will be normal   number of CPUs; e.g., 2)"},{"names":["--bflyCalculateCPU"],"argument":"","description":"Calculate CPUs based on 80% of max_memory   divided by maxbflyHeapSpaceMax"},{"names":["--bfly_jar"],"argument":"<string>","description":"/path/to/Butterfly.jar, otherwise default   Trinity-installed version is used."},{"names":["--quality_trimming_params"],"argument":"<string>","description":"defaults to: \"ILLUMINACLIP:path/to/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:5 LEADING:5 TRAILING:5 MINLEN:25\""},{"names":["--normalize_max_read_cov"],"argument":"<int>","description":"defaults to 200"},{"names":["--normalize_by_read_set"],"argument":"","description":"run normalization separate for each pair of fastq files,   then one final normalization that combines the individual normalized reads. Consider using this if RAM limitations are a consideration."},{"names":["--just_normalize_reads"],"argument":"","description":"stop after performing read normalization"},{"names":["--no_normalize_reads"],"argument":"","description":"Do *not* run in silico normalization of reads. Defaults to max. read coverage of 200. see '--normalize_max_read_cov' under full usage info for tailored settings. (Note, as of Sept 21, 2016, normalization is on by default) (*Turning off normalization is not recommended for most applications)"},{"names":["--no_parallel_norm_stats"],"argument":"","description":"Do not try to run the high-mem normalization stats generator in parallel for paired-end fastqs."},{"names":["--genome_guided_max_intron"],"argument":"<int>","description":"maximum allowed intron length (also maximum fragment span on genome)"},{"names":["--genome_guided_min_coverage"],"argument":"<int>","description":"minimum read coverage for identifying and expressed region of the genome. (default: 1)"},{"names":["--genome_guided_min_reads_per_partition"],"argument":"<int>","description":"default min of 10 reads per partition"},{"names":["--grid_exec"],"argument":"<string>","description":"your command-line utility for submitting jobs to the grid.   This should be a command line tool that accepts a single parameter: ${your_submission_tool} /path/to/file/containing/commands.txt and this submission tool should exit(0) upon successful completion of all commands."},{"names":["--grid_node_CPU"],"argument":"<int>","description":"number of threads for each parallel process to leverage. (default: 1)"},{"names":["--grid_node_max_memory"],"argument":"<string>","description":"max memory targeted for each grid node. (default: 1G)"},{"names":["--FORCE"],"argument":"","description":"ignore failed commands from earlier run, continue on.   (Note, this should only be used after you've already dealt with these failed commands directly as needed)"}],"version":"Trinity version: Trinity-v2.13.2","tldr":"> RNA-Seq de novo transcriptome assembly\n> More information: <https://github.com/trinityrnaseq/trinityrnaseq/wiki>.\n\n- Typical Trinity command for paired-end reads:\n\n`Trinity --seqType {{fq}} --max_memory {{50G}} --left {{reads_1.fq}}  --right {{reads_2.fq}} --CPU {{6}}`\n\n- Genome-guided Trinity:\n\n`Trinity --genome_guided_bam {{rnaseq_alignments.csorted.bam}} --max_memory {{50G}} --genome_guided_max_intron {{10000}} --CPU {{6}}`\n"}
