{"name":"blobtools","description":"Modular command-line solution for visualisation, quality control and taxonomic partitioning of genome datasets","usage":"blobtools [<module>] [<args>...] [-h] [-v]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["-v","--version"],"argument":"","description":"show version number"}],"subcommands":[{"name":"create","description":"create a BlobDB","usage":"blobtools create     -i FASTA [-y FASTATYPE] [-o PREFIX] [--title TITLE]\n                       [-b BAM...] [-C] [-a CAS...] [-c COV...]\n                       [--nodes <NODES>] [--names <NAMES>] [--db <NODESDB>]\n                       [-t HITS...] [-x TAXRULE...] [-m FLOAT] [-d FLOAT] [--tax_collision_random]\n                       [-h|--help]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["-i","--infile"],"argument":"FASTA","description":"FASTA file of assembly. Headers are split at whitespaces."},{"names":["-y","--type"],"argument":"FASTATYPE","description":"Assembly program used to create FASTA. If specified, coverage will be parsed from FASTA header. (Parsing supported for 'spades', 'velvet', 'platanus')"},{"names":["-t","--hitsfile"],"argument":"HITS...","description":"Hits file in format (qseqid\\ttaxid\\tbitscore)   (e.g. BLAST output \"--outfmt '6 qseqid staxids bitscore'\") Can be specified multiple times"},{"names":["-x","--taxrule"],"argument":"<TAXRULE>...","description":"Taxrule determines how taxonomy of blobs   is computed (by default both are calculated) \"bestsum\" : sum bitscore across all"},{"names":["-m","--min_score"],"argument":"<FLOAT>","description":"Minimal score necessary to be considered for taxonomy calculaton, otherwise set to 'no-hit' [default: 0.0]"},{"names":["-d","--min_diff"],"argument":"<FLOAT>","description":"Minimal score difference between highest scoring taxonomies (otherwise \"unresolved\") [default: 0.0]"},{"names":["--tax_collision_random"],"argument":"","description":"Random allocation of taxonomy if highest scoring taxonomies have equal scores (otherwise \"unresolved\") [default: False]"},{"names":["--nodes"],"argument":"<NODES>","description":"NCBI nodes.dmp file. Not required if '--db'"},{"names":["--names"],"argument":"<NAMES>","description":"NCBI names.dmp file. Not required if '--db'"},{"names":["--db"],"argument":"<NODESDB>","description":"NodesDB file (default: $BLOBTOOLS/data/nodesDB.txt). If --nodes, --names and --db are all given and NODESDB does not exist, create it from NODES and NAMES."},{"names":["-b","--bam"],"argument":"<BAM>...","description":"BAM file(s), can be specified multiple times"},{"names":["-a","--cas"],"argument":"<CAS>...","description":"CAS file(s) (requires clc_mapping_info in $PATH), can be specified multiple times"},{"names":["-c","--cov"],"argument":"<COV>...","description":"COV file(s), can be specified multiple times"},{"names":["-C","--calculate_cov"],"argument":"","description":"Legacy coverage when getting coverage from BAM (does not apply to COV parsing)."},{"names":["-o","--out"],"argument":"<PREFIX>","description":"BlobDB output prefix"},{"names":["--title"],"argument":"TITLE","description":"Title of BlobDB [default: output prefix)"}]},{"name":"view","description":"generate tabular view, CONCOCT input or COV files from BlobDB","usage":"blobtools view    -i <BLOBDB> [-x <TAXRULE>] [--rank <TAXRANK>...] [--hits]\n                     [--list <LIST>] [--out <OUT>] [--notable]\n                     [--concoct] [--cov] [--experimental <META>]\n                     [--h|--help]","options":[{"names":["--h","--help"],"argument":"","description":"show this"},{"names":["-i","--input"],"argument":"<BLOBDB>","description":"BlobDB file (created with \"blobtools create\")"},{"names":["-o","--out"],"argument":"<OUT>","description":"Output prefix"},{"names":["-l","--list"],"argument":"<LIST>","description":"List of sequence names (file)."},{"names":["-x","--taxrule"],"argument":"<TAXRULE>","description":"Taxrule used for computing taxonomy (supported: \"bestsum\", \"bestsumorder\") [default: bestsum]"},{"names":["-r","--rank"],"argument":"<TAXRANK>...","description":"Taxonomic rank(s) at which output will be written. (supported: 'species', 'genus', 'family', 'order', 'phylum', 'superkingdom', 'all') [default: phylum]"},{"names":["-b","--hits"],"argument":"","description":"Displays taxonomic hits from tax files that contributed to the taxonomy."},{"names":["--concoct"],"argument":"","description":"Generate concoct files [default: False]"},{"names":["--cov"],"argument":"","description":"Generate cov files [default: False]"},{"names":["--experimental"],"argument":"<META>","description":"Experimental output [default: False]"},{"names":["-n","--notable"],"argument":"","description":"Do not generate table view [default: False]"}]},{"name":"plot","description":"generate a BlobPlot from a BlobDB","usage":"blobtools plot -i <BLOBDB>\n                         [-p INT] [-l INT] [--cindex] [-n] [-s]\n                         [-r RANK] [-x TAXRULE] [--label GROUPS...]\n                         [--lib COVLIB] [-o PREFIX] [-m]\n                         [--sort ORDER] [--sort_first LABELS] [--hist HIST] [--notitle] [--filelabel]\n                         [--colours FILE] [--exclude FILE]\n                         [--refcov FILE] [--catcolour FILE]\n                         [--format FORMAT] [--noblobs] [--noreads] [--legend]\n                         [--cumulative] [--multiplot]\n                         [-h|--help]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["-i","--infile"],"argument":"BLOBDB","description":"BlobDB file (created with \"blobtools create\")"},{"names":["--lib"],"argument":"COVLIB","description":"Plot only certain covlib(s). Separated by \",\""},{"names":["--notitle"],"argument":"","description":"Do not add filename as title to plot"},{"names":["--filelabel"],"argument":"","description":"Label axis based on filenames"},{"names":["-p","--plotgroups"],"argument":"INT","description":"Number of (taxonomic) groups to plot, remaining"},{"names":["-l","--length"],"argument":"INT","description":"Minimum sequence length considered for plotting [default: 100]"},{"names":["--cindex"],"argument":"","description":"Colour blobs by 'c index' [default: False]"},{"names":["-n","--nohit"],"argument":"","description":"Hide sequences without taxonomic annotation [default: False]"},{"names":["-s","--noscale"],"argument":"","description":"Do not scale sequences by length [default: False]"},{"names":["--legend"],"argument":"","description":"Plot legend of blobplot in separate figure"},{"names":["-m","--multiplot"],"argument":"","description":"Multi-plot. Print blobplot for each (taxonomic) group separately"},{"names":["--cumulative"],"argument":"","description":"Print plot after addition of each (taxonomic) group"},{"names":["--sort"],"argument":"<ORDER>","description":"Sort order for plotting [default: span]"},{"names":["--sort_first"],"argument":"<L1,L2,...>","description":"Labels that should always be plotted first, regardless of sort order"},{"names":["--hist"],"argument":"<HIST>","description":"Data for histograms [default: span]"},{"names":["-r","--rank"],"argument":"<RANK>","description":"Taxonomic rank used for colouring of blobs [default: phylum]"},{"names":["-x","--taxrule"],"argument":"<TAXRULE>","description":"Taxrule which has been used for computing taxonomy"},{"names":["--format"],"argument":"FORMAT","description":"Figure format for plot (png, pdf, eps, jpeg,"},{"names":["--noblobs"],"argument":"","description":"Omit blobplot [default: False]"},{"names":["--noreads"],"argument":"","description":"Omit plot of reads mapping [default: False]"},{"names":["-o","--out"],"argument":"PREFIX","description":"Output prefix"},{"names":["--label"],"argument":"GROUPS...","description":"Relabel (taxonomic) groups, can be used several times."},{"names":["--colours"],"argument":"COLOURFILE","description":"File containing colours for (taxonomic) groups. This allows having more than 9 colours."},{"names":["--exclude"],"argument":"GROUPS","description":"Exclude these (taxonomic) groups (also works for 'other')"},{"names":["--refcov"],"argument":"<FILE>","description":"File containing number of \"total\" and \"mapped\" reads"},{"names":["--catcolour"],"argument":"<FILE>","description":"Colour plot based on categories from FILE"}]},{"name":"covplot","description":"generate a CovPlot from a BlobDB and a COV file","usage":"blobtools covplot  -i BLOBDB -c COV [--max FLOAT]\n                         [--xlabel XLABEL] [--ylabel YLABEL]\n                         [--lib COVLIB] [-o PREFIX] [-m]\n                         [-p INT] [-l INT] [--cindex] [-n] [-s]\n                         [-r RANK] [-x TAXRULE] [--label GROUPS...]\n                         [--sort ORDER] [--sort_first LABELS]\n                         [--hist HIST] [--notitle]\n                         [--colours FILE] [--exclude FILE]\n                         [--refcov FILE] [--catcolour FILE]\n                         [--format FORMAT] [--noblobs] [--noreads] [--legend]\n                         [--cumulative]\n                         [-h|--help]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["-i","--infile"],"argument":"BLOBDB","description":"BlobDB file"},{"names":["-c","--cov"],"argument":"COV","description":"COV file to be used in y-axis"},{"names":["--xlabel"],"argument":"XLABEL","description":"Label for x-axis"},{"names":["--ylabel"],"argument":"YLABEL","description":"Label for y-axis"},{"names":["--max"],"argument":"FLOAT","description":"Maximum values for x/y-axis [default: 1e10]"},{"names":["--lib"],"argument":"COVLIB","description":"Plot only certain covlib(s). Separated by \",\""},{"names":["--notitle"],"argument":"","description":"Do not add filename as title to plot"},{"names":["-p","--plotgroups"],"argument":"INT","description":"Number of (taxonomic) groups to plot, remaining"},{"names":["-l","--length"],"argument":"INT","description":"Minimum sequence length considered for plotting [default: 100]"},{"names":["--cindex"],"argument":"","description":"Colour blobs by 'c index' [default: False]"},{"names":["-n","--nohit"],"argument":"","description":"Hide sequences without taxonomic annotation [default: False]"},{"names":["-s","--noscale"],"argument":"","description":"Do not scale sequences by length [default: False]"},{"names":["--legend"],"argument":"","description":"Plot legend of blobplot in separate figure"},{"names":["-m","--multiplot"],"argument":"","description":"Multi-plot. Print blobplot for each (taxonomic) group separately"},{"names":["--cumulative"],"argument":"","description":"Print plot after addition of each (taxonomic) group"},{"names":["--sort"],"argument":"<ORDER>","description":"Sort order for plotting [default: span]"},{"names":["--sort_first"],"argument":"<L1,L2,...>","description":"Labels that should always be plotted first, regardless of sort order"},{"names":["--hist"],"argument":"<HIST>","description":"Data for histograms [default: span]"},{"names":["-r","--rank"],"argument":"<RANK>","description":"Taxonomic rank used for colouring of blobs [default: phylum]"},{"names":["-x","--taxrule"],"argument":"<TAXRULE>","description":"Taxrule which has been used for computing taxonomy"},{"names":["--format"],"argument":"FORMAT","description":"Figure format for plot (png, pdf, eps, jpeg,"},{"names":["--noblobs"],"argument":"","description":"Omit blobplot [default: False]"},{"names":["--noreads"],"argument":"","description":"Omit plot of reads mapping [default: False]"},{"names":["-o","--out"],"argument":"PREFIX","description":"Output prefix"},{"names":["--label"],"argument":"GROUPS...","description":"Relabel (taxonomic) groups, can be used several times."},{"names":["--colours"],"argument":"COLOURFILE","description":"File containing colours for (taxonomic) groups"},{"names":["--exclude"],"argument":"GROUPS","description":"Exclude these (taxonomic) groups (also works for 'other')"},{"names":["--refcov"],"argument":"<FILE>","description":"File containing number of \"total\" and \"mapped\" reads"},{"names":["--catcolour"],"argument":"<FILE>","description":"Colour plot based on categories from FILE"}]},{"name":"map2cov","description":"generate a COV file from BAM file","usage":"blobtools map2cov         -i FASTA [-b BAM...] [-a CAS...]\n                             [-o PREFIX] [-c]\n                             [-h|--help]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["-i","--infile"],"argument":"FASTA","description":"FASTA file of assembly. Headers are split at whitespaces."},{"names":["-b","--bam"],"argument":"<BAM>...","description":"BAM file (requires pysam)"},{"names":["-a","--cas"],"argument":"<CAS>...","description":"CAS file (requires clc_mapping_info in $PATH)"},{"names":["-o","--output"],"argument":"<PREFIX>","description":"Output prefix"},{"names":["-c","--calculate_cov"],"argument":"","description":"Legacy coverage, slower. New default is to estimate coverages"}]},{"name":"taxify","description":"generate a BlobTools compatible HITS file (TSV)","usage":"blobtools taxify          -f FILE [-a INT] [-b INT] [-c INT]\n                             [-m FILE] [-s INT] [-t INT]\n                             [-i FILE] [-x INT] [-v FLOAT]\n                             [-o PREFIX] [-h|--help]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["-f","--hit_file"],"argument":"<FILE>","description":"BLAST/Diamond similarity search result (TSV format)."},{"names":["-a","--hit_column_qseqid"],"argument":"<INT>","description":"Zero-based column of qseqid in similarity search result [default: 0]"},{"names":["-b","--hit_column_sseqid"],"argument":"<INT>","description":"Zero-based column of sseqid in similarity search result [default: 1]"},{"names":["-c","--hit_column_score"],"argument":"<INT>","description":"Zero-based column of (bit)score in similarity search result [default: 11]"},{"names":["-m","--taxid_mapping_file"],"argument":"<FILE>","description":"TaxID mapping file (contains seqid and taxid)"},{"names":["-s","--map_col_sseqid"],"argument":"<INT>","description":"Zero-based column of sseqid in TaxID mapping file (it will search for sseqid in this column)"},{"names":["-t","--map_col_taxid"],"argument":"<INT>","description":"Zero-based Column of taxid in TaxID mapping file (it will extract for taxid from this column)"},{"names":["-i","--custom"],"argument":"<FILE>","description":"File containing list of sequence IDs"},{"names":["-x","--custom_taxid"],"argument":"<INT>","description":"TaxID to assign to all sequence IDs in list"},{"names":["-v","--custom_score"],"argument":"<FLOAT>","description":"Score to assign to all sequence IDs in list"},{"names":["-o","--out"],"argument":"<PREFIX>","description":"Output prefix"}]},{"name":"bamfilter","description":"subset paired-end reads from a BAM file","usage":"blobtools bamfilter  -b FILE [-i FILE] [-e FILE] [-U] [-n] [-o PREFIX] [-f FORMAT]\n                         [-h|--help]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["-b","--bam"],"argument":"FILE","description":"BAM file (sorted by name)"},{"names":["-i","--include"],"argument":"FILE","description":"List of contigs whose reads are included - writes FASTAs of pairs where at least"},{"names":["-e","--exclude"],"argument":"FILE","description":"List of contigs whose reads are excluded (outputs reads that do not map to sequences in list) - writes FASTAs of pairs where at least"},{"names":["-U","--exclude_unmapped"],"argument":"","description":"Include pairs where both reads are unmapped"},{"names":["-n","--noninterleaved"],"argument":"","description":"Use if fw and rev reads should be in separate files"},{"names":["-f","--read_format"],"argument":"FORMAT","description":"FASTQ = fq, FASTA = fa [default: fa]"},{"names":["-o","--out"],"argument":"PREFIX","description":"Output prefix"}]},{"name":"seqfilter","description":"subset sequences in FASTA file based sequence IDs in list","usage":"blobtools seqfilter       -i FASTA -l LIST [-o PREFIX] [-v]\n                             [-h|--help]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["-i","--infile"],"argument":"<FASTA>","description":"FASTA file of sequences (Headers are split at whitespaces)"},{"names":["-l","--list"],"argument":"<LIST>","description":"TXT file containing headers of sequences to keep"},{"names":["-o","--out"],"argument":"<PREFIX>","description":"Output prefix"},{"names":["-v","--invert"],"argument":"","description":"Invert filtering (Sequences w/ headers NOT in list)"}]},{"name":"nodesdb","description":"create nodesdb based on NCBI Taxdump's names.dmp and nodes.dmp","usage":"blobtools nodesdb             --nodes <NODES> --names <NAMES>\n                                 [-h|--help]","options":[{"names":["-h","--help"],"argument":"","description":"show this"},{"names":["--nodes"],"argument":"<NODES>","description":"NCBI nodes.dmp file."},{"names":["--names"],"argument":"<NAMES>","description":"NCBI names.dmp file."}]}],"version":"1.1.1","tldr":"> Visualisation, quality control and taxonomic partitioning of genome datasets.\n> For more information <https://github.com/DRL/blobtools>\n\n- Create a BlobDB\n\n`blobtools create -i {{example/assembly.fna}} -b {{example/mapping_1.bam}} -t {{example/blast.out}} -o {{example/test}}`\n\n- Generate a tabular view\n\n`blobtools view -i {{example/test.blobDB.json}}`\n\n- Generate a blobplot\n\n`blobtools plot -i {{example/test.blobDB.json}}`\n"}
