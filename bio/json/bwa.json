{"name":"bwa","description":"Burrows-Wheeler Alignment Tool","options":[],"subcommands":[{"name":"index","description":"Index database sequences in the FASTA format","options":[{"names":["-p"],"argument":"STR","description":"Prefix of the output database [same as db filename]"},{"names":["-a"],"argument":"STR","description":"Algorithm for constructing BWT index. BWA implements three algorithms for BWT construction: is, bwtsw and"}]},{"name":"mem","description":"Align 70bp-1Mbp query sequences with the BWA-MEM algorithm","options":[{"names":["-t"],"argument":"INT","description":"Number of threads [1]"},{"names":["-k"],"argument":"INT","description":"Minimum seed length. Matches shorter than INT will be missed. The alignment speed is usually insensitive to this value unless it significantly deviates from 20. [19]"},{"names":["-w"],"argument":"INT","description":"Band width. Essentially, gaps longer than INT will not be found. Note that the maximum gap length is also affected by the scoring matrix and the hit length, not solely determined by this option. [100]"},{"names":["-d"],"argument":"INT","description":"Off-diagonal X-dropoff (Z-dropoff). Stop extension when the difference between the best and the current extension score is above |i-j|*A+INT, where i and j are the current positions of the query and reference, respectively, and A is the matching score. Z-dropoff is similar to BLAST's X-dropoff except that it doesn't penalize gaps in one of the sequences in the alignment. Z-dropoff not only avoids unnecessary extension, but also reduces poor alignments inside a long good alignment. [100]"},{"names":["-r"],"argument":"FLOAT","description":"Trigger re-seeding for a MEM longer than minSeedLen*FLOAT. This is a key heuristic parameter for tuning the performance. Larger value yields fewer seeds, which leads to faster alignment speed but lower accuracy. [1.5]"},{"names":["-c"],"argument":"INT","description":"Discard a MEM if it has more than INT occurence in the genome. This is an insensitive parameter. [500]"},{"names":["-D"],"argument":"FLOAT","description":"Drop chains shorter than FLOAT fraction of the longest overlapping chain [0.5]"},{"names":["-m"],"argument":"INT","description":"Perform at most INT rounds of mate-SW [50]"},{"names":["-W"],"argument":"INT","description":"Drop a chain if the number of bases in seeds is smaller than INT. This option is primarily used for longer contigs/reads. When positive, it also affects seed filtering. [0]"},{"names":["-P"],"argument":"","description":"In the paired-end mode, perform SW to rescue missing hits only but do not try to find hits that fit a proper pair."},{"names":["-A"],"argument":"INT","description":"Matching score. [1]"},{"names":["-B"],"argument":"INT","description":"Mismatch penalty. The sequence error rate is approximately: {.75 * exp[-log(4) * B/A]}. [4]"},{"names":["-O"],"argument":"INT[,INT]","description":"Gap open penalty. If two numbers are specified, the first is the penalty of openning a deletion and the second for openning an insertion. [6]"},{"names":["-E"],"argument":"INT[,INT]","description":"Gap extension penalty. If two numbers are specified, the first is the penalty of extending a deletion and second for extending an insertion. A gap of length k costs O + k*E (i.e. -O is for opening a zero-length gap). [1]"},{"names":["-L"],"argument":"INT[,INT]","description":"Clipping penalty. When performing SW extension, BWA-MEM keeps track of the best score reaching the end of query. If this score is larger than the best SW score minus the clipping penalty, clipping will not be applied. Note that in this case, the SAM AS tag reports the best SW score; clipping penalty is not deduced. If two numbers are provided, the first is for 5'-end clipping and second for 3'-end clipping. [5]"},{"names":["-U"],"argument":"INT","description":"Penalty for an unpaired read pair. BWA-MEM scores an unpaired read pair as scoreRead1+scoreRead2-INT and scores a paired as scoreRead1+scoreRead2-insertPenalty. It compares these two scores to determine whether we should force pairing. A larger value leads to more aggressive read pair. [17]"},{"names":["-x"],"argument":"STR","description":"Read type. Changes multiple parameters unless overriden [null]"},{"names":["-p"],"argument":"","description":"Smart pairing. If two adjacent reads have the same name, they are considered to form a read pair. This way, paired-end and single-end reads can be mixed in a single FASTA/Q stream."},{"names":["-R"],"argument":"STR","description":"Complete read group header line. '\\t' can be used in STR and will be converted to a TAB in the output SAM. The read group ID will be attached to every read in the output. An example is '@RG\\tID:foo\\tSM:bar'. [null]"},{"names":["-H"],"argument":"ARG","description":"If ARG starts with @, it is interpreted as a string and gets inserted into the output SAM header; otherwise, ARG is interpreted as a file with all lines starting with @ in the file inserted into the SAM header. [null]"},{"names":["-o"],"argument":"FILE","description":"Write the output SAM file to FILE. For compatibility with other BWA commands, this option may also be given as -f FILE. [standard ouptut]"},{"names":["-5"],"argument":"","description":"For split alignment, mark the segment with the smallest coordinate as the primary. It automatically applies option -q as well. This option may help some Hi-C pipelines. By default, BWA-MEM marks highest scoring segment as primary."},{"names":["-K"],"argument":"INT","description":"Process INT input bases in each batch regardless of the number of threads in use [10000000*nThreads]. By default, the batch size is proportional to the number of threads in use. Because the inferred insert size distribution slightly depends on the batch size, using different number of threads may produce different output. Specifying this option helps reproducibility."},{"names":["-T"],"argument":"INT","description":"Don't output alignment with score lower than INT. This option affects output and occasionally SAM flag 2. [30]"},{"names":["-j"],"argument":"","description":"Treat ALT contigs as part of the primary assembly (i.e. ignore the db.prefix.alt file)."},{"names":["-h"],"argument":"INT[,INT2]","description":"If a query has not more than INT hits with score higher than 80% of the best hit, output them all in the XA tag. If INT2 is specified, BWA-MEM outputs up to INT2 hits if the list contains a hit to an ALT contig. [5,200]"},{"names":["-a"],"argument":"","description":"Output all found alignments for single-end or unpaired paired-end reads. These alignments will be flagged as secondary alignments."},{"names":["-C"],"argument":"","description":"Append FASTA/Q comment to SAM output. This option can be used to transfer read meta information (e.g. barcode) to the SAM output. Note that the FASTA/Q comment (the string after a space in the header line) must conform the SAM spec (e.g. BC:Z:CGTAC). Malformated comments lead to incorrect SAM output."},{"names":["-Y"],"argument":"","description":"Use soft clipping CIGAR operation for supplementary alignments. By default, BWA-MEM uses soft clipping for the primary alignment and hard clipping for supplementary alignments."},{"names":["-M"],"argument":"","description":"Mark shorter split hits as secondary (for Picard compatibility)."},{"names":["-v"],"argument":"INT","description":"Control the verbosity level of the output. This option has not been fully supported throughout BWA. Ideally, a value 0 for disabling all the output to stderr; 1 for outputting errors only; 2 for warnings and errors; 3 for all normal messages; 4 or higher for debugging. When this option takes value 4, the output is not SAM. [3]"},{"names":["-I"],"argument":"FLOAT[,FLOAT[,INT[,INT]]]","description":"Specify the mean, standard deviation (10% of the mean if absent), max (4 sigma from the mean if absent) and min (4 sigma if absent) of the insert size distribution. Only applicable to the FR orientation. By default, BWA-MEM infers these numbers and the pair orientations given enough reads. [inferred]"}]},{"name":"aln","description":"Find the SA coordinates of the input reads","options":[{"names":["-n"],"argument":"NUM","description":"Maximum edit distance if the value is INT, or the fraction of missing alignments given 2% uniform base error rate if FLOAT. In the latter case, the maximum edit distance is automatically chosen for different read lengths. [0.04]"},{"names":["-o"],"argument":"INT","description":"Maximum number of gap opens [1]"},{"names":["-e"],"argument":"INT","description":"Maximum number of gap extensions, -1 for k-difference mode (disallowing long gaps) [-1]"},{"names":["-d"],"argument":"INT","description":"Disallow a long deletion within INT bp towards the 3'-end [16]"},{"names":["-i"],"argument":"INT","description":"Disallow an indel within INT bp towards the ends [5]"},{"names":["-l"],"argument":"INT","description":"Take the first INT subsequence as seed. If INT is larger than the query sequence, seeding will be disabled. For long reads, this option is typically ranged from 25 to 35 for `-k 2'. [inf]"},{"names":["-k"],"argument":"INT","description":"Maximum edit distance in the seed [2]"},{"names":["-t"],"argument":"INT","description":"Number of threads (multi-threading mode) [1]"},{"names":["-M"],"argument":"INT","description":"Mismatch penalty. BWA will not search for suboptimal hits with a score lower than (bestScore-misMsc). [3]"},{"names":["-O"],"argument":"INT","description":"Gap open penalty [11]"},{"names":["-E"],"argument":"INT","description":"Gap extension penalty [4]"},{"names":["-R"],"argument":"INT","description":"Proceed with suboptimal alignments if there are no more than INT equally best hits. This option only affects paired-end mapping. Increasing this threshold helps to improve the pairing accuracy at the cost of speed, especially for short reads (~32bp)."},{"names":["-c"],"argument":"","description":"Reverse query but not complement it, which is required for alignment in the color space. (Disabled since 0.6.x)"},{"names":["-N"],"argument":"","description":"Disable iterative search. All hits with no more than maxDiff differences will be found. This mode is much slower than the default."},{"names":["-q"],"argument":"INT","description":"Parameter for read trimming. BWA trims a read down to argmax_x{\\sum_{i=x+1}^l(INT-q_i)} if q_l<INT where l is the original read length. [0]"},{"names":["-I"],"argument":"","description":"The input is in the Illumina 1.3+ read format (quality equals ASCII-64)."},{"names":["-B"],"argument":"INT","description":"Length of barcode starting from the 5'-end. When INT is positive, the barcode of each read will be trimmed before mapping and will be written at the BC SAM tag. For paired-end reads, the barcode from both ends are concatenated. [0]"},{"names":["-b"],"argument":"","description":"Specify the input read sequence file is the BAM format. For paired-end data, two ends in a pair must be grouped together and options -1 or -2 are usually applied to specify which end should be mapped. Typical command lines for mapping pair-end data in the BAM format are:"},{"names":["-0"],"argument":"","description":"When -b is specified, only use single-end reads in mapping."},{"names":["-1"],"argument":"","description":"When -b is specified, only use the first read in a read pair in mapping (skip single-end reads and the second reads)."},{"names":["-2"],"argument":"","description":"When -b is specified, only use the second read in a read pair in mapping."}]},{"name":"samse","description":"Generate alignments in the SAM format given single-end reads","options":[{"names":["-n"],"argument":"INT","description":"Maximum number of alignments to output in the XA tag for reads paired properly. If a read has more than INT hits, the XA tag will not be written. [3]"},{"names":["-r"],"argument":"STR","description":"Specify the read group in a format like `@RG\\tID:foo\\tSM:bar'. [null]"}]},{"name":"sampe","description":"Generate alignments in the SAM format given paired-end reads","options":[{"names":["-a"],"argument":"INT","description":"Maximum insert size for a read pair to be considered being mapped properly. Since 0.4.5, this option is only used when there are not enough good alignment to infer the distribution of insert sizes. [500]"},{"names":["-o"],"argument":"INT","description":"Maximum occurrences of a read for pairing. A read with more occurrneces will be treated as a single-end read. Reducing this parameter helps faster pairing. [100000]"},{"names":["-P"],"argument":"","description":"Load the entire FM-index into memory to reduce disk operations (base-space reads only). With this option, at least 1.25N bytes of memory are required, where N is the length of the genome."},{"names":["-n"],"argument":"INT","description":"Maximum number of alignments to output in the XA tag for reads paired properly. If a read has more than INT hits, the XA tag will not be written. [3]"},{"names":["-N"],"argument":"INT","description":"Maximum number of alignments to output in the XA tag for disconcordant read pairs (excluding singletons). If a read has more than INT hits, the XA tag will not be written. [10]"},{"names":["-r"],"argument":"STR","description":"Specify the read group in a format like `@RG\\tID:foo\\tSM:bar'. [null]"}]},{"name":"bwasw","description":"Align query sequences in the in.fq file","options":[{"names":["-a"],"argument":"INT","description":"Score of a match [1]"},{"names":["-b"],"argument":"INT","description":"Mismatch penalty [3]"},{"names":["-q"],"argument":"INT","description":"Gap open penalty [5]"},{"names":["-r"],"argument":"INT","description":"Gap extension penalty. The penalty for a contiguous gap of size k is q+k*r. [2]"},{"names":["-t"],"argument":"INT","description":"Number of threads in the multi-threading mode [1]"},{"names":["-w"],"argument":"INT","description":"Band width in the banded alignment [33]"},{"names":["-T"],"argument":"INT","description":"Minimum score threshold divided by a [37]"},{"names":["-c"],"argument":"FLOAT","description":"Coefficient for threshold adjustment according to query length. Given an l-long query, the threshold for a hit to be retained is a*max{T,c*log(l)}. [5.5]"},{"names":["-z"],"argument":"INT","description":"Z-best heuristics. Higher -z increases accuracy at the cost of speed. [1]"},{"names":["-s"],"argument":"INT","description":"Maximum SA interval size for initiating a seed. Higher -s increases accuracy at the cost of speed. [3]"},{"names":["-N"],"argument":"INT","description":"Minimum number of seeds supporting the resultant alignment to skip reverse alignment. [5]"}]}]}
