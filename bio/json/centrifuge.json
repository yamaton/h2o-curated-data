{"name":"centrifuge","description":"Classifier for metagenomic sequences","usage":"centrifuge [options]* -x <cf-idx> {-1 <m1> -2 <m2> | -U <r> | --sample-sheet <s> } [-S <filename>] [--report-file <report>]\n\n<cf-idx>   Index filename prefix (minus trailing .X.cf).\n<m1>       Files with #1 mates, paired with files in <m2>.\n           Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).\n<m2>       Files with #2 mates, paired with files in <m1>.\n           Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).\n<r>        Files with unpaired reads.\n           Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).\n<s>        A TSV file where each line represents a sample.\n<filename>      File for classification output (default: stdout)\n<report>   File for tabular report output (default: centrifuge_report.tsv)\n\n<m1>, <m2>, <r> can be comma-separated lists (no whitespace) and can be\nspecified many times.  E.g. '-U file1.fq,file2.fq -U file3.fq'.","options":[{"names":["-x"],"description":"Index filename prefix (minus trailing .X.cf).","argument":"<PREFIX>"},{"names":["-1"],"description":"Files with #1 mates, paired with files in <m2>. Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).","argument":"<FILES>"},{"names":["-2"],"description":"Files with #2 mates, paired with files in <m1>. Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).","argument":"<FILES>"},{"names":["-U"],"description":"Files with unpaired reads. Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).","argument":"<FILES>"},{"names":["--sample-sheet"],"description":"A TSV file where each line represents a sample.","argument":"<FILE>"},{"names":["--report-file"],"description":"File for tabular report output (default: centrifuge_report.tsv)","argument":"<report>"},{"names":["-S"],"description":"File for classification output (default: stdout)","argument":"<filename>"},{"names":["-q"],"description":"query input files are FASTQ .fq/.fastq (default)","argument":""},{"names":["--qseq"],"description":"query input files are in Illumina's qseq format","argument":""},{"names":["-f"],"description":"query input files are (multi-)FASTA .fa/.mfa","argument":""},{"names":["-r"],"description":"query input files are raw one-sequence-per-line","argument":""},{"names":["-c"],"description":"<m1>, <m2>, <r> are sequences themselves, not files","argument":""},{"names":["-s","--skip"],"description":"skip the first <int> reads/pairs in the input (none)","argument":"<int>"},{"names":["-u","--upto"],"description":"stop after first <int> reads/pairs (no limit)","argument":"<int>"},{"names":["-5","--trim5"],"description":"trim <int> bases from 5'/left end of reads (0)","argument":"<int>"},{"names":["-3","--trim3"],"description":"trim <int> bases from 3'/right end of reads (0)","argument":"<int>"},{"names":["--phred33"],"description":"qualities are Phred+33 (default)","argument":""},{"names":["--phred64"],"description":"qualities are Phred+64","argument":""},{"names":["--int-quals"],"description":"qualities encoded as space-delimited integers","argument":""},{"names":["--ignore-quals"],"description":"treat all quality values as 30 on Phred scale (off)","argument":""},{"names":["--nofw"],"description":"do not align forward (original) version of read (off)","argument":""},{"names":["--norc"],"description":"do not align reverse-complement version of read (off)","argument":""},{"names":["--min-hitlen"],"description":"minimum length of partial hits (default 22, must be greater than 15)","argument":"<int>"},{"names":["-k"],"description":"report upto <int> distinct, primary assignments for each read or pair","argument":"<int>"},{"names":["--host-taxids"],"description":"comma-separated list of taxonomic IDs that will be preferred in classification","argument":"<taxids>"},{"names":["--exclude-taxids"],"description":"comma-separated list of taxonomic IDs that will be excluded in classification","argument":"<taxids>"},{"names":["--out-fmt"],"description":"define output format, either 'tab' or 'sam' (tab)","argument":"<str>"},{"names":["--tab-fmt-cols"],"description":"columns in tabular format, comma separated","argument":"<str>"},{"names":["-t","--time"],"description":"print wall-clock time taken by search phases","argument":""},{"names":["--un"],"description":"write unpaired reads that didn't align to <path>","argument":"<path>"},{"names":["--al"],"description":"write unpaired reads that aligned at least once to <path>","argument":"<path>"},{"names":["--un-conc"],"description":"write pairs that didn't align concordantly to <path>","argument":"<path>"},{"names":["--al-conc"],"description":"write pairs that aligned concordantly at least once to <path>","argument":"<path>"},{"names":["--quiet"],"description":"print nothing to stderr except serious errors","argument":""},{"names":["--met-file"],"description":"send metrics to file at <path> (off)","argument":"<path>"},{"names":["--met-stderr"],"description":"send metrics to stderr (off)","argument":""},{"names":["--met"],"description":"report internal counters & metrics every <int> secs (1)","argument":"<int>"},{"names":["-p","--threads"],"description":"number of alignment threads to launch (1)","argument":"<int>"},{"names":["--mm"],"description":"use memory-mapped I/O for index; many instances can share","argument":""},{"names":["--qc-filter"],"description":"filter out reads that are bad according to QSEQ filter","argument":""},{"names":["--seed"],"description":"seed for random number generator (0)","argument":"<int>"},{"names":["--non-deterministic"],"description":"seed rand. gen. arbitrarily instead of using read attributes","argument":""},{"names":["--version"],"description":"print version information and quit","argument":""},{"names":["-h","--help"],"description":"print this usage message","argument":""}],"version":"1.0.4"}
