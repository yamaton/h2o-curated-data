{"name":"csvgrep","description":"csvgrep","usage":"csvgrep [-h] [-d DELIMITER] [-t] [-q QUOTECHAR] [-u {0,1,2,3}] [-b] [-p ESCAPECHAR] [-z FIELD_SIZE_LIMIT] [-e ENCODING] [-S] [-H] [-K SKIP_LINES] [-v] [-l] [--zero] [-V] [-n] [-c COLUMNS] [-m PATTERN] [-r REGEX] [-f MATCHFILE] [-i] [-a] [FILE]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-d","--delimiter"],"argument":"DELIMITER","description":"Delimiting character of the input CSV file."},{"names":["-t","--tabs"],"argument":"","description":"Specify that the input CSV file is delimited with tabs. Overrides \"-d\"."},{"names":["-q","--quotechar"],"argument":"QUOTECHAR","description":"Character used to quote strings in the input CSV file."},{"names":["-u","--quoting"],"argument":"{0,1,2,3}","description":"Quoting style used in the input CSV file. 0 = Quote Minimal, 1 = Quote All, 2 = Quote Non-numeric, 3 = Quote None."},{"names":["-b","--no-doublequote"],"argument":"","description":"Whether or not double quotes are doubled in the input CSV file."},{"names":["-p","--escapechar"],"argument":"ESCAPECHAR","description":"Character used to escape the delimiter if --quoting 3 (\"Quote None\") is specified and to escape the QUOTECHAR if --no-doublequote is specified."},{"names":["-z","--maxfieldsize"],"argument":"FIELD_SIZE_LIMIT","description":"Maximum length of a single field in the input CSV file."},{"names":["-e","--encoding"],"argument":"ENCODING","description":"Specify the encoding of the input CSV file."},{"names":["-S","--skipinitialspace"],"argument":"","description":"Ignore whitespace immediately following the delimiter."},{"names":["-H","--no-header-row"],"argument":"","description":"Specify that the input CSV file has no header row. Will create default headers (a,b,c,...)."},{"names":["-K","--skip-lines"],"argument":"SKIP_LINES","description":"Specify the number of initial lines to skip before the header row (e.g. comments, copyright notices, empty rows)."},{"names":["-v","--verbose"],"argument":"","description":"Print detailed tracebacks when errors occur."},{"names":["-l","--linenumbers"],"argument":"","description":"Insert a column of line numbers at the front of the output. Useful when piping to grep or as a simple primary key."},{"names":["--zero"],"argument":"","description":"When interpreting or displaying column numbers, use zero-based numbering instead of the default 1-based numbering."},{"names":["-V","--version"],"argument":"","description":"Display version information and exit."},{"names":["-n","--names"],"argument":"","description":"Display column names and indices from the input CSV and exit."},{"names":["-c","--columns"],"argument":"COLUMNS","description":"A comma-separated list of column indices, names or ranges to be searched, e.g. \"1,id,3-5\"."},{"names":["-m","--match"],"argument":"PATTERN","description":"A string to search for."},{"names":["-r","--regex"],"argument":"REGEX","description":"A regular expression to match."},{"names":["-f","--file"],"argument":"MATCHFILE","description":"A path to a file. For each row, if any line in the file (stripped of line separators) is an exact match of the cell value, the row matches."},{"names":["-i","--invert-match"],"argument":"","description":"Select non-matching rows, instead of matching rows."},{"names":["-a","--any-match"],"argument":"","description":"Select rows in which any column matches, instead of all columns."}],"version":"csvgrep 1.0.7","tldr":"> Filter CSV rows with string and pattern matching.\n> Included in csvkit.\n> More information: <https://csvkit.readthedocs.io/en/latest/scripts/csvgrep.html>.\n\n- Find rows that have a certain string in column 1:\n\n`csvgrep -c {{1}} -m {{string_to_match}} {{data.csv}}`\n\n- Find rows in which columns 3 or 4 match a certain regular expression:\n\n`csvgrep -c {{3,4}} -r {{regular_expression}} {{data.csv}}`\n\n- Find rows in which the \"name\" column does NOT include the string \"John Doe\":\n\n`csvgrep -i -c {{name}} -m \"{{John Doe}}\" {{data.csv}}`\n"}
