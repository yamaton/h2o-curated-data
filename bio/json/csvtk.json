{"name":"csvtk","description":"a cross-platform, efficient and practical CSV/TSV toolkit","usage":"csvtk [command]","options":[{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-h","--help"],"argument":"","description":"help for csvtk"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}],"subcommands":[{"name":"add-header","description":"add column names","usage":"csvtk add-header [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for add-header"},{"names":["-n","--names"],"argument":"strings","description":"column names to add, in CSV format"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"cat","description":"stream file to stdout and report progress on stderr","usage":"csvtk cat [flags]","options":[{"names":["-b","--buffsize"],"argument":"int","description":"buffer size (default 8192)"},{"names":["-h","--help"],"argument":"","description":"help for cat"},{"names":["-L","--lines"],"argument":"","description":"count lines instead of bytes"},{"names":["-p","--print-freq"],"argument":"int","description":"print frequency (-1 for print after parsing) (default 1)"},{"names":["-s","--total"],"argument":"int","description":"expected total bytes/lines (default -1)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"comb","description":"compute combinations of items at every row","usage":"csvtk comb [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for comb"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore-case"},{"names":["-S","--nat-sort"],"argument":"","description":"sort items in natural order"},{"names":["-n","--number"],"argument":"int","description":"number of items in a combination, 0 for no limit, i.e., return all combinations (default 2)"},{"names":["-s","--sort"],"argument":"","description":"sort items in a combination"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"concat","description":"concatenate CSV/TSV files by rows","usage":"csvtk concat [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for concat"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case (column name)"},{"names":["-k","--keep-unmatched"],"argument":"","description":"keep blanks even if no any data of a file matches"},{"names":["-u","--unmatched-repl"],"argument":"string","description":"replacement for unmatched data"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"corr","description":"calculate Pearson correlation between two columns","usage":"csvtk corr [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"comma separated fields"},{"names":["-h","--help"],"argument":"","description":"help for corr"},{"names":["-i","--ignore_nan"],"argument":"","description":"Ignore non-numeric fields to avoid returning NaN"},{"names":["-L","--log"],"argument":"","description":"Calcute correlations on Log10 transformed data"},{"names":["-x","--pass"],"argument":"","description":"passthrough mode (forward input to output)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"csv2json","description":"convert CSV to JSON format","usage":"csvtk csv2json [flags]","options":[{"names":["-b","--blanks"],"argument":"","description":"do not convert \"\", \"na\", \"n/a\", \"none\", \"null\", \".\" to null"},{"names":["-h","--help"],"argument":"","description":"help for csv2json"},{"names":["-i","--indent"],"argument":"string","description":"indent. if given blank, output json in one line. (default \" \")"},{"names":["-k","--key"],"argument":"string","description":"output json as an array of objects keyed by a given filed rather than as a list. e.g -k 1 or -k columnA"},{"names":["-n","--parse-num"],"argument":"strings","description":"parse numeric values for nth column, multiple values are supported and \"a\"/\"all\" for all columns"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"csv2md","description":"convert CSV to markdown format","usage":"csvtk csv2md [flags]","options":[{"names":["-a","--alignments"],"argument":"string","description":"comma separated alignments. e.g. -a l,c,c,c or -a c (default \"l\")"},{"names":["-h","--help"],"argument":"","description":"help for csv2md"},{"names":["-w","--min-width"],"argument":"int","description":"min width (at least 3) (default 3)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"csv2rst","description":"convert CSV to reStructuredText format","usage":"csvtk csv2rst [flags]","options":[{"names":["-k","--cross"],"argument":"string","description":"charactor of cross (default \"+\")"},{"names":["-s","--header"],"argument":"string","description":"charactor of separator between header row and data rowws (default \"=\")"},{"names":["-h","--help"],"argument":"","description":"help for csv2rst"},{"names":["-b","--horizontal-border"],"argument":"string","description":"charactor of horizontal border (default \"-\")"},{"names":["-p","--padding"],"argument":"string","description":"charactor of padding (default \" \")"},{"names":["-B","--vertical-border"],"argument":"string","description":"charactor of vertical border (default \"|\")"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"csv2tab","description":"convert CSV to tabular format","usage":"csvtk csv2tab [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for csv2tab"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"csv2xlsx","description":"convert CSV/TSV files to XLSX file","usage":"csvtk csv2xlsx [flags]","options":[{"names":["-f","--format-numbers"],"argument":"","description":"save numbers in number format, instead of text"},{"names":["-h","--help"],"argument":"","description":"help for csv2xlsx"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"cut","description":"select and arrange fields","usage":"csvtk cut [flags]","options":[{"names":["-m","--allow-missing-col"],"argument":"","description":"allow missing column"},{"names":["-b","--blank-missing-col"],"argument":"","description":"blank missing column"},{"names":["-f","--fields"],"argument":"string","description":"select only these fields. type \"csvtk cut -h\" for examples"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for cut"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case (column name)"},{"names":["-u","--uniq-column"],"argument":"","description":"deduplicate columns matched by multiple fuzzy column names"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"del-header","description":"delete column names","usage":"csvtk del-header [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for del-header"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"dim","description":"dimensions of CSV file","usage":"csvtk dim [flags]","options":[{"names":["--cols"],"argument":"","description":"only print number of columns (or using \"csvtk ncol\""},{"names":["-h","--help"],"argument":"","description":"help for dim"},{"names":["-n","--no-files"],"argument":"","description":"do not print file names (only affect --cols and --rows)"},{"names":["--rows"],"argument":"","description":"only print number of rows (or using \"csvtk nrow\")"},{"names":["--tabular"],"argument":"","description":"output in machine-friendly tabular format"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"filter","description":"filter rows by values of selected fields with arithmetic expression","usage":"csvtk filter [flags]","options":[{"names":["--any"],"argument":"","description":"print record if any of the field satisfy the condition"},{"names":["-f","--filter"],"argument":"string","description":"filter condition. e.g. -f \"age>12\" or -f \"1,3<=2\" or -F -f \"c*!=0\""},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for filter"},{"names":["-n","--line-number"],"argument":"","description":"print line number as the first column (\"n\")"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"filter2","description":"filter rows by awk-like arithmetic/string expressions","usage":"csvtk filter2 [flags]","options":[{"names":["-"],"argument":"","description":"len(), length of strings, e.g., len($1), len($a), len($1, $2)"},{"names":["-"],"argument":"","description":"ulen(), length of unicode strings/width of unicode strings rendered to a terminal, e.g., len(\"沈伟\")==6, ulen(\"沈伟\")==4"},{"names":["-f","--filter"],"argument":"string","description":"awk-like filter condition. e.g. '$age>12' or '$1 > $3' or '$name==\"abc\"' or '$1 % 2 == 0'"},{"names":["-h","--help"],"argument":"","description":"help for filter2"},{"names":["-n","--line-number"],"argument":"","description":"print line number as the first column (\"n\")"},{"names":["-s","--numeric-as-string"],"argument":"","description":"treat even numeric fields as strings to avoid converting big numbers into scientific notation"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"fix","description":"fix CSV/TSV with different numbers of columns in rows","usage":"csvtk fix [flags]","options":[{"names":["-n","--buf-rows"],"argument":"int","description":"the number of rows to determine the maximum number of columns. 0 for all rows."},{"names":["-h","--help"],"argument":"","description":"help for fix"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"fmtdate","description":"format date of selected fields","usage":"csvtk fmtdate [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"select only these fields. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["--format"],"argument":"string","description":"output date format in MS Excel (TM) syntax, type \"csvtk fmtdate -h\" for details (default \"YYYY-MM-DD hh:mm:ss\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for fmtdate"},{"names":["-k","--keep-unparsed"],"argument":"","description":"keep the key as value when no value found for the key"},{"names":["-z","--time-zone"],"argument":"string","description":"timezone aka \"Asia/Shanghai\" or \"America/Los_Angeles\" formatted time-zone, type \"csvtk fmtdate -h\" for details"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"fold","description":"fold multiple values of a field into cells of groups","usage":"csvtk fold [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"key fields for grouping. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields (only for key fields), e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for fold"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-s","--separater"],"argument":"string","description":"separater for folded values (default \"; \")"},{"names":["-v","--vfield"],"argument":"string","description":"value field for folding"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"freq","description":"frequencies of selected fields","usage":"csvtk freq [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"select these fields as the key. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for freq"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-r","--reverse"],"argument":"","description":"reverse order while sorting"},{"names":["-n","--sort-by-freq"],"argument":"","description":"sort by frequency"},{"names":["-k","--sort-by-key"],"argument":"","description":"sort by key"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"gather","description":"gather columns into key-value pairs","usage":"csvtk gather [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"fields for gathering. e.g -f 1,2 or -f columnA,columnB, or -f -columnA for unselect columnA"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for gather"},{"names":["-k","--key"],"argument":"string","description":"name of key column to create in output"},{"names":["-v","--value"],"argument":"string","description":"name of value column to create in output"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"genautocomplete","description":"generate shell autocompletion script (bash|zsh|fish|powershell)","usage":"csvtk genautocomplete [flags]","options":[{"names":["--file"],"argument":"string","description":"autocompletion file (default \"~/.bash_completion.d/csvtk.sh\")"},{"names":["-h","--help"],"argument":"","description":"help for genautocomplete"},{"names":["--shell"],"argument":"string","description":"autocompletion type (bash|zsh|fish|powershell) (default \"bash\")"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"grep","description":"grep data by selected fields with patterns/regular expressions","usage":"csvtk grep [flags]","options":[{"names":["--delete-matched"],"argument":"","description":"delete a pattern right after being matched, this keeps the firstly matched data and speedups when using regular expressions"},{"names":["-f","--fields"],"argument":"string","description":"comma separated key fields, column name or index. e.g. -f 1-3 or -f id,id2 or -F -f \"group*\" (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for grep"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["--immediate-output"],"argument":"","description":"print output immediately, do not use write buffer"},{"names":["-v","--invert"],"argument":"","description":"invert match"},{"names":["-n","--line-number"],"argument":"","description":"print line number as the first column (\"n\")"},{"names":["-N","--no-highlight"],"argument":"","description":"no highlight"},{"names":["-p","--pattern"],"argument":"strings","description":"query pattern (multiple values supported). Attention: use double quotation marks for patterns containing comma, e.g., -p '\"A{2,}\"'"},{"names":["-P","--pattern-file"],"argument":"string","description":"pattern files (one pattern per line)"},{"names":["-r","--use-regexp"],"argument":"","description":"patterns are regular expression"},{"names":["--verbose"],"argument":"","description":"verbose output"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"head","description":"print first N records","usage":"csvtk head [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for head"},{"names":["-n","--number"],"argument":"int","description":"print first N records (default 10)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"headers","description":"print headers","usage":"csvtk headers [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for headers"},{"names":["-v","--verbose"],"argument":"","description":"print verbose information"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"inter","description":"intersection of multiple files","usage":"csvtk inter [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"select these fields as the key. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for inter"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"join","description":"join files by selected fields (inner, left and outer join)","usage":"csvtk join [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"Semicolon separated key fields of all files, if given one, we think all the files have the same key columns. Fields of different files should be separated by \";\", e.g -f \"1;2\" or -f \"A,B;C,D\" or -f id (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for join"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-n","--ignore-null"],"argument":"","description":"do not match NULL values"},{"names":["-k","--keep-unmatched"],"argument":"","description":"keep unmatched data of the first file (left join)"},{"names":["-L","--left-join"],"argument":"","description":"left join, equals to -k/--keep-unmatched, exclusive with --outer-join"},{"names":["--na"],"argument":"string","description":"content for filling NA data"},{"names":["-O","--outer-join"],"argument":"","description":"outer join, exclusive with --left-join"},{"names":["-p","--prefix-filename"],"argument":"","description":"add each filename as a prefix to each colname. if there's no header row, we'll add one"},{"names":["-e","--prefix-trim-ext"],"argument":"","description":"trim extension when adding filename as colname prefix"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"mutate","description":"create new column from selected fields by regular expression","usage":"csvtk mutate [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"select only these fields. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["-h","--help"],"argument":"","description":"help for mutate"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["--na"],"argument":"","description":"for unmatched data, use blank instead of original data"},{"names":["-n","--name"],"argument":"string","description":"new column name"},{"names":["-p","--pattern"],"argument":"string","description":"search regular expression with capture bracket. e.g. (default \"^(.+)$\")"},{"names":["-R","--remove"],"argument":"","description":"remove input column"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"mutate2","description":"create new column from selected fields by awk-like arithmetic/string expressions","usage":"csvtk mutate2 [flags]","options":[{"names":["-"],"argument":"","description":"len(), length of strings, e.g., len($1), len($a), len($1, $2)"},{"names":["-"],"argument":"","description":"ulen(), length of unicode strings/width of unicode strings rendered to a terminal, e.g., len(\"沈伟\")==6, ulen(\"沈伟\")==4"},{"names":["-w","--decimal-width"],"argument":"int","description":"limit floats to N decimal points (default 2)"},{"names":["-e","--expression"],"argument":"string","description":"arithmetic/string expressions. e.g. \"'string'\", '\"abc\"', ' $a + \"-\" + $b ', '$1 + $2', '$a / $b', ' $1 > 100 ? \"big\" : \"small\" '"},{"names":["-h","--help"],"argument":"","description":"help for mutate2"},{"names":["-n","--name"],"argument":"string","description":"new column name"},{"names":["-s","--numeric-as-string"],"argument":"","description":"treat even numeric fields as strings to avoid converting big numbers into scientific notation"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"ncol","description":"print number of columns","usage":"csvtk ncol [flags]","options":[{"names":["-n","--file-name"],"argument":"","description":"print file names"},{"names":["-h","--help"],"argument":"","description":"help for ncol"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"nrow","description":"print number of records","usage":"csvtk nrow [flags]","options":[{"names":["-n","--file-name"],"argument":"","description":"print file names"},{"names":["-h","--help"],"argument":"","description":"help for nrow"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"plot","description":"plot common figures","usage":"csvtk plot [command]","options":[{"names":["--axis-width"],"argument":"float","description":"axis width (default 1.5)"},{"names":["-f","--data-field"],"argument":"string","description":"column index or column name of data (default \"1\")"},{"names":["--format"],"argument":"string","description":"image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default \"png\")"},{"names":["-g","--group-field"],"argument":"string","description":"column index or column name of group"},{"names":["--height"],"argument":"float","description":"Figure height (default 4.5)"},{"names":["-h","--help"],"argument":"","description":"help for plot"},{"names":["--label-size"],"argument":"int","description":"label font size (default 14)"},{"names":["--na-values"],"argument":"strings","description":"NA values, case ignored (default [,NA,N/A])"},{"names":["--skip-na"],"argument":"","description":"skip NA values in --na-values"},{"names":["--tick-width"],"argument":"float","description":"axis tick width (default 1.5)"},{"names":["--title"],"argument":"string","description":"Figure title"},{"names":["--title-size"],"argument":"int","description":"title font size (default 16)"},{"names":["--width"],"argument":"float","description":"Figure width (default 6)"},{"names":["--x-max"],"argument":"string","description":"maximum value of X axis"},{"names":["--x-min"],"argument":"string","description":"minimum value of X axis"},{"names":["--xlab"],"argument":"string","description":"x label text"},{"names":["--y-max"],"argument":"string","description":"maximum value of Y axis"},{"names":["--y-min"],"argument":"string","description":"minimum value of Y axis"},{"names":["--ylab"],"argument":"string","description":"y label text"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}],"subcommands":[{"name":"box","description":"plot boxplot","usage":"csvtk plot box [flags]","options":[{"names":["--box-width"],"argument":"float","description":"box width"},{"names":["-h","--help"],"argument":"","description":"help for box"},{"names":["--horiz"],"argument":"","description":"horize box plot"},{"names":["--axis-width"],"argument":"float","description":"axis width (default 1.5)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-f","--data-field"],"argument":"string","description":"column index or column name of data (default \"1\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["--format"],"argument":"string","description":"image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default \"png\")"},{"names":["-g","--group-field"],"argument":"string","description":"column index or column name of group"},{"names":["--height"],"argument":"float","description":"Figure height (default 4.5)"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["--label-size"],"argument":"int","description":"label font size (default 14)"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["--na-values"],"argument":"strings","description":"NA values, case ignored (default [,NA,N/A])"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["--skip-na"],"argument":"","description":"skip NA values in --na-values"},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""},{"names":["--tick-width"],"argument":"float","description":"axis tick width (default 1.5)"},{"names":["--title"],"argument":"string","description":"Figure title"},{"names":["--title-size"],"argument":"int","description":"title font size (default 16)"},{"names":["--width"],"argument":"float","description":"Figure width (default 6)"},{"names":["--x-max"],"argument":"string","description":"maximum value of X axis"},{"names":["--x-min"],"argument":"string","description":"minimum value of X axis"},{"names":["--xlab"],"argument":"string","description":"x label text"},{"names":["--y-max"],"argument":"string","description":"maximum value of Y axis"},{"names":["--y-min"],"argument":"string","description":"minimum value of Y axis"},{"names":["--ylab"],"argument":"string","description":"y label text"}]},{"name":"hist","description":"plot histogram","usage":"csvtk plot hist [flags]","options":[{"names":["--bins"],"argument":"int","description":"number of bins (default 50)"},{"names":["--color-index"],"argument":"int","description":"color index, 1-7 (default 1)"},{"names":["-h","--help"],"argument":"","description":"help for hist"},{"names":["--percentiles"],"argument":"","description":"calculate percentiles"},{"names":["--axis-width"],"argument":"float","description":"axis width (default 1.5)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-f","--data-field"],"argument":"string","description":"column index or column name of data (default \"1\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["--format"],"argument":"string","description":"image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default \"png\")"},{"names":["-g","--group-field"],"argument":"string","description":"column index or column name of group"},{"names":["--height"],"argument":"float","description":"Figure height (default 4.5)"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["--label-size"],"argument":"int","description":"label font size (default 14)"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["--na-values"],"argument":"strings","description":"NA values, case ignored (default [,NA,N/A])"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["--skip-na"],"argument":"","description":"skip NA values in --na-values"},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""},{"names":["--tick-width"],"argument":"float","description":"axis tick width (default 1.5)"},{"names":["--title"],"argument":"string","description":"Figure title"},{"names":["--title-size"],"argument":"int","description":"title font size (default 16)"},{"names":["--width"],"argument":"float","description":"Figure width (default 6)"},{"names":["--x-max"],"argument":"string","description":"maximum value of X axis"},{"names":["--x-min"],"argument":"string","description":"minimum value of X axis"},{"names":["--xlab"],"argument":"string","description":"x label text"},{"names":["--y-max"],"argument":"string","description":"maximum value of Y axis"},{"names":["--y-min"],"argument":"string","description":"minimum value of Y axis"},{"names":["--ylab"],"argument":"string","description":"y label text"}]},{"name":"line","description":"line plot and scatter plot","usage":"csvtk plot line [flags]","options":[{"names":["--color-index"],"argument":"int","description":"color index, 1-7 (default 1)"},{"names":["-x","--data-field-x"],"argument":"string","description":"column index or column name of X for command line"},{"names":["-y","--data-field-y"],"argument":"string","description":"column index or column name of Y for command line"},{"names":["-h","--help"],"argument":"","description":"help for line"},{"names":["--legend-left"],"argument":"","description":"locate legend along the left edge of the plot"},{"names":["--legend-top"],"argument":"","description":"locate legend along the top edge of the plot"},{"names":["--line-width"],"argument":"float","description":"line width (default 1.5)"},{"names":["--point-size"],"argument":"float","description":"point size (default 3)"},{"names":["--scatter"],"argument":"","description":"only plot points"},{"names":["--axis-width"],"argument":"float","description":"axis width (default 1.5)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-f","--data-field"],"argument":"string","description":"column index or column name of data (default \"1\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["--format"],"argument":"string","description":"image format for stdout when flag -o/--out-file not given. available values: eps, jpg|jpeg, pdf, png, svg, and tif|tiff. (default \"png\")"},{"names":["-g","--group-field"],"argument":"string","description":"column index or column name of group"},{"names":["--height"],"argument":"float","description":"Figure height (default 4.5)"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["--label-size"],"argument":"int","description":"label font size (default 14)"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["--na-values"],"argument":"strings","description":"NA values, case ignored (default [,NA,N/A])"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["--skip-na"],"argument":"","description":"skip NA values in --na-values"},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""},{"names":["--tick-width"],"argument":"float","description":"axis tick width (default 1.5)"},{"names":["--title"],"argument":"string","description":"Figure title"},{"names":["--title-size"],"argument":"int","description":"title font size (default 16)"},{"names":["--width"],"argument":"float","description":"Figure width (default 6)"},{"names":["--x-max"],"argument":"string","description":"maximum value of X axis"},{"names":["--x-min"],"argument":"string","description":"minimum value of X axis"},{"names":["--xlab"],"argument":"string","description":"x label text"},{"names":["--y-max"],"argument":"string","description":"maximum value of Y axis"},{"names":["--y-min"],"argument":"string","description":"minimum value of Y axis"},{"names":["--ylab"],"argument":"string","description":"y label text"}]}]},{"name":"pretty","description":"convert CSV to a readable aligned table","usage":"csvtk pretty [flags]","options":[{"names":["--"],"argument":"","description":"----"},{"names":["-m","--align-center"],"argument":"","description":"align center/middle"},{"names":["-r","--align-right"],"argument":"","description":"align right"},{"names":["-n","--buf-rows"],"argument":"int","description":"the number of rows to determine the min and max widths (default 128)"},{"names":["--clip"],"argument":"","description":"clip longer cell instead of wrapping"},{"names":["--clip-mark"],"argument":"string","description":"clip mark (default \"...\")"},{"names":["-h","--help"],"argument":"","description":"help for pretty"},{"names":["-W","--max-width"],"argument":"int","description":"max width"},{"names":["-w","--min-width"],"argument":"int","description":"min width"},{"names":["-s","--separator"],"argument":"string","description":"fields/columns separator (default \" \")"},{"names":["-S","--style"],"argument":"string","description":"output syle. available vaules: default, plain, simple, grid, light, bold, double. check https://github.com/shenwei356/stable"},{"names":["-x","--wrap-delimiter"],"argument":"string","description":"delimiter for wrapping cells (default \" \")"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"rename","description":"rename column names with new names","usage":"csvtk rename [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"select only these fields. e.g -f 1,2 or -f columnA,columnB"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for rename"},{"names":["-n","--names"],"argument":"string","description":"comma separated new names"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"rename2","description":"rename column names by regular expression","usage":"csvtk rename2 [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"select only these fields. e.g -f 1,2 or -f columnA,columnB"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for rename2"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-K","--keep-key"],"argument":"","description":"keep the key as value when no value found for the key"},{"names":["--key-capt-idx"],"argument":"int","description":"capture variable index of key (1-based) (default 1)"},{"names":["--key-miss-repl"],"argument":"string","description":"replacement for key with no corresponding value"},{"names":["-k","--kv-file"],"argument":"string","description":"tab-delimited key-value file for replacing key with value when using \"{kv}\" in -r (--replacement)"},{"names":["-A","--kv-file-all-left-columns-as-value"],"argument":"","description":"treat all columns except 1th one as value for kv-file with more than 2 columns"},{"names":["-p","--pattern"],"argument":"string","description":"search regular expression"},{"names":["-r","--replacement"],"argument":"string","description":"renamement. supporting capture variables. e.g. $1 represents the text of the first submatch. ATTENTION: use SINGLE quote NOT double quotes in *nix OS or use the \\ escape character. Ascending number is also supported by \"{nr}\".use ${1} instead of $1 when {kv} given!"},{"names":["-n","--start-num"],"argument":"int","description":"starting number when using {nr} in replacement (default 1)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"replace","description":"replace data of selected fields by regular expression","usage":"csvtk replace [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"select only these fields. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for replace"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-K","--keep-key"],"argument":"","description":"keep the key as value when no value found for the key"},{"names":["--key-capt-idx"],"argument":"int","description":"capture variable index of key (1-based) (default 1)"},{"names":["--key-miss-repl"],"argument":"string","description":"replacement for key with no corresponding value"},{"names":["-k","--kv-file"],"argument":"string","description":"tab-delimited key-value file for replacing key with value when using \"{kv}\" in -r (--replacement)"},{"names":["-A","--kv-file-all-left-columns-as-value"],"argument":"","description":"treat all columns except 1th one as value for kv-file with more than 2 columns"},{"names":["--nr-width"],"argument":"int","description":"minimum width for {nr} in flag -r/--replacement. e.g., formating \"1\" to \"001\" by --nr-width 3 (default 1)"},{"names":["-p","--pattern"],"argument":"string","description":"search regular expression"},{"names":["-r","--replacement"],"argument":"string","description":"replacement. supporting capture variables. e.g. $1 represents the text of the first submatch. ATTENTION: for *nix OS, use SINGLE quote NOT double quotes or use the \\ escape character. Record number is also supported by \"{nr}\".use ${1} instead of $1 when {kv} given!"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"round","description":"round float to n decimal places","usage":"csvtk round [flags]","options":[{"names":["-a","--all-fields"],"argument":"","description":"all fields, overides -f/--fields"},{"names":["-n","--decimal-width"],"argument":"int","description":"limit floats to N decimal points (default 2)"},{"names":["-f","--fields"],"argument":"string","description":"select only these fields. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for round"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"sample","description":"sampling by proportion","usage":"csvtk sample [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for sample"},{"names":["-n","--line-number"],"argument":"","description":"print line number as the first column (\"n\")"},{"names":["-p","--proportion"],"argument":"float","description":"sample by proportion"},{"names":["-s","--rand-seed"],"argument":"int","description":"rand seed (default 11)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"sep","description":"separate column into multiple columns","usage":"csvtk sep [flags]","options":[{"names":["--drop"],"argument":"","description":"drop extra data, exclusive with --merge"},{"names":["-f","--fields"],"argument":"string","description":"select only these fields. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["-h","--help"],"argument":"","description":"help for sep"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["--merge"],"argument":"","description":"only splits at most N times, exclusive with --drop"},{"names":["--na"],"argument":"string","description":"content for filling NA data"},{"names":["-n","--names"],"argument":"strings","description":"new column names"},{"names":["-N","--num-cols"],"argument":"int","description":"preset number of new created columns"},{"names":["-R","--remove"],"argument":"","description":"remove input column"},{"names":["-s","--sep"],"argument":"string","description":"separator"},{"names":["-r","--use-regexp"],"argument":"","description":"separator is a regular expression"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"sort","description":"sort by selected fields","usage":"csvtk sort [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for sort"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore-case"},{"names":["-k","--keys"],"argument":"strings","description":"keys (multiple values supported). sort type supported, \"N\" for natural order, \"n\" for number, \"u\" for user-defined order and \"r\" for reverse. e.g., \"-k 1\" or \"-k A:r\" or \"\"-k 1:nr -k 2\" (default [1])"},{"names":["-L","--levels"],"argument":"strings","description":"user-defined level file (one level per line, multiple values supported). format: <field>:<level-file>. e.g., \"-k name:u -L name:level.txt\""},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"space2tab","description":"convert space delimited format to TSV","usage":"csvtk space2tab [flags]","options":[{"names":["-b","--buffer-size"],"argument":"string","description":"size of buffer, supported unit: K, M, G. You need increase the value when \"bufio.Scanner: token too long\" error reported (default \"1G\")"},{"names":["-h","--help"],"argument":"","description":"help for space2tab"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"split","description":"split CSV/TSV into multiple files according to column values","usage":"csvtk split [flags]","options":[{"names":["-g","--buf-groups"],"argument":"int","description":"buffering N groups before writing to file (default 100)"},{"names":["-b","--buf-rows"],"argument":"int","description":"buffering N rows for every group before writing to file (default 100000)"},{"names":["-f","--fields"],"argument":"string","description":"comma separated key fields, column name or index. e.g. -f 1-3 or -f id,id2 or -F -f \"group*\" (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for split"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-G","--out-gzip"],"argument":"","description":"force output gzipped file"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"splitxlsx","description":"split XLSX sheet into multiple sheets according to column values","usage":"csvtk splitxlsx [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"comma separated key fields, column name or index. e.g. -f 1-3 or -f id,id2 or -F -f \"group*\" (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for splitxlsx"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case (cell value)"},{"names":["-a","--list-sheets"],"argument":"","description":"list all sheets"},{"names":["-N","--sheet-index"],"argument":"int","description":"Nth sheet to retrieve (default 1)"},{"names":["-n","--sheet-name"],"argument":"string","description":"sheet to retrieve"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"summary","description":"summary statistics of selected numeric or text fields (groupby group fields)","usage":"csvtk summary [flags]","options":[{"names":["-w","--decimal-width"],"argument":"int","description":"limit floats to N decimal points (default 2)"},{"names":["-f","--fields"],"argument":"strings","description":"operations on these fields. e.g -f 1:count,1:sum or -f colA:mean. available operations: argmax, argmin, collapse, count, countn, countuniq, countunique, entropy, first, last, max, mean, median, min, prod, q1, q2, q3, rand, stdev, sum, uniq, unique, variance"},{"names":["-g","--groups"],"argument":"string","description":"group via fields. e.g -f 1,2 or -f columnA,columnB"},{"names":["-h","--help"],"argument":"","description":"help for summary"},{"names":["-i","--ignore-non-numbers"],"argument":"","description":"ignore non-numeric values like \"NA\" or \"N/A\""},{"names":["-S","--rand-seed"],"argument":"int","description":"rand seed for operation \"rand\" (default 11)"},{"names":["-s","--separater"],"argument":"string","description":"separater for collapsed data (default \"; \")"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"tab2csv","description":"convert tabular format to CSV","usage":"csvtk tab2csv [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for tab2csv"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"transpose","description":"transpose CSV data","usage":"csvtk transpose [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for transpose"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"unfold","description":"unfold multiple values in cells of a field","usage":"csvtk unfold [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"field to expand, only one field is allowed. type \"csvtk unfold -h\" for examples"},{"names":["-h","--help"],"argument":"","description":"help for unfold"},{"names":["-s","--separater"],"argument":"string","description":"separater for folded values (default \"; \")"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"uniq","description":"unique data without sorting","usage":"csvtk uniq [flags]","options":[{"names":["-f","--fields"],"argument":"string","description":"select these fields as keys. e.g -f 1,2 or -f columnA,columnB (default \"1\")"},{"names":["-F","--fuzzy-fields"],"argument":"","description":"using fuzzy fields, e.g., -F -f \"*name\" or -F -f \"id123*\""},{"names":["-h","--help"],"argument":"","description":"help for uniq"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-n","--keep-n"],"argument":"int","description":"keep at most N records for a key (default 1)"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"version","description":"print version information and check for update","usage":"csvtk version [flags]","options":[{"names":["-u","--check-update"],"argument":"","description":"check update"},{"names":["-h","--help"],"argument":"","description":"help for version"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"watch","description":"monitor the specified fields","usage":"csvtk watch [flags]","options":[{"names":["-B","--bins"],"argument":"int","description":"number of histogram bins (default -1)"},{"names":["-W","--delay"],"argument":"int","description":"sleep this many seconds after plotting (default 1)"},{"names":["-y","--dump"],"argument":"","description":"print histogram data to stderr instead of plotting"},{"names":["-f","--field"],"argument":"string","description":"field to watch"},{"names":["-h","--help"],"argument":"","description":"help for watch"},{"names":["-O","--image"],"argument":"string","description":"save histogram to this PDF/image file"},{"names":["-L","--log"],"argument":"","description":"log10(x+1) transform numeric values"},{"names":["-x","--pass"],"argument":"","description":"passthrough mode (forward input to output)"},{"names":["-p","--print-freq"],"argument":"int","description":"print/report after this many records (-1 for print after EOF) (default -1)"},{"names":["-Q","--quiet"],"argument":"","description":"supress all plotting to stderr"},{"names":["-R","--reset"],"argument":"","description":"reset histogram after every report"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]},{"name":"xlsx2csv","description":"convert XLSX to CSV format","usage":"csvtk xlsx2csv [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for xlsx2csv"},{"names":["-a","--list-sheets"],"argument":"","description":"list all sheets"},{"names":["-i","--sheet-index"],"argument":"int","description":"Nth sheet to retrieve (default 1)"},{"names":["-n","--sheet-name"],"argument":"string","description":"sheet to retrieve"},{"names":["-c","--chunk-size"],"argument":"int","description":"chunk size of CSV reader (default 50)"},{"names":["-C","--comment-char"],"argument":"string","description":"lines starting with commment-character will be ignored. if your header row starts with '#', please assign \"-C\" another rare symbol, e.g. '$' (default \"#\")"},{"names":["-d","--delimiter"],"argument":"string","description":"delimiting character of the input CSV file (default \",\")"},{"names":["-E","--ignore-empty-row"],"argument":"","description":"ignore empty rows"},{"names":["-I","--ignore-illegal-row"],"argument":"","description":"ignore illegal rows"},{"names":["--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-l","--lazy-quotes"],"argument":"","description":"if given, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field"},{"names":["-H","--no-header-row"],"argument":"","description":"specifies that the input CSV file does not have header row"},{"names":["-j","--num-cpus"],"argument":"int","description":"number of CPUs to use (default value depends on your computer) (default 8)"},{"names":["-D","--out-delimiter"],"argument":"string","description":"delimiting character of the output CSV file, e.g., -D $'\\t' for tab (default \",\")"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["-T","--out-tabs"],"argument":"","description":"specifies that the output is delimited with tabs. Overrides \"-D\""},{"names":["-t","--tabs"],"argument":"","description":"specifies that the input CSV file is delimited with tabs. Overrides \"-d\""}]}],"version":"csvtk v0.26.0"}
