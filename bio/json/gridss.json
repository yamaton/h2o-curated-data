{"name":"gridss","description":"gridss","usage":"gridss [options] -r <reference.fa> -o <output.vcf.gz> -a <assembly.bam> input1.bam [input2.bam [...]]","options":[{"names":["-r","--reference"],"argument":"<reference.fa>","description":"reference genome to use."},{"names":["-o","--output"],"argument":"<output.vcf.gz>","description":"output VCF."},{"names":["-a","--assembly"],"argument":"<assembly.bam>","description":"location of the GRIDSS assembly BAM. This file will be created by GRIDSS."},{"names":["-t","--threads"],"argument":"NUM","description":"number of threads to use. (Default 8)"},{"names":["-j","--jar"],"argument":"PATH","description":"location of GRIDSS jar"},{"names":["-w","--workingdir"],"argument":"DIR","description":"directory to place GRIDSS intermediate and temporary files .gridss.working subdirectories will be created. (Default .)"},{"names":["-b","--blacklist"],"argument":"<bed-file>","description":"BED file containing regions to ignore"},{"names":["-s","--steps"],"argument":"{setupreference, preprocess, assemble, call, all}","description":"processing steps to run. Defaults to all steps. Multiple steps are specified using comma separators. Possible steps are: setupreference, preprocess, assemble, call, all WARNING multiple instances of GRIDSS generating reference files at the same time will result in file corruption. Make sure these files are generated before runninng parallel GRIDSS jobs."},{"names":["-c","--configuration"],"argument":"FILE","description":"configuration file use to override default GRIDSS settings."},{"names":["-l","--labels"],"argument":"FILE","description":"comma separated labels to use in the output VCF for the input files. Supporting read counts for input files with the same label are aggregated (useful for multiple sequencing runs of the same sample). Labels default to input filenames, unless a single read group with a non-empty sample name exists in which case the read group sample name is used (which can be disabled by \"useReadGroupSampleNameCategoryLabel=false\" in the configuration file). If labels are specified, they must be specified for all input files."},{"names":["--externalaligner"],"argument":"","description":"use the system version of bwa instead of the in-process version packaged with GRIDSS (default)"},{"names":["--internalaligner"],"argument":"","description":"use the in-process version of bwa instead of system version. Faster but alignment results can change between runs."},{"names":["--jvmheap"],"argument":"","description":"size of JVM heap for the high-memory component of assembly and variant calling. (Default 30g)"},{"names":["--otherjvmheap"],"argument":"","description":"size of JVM heap for everything else. Useful to prevent java out of memory errors when using large (>4Gb) reference genomes. Note that some parts of assembly and variant calling use this heap size. (Default 4g)"},{"names":["--skipsoftcliprealignment"],"argument":"","description":"[EXPERIMENTAL] skip soft clip realignment. Reduces runtime for aligners that report split read alignments."},{"names":["--maxcoverage"],"argument":"","description":"maximum coverage. Regions with coverage in excess of this are ignored. (Default 50000)"},{"names":["--picardoptions"],"argument":"","description":"additional standard Picard command line options. Useful options include VALIDATION_STRINGENCY=LENIENT and COMPRESSION_LEVEL=0. https://broadinstitute.github.io/picard/command-line-overview.html"},{"names":["--useproperpair"],"argument":"","description":"use SAM 'proper pair' flag to determine whether a read pair is discordant. Default use library fragment size distribution to determine read pair concordance."},{"names":["--concordantreadpairdistribution"],"argument":"","description":"portion of 6 sigma read pairs distribution considered concordantly mapped. (Default 0.995)"},{"names":["--keepTempFiles"],"argument":"","description":"keep intermediate files. Not recommended except for debugging due to the high disk usage."},{"names":["--nojni"],"argument":"","description":"do not use JNI native code acceleration libraries JNI libraries: snappy, GKL, ssw, bwa"},{"names":["--jobindex"],"argument":"","description":"zero-based assembly job index. Only required when performing parallel assembly across multiple processes."},{"names":["--jobnodes"],"argument":"NUM","description":"total number of assembly jobs. Only required when performing parallel assembly across multiple processes."}],"version":"gridss 2.13.2"}
