{"name":"mummer","description":"mummer","usage":"mummer [options] <reference-file> <query file1> . . . [query file32]","options":[{"names":["-mum"],"argument":"","description":"compute maximal matches that are unique in both sequences"},{"names":["-mumreference"],"argument":"","description":"compute maximal matches that are unique in the referencesequence but not necessarily in the query-sequence (default)"},{"names":["-mumcand"],"argument":"","description":"same as -mumreference"},{"names":["-maxmatch"],"argument":"","description":"compute all maximal matches regardless of their uniqueness"},{"names":["-l"],"argument":"","description":"set the minimum length of a match if not set, the default value is 20"},{"names":["-b"],"argument":"","description":"compute forward and reverse complement matches"},{"names":["-F"],"argument":"","description":"force 4 column output format regardless of the number of reference sequence inputs"},{"names":["-n"],"argument":"","description":"match only the characters a, c, g, or t"},{"names":["-L"],"argument":"","description":"print length of query sequence in header of matches"},{"names":["-r"],"argument":"","description":"compute only reverse complement matches"},{"names":["-s"],"argument":"","description":"print first 53 characters of the matching substring"},{"names":["-c"],"argument":"","description":"Report the query position of a reverse complement match relative to the forward strand of the query sequence"},{"names":["-k"],"argument":"","description":"sampled suffix positions (one by default)"},{"names":["-threads"],"argument":"","description":"number of threads to use for -maxmatch, only valid k > 1"},{"names":["-qthreads"],"argument":"","description":"number of threads to use for queries"},{"names":["-suflink"],"argument":"","description":"use suffix links (1=yes or 0=no) in the index and during search [auto]"},{"names":["-child"],"argument":"","description":"use child table (1=yes or 0=no) in the index and during search [auto]"},{"names":["-skip"],"argument":"","description":"sparsify the MEM-finding algorithm even more, performing jumps of skip*k [auto (l-10)/k] this is a performance parameter that trade-offs SA traversal with checking of right-maximal MEMs"},{"names":["-kmer"],"argument":"","description":"use kmer table containing sa-intervals (speeds up searching first k characters) in the index and during search [int value, auto]"},{"names":["-save"],"argument":"(string)","description":"save index to file to use again later (string)"},{"names":["-load"],"argument":"(string)","description":"load index from file"}],"version":"4.0.0rc1"}
