{
  "name": "nanopolish",
  "description": "nanopolish",
  "options": [],
  "subcommands": [
    {
      "name": "call-methylation",
      "description": "Classify nucleotides as methylated or not.",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "-r",
            "--reads"
          ],
          "argument": "FILE",
          "description": "the ONT reads are in fasta/fastq FILE"
        },
        {
          "names": [
            "-b",
            "--bam"
          ],
          "argument": "FILE",
          "description": "the reads aligned to the genome assembly are in bam FILE"
        },
        {
          "names": [
            "-g",
            "--genome"
          ],
          "argument": "FILE",
          "description": "the genome we are calling methylation for is in fasta FILE"
        },
        {
          "names": [
            "-q",
            "--methylation"
          ],
          "argument": "STRING",
          "description": "the type of methylation (cpg,gpc,dam,dcm)"
        },
        {
          "names": [
            "-t",
            "--threads"
          ],
          "argument": "NUM",
          "description": "use NUM threads (default: 1)"
        },
        {
          "names": [
            "--watch"
          ],
          "argument": "DIR",
          "description": "watch the sequencing run directory DIR and call methylation as data is generated"
        },
        {
          "names": [
            "--watch-write-bam"
          ],
          "argument": "",
          "description": "in watch mode, write the alignments for each fastq"
        },
        {
          "names": [
            "-c",
            "--watch-process-total"
          ],
          "argument": "TOTAL",
          "description": "in watch mode, there are TOTAL calling processes running against this directory"
        },
        {
          "names": [
            "-i",
            "--watch-process-index"
          ],
          "argument": "IDX",
          "description": "in watch mode, the index of this process is IDX   the previous two options allow you to run multiple independent methylation calling processes against a single directory. Each process will only call files when X mod TOTAL == IDX, where X is the suffix of the fast5 file."
        },
        {
          "names": [
            "--progress"
          ],
          "argument": "",
          "description": "print out a progress message"
        },
        {
          "names": [
            "-K",
            "--batchsize"
          ],
          "argument": "NUM",
          "description": "the batch size (default: 512)"
        }
      ]
    },
    {
      "name": "eventalign",
      "description": "Align nanopore events to reference k-mers",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "--sam"
          ],
          "argument": "",
          "description": "write output in SAM format"
        },
        {
          "names": [
            "-w",
            "--window"
          ],
          "argument": "STR",
          "description": "compute the consensus for window STR (format: ctg:start_id-end_id)"
        },
        {
          "names": [
            "-r",
            "--reads"
          ],
          "argument": "FILE",
          "description": "the 2D ONT reads are in fasta FILE"
        },
        {
          "names": [
            "-b",
            "--bam"
          ],
          "argument": "FILE",
          "description": "the reads aligned to the genome assembly are in bam FILE"
        },
        {
          "names": [
            "-g",
            "--genome"
          ],
          "argument": "FILE",
          "description": "the genome we are computing a consensus for is in FILE"
        },
        {
          "names": [
            "-t",
            "--threads"
          ],
          "argument": "NUM",
          "description": "use NUM threads (default: 1)"
        },
        {
          "names": [
            "-q",
            "--min-mapping-quality"
          ],
          "argument": "NUM",
          "description": "only use reads with mapping quality at least NUM (default: 0)"
        },
        {
          "names": [
            "--scale-events"
          ],
          "argument": "",
          "description": "scale events to the model, rather than vice-versa"
        },
        {
          "names": [
            "--progress"
          ],
          "argument": "",
          "description": "print out a progress message"
        },
        {
          "names": [
            "-n",
            "--print-read-names"
          ],
          "argument": "",
          "description": "print read names instead of indexes"
        },
        {
          "names": [
            "--summary"
          ],
          "argument": "FILE",
          "description": "summarize the alignment of each read/strand in FILE"
        },
        {
          "names": [
            "--samples"
          ],
          "argument": "",
          "description": "write the raw samples for the event to the tsv output"
        },
        {
          "names": [
            "--signal-index"
          ],
          "argument": "",
          "description": "write the raw signal start and end index values for the event to the tsv output"
        },
        {
          "names": [
            "--models-fofn"
          ],
          "argument": "FILE",
          "description": "read alternative k-mer models from FILE"
        }
      ]
    },
    {
      "name": "extract",
      "description": "Extract reads in fasta format",
      "options": [
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "-r",
            "--recurse"
          ],
          "argument": "",
          "description": "recurse into subdirectories"
        },
        {
          "names": [
            "-q",
            "--fastq"
          ],
          "argument": "",
          "description": "extract fastq (default: fasta)"
        },
        {
          "names": [
            "-t",
            "--type"
          ],
          "argument": "TYPE",
          "description": "read type: template, complement, 2d, 2d-or-template, any"
        },
        {
          "names": [
            "-b",
            "--basecaller"
          ],
          "argument": "NAME[:VERSION]",
          "description": "consider only data produced by basecaller NAME,"
        },
        {
          "names": [
            "-o",
            "--output"
          ],
          "argument": "FILE",
          "description": "write output to FILE"
        }
      ]
    },
    {
      "name": "getmodel",
      "description": "Write the pore models for the given read to stdout",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        }
      ]
    },
    {
      "name": "index",
      "description": "Build an index mapping from basecalled reads to the signals measured by the sequencer",
      "options": [
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "-d",
            "--directory"
          ],
          "argument": "",
          "description": "path to the directory containing the raw ONT signal files. This option can be given multiple times."
        },
        {
          "names": [
            "-s",
            "--sequencing-summary"
          ],
          "argument": "",
          "description": "the sequencing summary file from albacore, providing this option will make indexing much faster"
        },
        {
          "names": [
            "-f",
            "--summary-fofn"
          ],
          "argument": "",
          "description": "file containing the paths to the sequencing summary files (one per line)"
        }
      ]
    },
    {
      "name": "methyltrain",
      "description": "Train a methylation model",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "-m",
            "--models-fofn"
          ],
          "argument": "FILE",
          "description": "read the models to be trained from the FOFN"
        },
        {
          "names": [
            "--train-kmers"
          ],
          "argument": "STR",
          "description": "train methylated, unmethylated or all kmers"
        },
        {
          "names": [
            "-c",
            "--calibrate"
          ],
          "argument": "",
          "description": "recalibrate aligned reads to model before training"
        },
        {
          "names": [
            "--no-update-models"
          ],
          "argument": "",
          "description": "do not write out trained models"
        },
        {
          "names": [
            "--output-scores"
          ],
          "argument": "",
          "description": "optionally output read scores during training"
        },
        {
          "names": [
            "-r",
            "--reads"
          ],
          "argument": "FILE",
          "description": "the ONT reads are in fasta FILE"
        },
        {
          "names": [
            "-b",
            "--bam"
          ],
          "argument": "FILE",
          "description": "the reads aligned to the genome assembly are in bam FILE"
        },
        {
          "names": [
            "-g",
            "--genome"
          ],
          "argument": "FILE",
          "description": "the reference genome is in FILE"
        },
        {
          "names": [
            "-t",
            "--threads"
          ],
          "argument": "NUM",
          "description": "use NUM threads (default: 1)"
        },
        {
          "names": [
            "--filter-policy"
          ],
          "argument": "STR",
          "description": "filter reads for [R7] or [R9] project"
        },
        {
          "names": [
            "-s",
            "--out-suffix"
          ],
          "argument": "STR",
          "description": "name output files like <strand>.out_suffix"
        },
        {
          "names": [
            "--out-fofn"
          ],
          "argument": "FILE",
          "description": "write the names of the output models into FILE"
        },
        {
          "names": [
            "--rounds"
          ],
          "argument": "NUM",
          "description": "number of training rounds to perform"
        },
        {
          "names": [
            "--max-reads"
          ],
          "argument": "NUM",
          "description": "stop after processing NUM reads in each round"
        },
        {
          "names": [
            "--progress"
          ],
          "argument": "",
          "description": "print out a progress message"
        },
        {
          "names": [
            "--stdv"
          ],
          "argument": "",
          "description": "enable stdv modelling"
        },
        {
          "names": [
            "--max-events"
          ],
          "argument": "NUM",
          "description": "use NUM events for training (default: 1000)"
        }
      ]
    },
    {
      "name": "phase-reads",
      "description": "Output a BAM file where each record shows the combination of alleles from variants.vcf that each read supports.",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "-r",
            "--reads"
          ],
          "argument": "FILE",
          "description": "the ONT reads are in fasta FILE"
        },
        {
          "names": [
            "-b",
            "--bam"
          ],
          "argument": "FILE",
          "description": "the reads aligned to the genome assembly are in bam FILE"
        },
        {
          "names": [
            "-g",
            "--genome"
          ],
          "argument": "FILE",
          "description": "the reference genome is in FILE"
        },
        {
          "names": [
            "-w",
            "--window"
          ],
          "argument": "STR",
          "description": "only phase reads in the window STR (format: ctg:start-end)"
        },
        {
          "names": [
            "-t",
            "--threads"
          ],
          "argument": "NUM",
          "description": "use NUM threads (default: 1)"
        },
        {
          "names": [
            "--progress"
          ],
          "argument": "",
          "description": "print out a progress message"
        }
      ]
    },
    {
      "name": "polya",
      "description": "Estimate the length of the poly-A tail on direct RNA reads",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "-w",
            "--window"
          ],
          "argument": "STR",
          "description": "only compute the poly-A lengths for reads in window STR (format: ctg:start_id-end_id)"
        },
        {
          "names": [
            "-r",
            "--reads"
          ],
          "argument": "FILE",
          "description": "the 1D ONT direct RNA reads are in fasta FILE"
        },
        {
          "names": [
            "-b",
            "--bam"
          ],
          "argument": "FILE",
          "description": "the reads aligned to the genome assembly are in bam FILE"
        },
        {
          "names": [
            "-g",
            "--genome"
          ],
          "argument": "FILE",
          "description": "the reference genome assembly for the reads is in FILE"
        },
        {
          "names": [
            "-t",
            "--threads"
          ],
          "argument": "NUM",
          "description": "use NUM threads (default: 1)"
        }
      ]
    },
    {
      "name": "scorereads",
      "description": "Score reads against an alignment, model",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "-m",
            "--models-fofn"
          ],
          "argument": "FILE",
          "description": "optionally use these models rather than models in fast5"
        },
        {
          "names": [
            "-c",
            "--calibrate"
          ],
          "argument": "",
          "description": "recalibrate aligned reads to model before scoring"
        },
        {
          "names": [
            "-z",
            "--zero-drift"
          ],
          "argument": "",
          "description": "if recalibrating, keep drift at 0"
        },
        {
          "names": [
            "-i",
            "--individual-reads"
          ],
          "argument": "READ,READ",
          "description": "optional comma-delimited list of readnames to score"
        },
        {
          "names": [
            "-r",
            "--reads"
          ],
          "argument": "FILE",
          "description": "the ONT reads are in fasta FILE"
        },
        {
          "names": [
            "-b",
            "--bam"
          ],
          "argument": "FILE",
          "description": "the reads aligned to the genome assembly are in bam FILE"
        },
        {
          "names": [
            "-g",
            "--genome"
          ],
          "argument": "FILE",
          "description": "the genome we are computing a consensus for is in FILE"
        },
        {
          "names": [
            "-w",
            "--window"
          ],
          "argument": "STR",
          "description": "score reads in the window STR (format: ctg:start-end)"
        },
        {
          "names": [
            "-t",
            "--threads"
          ],
          "argument": "NUM",
          "description": "use NUM threads (default: 1)"
        },
        {
          "names": [
            "--train-transitions"
          ],
          "argument": "",
          "description": "train new transition parameters from the input reads"
        }
      ]
    },
    {
      "name": "variants",
      "description": "Find SNPs using a signal-level HMM",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "--snps"
          ],
          "argument": "",
          "description": "only call SNPs"
        },
        {
          "names": [
            "--consensus"
          ],
          "argument": "",
          "description": "run in consensus calling mode"
        },
        {
          "names": [
            "--fix-homopolymers"
          ],
          "argument": "",
          "description": "run the experimental homopolymer caller"
        },
        {
          "names": [
            "--faster"
          ],
          "argument": "",
          "description": "minimize compute time while slightly reducing consensus accuracy"
        },
        {
          "names": [
            "-w",
            "--window"
          ],
          "argument": "STR",
          "description": "find variants in window STR (format: <chromsome_name>:<start>-<end>)"
        },
        {
          "names": [
            "-r",
            "--reads"
          ],
          "argument": "FILE",
          "description": "the ONT reads are in fasta FILE"
        },
        {
          "names": [
            "-b",
            "--bam"
          ],
          "argument": "FILE",
          "description": "the reads aligned to the reference genome are in bam FILE"
        },
        {
          "names": [
            "-e",
            "--event-bam"
          ],
          "argument": "FILE",
          "description": "the events aligned to the reference genome are in bam FILE"
        },
        {
          "names": [
            "-g",
            "--genome"
          ],
          "argument": "FILE",
          "description": "the reference genome is in FILE"
        },
        {
          "names": [
            "-p",
            "--ploidy"
          ],
          "argument": "NUM",
          "description": "the ploidy level of the sequenced genome"
        },
        {
          "names": [
            "-q",
            "--methylation-aware"
          ],
          "argument": "STR",
          "description": "turn on methylation aware polishing and test motifs given in STR (example: -q dcm,dam)"
        },
        {
          "names": [
            "--genotype"
          ],
          "argument": "FILE",
          "description": "call genotypes for the variants in the vcf FILE"
        },
        {
          "names": [
            "-o",
            "--outfile"
          ],
          "argument": "FILE",
          "description": "write result to FILE [default: stdout]"
        },
        {
          "names": [
            "-t",
            "--threads"
          ],
          "argument": "NUM",
          "description": "use NUM threads (default: 1)"
        },
        {
          "names": [
            "-m",
            "--min-candidate-frequency"
          ],
          "argument": "F",
          "description": "extract candidate variants from the aligned reads when the variant frequency is at least F (default 0.2)"
        },
        {
          "names": [
            "-i",
            "--indel-bias"
          ],
          "argument": "F",
          "description": "bias HMM transition parameters to favor insertions (F<1) or deletions (F>1).   this value is automatically set depending on --consensus, but can be manually set if spurious indels are called"
        },
        {
          "names": [
            "-d",
            "--min-candidate-depth"
          ],
          "argument": "D",
          "description": "extract candidate variants from the aligned reads when the depth is at least D (default: 20)"
        },
        {
          "names": [
            "-x",
            "--max-haplotypes"
          ],
          "argument": "N",
          "description": "consider at most N haplotype combinations (default: 1000)"
        },
        {
          "names": [
            "--min-flanking-sequence"
          ],
          "argument": "N",
          "description": "distance from alignment end to calculate variants (default: 30)"
        },
        {
          "names": [
            "--max-rounds"
          ],
          "argument": "N",
          "description": "perform N rounds of consensus sequence improvement (default: 50)"
        },
        {
          "names": [
            "-c",
            "--candidates"
          ],
          "argument": "VCF",
          "description": "read variant candidates from VCF, rather than discovering them from aligned reads"
        },
        {
          "names": [
            "--read-group"
          ],
          "argument": "RG",
          "description": "only use alignments with read group tag RG"
        },
        {
          "names": [
            "--calculate-all-support"
          ],
          "argument": "",
          "description": "when making a call, also calculate the support of the 3 other possible bases"
        },
        {
          "names": [
            "--models-fofn"
          ],
          "argument": "FILE",
          "description": "read alternative k-mer models from FILE"
        }
      ]
    },
    {
      "name": "vcf2fasta",
      "description": "Write a new genome sequence by introducing variants from the input files",
      "options": [
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "display verbose output"
        },
        {
          "names": [
            "--version"
          ],
          "argument": "",
          "description": "display version"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "display this help and exit"
        },
        {
          "names": [
            "-g",
            "--genome"
          ],
          "argument": "FILE",
          "description": "the input genome is in FILE"
        },
        {
          "names": [
            "-f",
            "--fofn"
          ],
          "argument": "FILE",
          "description": "read the list of VCF files to use from FILE"
        },
        {
          "names": [
            "--skip-checks"
          ],
          "argument": "",
          "description": "skip the sanity checks"
        }
      ]
    }
  ]
}
