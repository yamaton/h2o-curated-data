{
  "name": "nextflow",
  "description": "A DSL for data-driven computational pipelines",
  "options": [
    {
      "names": [
        "-C"
      ],
      "argument": "",
      "description": "Use the specified configuration file(s) overriding any defaults"
    },
    {
      "names": [
        "-D"
      ],
      "argument": "",
      "description": "Set JVM properties"
    },
    {
      "names": [
        "-bg"
      ],
      "argument": "",
      "description": "Execute nextflow in background"
    },
    {
      "names": [
        "-c",
        "-config"
      ],
      "argument": "",
      "description": "Add the specified file to configuration set"
    },
    {
      "names": [
        "-d",
        "-dockerize"
      ],
      "argument": "",
      "description": "Launch nextflow via Docker (experimental)"
    },
    {
      "names": [
        "-h"
      ],
      "argument": "",
      "description": "Print this help"
    },
    {
      "names": [
        "-log"
      ],
      "argument": "",
      "description": "Set nextflow log file path"
    },
    {
      "names": [
        "-q",
        "-quiet"
      ],
      "argument": "",
      "description": "Do not print information messages"
    },
    {
      "names": [
        "-syslog"
      ],
      "argument": "",
      "description": "Send logs to syslog server (eg. localhost:514)"
    },
    {
      "names": [
        "-v",
        "-version"
      ],
      "argument": "",
      "description": "Print the program version"
    }
  ],
  "subcommands": [
    {
      "name": "clean",
      "description": "Clean up project cache and work directories",
      "options": [
        {
          "names": [
            "-after"
          ],
          "argument": "",
          "description": "Clean up runs executed after the specified one"
        },
        {
          "names": [
            "-before"
          ],
          "argument": "",
          "description": "Clean up runs executed before the specified one"
        },
        {
          "names": [
            "-but"
          ],
          "argument": "",
          "description": "Clean up all runs except the specified one"
        },
        {
          "names": [
            "-n",
            "-dry-run"
          ],
          "argument": "",
          "description": "Print names of file to be removed without deleting them Default: false"
        },
        {
          "names": [
            "-f",
            "-force"
          ],
          "argument": "",
          "description": "Force clean command Default: false"
        },
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-k",
            "-keep-logs"
          ],
          "argument": "",
          "description": "Removes only temporary files but retains execution log entries and metadata Default: false"
        },
        {
          "names": [
            "-q",
            "-quiet"
          ],
          "argument": "",
          "description": "Do not print names of files removed Default: false"
        }
      ]
    },
    {
      "name": "clone",
      "description": "Clone a project into a folder",
      "options": [
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-hub"
          ],
          "argument": "",
          "description": "Service hub where the project is hosted"
        },
        {
          "names": [
            "-r"
          ],
          "argument": "",
          "description": "Revision to clone - It can be a git branch, tag or revision number"
        },
        {
          "names": [
            "-user"
          ],
          "argument": "",
          "description": "Private repository user name"
        }
      ]
    },
    {
      "name": "config",
      "description": "Print a project configuration",
      "options": [
        {
          "names": [
            "-flat"
          ],
          "argument": "",
          "description": "Print config using flat notation Default: false"
        },
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-profile"
          ],
          "argument": "",
          "description": "Choose a configuration profile"
        },
        {
          "names": [
            "-properties"
          ],
          "argument": "",
          "description": "Prints config using Java properties notation Default: false"
        },
        {
          "names": [
            "-a",
            "-show-profiles"
          ],
          "argument": "",
          "description": "Show all configuration profiles Default: false"
        },
        {
          "names": [
            "-sort"
          ],
          "argument": "",
          "description": "Sort config attributes Default: false"
        }
      ]
    },
    {
      "name": "console",
      "description": "Launch Nextflow interactive console",
      "options": [
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        }
      ]
    },
    {
      "name": "drop",
      "description": "Delete the local copy of a project",
      "options": [
        {
          "names": [
            "-f"
          ],
          "argument": "",
          "description": "Delete the repository without taking care of local changes Default: false"
        },
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        }
      ]
    },
    {
      "name": "help",
      "description": "Print the usage help for a command",
      "options": [
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        }
      ]
    },
    {
      "name": "info",
      "description": "Print project and system runtime information",
      "options": [
        {
          "names": [
            "-u",
            "-check-updates"
          ],
          "argument": "",
          "description": "Check for remote updates Default: false"
        },
        {
          "names": [
            "-d"
          ],
          "argument": "",
          "description": "Show detailed information Default: false"
        },
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-o"
          ],
          "argument": "",
          "description": "Output format, either: text (default), json, yaml"
        }
      ]
    },
    {
      "name": "kuberun",
      "description": "Execute a workflow in a Kubernetes cluster (experimental)",
      "options": [
        {
          "names": [
            "-E"
          ],
          "argument": "",
          "description": "Exports all current system environment Default: false"
        },
        {
          "names": [
            "-ansi-log"
          ],
          "argument": "",
          "description": "Enable/disable ANSI console logging"
        },
        {
          "names": [
            "-bucket-dir"
          ],
          "argument": "",
          "description": "Remote bucket where intermediate result files are stored"
        },
        {
          "names": [
            "-cache"
          ],
          "argument": "",
          "description": "Enable/disable processes caching"
        },
        {
          "names": [
            "-dsl2"
          ],
          "argument": "",
          "description": "Execute the workflow using DSL2 syntax Default: false"
        },
        {
          "names": [
            "-dump-channels"
          ],
          "argument": "",
          "description": "Dump channels for debugging purpose"
        },
        {
          "names": [
            "-dump-hashes"
          ],
          "argument": "",
          "description": "Dump task hash keys for debugging purpose Default: false"
        },
        {
          "names": [
            "-e."
          ],
          "argument": "",
          "description": "Add the specified variable to execution environment Syntax: -e.key=value Default: {}"
        },
        {
          "names": [
            "-entry"
          ],
          "argument": "",
          "description": "Entry workflow name to be executed"
        },
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-hub"
          ],
          "argument": "",
          "description": "Service hub where the project is hosted"
        },
        {
          "names": [
            "-latest"
          ],
          "argument": "",
          "description": "Pull latest changes before run Default: false"
        },
        {
          "names": [
            "-lib"
          ],
          "argument": "",
          "description": "Library extension path"
        },
        {
          "names": [
            "-main-script"
          ],
          "argument": "",
          "description": "The script file to be executed when launching a project directory or repository"
        },
        {
          "names": [
            "-name"
          ],
          "argument": "",
          "description": "Assign a mnemonic name to the a pipeline run"
        },
        {
          "names": [
            "-n",
            "-namespace"
          ],
          "argument": "",
          "description": "Specify the K8s namespace to use"
        },
        {
          "names": [
            "-offline"
          ],
          "argument": "",
          "description": "Do not check for remote project updates Default: false"
        },
        {
          "names": [
            "-params-file"
          ],
          "argument": "",
          "description": "Load script parameters from a JSON/YAML file"
        },
        {
          "names": [
            "-plugins"
          ],
          "argument": "",
          "description": "Specify the plugins to be applied for this run e.g. nf-amazon,nf-tower"
        },
        {
          "names": [
            "-pod-image"
          ],
          "argument": "",
          "description": "Specify the container image for the Nextflow pod"
        },
        {
          "names": [
            "-process."
          ],
          "argument": "",
          "description": "Set process options Syntax: -process.key=value Default: {}"
        },
        {
          "names": [
            "-profile"
          ],
          "argument": "",
          "description": "Choose a configuration profile"
        },
        {
          "names": [
            "-qs",
            "-queue-size"
          ],
          "argument": "",
          "description": "Max number of processes that can be executed in parallel by each executor"
        },
        {
          "names": [
            "-resume"
          ],
          "argument": "",
          "description": "Execute the script using the cached results, useful to continue executions that was stopped by an error"
        },
        {
          "names": [
            "-r",
            "-revision"
          ],
          "argument": "",
          "description": "Revision of the project to run (either a git branch, tag or commit SHA number)"
        },
        {
          "names": [
            "-stub-run",
            "-stub"
          ],
          "argument": "",
          "description": "Execute the workflow replacing process scripts with command stubs Default: false"
        },
        {
          "names": [
            "-test"
          ],
          "argument": "",
          "description": "Test a script function with the name specified"
        },
        {
          "names": [
            "-user"
          ],
          "argument": "",
          "description": "Private repository user name"
        },
        {
          "names": [
            "-v",
            "-volume-mount"
          ],
          "argument": "",
          "description": "Volume claim mounts eg. my-pvc:/mnt/path"
        },
        {
          "names": [
            "-with-charliecloud"
          ],
          "argument": "",
          "description": "Enable process execution in a Charliecloud container runtime"
        },
        {
          "names": [
            "-with-conda"
          ],
          "argument": "",
          "description": "Use the specified Conda environment package or file (must end with .yml|.yaml suffix)"
        },
        {
          "names": [
            "-with-dag"
          ],
          "argument": "",
          "description": "Create pipeline DAG file"
        },
        {
          "names": [
            "-with-docker"
          ],
          "argument": "",
          "description": "Enable process execution in a Docker container"
        },
        {
          "names": [
            "-N",
            "-with-notification"
          ],
          "argument": "",
          "description": "Send a notification email on workflow completion to the specified recipients"
        },
        {
          "names": [
            "-with-podman"
          ],
          "argument": "",
          "description": "Enable process execution in a Podman container"
        },
        {
          "names": [
            "-with-report"
          ],
          "argument": "",
          "description": "Create processes execution html report"
        },
        {
          "names": [
            "-with-singularity"
          ],
          "argument": "",
          "description": "Enable process execution in a Singularity container"
        },
        {
          "names": [
            "-with-timeline"
          ],
          "argument": "",
          "description": "Create processes execution timeline file"
        },
        {
          "names": [
            "-with-tower"
          ],
          "argument": "",
          "description": "Monitor workflow execution with Seqera Tower service"
        },
        {
          "names": [
            "-with-trace"
          ],
          "argument": "",
          "description": "Create processes execution tracing file"
        },
        {
          "names": [
            "-with-weblog"
          ],
          "argument": "",
          "description": "Send workflow status messages via HTTP to target URL"
        },
        {
          "names": [
            "-without-docker"
          ],
          "argument": "",
          "description": "Disable process execution with Docker Default: false"
        },
        {
          "names": [
            "-without-podman"
          ],
          "argument": "",
          "description": "Disable process execution in a Podman container"
        },
        {
          "names": [
            "-w",
            "-work-dir"
          ],
          "argument": "",
          "description": "Directory where intermediate result files are stored"
        }
      ]
    },
    {
      "name": "list",
      "description": "List all downloaded projects",
      "options": [
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        }
      ]
    },
    {
      "name": "log",
      "description": "Print executions log and runtime info",
      "options": [
        {
          "names": [
            "-after"
          ],
          "argument": "",
          "description": "Show log entries for runs executed after the specified one"
        },
        {
          "names": [
            "-before"
          ],
          "argument": "",
          "description": "Show log entries for runs executed before the specified one"
        },
        {
          "names": [
            "-but"
          ],
          "argument": "",
          "description": "Show log entries of all runs except the specified one"
        },
        {
          "names": [
            "-f",
            "-fields"
          ],
          "argument": "",
          "description": "Comma separated list of fields to include in the printed log -- Use the `-l` option to show the list of available fields"
        },
        {
          "names": [
            "-F",
            "-filter"
          ],
          "argument": "",
          "description": "Filter log entries by a custom expression e.g. process =~ /foo.*/ && status == 'COMPLETED'"
        },
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-l",
            "-list-fields"
          ],
          "argument": "",
          "description": "Show all available fields Default: false"
        },
        {
          "names": [
            "-q",
            "-quiet"
          ],
          "argument": "",
          "description": "Show only run names Default: false"
        },
        {
          "names": [
            "-s"
          ],
          "argument": "",
          "description": "Character used to separate column values Default:"
        },
        {
          "names": [
            "-t",
            "-template"
          ],
          "argument": "",
          "description": "Text template used to each record in the log"
        }
      ]
    },
    {
      "name": "pull",
      "description": "Download or update a project",
      "options": [
        {
          "names": [
            "-all"
          ],
          "argument": "",
          "description": "Update all downloaded projects Default: false"
        },
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-hub"
          ],
          "argument": "",
          "description": "Service hub where the project is hosted"
        },
        {
          "names": [
            "-r",
            "-revision"
          ],
          "argument": "",
          "description": "Revision of the project to run (either a git branch, tag or commit SHA number)"
        },
        {
          "names": [
            "-user"
          ],
          "argument": "",
          "description": "Private repository user name"
        }
      ]
    },
    {
      "name": "run",
      "description": "Execute a pipeline project",
      "options": [
        {
          "names": [
            "-E"
          ],
          "argument": "",
          "description": "Exports all current system environment Default: false"
        },
        {
          "names": [
            "-ansi-log"
          ],
          "argument": "",
          "description": "Enable/disable ANSI console logging"
        },
        {
          "names": [
            "-bucket-dir"
          ],
          "argument": "",
          "description": "Remote bucket where intermediate result files are stored"
        },
        {
          "names": [
            "-cache"
          ],
          "argument": "",
          "description": "Enable/disable processes caching"
        },
        {
          "names": [
            "-dsl2"
          ],
          "argument": "",
          "description": "Execute the workflow using DSL2 syntax Default: false"
        },
        {
          "names": [
            "-dump-channels"
          ],
          "argument": "",
          "description": "Dump channels for debugging purpose"
        },
        {
          "names": [
            "-dump-hashes"
          ],
          "argument": "",
          "description": "Dump task hash keys for debugging purpose Default: false"
        },
        {
          "names": [
            "-e."
          ],
          "argument": "",
          "description": "Add the specified variable to execution environment Syntax: -e.key=value Default: {}"
        },
        {
          "names": [
            "-entry"
          ],
          "argument": "",
          "description": "Entry workflow name to be executed"
        },
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-hub"
          ],
          "argument": "",
          "description": "Service hub where the project is hosted"
        },
        {
          "names": [
            "-latest"
          ],
          "argument": "",
          "description": "Pull latest changes before run Default: false"
        },
        {
          "names": [
            "-lib"
          ],
          "argument": "",
          "description": "Library extension path"
        },
        {
          "names": [
            "-main-script"
          ],
          "argument": "",
          "description": "The script file to be executed when launching a project directory or repository"
        },
        {
          "names": [
            "-name"
          ],
          "argument": "",
          "description": "Assign a mnemonic name to the a pipeline run"
        },
        {
          "names": [
            "-offline"
          ],
          "argument": "",
          "description": "Do not check for remote project updates Default: false"
        },
        {
          "names": [
            "-params-file"
          ],
          "argument": "",
          "description": "Load script parameters from a JSON/YAML file"
        },
        {
          "names": [
            "-plugins"
          ],
          "argument": "",
          "description": "Specify the plugins to be applied for this run e.g. nf-amazon,nf-tower"
        },
        {
          "names": [
            "-process."
          ],
          "argument": "",
          "description": "Set process options Syntax: -process.key=value Default: {}"
        },
        {
          "names": [
            "-profile"
          ],
          "argument": "",
          "description": "Choose a configuration profile"
        },
        {
          "names": [
            "-qs",
            "-queue-size"
          ],
          "argument": "",
          "description": "Max number of processes that can be executed in parallel by each executor"
        },
        {
          "names": [
            "-resume"
          ],
          "argument": "",
          "description": "Execute the script using the cached results, useful to continue executions that was stopped by an error"
        },
        {
          "names": [
            "-r",
            "-revision"
          ],
          "argument": "",
          "description": "Revision of the project to run (either a git branch, tag or commit SHA number)"
        },
        {
          "names": [
            "-stub-run",
            "-stub"
          ],
          "argument": "",
          "description": "Execute the workflow replacing process scripts with command stubs Default: false"
        },
        {
          "names": [
            "-test"
          ],
          "argument": "",
          "description": "Test a script function with the name specified"
        },
        {
          "names": [
            "-user"
          ],
          "argument": "",
          "description": "Private repository user name"
        },
        {
          "names": [
            "-with-charliecloud"
          ],
          "argument": "",
          "description": "Enable process execution in a Charliecloud container runtime"
        },
        {
          "names": [
            "-with-conda"
          ],
          "argument": "",
          "description": "Use the specified Conda environment package or file (must end with .yml|.yaml suffix)"
        },
        {
          "names": [
            "-with-dag"
          ],
          "argument": "",
          "description": "Create pipeline DAG file"
        },
        {
          "names": [
            "-with-docker"
          ],
          "argument": "",
          "description": "Enable process execution in a Docker container"
        },
        {
          "names": [
            "-N",
            "-with-notification"
          ],
          "argument": "",
          "description": "Send a notification email on workflow completion to the specified recipients"
        },
        {
          "names": [
            "-with-podman"
          ],
          "argument": "",
          "description": "Enable process execution in a Podman container"
        },
        {
          "names": [
            "-with-report"
          ],
          "argument": "",
          "description": "Create processes execution html report"
        },
        {
          "names": [
            "-with-singularity"
          ],
          "argument": "",
          "description": "Enable process execution in a Singularity container"
        },
        {
          "names": [
            "-with-timeline"
          ],
          "argument": "",
          "description": "Create processes execution timeline file"
        },
        {
          "names": [
            "-with-tower"
          ],
          "argument": "",
          "description": "Monitor workflow execution with Seqera Tower service"
        },
        {
          "names": [
            "-with-trace"
          ],
          "argument": "",
          "description": "Create processes execution tracing file"
        },
        {
          "names": [
            "-with-weblog"
          ],
          "argument": "",
          "description": "Send workflow status messages via HTTP to target URL"
        },
        {
          "names": [
            "-without-docker"
          ],
          "argument": "",
          "description": "Disable process execution with Docker Default: false"
        },
        {
          "names": [
            "-without-podman"
          ],
          "argument": "",
          "description": "Disable process execution in a Podman container"
        },
        {
          "names": [
            "-w",
            "-work-dir"
          ],
          "argument": "",
          "description": "Directory where intermediate result files are stored"
        }
      ]
    },
    {
      "name": "self-update",
      "description": "Update nextflow runtime to the latest available version",
      "options": [
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        }
      ]
    },
    {
      "name": "view",
      "description": "View project script file(s)",
      "options": [
        {
          "names": [
            "-h",
            "-help"
          ],
          "argument": "",
          "description": "Print the command usage Default: false"
        },
        {
          "names": [
            "-l"
          ],
          "argument": "",
          "description": "List repository content Default: false"
        },
        {
          "names": [
            "-q"
          ],
          "argument": "",
          "description": "Hide header line Default: false"
        }
      ]
    }
  ]
}
