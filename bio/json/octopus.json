{
  "name": "octopus",
  "description": "octopus",
  "options": [
    {
      "names": [
        "-h"
      ],
      "argument": "[ --help ]",
      "description": "Report detailed option information"
    },
    {
      "names": [
        "--version"
      ],
      "argument": "",
      "description": "Report detailed version information"
    },
    {
      "names": [
        "--config"
      ],
      "argument": "arg",
      "description": "Config file to populate command line options"
    },
    {
      "names": [
        "--debug"
      ],
      "argument": "[=arg(=\"octopus_debug.log\")]",
      "description": "Create log file for debugging"
    },
    {
      "names": [
        "--trace"
      ],
      "argument": "[=arg(=\"octopus_trace.log\")]",
      "description": "Create very verbose log file for debugging"
    },
    {
      "names": [
        "-w"
      ],
      "argument": "[ --working-directory ] arg",
      "description": "Sets the working directory"
    },
    {
      "names": [
        "--resolve-symlinks"
      ],
      "argument": "",
      "description": "Replace all symlinks to their resolved targets"
    },
    {
      "names": [
        "--threads"
      ],
      "argument": "[=arg(=0)]",
      "description": "Maximum number of threads to be used. If no argument is provided unlimited threads are assumed"
    },
    {
      "names": [
        "-X"
      ],
      "argument": "[ --max-reference-cache-memory ] arg (=500MB)",
      "description": "Maximum memory for cached reference sequence"
    },
    {
      "names": [
        "-B"
      ],
      "argument": "[ --target-read-buffer-memory ] arg (=6GB)",
      "description": "None-binding request to limit the memory of buffered read data"
    },
    {
      "names": [
        "--target-working-memory"
      ],
      "argument": "arg",
      "description": "Target working memory per thread for computation, not including read or reference data"
    },
    {
      "names": [
        "--max-open-read-files"
      ],
      "argument": "arg (=250)",
      "description": "Limits the number of read files that are open simultaneously"
    },
    {
      "names": [
        "--temp-directory-prefix"
      ],
      "argument": "arg (=\"octopus-temp\")",
      "description": "File name prefix of temporary directory for calling"
    },
    {
      "names": [
        "-R"
      ],
      "argument": "[ --reference ] arg",
      "description": "Indexed FASTA format reference genome file to be analysed"
    },
    {
      "names": [
        "-I"
      ],
      "argument": "[ --reads ] arg",
      "description": "Indexed BAM/CRAM files to be analysed"
    },
    {
      "names": [
        "-i"
      ],
      "argument": "[ --reads-file ] arg",
      "description": "Files containing lists of BAM/CRAM files, one per line, to be analysed"
    },
    {
      "names": [
        "-T"
      ],
      "argument": "[ --regions ] arg",
      "description": "Space-separated list of regions (chrom:begin-end) to be analysed"
    },
    {
      "names": [
        "-t"
      ],
      "argument": "[ --regions-file ] arg",
      "description": "File containing a list of regions (chrom:begin-end), one per line, to be analysed"
    },
    {
      "names": [
        "-K"
      ],
      "argument": "[ --skip-regions ] arg",
      "description": "Space-separated list of regions (chrom:begin-end) to skip"
    },
    {
      "names": [
        "-k"
      ],
      "argument": "[ --skip-regions-file ] arg",
      "description": "File of regions (chrom:begin-end), one per line, to skip"
    },
    {
      "names": [
        "--one-based-indexing"
      ],
      "argument": "",
      "description": "Assume one-based indexing rather than zero-based for input region options"
    },
    {
      "names": [
        "-S"
      ],
      "argument": "[ --samples ] arg",
      "description": "Sub-set of sample names present in input read files to analyse"
    },
    {
      "names": [
        "-s"
      ],
      "argument": "[ --samples-file ] arg",
      "description": "File of sample names to analyse, one per line"
    },
    {
      "names": [
        "--ignore-unmapped-contigs"
      ],
      "argument": "",
      "description": "Ignore any contigs that are not mapped in the read files"
    },
    {
      "names": [
        "--pedigree"
      ],
      "argument": "arg",
      "description": "PED file containing sample pedigree"
    },
    {
      "names": [
        "-o"
      ],
      "argument": "[ --output ] arg",
      "description": "File to where output is written (calls are written to stdout if unspecified)"
    },
    {
      "names": [
        "--contig-output-order"
      ],
      "argument": "arg (=REFERENCE_INDEX)",
      "description": "The order that contigs should be written to the output [LEXICOGRAPHICAL_ASCENDING, LEXICOGRAPHICAL_DESCENDING, CONTIG_SIZE_ASCENDING, CONTIG_SIZE_DESCENDING, REFERENCE_INDEX, REFERENCE_INDEX_REVERS ED]"
    },
    {
      "names": [
        "--sites-only"
      ],
      "argument": "",
      "description": "Only reports call sites (i.e. drop sample genotype information)"
    },
    {
      "names": [
        "--bamout"
      ],
      "argument": "arg",
      "description": "Output realigned BAM files"
    },
    {
      "names": [
        "--bamout-type"
      ],
      "argument": "arg (=MINI)",
      "description": "Type of realigned evidence BAM to output [MINI, FULL]"
    },
    {
      "names": [
        "--data-profile"
      ],
      "argument": "arg",
      "description": "Output a profile of variation and errors found in the data"
    },
    {
      "names": [
        "--fast"
      ],
      "argument": "",
      "description": "Turns off some features to improve runtime, at the cost of worse calling accuracy and phasing"
    },
    {
      "names": [
        "--very-fast"
      ],
      "argument": "",
      "description": "Like --fast but even faster"
    },
    {
      "names": [
        "--disable-read-preprocessing"
      ],
      "argument": "",
      "description": "Disable all read preprocessing"
    },
    {
      "names": [
        "--max-base-quality"
      ],
      "argument": "arg",
      "description": "Cap all base qualities to this value"
    },
    {
      "names": [
        "--mask-low-quality-tails"
      ],
      "argument": "[=arg(=3)]",
      "description": "Masks read tail bases with base quality less than this"
    },
    {
      "names": [
        "--mask-tails"
      ],
      "argument": "[=arg(=1)]",
      "description": "Unconditionally mask this many read tail bases"
    },
    {
      "names": [
        "--mask-soft-clipped-bases"
      ],
      "argument": "",
      "description": "Enable masking of soft clipped bases"
    },
    {
      "names": [
        "--soft-clip-mask-threshold"
      ],
      "argument": "[=arg(=3)]",
      "description": "Only soft clipped bases with quality less than this will be recalibrated, rather than all bases"
    },
    {
      "names": [
        "--mask-soft-clipped-boundary-bases"
      ],
      "argument": "arg (=2)",
      "description": "Masks this number of adjacent non soft clipped bases when soft clipped bases are present"
    },
    {
      "names": [
        "--disable-adapter-masking"
      ],
      "argument": "",
      "description": "Disable adapter detection and masking"
    },
    {
      "names": [
        "--disable-overlap-masking"
      ],
      "argument": "",
      "description": "Disable read segment overlap masking"
    },
    {
      "names": [
        "--mask-inverted-soft-clipping"
      ],
      "argument": "",
      "description": "Mask soft clipped sequence that is an inverted copy of a proximate sequence"
    },
    {
      "names": [
        "--mask-3prime-shifted-soft-clipped-heads"
      ],
      "argument": "",
      "description": "Mask soft clipped read head sequence that is a copy of a proximate 3' sequence"
    },
    {
      "names": [
        "--split-long-reads"
      ],
      "argument": "",
      "description": "Split reads longer than 'max-read-length' into linked fragments"
    },
    {
      "names": [
        "--consider-unmapped-reads"
      ],
      "argument": "",
      "description": "Allows reads marked as unmapped to be used for calling"
    },
    {
      "names": [
        "--min-mapping-quality"
      ],
      "argument": "arg (=5)",
      "description": "Minimum read mapping quality required to consider a read for calling"
    },
    {
      "names": [
        "--good-base-quality"
      ],
      "argument": "arg (=20)",
      "description": "Base quality threshold used by min-good-bases and min-good-base-fracti on filters"
    },
    {
      "names": [
        "--min-good-base-fraction"
      ],
      "argument": "[=arg(=0.5)]",
      "description": "Base quality threshold used by min-good-bases filter"
    },
    {
      "names": [
        "--min-good-bases"
      ],
      "argument": "arg (=20)",
      "description": "Minimum number of bases with quality min-base-quality before read is considered"
    },
    {
      "names": [
        "--allow-qc-fails"
      ],
      "argument": "",
      "description": "Filters reads marked as QC failed"
    },
    {
      "names": [
        "--min-read-length"
      ],
      "argument": "arg",
      "description": "Filters reads shorter than this"
    },
    {
      "names": [
        "--max-read-length"
      ],
      "argument": "arg (=10000)",
      "description": "Filter reads longer than this"
    },
    {
      "names": [
        "--allow-marked-duplicates"
      ],
      "argument": "",
      "description": "Allows reads marked as duplicate in alignment record"
    },
    {
      "names": [
        "--allow-octopus-duplicates"
      ],
      "argument": "",
      "description": "Allows reads considered duplicates by octopus"
    },
    {
      "names": [
        "--duplicate-read-detection-policy"
      ],
      "argument": "arg (=RELAXED)",
      "description": "Policy to use for duplicate read detection [RELAXED, AGGRESSIVE]"
    },
    {
      "names": [
        "--allow-secondary-alignments"
      ],
      "argument": "",
      "description": "Allows reads marked as secondary alignments"
    },
    {
      "names": [
        "--allow-supplementary-alignments"
      ],
      "argument": "",
      "description": "Allows reads marked as supplementary alignments"
    },
    {
      "names": [
        "--no-reads-with-unmapped-segments"
      ],
      "argument": "",
      "description": "Filter reads with unmapped template segments to be used for calling"
    },
    {
      "names": [
        "--no-reads-with-distant-segments"
      ],
      "argument": "",
      "description": "Filter reads with template segments that are on different contigs"
    },
    {
      "names": [
        "--no-adapter-contaminated-reads"
      ],
      "argument": "",
      "description": "Filter reads with possible adapter contamination"
    },
    {
      "names": [
        "--max-decoy-supplementary-alignment-mapping-quality"
      ],
      "argument": "arg (=5)",
      "description": "Filter reads with supplementary alignments mapped to decoy contigs with mapping quality greater than this"
    },
    {
      "names": [
        "--max-unplaced-supplementary-alignment-mapping-quality"
      ],
      "argument": "arg (=5)",
      "description": "Filter reads with supplementary alignments mapped to unplaced contigs with mapping quality greater than this"
    },
    {
      "names": [
        "--max-unlocalized-supplementary-alignment-mapping-quality"
      ],
      "argument": "arg (=5)",
      "description": "Filter reads with supplementary alignments mapped to unlocalized contigs with mapping quality greater than this"
    },
    {
      "names": [
        "--disable-downsampling"
      ],
      "argument": "",
      "description": "Disables downsampling"
    },
    {
      "names": [
        "--downsample-above"
      ],
      "argument": "arg (=1000)",
      "description": "Downsample reads in regions where coverage is over this"
    },
    {
      "names": [
        "--downsample-target"
      ],
      "argument": "arg (=500)",
      "description": "Target coverage for the downsampler"
    },
    {
      "names": [
        "--use-same-read-profile-for-all-samples"
      ],
      "argument": "",
      "description": "Use the same read profile for all samples, rather than generating one per sample"
    },
    {
      "names": [
        "--variant-discovery-mode"
      ],
      "argument": "arg (=ILLUMINA)",
      "description": "Protocol to use for candidate variant discovery [ILLUMINA, PACBIO]"
    },
    {
      "names": [
        "--disable-denovo-variant-discovery"
      ],
      "argument": "",
      "description": "Disable all candidate variant discovery from input reads"
    },
    {
      "names": [
        "--disable-pileup-candidate-generator"
      ],
      "argument": "",
      "description": "Disable candidate generation from raw read alignments (CIGAR strings)"
    },
    {
      "names": [
        "--disable-repeat-candidate-generator"
      ],
      "argument": "",
      "description": "Disable candidate generation from adjusted read alignments (CIGAR strings) around tandem repeats"
    },
    {
      "names": [
        "--disable-assembly-candidate-generator"
      ],
      "argument": "",
      "description": "Enable candidate generation using local re-assembly"
    },
    {
      "names": [
        "-c"
      ],
      "argument": "[ --source-candidates ] arg",
      "description": "Variant file paths containing known variants. These variants will automatically become candidates"
    },
    {
      "names": [
        "--source-candidates-file"
      ],
      "argument": "arg",
      "description": "Files containing lists of source candidate variant files"
    },
    {
      "names": [
        "--min-source-candidate-quality"
      ],
      "argument": "arg",
      "description": "Only variants with quality above this value are considered for candidate generation"
    },
    {
      "names": [
        "--use-filtered-source-candidates"
      ],
      "argument": "",
      "description": "Use variants from source VCF records that have been filtered"
    },
    {
      "names": [
        "--min-pileup-base-quality"
      ],
      "argument": "arg (=20)",
      "description": "Only bases with quality above this value are considered for candidate generation"
    },
    {
      "names": [
        "--min-supporting-reads"
      ],
      "argument": "[=arg(=2)]",
      "description": "Minimum number of reads that must support a variant if it is to be considered a candidate. By default octopus will automatically determine this value"
    },
    {
      "names": [
        "--force-pileup-candidates"
      ],
      "argument": "",
      "description": "Include pileup candidate variants discovered from reads that are considered likely to be misaligned"
    },
    {
      "names": [
        "--max-variant-size"
      ],
      "argument": "arg (=2000)",
      "description": "Maximum candidate variant size to consider (in region space)"
    },
    {
      "names": [
        "--kmer-sizes"
      ],
      "argument": "arg (=10 15 20)",
      "description": "Kmer sizes to use for local assembly"
    },
    {
      "names": [
        "--num-fallback-kmers"
      ],
      "argument": "arg (=10)",
      "description": "How many local assembly fallback kmer sizes to use if the default sizes fail"
    },
    {
      "names": [
        "--fallback-kmer-gap"
      ],
      "argument": "arg (=10)",
      "description": "Gap size used to generate local assembly fallback kmers"
    },
    {
      "names": [
        "--max-region-to-assemble"
      ],
      "argument": "arg (=600)",
      "description": "The maximum region size that can be used for local assembly"
    },
    {
      "names": [
        "--max-assemble-region-overlap"
      ],
      "argument": "arg (=200)",
      "description": "Maximum number of bases allowed to overlap assembly regions"
    },
    {
      "names": [
        "--assemble-all"
      ],
      "argument": "",
      "description": "Forces all regions to be assembled"
    },
    {
      "names": [
        "--assembler-mask-base-quality"
      ],
      "argument": "arg (=10)",
      "description": "Aligned bases with quality less than this will be converted to reference before being inserted into the De Bruijn graph"
    },
    {
      "names": [
        "--allow-cycles"
      ],
      "argument": "",
      "description": "Allow cyclic assembly graphs"
    },
    {
      "names": [
        "--min-kmer-prune"
      ],
      "argument": "arg (=2)",
      "description": "Minimum number of read observations to keep a kmer in the assembly graph before bubble extraction"
    },
    {
      "names": [
        "--max-bubbles"
      ],
      "argument": "arg (=30)",
      "description": "Maximum number of bubbles to extract from the assembly graph"
    },
    {
      "names": [
        "--min-bubble-score"
      ],
      "argument": "arg (=2)",
      "description": "Minimum bubble score that will be extracted from the assembly graph"
    },
    {
      "names": [
        "--min-candidate-credible-vaf-probability"
      ],
      "argument": "arg (=0.75)",
      "description": "Minimum probability that pileup candidate variant has frequency above '--min-credible-somatic-frequency'"
    },
    {
      "names": [
        "-x"
      ],
      "argument": "[ --max-haplotypes ] arg (=200)",
      "description": "Maximum number of candidate haplotypes the caller may consider. If a region contains more candidate haplotypes than this then filtering is applied"
    },
    {
      "names": [
        "--haplotype-holdout-threshold"
      ],
      "argument": "arg (=2500)",
      "description": "Forces the haplotype generator to temporarily hold out some alleles if the number of haplotypes in a region exceeds this threshold"
    },
    {
      "names": [
        "--haplotype-overflow"
      ],
      "argument": "arg (=200000)",
      "description": "Regions with more haplotypes than this will be skipped"
    },
    {
      "names": [
        "--max-holdout-depth"
      ],
      "argument": "arg (=20)",
      "description": "Maximum number of holdout attempts the haplotype generator can make before the region is skipped"
    },
    {
      "names": [
        "--extension-level"
      ],
      "argument": "arg (=MODERATE)",
      "description": "Level of haplotype extension [MINIMAL, CONSERVATIVE, MODERATE, AGGRESSIVE, UNLIMITED]"
    },
    {
      "names": [
        "--lagging-level"
      ],
      "argument": "arg (=MODERATE)",
      "description": "Level of haplotype lagging [NONE, CONSERVATIVE, MODERATE, OPTIMISTIC, AGGRESSIVE]"
    },
    {
      "names": [
        "--backtrack-level"
      ],
      "argument": "arg (=NONE)",
      "description": "Level of backtracking [NONE, MODERATE, AGGRESSIVE]"
    },
    {
      "names": [
        "--min-protected-haplotype-posterior"
      ],
      "argument": "arg (=1e-10)",
      "description": "Haplotypes with posterior probability less than this may be pruned from the haplotype tree"
    },
    {
      "names": [
        "--dont-protect-reference-haplotype"
      ],
      "argument": "",
      "description": "Do not protect the reference haplotype from filtering"
    },
    {
      "names": [
        "-C"
      ],
      "argument": "[ --caller ] arg (=population)",
      "description": "Which of the octopus calling models to use"
    },
    {
      "names": [
        "-P"
      ],
      "argument": "[ --organism-ploidy ] arg (=2)",
      "description": "All contigs with unspecified ploidies are assumed the organism ploidy"
    },
    {
      "names": [
        "-p"
      ],
      "argument": "[ --contig-ploidies ] arg (=Y=1 chrY=1 MT=1 chrM=1)",
      "description": "Space-separated list of contig (contig=ploidy) or sample contig (sample:contig=ploidy) ploidies"
    },
    {
      "names": [
        "--contig-ploidies-file"
      ],
      "argument": "arg",
      "description": "File containing a list of contig (contig=ploidy) or sample contig (sample:contig=ploidy) ploidies, one per line"
    },
    {
      "names": [
        "--min-variant-posterior"
      ],
      "argument": "arg (=0.1)",
      "description": "Report variant alleles with posterior probability (phred scale) greater than this"
    },
    {
      "names": [
        "--refcall"
      ],
      "argument": "[=arg(=BLOCKED)]",
      "description": "Caller will report reference confidence calls for each position [POSITIONAL], or in automatically sized blocks [BLOCKED]"
    },
    {
      "names": [
        "--refcall-block-merge-quality"
      ],
      "argument": "arg (=10)",
      "description": "Threshold to merge adjacent refcall positions when using blocked refcalling"
    },
    {
      "names": [
        "--min-refcall-posterior"
      ],
      "argument": "arg (=0)",
      "description": "Report reference alleles with posterior probability (QUAL) greater than this"
    },
    {
      "names": [
        "--max-refcall-posterior"
      ],
      "argument": "arg",
      "description": "Maximum allowed posterior probability (QUAL) for reference calls"
    },
    {
      "names": [
        "-z"
      ],
      "argument": "[ --snp-heterozygosity ] arg (=0.001)",
      "description": "Germline SNP heterozygosity for the given samples"
    },
    {
      "names": [
        "--snp-heterozygosity-stdev"
      ],
      "argument": "arg (=0.01)",
      "description": "Standard deviation of the germline SNP heterozygosity used for the given samples"
    },
    {
      "names": [
        "-y"
      ],
      "argument": "[ --indel-heterozygosity ] arg (=0.0001)",
      "description": "Germline indel heterozygosity for the given samples"
    },
    {
      "names": [
        "--use-uniform-genotype-priors"
      ],
      "argument": "",
      "description": "Use a uniform prior model when calculating genotype posteriors"
    },
    {
      "names": [
        "--max-genotypes"
      ],
      "argument": "arg",
      "description": "Maximum number of genotypes that must be evaluated"
    },
    {
      "names": [
        "--max-genotype-combinations"
      ],
      "argument": "arg",
      "description": "Maximum number of genotype combinations that can be considered when computing joint genotype posterior probabilities"
    },
    {
      "names": [
        "--use-independent-genotype-priors"
      ],
      "argument": "",
      "description": "Use independent genotype priors for joint calling"
    },
    {
      "names": [
        "--model-posterior"
      ],
      "argument": "arg (=SPECIAL)",
      "description": "Policy for calculating model posteriors for variant calls [ALL, OFF, SPECIAL]"
    },
    {
      "names": [
        "--disable-inactive-flank-scoring"
      ],
      "argument": "",
      "description": "Disable additional calculation to adjust alignment score to account for inactive candidate variants"
    },
    {
      "names": [
        "--dont-model-mapping-quality"
      ],
      "argument": "",
      "description": "Don't use read mapping quality information in the haplotype likelihood calculation"
    },
    {
      "names": [
        "--sequence-error-model"
      ],
      "argument": "arg (=PCR-free.HiSeq-2500)",
      "description": "Sequencing error model to use by the haplotyoe likelihood model"
    },
    {
      "names": [
        "--max-vb-seeds"
      ],
      "argument": "arg (=12)",
      "description": "Maximum number of seeds to use for Variational Bayes algorithms"
    },
    {
      "names": [
        "--max-indel-errors"
      ],
      "argument": "arg (=16)",
      "description": "Maximum number of indel errors that must be tolerated for haplotype likelihood calculation"
    },
    {
      "names": [
        "--use-wide-hmm-scores"
      ],
      "argument": "",
      "description": "Use 32-bits rather than 16-bits for HMM scores"
    },
    {
      "names": [
        "--read-linkage"
      ],
      "argument": "arg (=PAIRED)",
      "description": "Read linkage information to use for calling [NONE, PAIRED, LINKED]"
    },
    {
      "names": [
        "--min-phase-score"
      ],
      "argument": "arg (=5)",
      "description": "Minimum phase score (phred scale) required to report sites as phased"
    },
    {
      "names": [
        "--phasing-policy"
      ],
      "argument": "arg (=AUTO)",
      "description": "Policy for applying phasing algorithm [AUTO, CONSERVATIVE, AGGRESSIVE]"
    },
    {
      "names": [
        "--bad-region-tolerance"
      ],
      "argument": "arg (=NORMAL)",
      "description": "Tolerance for skipping regions that are considered unlikely to be callable [LOW, NORMAL, HIGH, UNLIMITED]"
    },
    {
      "names": [
        "-N"
      ],
      "argument": "[ --normal-samples ] arg",
      "description": "Normal samples - all other samples are considered tumour"
    },
    {
      "names": [
        "--max-somatic-haplotypes"
      ],
      "argument": "arg (=2)",
      "description": "Maximum number of somatic haplotypes that may be considered"
    },
    {
      "names": [
        "--somatic-snv-prior"
      ],
      "argument": "arg (=0.0001)",
      "description": "Prior probability for an SNV somatic mutation at a given base for this sample"
    },
    {
      "names": [
        "--somatic-indel-prior"
      ],
      "argument": "arg (=0.000001)",
      "description": "Prior probability for an INDEL somatic mutation at a given position for this sample"
    },
    {
      "names": [
        "--min-expected-somatic-frequency"
      ],
      "argument": "arg (=0.01)",
      "description": "Minimum expected somatic allele frequency in the sample"
    },
    {
      "names": [
        "--min-credible-somatic-frequency"
      ],
      "argument": "arg (=0.005)",
      "description": "Minimum credible somatic allele frequency that will be reported"
    },
    {
      "names": [
        "--tumour-germline-concentration"
      ],
      "argument": "arg (=1.5)",
      "description": "Concentration parameter for germline haplotypes in tumour samples"
    },
    {
      "names": [
        "--somatic-credible-mass"
      ],
      "argument": "arg (=0.9)",
      "description": "Mass of the posterior density to use for evaluating somatic allele frequencies"
    },
    {
      "names": [
        "--min-somatic-posterior"
      ],
      "argument": "arg (=0.5)",
      "description": "Minimum posterior probability (phred scale) to emit a somatic mutation call"
    },
    {
      "names": [
        "--normal-contamination-risk"
      ],
      "argument": "arg (=LOW)",
      "description": "Risk that the normal sample is contaminated by the tumour [LOW, HIGH]"
    },
    {
      "names": [
        "--somatics-only"
      ],
      "argument": "",
      "description": "Only emit SOMATIC mutations"
    },
    {
      "names": [
        "-M"
      ],
      "argument": "[ --maternal-sample ] arg",
      "description": "Maternal sample"
    },
    {
      "names": [
        "-F"
      ],
      "argument": "[ --paternal-sample ] arg",
      "description": "Paternal sample"
    },
    {
      "names": [
        "--denovo-snv-prior"
      ],
      "argument": "arg (=1.3e-8)",
      "description": "Prior probability for an SNV de novo mutation at a given base in the offspring"
    },
    {
      "names": [
        "--denovo-indel-prior"
      ],
      "argument": "arg (=1e-9)",
      "description": "Prior probability for an INDEL de novo mutation at a given position in the offspring"
    },
    {
      "names": [
        "--min-denovo-posterior"
      ],
      "argument": "arg (=3)",
      "description": "Minimum posterior probability (phred scale) to emit a de novo mutation call"
    },
    {
      "names": [
        "--denovos-only"
      ],
      "argument": "",
      "description": "Only emit DENOVO mutations"
    },
    {
      "names": [
        "--max-clones"
      ],
      "argument": "arg (=4)",
      "description": "Maximum number of unique clones to consider"
    },
    {
      "names": [
        "--min-clone-frequency"
      ],
      "argument": "arg (=0.01)",
      "description": "Minimum expected clone frequency in the sample"
    },
    {
      "names": [
        "--clone-prior"
      ],
      "argument": "arg (=0.01)",
      "description": "Prior probability of each clone in the sample"
    },
    {
      "names": [
        "--clone-concentration"
      ],
      "argument": "arg (=1)",
      "description": "Prior mixture concentration for each clone in the sample"
    },
    {
      "names": [
        "--max-copy-loss"
      ],
      "argument": "arg (=0)",
      "description": "Maximum number of haplotype losses in the phylogeny"
    },
    {
      "names": [
        "--max-copy-gain"
      ],
      "argument": "arg (=0)",
      "description": "Maximum number of haplotype gains in the phylogeny"
    },
    {
      "names": [
        "--somatic-cnv-prior"
      ],
      "argument": "arg (=1e-5)",
      "description": "Prior probability of a given base in a sample being affected by a CNV"
    },
    {
      "names": [
        "--dropout-concentration"
      ],
      "argument": "arg (=5)",
      "description": "Allelic dropout concentration parameter (default for all samples)"
    },
    {
      "names": [
        "--sample-dropout-concentrations"
      ],
      "argument": "arg",
      "description": "Sample allelic dropout concentration parameter (format SAMPLE=CONCENTRATION"
    },
    {
      "names": [
        "--phylogeny-concentration"
      ],
      "argument": "arg (=20)",
      "description": "Concentration prior for clones in phylogeny"
    },
    {
      "names": [
        "--disable-call-filtering"
      ],
      "argument": "",
      "description": "Disable call filtering"
    },
    {
      "names": [
        "--filter-expression arg"
      ],
      "argument": "(=QUAL < 10 | MQ < 10 | MP < 10 | AD < 1 | AF < 0.01 | AFB > 0.25 | SB > 0.98 | BQ < 15 | DP < 1 | ADP < 1)",
      "description": "Boolean expression to use to filter"
    },
    {
      "names": [
        "--somatic-filter-expression"
      ],
      "argument": "arg (=QUAL < 2 | GQ < 20 | MQ < 30 | SMQ < 40 | SB > 0.9 | SD > 0.9 | BQ < 20 | DP < 3 | ADP < 1 | MF > 0.2 | NC > 1 | FRF > 0.5 | AD < 1 | AF < 0.0001)",
      "description": "Boolean expression to use to filter somatic variant calls"
    },
    {
      "names": [
        "--denovo-filter-expression"
      ],
      "argument": "arg (=QUAL < 50 | PP < 40 | GQ < 20 | MQ < 30 | AD < 1 | AF < 0.1 | AFB > 0.2 | SB > 0.95 | BQ < 20 | DP < 10 | ADP < 1 | DC > 1 | MF > 0.2 | FRF > 0.5 | MP < 30 | MQ0 > 2)",
      "description": "Boolean expression to use to filter somatic variant calls"
    },
    {
      "names": [
        "--refcall-filter-expression"
      ],
      "argument": "arg (=QUAL < 2 | GQ < 20 | MQ < 10 | DP < 10 | MF > 0.2)",
      "description": "Boolean expression to use to filter homozygous reference calls"
    },
    {
      "names": [
        "--use-preprocessed-reads-for-filtering"
      ],
      "argument": "",
      "description": "Use preprocessed reads, as used for calling, for call filtering"
    },
    {
      "names": [
        "--keep-unfiltered-calls"
      ],
      "argument": "",
      "description": "Keep a copy of unfiltered calls"
    },
    {
      "names": [
        "--annotations"
      ],
      "argument": "[=arg(=active)]",
      "description": "Annotations to write to final VCF"
    },
    {
      "names": [
        "--aggregate-annotations"
      ],
      "argument": "",
      "description": "Aggregate all multi-value annotations into a single value"
    },
    {
      "names": [
        "--filter-vcf"
      ],
      "argument": "arg",
      "description": "Filter the given Octopus VCF without calling"
    },
    {
      "names": [
        "--forest-model"
      ],
      "argument": "arg",
      "description": "Trained Ranger random forest model file"
    },
    {
      "names": [
        "--somatic-forest-model"
      ],
      "argument": "arg",
      "description": "Trained Ranger random forest model file for somatic variants"
    },
    {
      "names": [
        "--min-forest-quality"
      ],
      "argument": "arg (=3)",
      "description": "Minimum PASSing random forest probability (Phred scale)"
    },
    {
      "names": [
        "--use-germline-forest-for-somatic-normals"
      ],
      "argument": "",
      "description": "Use the germline forest model for evaluating somatic variant normal sample genotypes rather than the somatic forest model"
    }
  ]
}
