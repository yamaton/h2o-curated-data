{"name":"plink","description":"plink","usage":"plink <input flag(s)...> [command flag(s)...] [other flag(s)...]","options":[{"names":["--bfile"],"argument":"[prefix]","description":"Specify .bed + .bim + .fam prefix (default 'plink')."},{"names":["--bed"],"argument":"<filename>","description":"Specify full name of .bed file."},{"names":["--bim"],"argument":"<filename>","description":"Specify full name of .bim file."},{"names":["--fam"],"argument":"<filename>","description":"Specify full name of .fam file."},{"names":["--keep-autoconv"],"argument":"","description":"With --file/--tfile/--lfile/--vcf/--bcf/--data/--23file, don't delete autogenerated binary fileset at end of run."},{"names":["--file"],"argument":"[prefix]","description":"Specify .ped + .map filename prefix (default 'plink')."},{"names":["--ped"],"argument":"<filename>","description":"Specify full name of .ped file."},{"names":["--map"],"argument":"<filename>","description":"Specify full name of .map file."},{"names":["--no-fid"],"argument":"","description":".fam/.ped file does not contain column 1 (family ID)."},{"names":["--no-parents"],"argument":"","description":".fam/.ped file does not contain columns 3-4 (parents)."},{"names":["--no-sex"],"argument":"","description":".fam/.ped file does not contain column 5 (sex)."},{"names":["--no-pheno"],"argument":"","description":".fam/.ped file does not contain column 6 (phenotype)."},{"names":["--tfile"],"argument":"[prefix]","description":"Specify .tped + .tfam filename prefix (default 'plink')."},{"names":["--tped"],"argument":"<fname>","description":"Specify full name of .tped file."},{"names":["--tfam"],"argument":"<fname>","description":"Specify full name of .tfam file."},{"names":["--lfile"],"argument":"[prefix]","description":"Specify .lgen + .map + .fam (long-format fileset) prefix."},{"names":["--lgen"],"argument":"<fname>","description":"Specify full name of .lgen file."},{"names":["--reference"],"argument":"<fn>","description":"Specify default allele file accompanying .lgen input."},{"names":["--allele-count"],"argument":"","description":"When used with --lfile/--lgen + --reference, specifies that the .lgen file contains reference allele counts."},{"names":["--vcf"],"argument":"<filename>","description":"Specify full name of .vcf or .vcf.gz file."},{"names":["--bcf"],"argument":"<filename>","description":"Specify full name of BCF2 file."},{"names":["--data"],"argument":"[prefix]","description":"Specify Oxford .gen + .sample prefix (default 'plink')."},{"names":["--gen"],"argument":"<filename>","description":"Specify full name of .gen or .gen.gz file."},{"names":["--bgen"],"argument":"<f> ['snpid-chr']","description":"Specify full name of .bgen file."},{"names":["--sample"],"argument":"<fname>","description":"Specify full name of .sample file."},{"names":["--23file"],"argument":"<fname>","description":"[FID] [IID] [sex] [pheno] [pat. ID] [mat. ID]   Specify 23andMe input file."},{"names":["--23file"],"argument":"<fname>","description":"[IID] [sex] [pheno] [pat. ID] [mat. ID]   Specify 23andMe input file."},{"names":["--23file"],"argument":"<fname> FID","description":"[IID] [sex] [pheno] [pat. ID] [mat. ID]   Specify 23andMe input file."},{"names":["--grm-gz"],"argument":"[prfx]","description":"Specify .grm.gz + .grm.id (GCTA rel. matrix) prefix."},{"names":["--grm-bin"],"argument":"[prfx]","description":"Specify .grm.bin + .grm.N.bin + .grm.id (GCTA triangular binary relationship matrix) filename prefix."},{"names":["--dummy"],"argument":"<sample ct> <SNP ct> [missing geno freq]","description":"[missing pheno freq] [{acgt | 1234 | 12}] ['scalar-pheno'] This generates a fake input dataset with the specified number of samples and SNPs. By default, the missing genotype and phenotype frequencies are zero, and genotypes are As and Bs (change the latter with 'acgt'/'1234'/'12'). The 'scalar-pheno' modifier causes a normally distributed scalar phenotype to be generated instead of a binary one."},{"names":["--simulate"],"argument":"<simulation parameter file> [{tags | haps}] [{acgt | 1234 | 12}]","description":"generates a fake input dataset with disease-associated SNPs."},{"names":["--simulate-qt"],"argument":"<simulation parameter file> [{tags | haps}] [{acgt | 1234 | 12}]","description":"generates a dataset with quantitative trait loci."},{"names":["--out"],"argument":"<prefix>","description":"Specify prefix for output files."},{"names":["--make-bed"],"argument":"","description":"Create a new binary fileset. Unlike the automatic text-to-binary converters (which only heed chromosome filters), this supports all of PLINK's filtering flags."},{"names":["--make-just-bim","--make-just-fam"],"argument":"","description":"Variants of --make-bed which only write a new .bim or .fam file. Can be used with only .bim/.fam input. USE THESE CAUTIOUSLY. It is very easy to desynchronize your binary genotype data and your .bim/.fam indexes if you use these commands improperly. If you have any doubt, stick with --make-bed."},{"names":["--recode"],"argument":"<output format>","description":"[{01 | 12}] [{tab | tabx | spacex | bgz | gen-gz}] ['include-alt'] ['omit-nonmale-y']   Create a new text fileset with all filters applied. The following output formats are supported:"},{"names":["--recode"],"argument":"<output format>","description":"[{tab | tabx | spacex | bgz | gen-gz}] ['include-alt'] ['omit-nonmale-y']   Create a new text fileset with all filters applied. The following output formats are supported:"},{"names":["--recode"],"argument":"<output format> {01 | 12}","description":"[{tab | tabx | spacex | bgz | gen-gz}] ['include-alt'] ['omit-nonmale-y']   Create a new text fileset with all filters applied. The following output formats are supported:"},{"names":["--flip-scan","--flipscan"],"argument":"['verbose']","description":"LD-based scan for case/control strand inconsistency."},{"names":["--write-covar"],"argument":"","description":"If a --covar file is loaded, --make-bed/--make-just-fam and --recode automatically generate an updated version (with all filters applied). However, if you do not wish to simultaneously generate a new genotype file, you can use --write-covar to just produce a pruned covariate file."},{"names":["--write-cluster"],"argument":"['omit-unassigned']","description":"If clusters are specified with --within/--family, this generates a new cluster file (with all filters applied). The 'omit-unassigned' modifier causes unclustered samples to be omitted from the file; otherwise their cluster is 'NA'."},{"names":["--write-set","--set-table"],"argument":"","description":"If sets have been defined, --write-set dumps 'END'-terminated set membership lists to <output prefix>.set, while --set-table writes a variant-by-set membership table to <output prefix>.set.table."},{"names":["--merge","--bmerge"],"argument":"<.ped filename> <.map filename>","description":"Merge the given fileset with the initially loaded fileset, writing the result to <output prefix>.bed + .bim + .fam. (It is no longer necessary to simultaneously specify --make-bed.)"},{"names":["--merge-list"],"argument":"<filename>","description":"Merge all filesets named in the text file with the reference fileset, if one was specified. (However, this can also be used *without* a reference; in that case, the newly created fileset is then treated as the reference by most other PLINK operations.) The text file is interpreted as follows:"},{"names":["--write-snplist"],"argument":"","description":"writes a .snplist file listing the names of all variants which pass the filters and inclusion thresholds you've specified"},{"names":["--list-23-indels"],"argument":"","description":"writes the subset with 23andMe-style indel calls (D/I allele codes)."},{"names":["--list-duplicate-vars"],"argument":"['require-same-ref'] ['ids-only'] ['suppress-first']","description":"writes a .dupvar file describing all groups of variants with matching positions and allele codes."},{"names":["--freq"],"argument":"[{counts | case-control}] ['gz']","description":"generates a basic allele frequency (or count, if the 'counts' modifier is present) report. This can be combined with --within/--family to produce a cluster-stratified allele frequency/count report instead, or the 'case-control' modifier to report case and control allele frequencies separately."},{"names":["--freqx"],"argument":"['gz']","description":"generates a more detailed genotype count report, designed for use with --read-freq."},{"names":["--missing"],"argument":"['gz']","description":"Generate sample- and variant-based missing data reports. If clusters are defined, the variant-based report is cluster-stratified. 'gz' causes the output files to be gzipped. Unlike most other commands, this doesn't treat het. haploids as missing."},{"names":["--test-mishap"],"argument":"","description":"Check for association between missing calls and flanking haplotypes."},{"names":["--hardy"],"argument":"['midp'] ['gz']","description":"Generate a Hardy-Weinberg exact test p-value report. (This does NOT simultaneously filter on the p-value any more; use --hwe for that.) With the 'midp' modifier, the test applies the mid-p adjustment described in Graffelman J, Moreno V (2013) The mid p-value in exact tests for Hardy-Weinberg Equilibrium."},{"names":["--mendel"],"argument":"['summaries-only']","description":"Generate a Mendel error report. The 'summaries-only' modifier causes the .mendel file (listing every single error) to be skipped."},{"names":["--het"],"argument":"['small-sample'] ['gz']","description":"Estimate inbreeding coefficients. --het reports method-of-moments estimates."},{"names":["--ibc"],"argument":"","description":"Estimate inbreeding coefficients. --ibc calculates all three values described in Yang J, Lee SH, Goddard ME and Visscher PM (2011) GCTA: A Tool for Genome-wide Complex Trait Analysis. (That paper also describes the relationship matrix computation we reimplement.)"},{"names":["--check-sex"],"argument":"","description":"[male min F]"},{"names":["--check-sex"],"argument":"ycount","description":"[male min F] [female max Y obs] [male min Y obs]"},{"names":["--check-sex"],"argument":"y-only","description":"[male min Y obs]"},{"names":["--impute-sex"],"argument":"","description":"[male min F]"},{"names":["--impute-sex"],"argument":"ycount","description":"[male min F] [female max Y obs] [male min Y obs]"},{"names":["--impute-sex"],"argument":"y-only [female max Y obs] [male min Y obs]","description":"normally compares sex assignments in the input dataset with those imputed from X chromosome inbreeding coefficients."},{"names":["--fst","--Fst"],"argument":"['case-control']","description":"Estimate Wright's Fst for each autosomal diploid variant using the method introduced in Weir BS, Cockerham CC (1984) Estimating F-statistics for the analysis of population structure, given a set of subpopulations defined via --within."},{"names":["--indep"],"argument":"","description":"<window size>['kb'] <step size (variant ct)> <VIF threshold>"},{"names":["--indep-pairwise","--indep-pairphase"],"argument":"<window size>['kb'] <step size (variant ct)> <r^2 threshold>","description":"Generate a list of markers in approximate linkage equilibrium. With the 'kb' modifier, the window size is in kilobase instead of variant count units."},{"names":["--r"],"argument":"{square | square0 | triangle | inter-chr}","description":"[{gz | bin | bin4}] ['spaces'] ['in-phase'] [{d | dprime | dprime-signed}] ['with-freqs'] ['yes-really']   LD statistic reports. raw inter-variant correlations"},{"names":["--r2"],"argument":"{square | square0 | triangle | inter-chr}","description":"[{gz | bin | bin4}] ['spaces'] ['in-phase'] [{d | dprime | dprime-signed}] ['with-freqs'] ['yes-really']   LD statistic reports. reports their squares."},{"names":["--ld"],"argument":"<variant ID> <variant ID> ['hwe-midp']","description":"This displays haplotype frequencies, r^2, and D' for a single pair of variants."},{"names":["--show-tags"],"argument":"<filename>|all","description":"If a file is specified, list all variants which tag at least one variant named in the file. If 'all' mode is specified, for each variant, each *other* variant which tags it is reported."},{"names":["--blocks"],"argument":"['no-pheno-req'] ['no-small-max-span']","description":"Estimate haplotype blocks, via Haploview's interpretation of the block definition suggested by Gabriel S et al. (2002) The Structure of Haplotype Blocks in the Human Genome."},{"names":["--distance"],"argument":"{square | square0 | triangle}","description":"[{gz | bin | bin4}] ['ibs'] ['1-ibs'] ['allele-ct'] ['flat-missing']   Write a lower-triangular tab-delimited table of (weighted) genomic distances in allele count units to <output prefix>.dist, and a list of the corresponding sample IDs to <output prefix>.dist.id."},{"names":["--distance-matrix"],"argument":"","description":"[deprecated] equivalent to \"--distance 1-ibs flat-missing square\""},{"names":["--ibs-matrix"],"argument":"","description":"[deprecated] equivalent to \"--distance ibs flat-missing square\""},{"names":["--make-rel"],"argument":"[{square | square0 | triangle}] [{gz | bin | bin4}] [{cov | ibc2 | ibc3}]","description":"Write a lower-triangular variance-standardized realized relationship matrix to <output prefix>.rel, and corresponding IDs to <output prefix>.rel.id."},{"names":["--make-grm-gz"],"argument":"['no-gz'] [{cov | ibc2 | ibc3}]","description":"writes the relationships in GCTA's original gzipped list format, which describes one pair per line"},{"names":["--make-grm-bin"],"argument":"[{cov | ibc2 | ibc3}]","description":"writes them in GCTA 1.1+'s single-precision triangular binary format."},{"names":["--rel-cutoff","--grm-cutoff"],"argument":"[val]","description":"Exclude one member of each pair of samples with relatedness greater than the given cutoff value (default 0.025)."},{"names":["--ibs-test"],"argument":"","description":"[permutation count]"},{"names":["--groupdist"],"argument":"[iters] [d]","description":"Given case/control phenotype data, these commands consider three subsets of the distance matrix: pairs of affected samples, affected-unaffected pairs, and pairs of unaffected samples."},{"names":["--regress-distance"],"argument":"[iters] [d]","description":"Linear regression of pairwise genomic distances on pairwise average phenotypes and vice versa, using delete-d jackknife for standard errors."},{"names":["--regress-rel"],"argument":"[iters] [d]","description":"Linear regression of pairwise genomic relationships on pairwise average phenotypes, and vice versa. Defaults for iters and d are the same as for --regress-distance."},{"names":["--genome"],"argument":"'gz'","description":"['rel-check'] ['full'] ['unbounded'] ['nudge']   Generate an identity-by-descent report."},{"names":["--homozyg"],"argument":"","description":"[{group | group-verbose}] ['consensus-match'] ['extend'] ['subtract-1-from-lengths'] request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-snp"],"argument":"<min var count>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-kb"],"argument":"<min length>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-density"],"argument":"<max inverse density (kb/var)>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-gap"],"argument":"<max internal gap kb length>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-het"],"argument":"<max hets>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-window-snp"],"argument":"<scanning window size>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-window-het"],"argument":"<max hets in scanning window hit>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-window-missing"],"argument":"<max missing calls in scanning window hit>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--homozyg-window-threshold"],"argument":"<min scanning window hit rate>","description":"request a set of run-of-homozygosity reports, and allow you to customize how they are generated."},{"names":["--cluster"],"argument":"['cc'] [{group-avg | old-tiebreaks}] ['missing'] ['only2']","description":"Cluster samples using a pairwise similarity statistic (normally IBS)."},{"names":["--pca"],"argument":"[count] ['header'] ['tabs'] ['var-wts']","description":"Calculates a variance-standardized relationship matrix (use --make-rel/--make-grm-gz/--make-grm-bin to dump it), and extracts the top"},{"names":["--neighbour","--neighbor"],"argument":"<n1> <n2>","description":"Report IBS distances from each sample to their n1th- to n2th-nearest neighbors, associated Z-scores, and the identities of those neighbors. Useful for outlier detection."},{"names":["--assoc"],"argument":"","description":"['perm' | 'mperm='<value>] ['perm-count'] [{fisher | fisher-midp}] ['counts'] ['set-test'] performs a 1df chi-square allelic test"},{"names":["--model"],"argument":"","description":"['perm' | 'mperm='<value>] ['perm-count'] [{fisher | fisher-midp | trend-only}] ['set-test'] [{dom | rec | gen | trend}] Basic association analysis report. performs a 1df chi-square allelic test AND 4 other tests"},{"names":["--gxe"],"argument":"[covariate index]","description":"Given both a quantitative phenotype and a case/control covariate loaded with --covar defining two groups, --gxe compares the regression coefficient derived from considering only members of one group to the regression coefficient derived from considering only members of the other."},{"names":["--linear"],"argument":"","description":"['perm' | 'mperm='<value>] ['perm-count'] ['set-test'] [{genotypic | hethom | dominant | recessive | no-snp}] ['hide-covar'] [{sex | no-x-sex}] ['interaction'] ['beta'] ['standard-beta'] ['intercept'] Multi-covariate association analysis on a quantitative phenotype. Normally used with --covar."},{"names":["--logistic"],"argument":"'perm' | 'mperm='<value>","description":"['perm-count'] ['set-test'] [{genotypic | hethom | dominant | recessive | no-snp}] ['hide-covar'] [{sex | no-x-sex}] ['interaction'] ['beta'] ['intercept']   Multi-covariate association analysis on a case/control phenotype. Normally used with --covar."},{"names":["--dosage"],"argument":"<allele dosage file>","description":"Process (possibly gzipped) text files with variant-major allelic dosage data."},{"names":["--write-dosage"],"argument":"","description":"Process (possibly gzipped) text files with variant-major allelic dosage data."},{"names":["--lasso"],"argument":"<h2 estimate> [min lambda] ['report-zeroes']","description":"Estimate variant effect sizes via LASSO regression."},{"names":["--test-missing"],"argument":"['perm' | 'mperm='<value>] ['perm-count'] ['midp']","description":"Check for association between missingness and case/control status, using Fisher's exact test. (Het. haploids are treated as missing.)"},{"names":["--make-perm-pheno"],"argument":"<ct>","description":"Generate phenotype permutations and write them to disk, without invoking an association test."},{"names":["--tdt"],"argument":"{exact | exact-midp | poo}","description":"['perm' | 'mperm='<value>] ['perm-count'] [{parentdt1 | parentdt2 | pat | mat}] ['set-test']   Report transmission disequilibrium test statistics, given case/control phenotypes and pedigree information."},{"names":["--qfam"],"argument":"['perm' | 'mperm='<value>] ['perm-count'] ['emp-se']","description":"QFAM family-based association test for quantitative traits."},{"names":["--qfam-parents"],"argument":"['perm' | 'mperm='<value>] ['perm-count'] ['emp-se']","description":"QFAM family-based association test for quantitative traits."},{"names":["--qfam-between"],"argument":"['perm' | 'mperm='<value>] ['perm-count'] ['emp-se']","description":"QFAM family-based association test for quantitative traits."},{"names":["--qfam-total"],"argument":"['perm' | 'mperm='<value>] ['perm-count'] ['emp-se']","description":"QFAM family-based association test for quantitative traits."},{"names":["--annotate"],"argument":"<PLINK report>","description":"['attrib='<file>] ['ranges='<file>] ['filter='<file>] ['snps='<file>] [{NA | prune}] ['block'] ['subset='<file>] ['minimal'] ['distance']   Add annotations to a variant-based PLINK report."},{"names":["--annotate"],"argument":"<PLINK report>","description":"['ranges='<file>] ['filter='<file>] ['snps='<file>] [{NA | prune}] ['block'] ['subset='<file>] ['minimal'] ['distance']   Add annotations to a variant-based PLINK report."},{"names":["--annotate"],"argument":"<PLINK report> 'attrib='<file>","description":"['ranges='<file>] ['filter='<file>] ['snps='<file>] [{NA | prune}] ['block'] ['subset='<file>] ['minimal'] ['distance']   Add annotations to a variant-based PLINK report."},{"names":["--clump"],"argument":"<PLINK report filename(s)...>","description":"Process association analysis report(s) with 'SNP' and p-value columns, organizing results by LD-based clumps."},{"names":["--gene-report"],"argument":"<PLINK report> <gene range file>","description":"Generate a gene-based report from a variant-based report."},{"names":["--meta-analysis"],"argument":"<PLINK report filenames...>","description":"Perform a meta-analysis on several variant-based reports with 'SNP' and 'SE' fields."},{"names":["--fast-epistasis"],"argument":"[{boost | joint-effects | no-ueki}] ['case-only'] [{set-by-set | set-by-all}] ['nop']","description":"Scan for epistatic interactions."},{"names":["--epistasis"],"argument":"[{set-by-set | set-by-all}]","description":"Scan for epistatic interactions."},{"names":["--epistasis-summary-merge"],"argument":"<common file prefix> <ct>","description":"When a --[fast-]epistasis job is subdivided with --parallel, the main report can be assembled at the end by applying Unix 'cat' in the usual manner, but the .summary.1, .summary.2, ... files may require a specialized merge."},{"names":["--twolocus"],"argument":"<variant ID> <variant ID>","description":"Two-locus joint genotype count report."},{"names":["--score"],"argument":"","description":"<filename> [i] [j] [k] ['header'] [{sum | no-sum}] [{no-mean-imputation | center}] ['include-cnt'] ['double-dosage'] Apply a linear scoring system to each sample."},{"names":["--R"],"argument":"<R script file> ['debug']","description":"Connect to a Rserve (preferably version 1.7 or later) background process, and execute the Rplink function defined in the input file. (Unless the 'debug' modifier is present; in that case, the R commands that PLINK would have tried to execute are logged to a file.)"},{"names":["--write-var-ranges"],"argument":"<block ct>","description":"Divide the set of variants into equal-size blocks. (Can be used with --snps to split a job across multiple machines.)"},{"names":["--mh","--cmh"],"argument":"","description":"['perm' | 'mperm='<value>] ['perm-count'] ['set-test'] computes 2x2xK Cochran-Mantel-Haenszel statistics for each variant"},{"names":["--bd"],"argument":"['perm' | 'perm-bd' | 'mperm='<value>] ['perm-count'] ['set-test']","description":"performs the Breslow-Day test for odds ratio homogeneity."},{"names":["--mh2","--homog"],"argument":"","description":"variant set testing based on the CMH (default) or Breslow-Day (when 'perm-bd' is present) statistic are supported."},{"names":["--script"],"argument":"<fname>","description":"Include command-line options from file."},{"names":["--rerun"],"argument":"[log]","description":"Rerun commands in log (default 'plink.log')."},{"names":["--version"],"argument":"","description":"Display only version number before exiting."},{"names":["--silent"],"argument":"","description":"Suppress output to console."},{"names":["--gplink"],"argument":"","description":"Reserved for interoperation with gPLINK."},{"names":["--missing-genotype"],"argument":"<char>","description":"Set missing genotype code (normally '0')."},{"names":["--double-id"],"argument":"","description":"Set both FIDs and IIDs to the VCF/BCF sample ID."},{"names":["--const-fid"],"argument":"[ID]","description":"Set all FIDs to the given constant (default '0')."},{"names":["--id-delim"],"argument":"[d]","description":"Parse sample IDs as <FID><d><IID> (default delim '_')."},{"names":["--vcf-idspace-to"],"argument":"<c>","description":"Convert spaces in sample IDs to the given character."},{"names":["--biallelic-only"],"argument":"['strict'] ['list']","description":"Skip VCF variants with 2+ ALT alleles."},{"names":["--vcf-min-qual"],"argument":"<val>","description":"Skip VCF variants with low/missing QUAL."},{"names":["--vcf-filter"],"argument":"[exception(s)...]","description":"Skip variants which have FILTER failures."},{"names":["--vcf-require-gt"],"argument":"","description":"Skip variants with no GT field."},{"names":["--vcf-min-gq"],"argument":"<val>","description":"No-call a genotype when GQ is below the given threshold."},{"names":["--vcf-min-gp"],"argument":"<val>","description":"No-call a genotype when 0-1 scaled GP is below the given threshold."},{"names":["--vcf-half-call"],"argument":"<m>","description":"Specify how '0/.' and similar VCF GT values should be handled."},{"names":["--oxford-single-chr"],"argument":"<chr nm>","description":"Specify single-chromosome .gen file with ignorable first column."},{"names":["--oxford-pheno-name"],"argument":"<col nm>","description":"Import named phenotype from the .sample file."},{"names":["--hard-call-threshold"],"argument":"<val>","description":"When an Oxford-format fileset is loaded, calls"},{"names":["--hard-call-threshold"],"argument":"random","description":"with uncertainty level greater than 0.1 are normally treated as missing. You can adjust this threshold by providing a numeric parameter, or randomize all calls with 'random'."},{"names":["--missing-code"],"argument":"[string list]","description":"Comma-delimited list of missing phenotype"},{"names":["--simulate-ncases"],"argument":"<num>","description":"Set --simulate case count (default 1000)."},{"names":["--simulate-ncontrols"],"argument":"<n>","description":"Set --simulate control count (default 1000)."},{"names":["--simulate-prevalence"],"argument":"<p>","description":"Set --simulate disease prevalence (default 0.01)."},{"names":["--simulate-n"],"argument":"<num>","description":"Set --simulate-qt sample count (default 1000)."},{"names":["--simulate-label"],"argument":"<prefix>","description":"Set --simulate[-qt] FID/IID name prefix."},{"names":["--simulate-missing"],"argument":"<freq>","description":"Set --simulate[-qt] missing genotype frequency."},{"names":["--allow-extra-chr","--aec"],"argument":"['0']","description":"Permit unrecognized chromosome codes. The '0' modifier causes them to be treated as if they had been set to zero."},{"names":["--chr-set"],"argument":"<autosome ct>","description":"['no-x'] ['no-y'] ['no-xy'] ['no-mt']   Specify a nonhuman chromosome set. The first parameter sets the number of diploid autosome pairs if positive, or haploid chromosomes if negative. Given diploid autosomes, the remaining modifiers indicate the absence of the named non-autosomal chromosomes."},{"names":["--chr-set"],"argument":"<autosome ct>","description":"['no-y'] ['no-xy'] ['no-mt']   Specify a nonhuman chromosome set. The first parameter sets the number of diploid autosome pairs if positive, or haploid chromosomes if negative. Given diploid autosomes, the remaining modifiers indicate the absence of the named non-autosomal chromosomes."},{"names":["--chr-set"],"argument":"<autosome ct> 'no-x'","description":"['no-y'] ['no-xy'] ['no-mt']   Specify a nonhuman chromosome set. The first parameter sets the number of diploid autosome pairs if positive, or haploid chromosomes if negative. Given diploid autosomes, the remaining modifiers indicate the absence of the named non-autosomal chromosomes."},{"names":["--cow"],"argument":"","description":"Shortcuts for cow"},{"names":["--dog"],"argument":"","description":"Shortcuts for dog"},{"names":["--horse"],"argument":"","description":"Shortcuts for horse"},{"names":["--mouse"],"argument":"","description":"Shortcuts for mouse"},{"names":["--rice"],"argument":"","description":"Shortcuts for rice"},{"names":["--sheep"],"argument":"","description":"Shortcuts for sheep"},{"names":["--autosome-num"],"argument":"<value>","description":"Alias for \"--chr-set <value> no-y no-xy no-mt\"."},{"names":["--cm-map"],"argument":"<fname pattern> [chr]","description":"Use SHAPEIT-format recombination maps to set centimorgan positions. To process more than one chromosome, include a '@' in the first parameter where the chrom. number belongs, e.g. 'genetic_map_chr@_combined_b37.txt'."},{"names":["--zero-cms"],"argument":"","description":"Zero out centimorgan positions."},{"names":["--allow-no-samples"],"argument":"","description":"Allow the input fileset to contain no samples."},{"names":["--allow-no-vars"],"argument":"","description":"Allow the input fileset to contain no variants."},{"names":["--pheno"],"argument":"<fname>","description":"Load phenotype data from the specified file, instead of using the values in the main input fileset."},{"names":["--all-pheno"],"argument":"","description":"For basic association tests, loop through all phenotypes in --pheno file."},{"names":["--mpheno"],"argument":"<n>","description":"Load phenotype from column (n+2) in --pheno file."},{"names":["--pheno-name"],"argument":"<c>","description":"If --pheno file has a header row, use column with the given name."},{"names":["--pheno-merge"],"argument":"","description":"When the main input fileset contains an phenotype value for a sample, but the --pheno file does not, use the original value instead of treating the phenotype as missing."},{"names":["--missing-phenotype"],"argument":"<v>","description":"Set missing phenotype value (normally -9)."},{"names":["--1"],"argument":"","description":"Expect case/control phenotypes to be coded as 0 = control, 1 = case, instead of the usual 0 = missing, 1 = control, 2 = case. This also forces phenotypes to be interpreted as case/ctrl."},{"names":["--make-pheno"],"argument":"<fn> <val>","description":"Define a new case/control phenotype. If the val parameter is '*', all samples listed in the given file are cases, and everyone else is a control. (Note that, in some shells, it is necessary to surround the * with quotes.) Otherwise, all samples with third column entry equal to the val parameter are cases, and all other samples mentioned in the file are controls."},{"names":["--tail-pheno"],"argument":"<Lt> [Hbt]","description":"Downcode a scalar phenotype to a case/control phenotype. All samples with phenotype values greater than Hbt are cases, and all with values less than or equal to Lt are controls. If Hbt is unspecified, it is equal to Lt; otherwise, in-between phenotype values are set to missing."},{"names":["--covar"],"argument":"<filename> ['keep-pheno-on-missing-cov']","description":"Specify covariate file."},{"names":["--covar-name"],"argument":"<...>","description":"Specify covariate(s) in --covar file by name. Separate multiple names with spaces or commas, and use dashes to designate ranges."},{"names":["--covar-number"],"argument":"<...>","description":"Specify covariate(s) in --covar file by index."},{"names":["--no-const-covar"],"argument":"","description":"Exclude constant covariates."},{"names":["--allow-no-covars"],"argument":"","description":"Allow no covariates to be loaded from --covar file."},{"names":["--within"],"argument":"<f> ['keep-NA']","description":"Specify initial cluster assignments."},{"names":["--mwithin"],"argument":"<n>","description":"Load cluster assignments from column n+2."},{"names":["--family"],"argument":"","description":"Create a cluster for each family ID."},{"names":["--loop-assoc"],"argument":"<f> ['keep-NA']","description":"Run specified case/control association commands once for each cluster in the file, using cluster membership as the phenotype."},{"names":["--set"],"argument":"<filename>","description":"Load sets from a .set file."},{"names":["--set-names"],"argument":"<name(s)...>","description":"Load only sets named on the command line. Use spaces to separate multiple names."},{"names":["--subset"],"argument":"<filename>","description":"Load only sets named in the given text file."},{"names":["--set-collapse-all"],"argument":"<set name>","description":"Merge all sets."},{"names":["--complement-sets"],"argument":"","description":"Invert all sets. (Names gain 'C_' prefixes.)"},{"names":["--make-set-complement-all"],"argument":"<s>","description":"Equivalent to --set-collapse-all + inversion."},{"names":["--make-set"],"argument":"<filename>","description":"Define sets from a list of named bp ranges."},{"names":["--make-set-border"],"argument":"<kbs>","description":"Stretch regions in --make-set file."},{"names":["--make-set-collapse-group"],"argument":"","description":"Define sets from groups instead of sets in --make-set file."},{"names":["--keep"],"argument":"<filename>","description":"Exclude all samples not named in the file."},{"names":["--remove"],"argument":"<filename>","description":"Exclude all samples named in the file."},{"names":["--keep-fam"],"argument":"<filename>","description":"Exclude all families not named in the file."},{"names":["--remove-fam"],"argument":"<filename>","description":"Exclude all families named in the file."},{"names":["--extract"],"argument":"['range'] <f>","description":"Exclude all variants not named in the file."},{"names":["--exclude"],"argument":"['range'] <f>","description":"Exclude all variants named in the file."},{"names":["--keep-clusters"],"argument":"<filename>","description":"These can be used individually or in"},{"names":["--keep-cluster-names"],"argument":"<name(s)...>","description":"combination to define a list of clusters to keep; all samples not in a cluster in that list are then excluded. Use spaces to separate cluster names for --keep-cluster-names."},{"names":["--remove-clusters"],"argument":"<filename>","description":"Exclude all clusters named in the file."},{"names":["--remove-cluster-names"],"argument":"<name(s)...>","description":"Exclude the named clusters."},{"names":["--gene"],"argument":"<sets...>","description":"Exclude variants not in a set named on the command line. (Separate multiple set names with spaces.)"},{"names":["--gene-all"],"argument":"","description":"Exclude variants which aren't a member of any set. (PLINK 1.07 automatically did this under some circumstances.)"},{"names":["--attrib"],"argument":"<f> [att lst]","description":"Given a file assigning attributes to variants, and a"},{"names":["--attrib-indiv"],"argument":"<f> [a]","description":"comma-delimited list (with no whitespace) of attribute names, remove variants/samples which are either missing from the file or don't have any of the listed attributes. If some attribute names in the list are preceded by '-', they are treated as \"negative match conditions\" instead: variants with at least one negative match attribute are removed. The first character in the list cannot be a '-', due to how command-line parsing works; add a comma in front to get around this."},{"names":["--chr"],"argument":"<chrs...>","description":"Exclude all variants not on the given chromosome(s). Valid choices for humans are 0 (unplaced), 1-22, X, Y, XY, and MT. Separate multiple chromosomes with spaces and/or commas, and use a dash (no adjacent spaces permitted) to denote a range, e.g. \"--chr 1-4, 22, xy\"."},{"names":["--not-chr"],"argument":"<...>","description":"Reverse of --chr (exclude variants on listed chromosomes)."},{"names":["--autosome"],"argument":"","description":"Exclude all non-autosomal variants."},{"names":["--autosome-xy"],"argument":"","description":"Exclude all non-autosomal variants, except those with chromosome code XY (pseudo-autosomal region of X)."},{"names":["--snps-only"],"argument":"['just-acgt']","description":"Exclude non-SNP variants. By default, SNP = both allele codes are single-character; 'just-acgt' restricts codes to {A,C,G,T,a,c,g,t,<missing>}."},{"names":["--from"],"argument":"<var ID>","description":"Use ID(s) to specify a variant range to load. When used"},{"names":["--to"],"argument":"<var ID>","description":"together, both variants must be on the same chromosome."},{"names":["--snp"],"argument":"<var ID>","description":"Specify a single variant to load."},{"names":["--exclude-snp"],"argument":"<>","description":"Specify a single variant to exclude."},{"names":["--window"],"argument":"<kbs>","description":"With --snp or --exclude-snp, loads/excludes all variants within half the specified kb distance of the named one."},{"names":["--from-bp"],"argument":"<pos>","description":"Use physical position(s) to define a variant range to"},{"names":["--to-bp"],"argument":"<pos>","description":"load. --from-kb/--to-kb/--from-mb/--to-mb allow decimal"},{"names":["--from-kb"],"argument":"<pos>","description":"values. You must also specify a single chromosome (using"},{"names":["--to-kb"],"argument":"<pos>","description":"e.g. --chr) when using these flags."},{"names":["--from-mb","--to-mb","--snps"],"argument":"<pos>","description":"Use IDs to specify variant range(s) to load or"},{"names":["--exclude-snps"],"argument":"<...>","description":"exclude. E.g. \"--snps rs1111-rs2222, rs3333, rs4444\"."},{"names":["--thin"],"argument":"<p>","description":"Randomly remove variants, retaining each with prob. p."},{"names":["--thin-count"],"argument":"<n>","description":"Randomly remove variants until n of them remain."},{"names":["--bp-space"],"argument":"<bps>","description":"Remove variants so that each pair is no closer than the given bp distance. (Equivalent to VCFtools --thin.)"},{"names":["--thin-indiv"],"argument":"<p>","description":"Randomly remove samples, retaining with prob. p."},{"names":["--thin-indiv-count"],"argument":"<n>","description":"Randomly remove samples until n of them remain."},{"names":["--filter"],"argument":"<f> <val(s)...>","description":"Exclude all samples without a 3rd column entry in the given file matching one of the given space-separated value(s)."},{"names":["--mfilter"],"argument":"<n>","description":"Match against (n+2)th column instead."},{"names":["--geno"],"argument":"[val]","description":"Exclude variants with missing call frequencies greater than a threshold (default 0.1). (Note that the default threshold is only applied if --geno is invoked without a parameter; when --geno is not invoked, no per-variant missing call frequency ceiling is enforced at all. Other inclusion/exclusion default thresholds work the same way.)"},{"names":["--mind"],"argument":"[val]","description":"Exclude samples with missing call frequencies greater than a threshold (default 0.1)."},{"names":["--oblig-missing"],"argument":"<f1> <f2>","description":"Specify blocks of missing genotype calls for --geno/--mind to ignore. The first file should have variant IDs in the first column and block IDs in the second, while the second file should have FIDs in the first column, IIDs in the second, and block IDs in the third."},{"names":["--prune"],"argument":"","description":"Remove samples with missing phenotypes."},{"names":["--maf"],"argument":"[freq]","description":"Exclude variants with minor allele frequency lower than a threshold (default 0.01)."},{"names":["--max-maf"],"argument":"<freq>","description":"Exclude variants with MAF greater than the threshold."},{"names":["--mac","--min-ac"],"argument":"<ct>","description":"Exclude variants with minor allele count lower than the given threshold."},{"names":["--max-mac","--max-ac"],"argument":"<ct>","description":"Exclude variants with minor allele count greater than the given threshold."},{"names":["--maf-succ"],"argument":"","description":"Rule of succession MAF estimation (used in EIGENSOFT). Given j observations of one allele and k >= j observations of the other, infer a MAF of (j+1) / (j+k+2), rather than the default j / (j+k)."},{"names":["--read-freq"],"argument":"<fn>","description":"Estimate MAFs and heterozygote frequencies from the given --freq[x] report, instead of the input fileset."},{"names":["--hwe"],"argument":"<p> ['midp'] ['include-nonctrl']","description":"Exclude variants with Hardy-Weinberg equilibrium exact test p-values below a threshold."},{"names":["--me"],"argument":"<t> <v> ['var-first']","description":"Filter out trios and variants with Mendel error rates exceeding the given thresholds."},{"names":["--me-exclude-one"],"argument":"[ratio]","description":"Make --me exclude only one sample per trio."},{"names":["--qual-scores"],"argument":"<f> [qcol] [IDcol] [skip]","description":"Filter out variants with out-of-range quality scores. Default range is now [0, \\infty )."},{"names":["--qual-threshold"],"argument":"<min qual score>","description":"Set --qual-scores range floor."},{"names":["--qual-max-threshold"],"argument":"<max qual score>","description":"Set --qual-scores range ceiling."},{"names":["--allow-no-sex"],"argument":"","description":"Do not treat ambiguous-sex samples as having missing phenotypes in analysis commands. (Automatic /w --no-sex.)"},{"names":["--must-have-sex"],"argument":"","description":"Force ambiguous-sex phenotypes to missing on --make-bed/--make-just-fam/--recode/--write-covar."},{"names":["--filter-cases"],"argument":"","description":"Include only cases in the current analysis."},{"names":["--filter-controls"],"argument":"","description":"Include only controls."},{"names":["--filter-males"],"argument":"","description":"Include only males."},{"names":["--filter-females"],"argument":"","description":"Include only females."},{"names":["--filter-founders"],"argument":"","description":"Include only founders."},{"names":["--filter-nonfounders"],"argument":"","description":"Include only nonfounders."},{"names":["--nonfounders"],"argument":"","description":"Include nonfounders in allele freq/HWE calculations."},{"names":["--make-founders"],"argument":"['require-2-missing'] ['first']","description":"Clear parental IDs for those with 1+ missing parent(s)."},{"names":["--recode-allele"],"argument":"<fn>","description":"With --recode A/A-transpose/AD, count alleles named in the file (otherwise A1 alleles are always counted)."},{"names":["--output-chr"],"argument":"<MT code>","description":"Set chromosome coding scheme in output files by providing the desired human mitochondrial code. (Options are '26', 'M', 'MT', '0M', 'chr26', 'chrM', and 'chrMT'.)"},{"names":["--output-missing-genotype"],"argument":"<ch>","description":"Set the code used to represent missing genotypes in output files (normally the --missing-genotype value)."},{"names":["--output-missing-phenotype"],"argument":"<s>","description":"Set the string used to represent missing phenotypes in output files (normally the --missing-phenotype value)."},{"names":["--zero-cluster"],"argument":"<f>","description":"In combination with --within/--family, set blocks of genotype calls to missing. The input file should have variant IDs in the first column and cluster IDs in the second. This must now be used with --make-bed and no other output commands."},{"names":["--set-hh-missing"],"argument":"","description":"Cause --make-bed and --recode to set heterozygous haploid genotypes to missing."},{"names":["--set-mixed-mt-missing"],"argument":"","description":"Cause --make-bed and --recode to set mixed MT genotypes to missing."},{"names":["--split-x"],"argument":"<bp1> <bp2> ['no-fail']","description":"Changes chromosome code of all chrX variants with bp position <= bp1 or >= bp2 to XY."},{"names":["--merge-x"],"argument":"['no-fail']","description":"Merge XY chromosome back with X."},{"names":["--set-me-missing"],"argument":"","description":"Cause --make-bed to set Mendel errors to missing."},{"names":["--fill-missing-a2"],"argument":"","description":"Cause --make-bed to replace all missing calls with homozygous A2 calls."},{"names":["--set-missing-var-ids"],"argument":"<t>","description":"Given a template string with a '@' where the chromosome code should go and '#' where the bp coordinate belongs, --set-missing-var-ids assigns chromosome-and-bp-based IDs to unnamed variants. You may also use '$1' and '$2' to refer to allele names in the template string, and in fact this becomes essential when multiple variants share the same coordinate."},{"names":["--new-id-max-allele-len"],"argument":"<n>","description":"Specify maximum number of leading characters from allele names to include in new variant IDs (default 23)."},{"names":["--missing-var-code"],"argument":"<string>","description":"Change unnamed variant code (default '.')."},{"names":["--update-chr"],"argument":"<f> [chrcol] [IDcol]  [skip]","description":"Update variant chromosome codes."},{"names":["--update-cm"],"argument":"<f> [cmcol]  [IDcol]  [skip]","description":"Update centimorgan positions."},{"names":["--update-map"],"argument":"<f> [bpcol]  [IDcol]  [skip]","description":"Update variant bp positions."},{"names":["--update-name"],"argument":"<f> [newcol] [oldcol] [skip]","description":"Update variant IDs."},{"names":["--update-alleles"],"argument":"<fname>","description":"Update variant allele codes."},{"names":["--allele1234"],"argument":"['multichar']","description":"Interpret/recode A/C/G/T alleles as 1/2/3/4. With 'multichar', converts all A/C/G/Ts in allele names to 1/2/3/4s."},{"names":["--alleleACGT"],"argument":"['multichar']","description":"Reverse of --allele1234."},{"names":["--update-ids"],"argument":"<f>","description":"Update sample IDs."},{"names":["--update-parents"],"argument":"<f>","description":"Update parental IDs."},{"names":["--update-sex"],"argument":"<f> [n]","description":"Update sexes. Sex (1 or M = male, 2 or F = female, 0 = missing) is loaded from column n+2 (default n is 1)."},{"names":["--flip"],"argument":"<filename>","description":"Flip alleles (A<->T, C<->G) for SNP IDs in the file."},{"names":["--flip-subset"],"argument":"<fn>","description":"Only apply --flip to samples in --flip-subset file."},{"names":["--flip-scan-window"],"argument":"<ct+1>","description":"Set --flip-scan max variant ct dist. (def. 10)."},{"names":["--flip-scan-window-kb"],"argument":"<x>","description":"Set --flip-scan max kb distance (default 1000)."},{"names":["--flip-scan-threshold"],"argument":"<x>","description":"Set --flip-scan min correlation (default 0.5)."},{"names":["--keep-allele-order"],"argument":"","description":"Keep the allele order defined in the .bim file,"},{"names":["--real-ref-alleles"],"argument":"","description":"instead of forcing A2 to be the major allele."},{"names":["--a1-allele"],"argument":"<f> [a1col] [IDcol] [skip]","description":"Force alleles in the file to A1."},{"names":["--a2-allele"],"argument":"<filename> [a2col] [IDcol] [skip]","description":"Force alleles in the file to A2. (\"--a2-allele <VCF filename> 4 3 '#'\", which scrapes reference allele assignments from a VCF file, is especially useful.)"},{"names":["--indiv-sort"],"argument":"<m> [f]","description":"Specify FID/IID sort order."},{"names":["--with-phenotype"],"argument":"['no-parents'] [{no-sex | female-2}]","description":"Include more sample info in new .cov file."},{"names":["--dummy-coding"],"argument":"[N] ['no-round']","description":"Split categorical variables (n categories, 2 < n <= N, default N is 49) into n-1 binary dummy variables when writing covariate file."},{"names":["--merge-mode"],"argument":"<n>","description":"Adjust --[b]merge/--merge-list behavior based on a numeric code."},{"names":["--merge-equal-pos"],"argument":"","description":"With --merge/--bmerge/--merge-list, merge variants with different names but identical positions. (Exception: same-position chromosome code 0 variants aren't merged.)"},{"names":["--mendel-duos"],"argument":"","description":"Make Mendel error checks consider samples with only one parent in the dataset."},{"names":["--mendel-multigen"],"argument":"","description":"Make Mendel error checks consider (great-)grandparental genotypes when parental genotype data is missing."},{"names":["--ld-window"],"argument":"<ct+1>","description":"Set --r/--r2 max variant ct pairwise distance (usu. 10)."},{"names":["--ld-window-kb"],"argument":"<x>","description":"Set --r/--r2 max kb pairwise distance (usually 1000)."},{"names":["--ld-window-cm"],"argument":"<x>","description":"Set --r/--r2 max centimorgan pairwise distance."},{"names":["--ld-window-r2"],"argument":"<x>","description":"Set threshold for --r2 report inclusion (usually 0.2)."},{"names":["--ld-snp"],"argument":"<var ID>","description":"Set first variant in all --r/--r2 pairs."},{"names":["--ld-snps"],"argument":"<vID...>","description":"Restrict first --r/--r2 variant to the given ranges."},{"names":["--ld-snp-list"],"argument":"<f>","description":"Restrict first --r/--r2 var. to those named in the file."},{"names":["--list-all"],"argument":"","description":"Generate the 'all' mode report when using --show-tags in file mode."},{"names":["--tag-kb"],"argument":"<kbs>","description":"Set --show-tags max tag kb distance (default 250)."},{"names":["--tag-r2"],"argument":"<val>","description":"Set --show-tags min tag r-squared (default 0.8)"},{"names":["--tag-mode2"],"argument":"","description":"Use two-column --show-tags (file mode) I/O format."},{"names":["--ld-xchr"],"argument":"<code>","description":"Set chrX model for --indep[-pairwise], --r/--r2, --flip-scan, and --show-tags."},{"names":["--blocks-max-kb"],"argument":"<kbs>","description":"Set --blocks maximum haploblock span (def. 200)."},{"names":["--blocks-min-maf"],"argument":"<cutoff>","description":"Adjust --blocks MAF minimum (default 0.05)."},{"names":["--blocks-strong-lowci"],"argument":"<x>","description":"Set --blocks \"strong LD\" CI thresholds (defaults"},{"names":["--blocks-strong-highci"],"argument":"<x>","description":"0.70 and 0.98)."},{"names":["--blocks-recomb-highci"],"argument":"<x>","description":"Set 'recombination' CI threshold (default 0.90)."},{"names":["--blocks-inform-frac"],"argument":"<x>","description":"Force haploblock <strong LD pairs>:<total informative pairs> ratios to be larger than this value (default 0.95)."},{"names":["--distance-wts"],"argument":"exp=<x>","description":"When computing genomic distances, assign each variant a weight of (2q(1-q))^{-x}, where q is the loaded or inferred MAF."},{"names":["--read-dists"],"argument":"<dist file> [id file]","description":"Load a triangular binary distance matrix instead of recalculating from scratch."},{"names":["--ppc-gap"],"argument":"<val>","description":"Minimum number of base pairs, in thousands, between informative pairs of markers used in --genome PPC test. 500 if unspecified."},{"names":["--min"],"argument":"<cutoff>","description":"Specify minimum PI_HAT for inclusion in --genome report."},{"names":["--max"],"argument":"<cutoff>","description":"Specify maximum PI_HAT for inclusion in --genome report."},{"names":["--homozyg-match"],"argument":"<>","description":"Set minimum concordance across jointly homozygous variants for a pairwise allelic match to be declared."},{"names":["--pool-size"],"argument":"<ct>","description":"Set minimum size of pools in \"--homozyg group\" report."},{"names":["--read-genome"],"argument":"<fn>","description":"Load --genome report for --cluster/--neighbour, instead of recalculating IBS and PPC test p-values from scratch."},{"names":["--ppc"],"argument":"<p-val>","description":"Specify minimum PPC test p-value within a cluster."},{"names":["--mc"],"argument":"<max size>","description":"Specify maximum cluster size."},{"names":["--mcc"],"argument":"<c1> <c2>","description":"Specify maximum case and control counts per cluster."},{"names":["--K"],"argument":"<min count>","description":"Specify minimum cluster count."},{"names":["--ibm"],"argument":"<val>","description":"Specify minimum identity-by-missingness."},{"names":["--match"],"argument":"<f> [mv]","description":"Use covariate values to restrict clustering. Without --match-type, two samples can only be in the same cluster if all covariates match. The optional second parameter specifies a covariate value to treat as missing."},{"names":["--match-type"],"argument":"<f>","description":"Refine interpretation of --match file. The --match-type file is expected to be a single line with as many entries as the --match file has covariates; '0' entries specify \"negative matches\" (i.e. samples with equal covariate values cannot be in the same cluster), '1' entries specify \"positive matches\" (default), and '-1' causes the corresponding covariate to be ignored."},{"names":["--qmatch"],"argument":"<f> [m]","description":"Force all members of a cluster to have similar"},{"names":["--qt"],"argument":"<fname>","description":"quantitative covariate values. The --qmatch file contains the covariate values, while the --qt file is a list of nonnegative tolerances (and '-1's marking covariates to skip)."},{"names":["--pca-cluster-names"],"argument":"<...>","description":"These can be used individually or in combination"},{"names":["--pca-clusters"],"argument":"<fname>","description":"to define a list of clusters to use in the basic --pca computation. (--pca-cluster-names expects a space-delimited sequence of cluster names, while --pca-clusters expects a file with one cluster name per line.) All samples outside those clusters will then be projected on to the calculated PCs."},{"names":["--mds-plot"],"argument":"<dims> ['by-cluster'] ['eigendecomp'] ['eigvals']","description":"Multidimensional scaling analysis. Requires --cluster."},{"names":["--cell"],"argument":"<thresh>","description":"Skip some --model tests when a contingency table entry is smaller than the given threshold."},{"names":["--condition"],"argument":"<var ID> [{dominant | recessive}]","description":"Add one variant as a --linear or --logistic covariate."},{"names":["--condition-list"],"argument":"<f> [{dominant | recessive}]","description":"Add variants named in the file as --linear/--logistic covariates."},{"names":["--parameters"],"argument":"<...>","description":"Include only the given covariates/interactions in the --linear/--logistic models, identified by a list of 1-based indices and/or ranges of them."},{"names":["--tests"],"argument":"<all> [...]","description":"Perform a (joint) test on the specified term(s) in the --linear/--logistic model, identified by 1-based indices and/or ranges of them. If permutation was requested, it is based on this test."},{"names":["--vif"],"argument":"<max VIF>","description":"Set VIF threshold for --linear multicollinearity check (default 50)."},{"names":["--xchr-model"],"argument":"<code>","description":"Set the X chromosome --linear/--logistic model."},{"names":["--lasso-select-covars"],"argument":"[cov(s)...]","description":"Subject some or all covariates to LASSO model selection."},{"names":["--adjust"],"argument":"['gc'] ['log10'] ['qq-plot']","description":"Report some multiple-testing corrections."},{"names":["--lambda"],"argument":"<val>","description":"Set genomic control lambda for --adjust."},{"names":["--ci"],"argument":"<size>","description":"Report confidence intervals for odds ratios."},{"names":["--pfilter"],"argument":"<val>","description":"Filter out association test results with higher p-values."},{"names":["--aperm"],"argument":"<min perms - 1>","description":"[max   perms] [alpha] [beta] [init interval] [slope] Set up to six parameters controlling adaptive permutation tests."},{"names":["--aperm"],"argument":"<min perms - 1>","description":"[alpha] [beta] [init interval] [slope] Set up to six parameters controlling adaptive permutation tests."},{"names":["--aperm"],"argument":"<min perms - 1> max   perms","description":"[alpha] [beta] [init interval] [slope] Set up to six parameters controlling adaptive permutation tests."},{"names":["--mperm-save"],"argument":"","description":"Save best max(T) permutation test statistics."},{"names":["--mperm-save-all"],"argument":"","description":"Save all max(T) permutation test statistics."},{"names":["--set-p"],"argument":"<p-val>","description":"Adjust set test significant variant p-value ceiling (default 0.05)."},{"names":["--set-r2"],"argument":"[v] ['write']","description":"Adjust set test significant variant pairwise r^2 ceiling (default 0.5). 'write' causes violating pairs to be dumped to <output prefix>.ldset."},{"names":["--set-max"],"argument":"<ct>","description":"Adjust set test maximum # of significant variants considered per set (default 5)."},{"names":["--set-test-lambda"],"argument":"<v>","description":"Specify genomic control correction for set test."},{"names":["--border"],"argument":"<kbs>","description":"Extend --annotate range intervals by given # kbs."},{"names":["--annotate-snp-field"],"argument":"<nm>","description":"Set --annotate variant ID field name."},{"names":["--clump-p1"],"argument":"<pval>","description":"Set --clump index var. p-value ceiling (default 1e-4)."},{"names":["--clump-p2"],"argument":"<pval>","description":"Set --clump secondary p-value threshold (default 0.01)."},{"names":["--clump-r2"],"argument":"<r^2>","description":"Set --clump r^2 threshold (default 0.5)."},{"names":["--clump-kb"],"argument":"<kbs>","description":"Set --clump kb radius (default 250)."},{"names":["--clump-snp-field"],"argument":"<n...>","description":"Set --clump variant ID field name (default 'SNP'). With multiple field names, earlier names take precedence over later ones."},{"names":["--clump-field"],"argument":"<name...>","description":"Set --clump p-value field name (default 'P')."},{"names":["--clump-allow-overlap"],"argument":"","description":"Let --clump non-index vars. join multiple clumps."},{"names":["--clump-verbose"],"argument":"","description":"Request extended --clump report."},{"names":["--clump-annotate"],"argument":"<hdr...>","description":"Include named extra fields in --clump-verbose and --clump-best reports. (Field names can be separated with spaces or commas.)"},{"names":["--clump-range"],"argument":"<filename>","description":"Report overlaps between clumps and regions."},{"names":["--clump-range-border"],"argument":"<kb>","description":"Stretch regions in --clump-range file."},{"names":["--clump-index-first"],"argument":"","description":"Extract --clump index vars. from only first file."},{"names":["--clump-replicate"],"argument":"","description":"Exclude clumps which contain secondary results from only one file."},{"names":["--clump-best"],"argument":"","description":"Report best proxy for each --clump index var."},{"names":["--meta-analysis-chr-field"],"argument":"<n...>","description":"Set --meta-analysis chromosome, variant"},{"names":["--meta-analysis-snp-field"],"argument":"<n...>","description":"ID, position, A1/A2 allele, p-value,"},{"names":["--meta-analysis-bp-field"],"argument":"<n...>","description":"standard error, and/or effective sample"},{"names":["--meta-analysis-a1-field"],"argument":"<n...>","description":"size field names."},{"names":["--meta-analysis-a2-field"],"argument":"<n...>","description":"Defaults are 'CHR', 'SNP', 'BP', 'A1',"},{"names":["--meta-analysis-p-field"],"argument":"<n...>","description":"'A2', 'P', 'SE', and 'NMISS',"},{"names":["--meta-analysis-se-field"],"argument":"<n...>","description":"respectively. When multiple parameters"},{"names":["--meta-analysis-ess-field"],"argument":"<n...>","description":"are given to these flags, earlier names take precedence over later ones. Note that, if the numbers of cases and controls are unequal, effective sample size should be 4 / (1/<# cases> + 1/<# controls>)."},{"names":["--meta-analysis-report-dups"],"argument":"","description":"When a variant appears multiple times in in the same file, report that."},{"names":["--gene-list-border"],"argument":"<kbs>","description":"Extend --gene-report regions by given # of kbs."},{"names":["--gene-subset"],"argument":"<filename>","description":"Specify gene name subset for --gene-report."},{"names":["--gene-report-snp-field"],"argument":"<>","description":"Set --gene-report variant ID field name (default 'SNP'). Only relevant with --extract."},{"names":["--gap"],"argument":"<kbs>","description":"Set \"--fast-epistasis case-only\" min. gap (default 1000)."},{"names":["--epi1"],"argument":"<p-value>","description":"Set --[fast-]epistasis reporting threshold (default 5e-6 for 'boost', 1e-4 otherwise)."},{"names":["--epi2"],"argument":"<p-value>","description":"Set threshold for contributing to SIG_E count (def. 0.01)."},{"names":["--je-cellmin"],"argument":"<n>","description":"Set required number of observations per 3x3x2 contingency table cell for joint-effects test (default 5)."},{"names":["--q-score-range"],"argument":"<range file>","description":"<data file> [i] [j] ['header'] Apply --score to subset(s) of variants in the primary score list based on e.g. p-value ranges."},{"names":["--R-port"],"argument":"<port #>","description":"Connect to Rserve on a port other than 6311."},{"names":["--R-host"],"argument":"<host>","description":"Connect to Rserve host."},{"names":["--R-socket"],"argument":"<sock>","description":"Connect to Rserve socket."},{"names":["--parallel"],"argument":"<k> <n>","description":"Divide the output matrix into n pieces, and only compute the kth piece. The primary output file will have the piece number included in its name, e.g. plink.rel.13 or plink.rel.13.gz if k is 13. Concatenating these files in order will yield the full matrix of interest. (Yes, this can be done before unzipping.) N.B. This generally cannot be used to directly write a symmetric square matrix. Choose square0 or triangle shape instead, and postprocess as necessary."},{"names":["--memory"],"argument":"<val>","description":"Set size, in MB, of initial workspace malloc attempt. (Practically mandatory when using GNU parallel.)"},{"names":["--threads"],"argument":"<val>","description":"Set maximum number of concurrent threads. This has one known limitation: some BLAS/LAPACK linear algebra operations are multithreaded in a way that PLINK cannot control. If this is problematic, you should recompile against single-threaded BLAS/LAPACK."},{"names":["--d"],"argument":"<char>","description":"Change variant/covariate range delimiter (normally '-')."},{"names":["--seed"],"argument":"<val...>","description":"Set random number seed(s). Each value must be an integer between 0 and 4294967295 inclusive."},{"names":["--perm-batch-size"],"argument":"<val>","description":"Set number of permutations per batch for some permutation tests."},{"names":["--native"],"argument":"","description":"Allow Intel MKL to use processor-dependent code paths."},{"names":["--output-min-p"],"argument":"<p>","description":"Specify minimum p-value to write to reports."},{"names":["--debug"],"argument":"","description":"Use slower, more crash-resistant logging method."}],"version":"PLINK v1.90b6.21 64-bit (19 Oct 2020)"}
