{"name":"seqkit","description":"An ultrafast toolkit for FASTA/Q file manipulation","usage":"seqkit [command]","options":[{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["-h","--help"],"argument":"","description":"help for seqkit"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}],"subcommands":[{"name":"faidx","description":"create the FASTA index file and extract subsequences","usage":"seqkit faidx [flags] <fasta-file> [regions...]","options":[{"names":["-f","--full-head"],"argument":"","description":"print full header line instead of just ID. New fasta index file ending with .seqkit.fai will be created"},{"names":["-h","--help"],"argument":"","description":"help for faidx"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-I","--immediate-output"],"argument":"","description":"print output immediately, do not use write buffer"},{"names":["-l","--region-file"],"argument":"string","description":"file containing a list of regions"},{"names":["-U","--update-faidx"],"argument":"","description":"update the fasta index file if it exists. Use this if you are not sure whether the fasta file changed"},{"names":["-r","--use-regexp"],"argument":"","description":"IDs are regular expression. But subseq region is not supported here."},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"scat","description":"real time recursive concatenation and streaming of fastx files","usage":"seqkit scat [flags]","options":[{"names":["-A","--allow-gaps"],"argument":"","description":"allow gap character (-) in sequences"},{"names":["-d","--delta"],"argument":"int","description":"minimum size increase in kilobytes to trigger parsing (default 5)"},{"names":["-D","--drop-time"],"argument":"string","description":"Notification drop interval (default \"500ms\")"},{"names":["-f","--find-only"],"argument":"","description":"concatenate existing files and quit"},{"names":["-i","--format"],"argument":"string","description":"input and output format: fastq or fasta (fastq) (default \"fastq\")"},{"names":["-g","--gz-only"],"argument":"","description":"only look for gzipped files (.gz suffix)"},{"names":["-h","--help"],"argument":"","description":"help for scat"},{"names":["-I","--in-format"],"argument":"string","description":"input format: fastq or fasta (fastq)"},{"names":["-O","--out-format"],"argument":"string","description":"output format: fastq or fasta"},{"names":["-b","--qual-ascii-base"],"argument":"int","description":"ASCII BASE, 33 for Phred+33 (default 33)"},{"names":["-r","--regexp"],"argument":"string","description":"regexp for watched files, by default guessed from the input format"},{"names":["-T","--time-limit"],"argument":"string","description":"quit after inactive for this time period"},{"names":["-p","--wait-pid"],"argument":"int","description":"after process with this PID exited (default -1)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"seq","description":"transform sequences (extract ID, filter by length, remove gaps, reverse complement...)","usage":"seqkit seq [flags]","options":[{"names":["-k","--color"],"argument":"","description":"colorize sequences - to be piped into \"less -R\""},{"names":["-p","--complement"],"argument":"","description":"complement sequence, flag '-v' is recommended to switch on"},{"names":["--dna2rna"],"argument":"","description":"DNA to RNA"},{"names":["-G","--gap-letters"],"argument":"string","description":"gap letters to be removed with -g/--remove-gaps (default \"- \\t.\")"},{"names":["-h","--help"],"argument":"","description":"help for seq"},{"names":["-l","--lower-case"],"argument":"","description":"print sequences in lower case"},{"names":["-M","--max-len"],"argument":"int","description":"only print sequences shorter than or equal to the maximum length (-1 for no limit) (default -1)"},{"names":["-R","--max-qual"],"argument":"float","description":"only print sequences with average quality less than this limit (-1 for no limit) (default -1)"},{"names":["-m","--min-len"],"argument":"int","description":"only print sequences longer than or equal to the minimum length (-1 for no limit) (default -1)"},{"names":["-Q","--min-qual"],"argument":"float","description":"only print sequences with average quality greater or equal than this limit (-1 for no limit) (default -1)"},{"names":["-n","--name"],"argument":"","description":"only print names/sequence headers"},{"names":["-i","--only-id"],"argument":"","description":"print IDs instead of full headers"},{"names":["-q","--qual"],"argument":"","description":"only print qualities"},{"names":["-b","--qual-ascii-base"],"argument":"int","description":"ASCII BASE, 33 for Phred+33 (default 33)"},{"names":["-g","--remove-gaps"],"argument":"","description":"remove gaps letters set by -G/--gap-letters, e.g., spaces, tabs, and dashes (gaps \"-\" in aligned sequences)"},{"names":["-r","--reverse"],"argument":"","description":"reverse sequence"},{"names":["--rna2dna"],"argument":"","description":"RNA to DNA"},{"names":["-s","--seq"],"argument":"","description":"only print sequences"},{"names":["-u","--upper-case"],"argument":"","description":"print sequences in upper case"},{"names":["-v","--validate-seq"],"argument":"","description":"validate bases according to the alphabet"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"sliding","description":"extract subsequences in sliding windows","usage":"seqkit sliding [flags]","options":[{"names":["-c","--circular"],"argument":"","description":"circular genome (same to -C/--circular-genome)"},{"names":["-C","--circular-genome"],"argument":"","description":"circular genome (same to -c/--circular)"},{"names":["-g","--greedy"],"argument":"","description":"greedy mode, i.e., exporting last subsequences even shorter than the windows size"},{"names":["-h","--help"],"argument":"","description":"help for sliding"},{"names":["-s","--step"],"argument":"int","description":"step size"},{"names":["-S","--suffix"],"argument":"string","description":"suffix added to the sequence ID (default \"_sliding\")"},{"names":["-W","--window"],"argument":"int","description":"window size"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"stats","description":"simple statistics of FASTA/Q files","usage":"seqkit stats [flags]","options":[{"names":["-N","--N"],"argument":"strings","description":"append other N50-like stats as new columns. value range [0, 100], multiple values supported, e.g., -N 50,90 or -N 50 -N 90"},{"names":["-a","--all"],"argument":"","description":"all statistics, including quartiles of seq length, sum_gap, N50"},{"names":["-b","--basename"],"argument":"","description":"only output basename of files"},{"names":["-E","--fq-encoding"],"argument":"string","description":"fastq quality encoding. available values: 'sanger', 'solexa', 'illumina-1.3+', 'illumina-1.5+', 'illumina-1.8+'. (default \"sanger\")"},{"names":["-G","--gap-letters"],"argument":"string","description":"gap letters (default \"- .\")"},{"names":["-h","--help"],"argument":"","description":"help for stats"},{"names":["-e","--skip-err"],"argument":"","description":"skip error, only show warning message"},{"names":["-S","--skip-file-check"],"argument":"","description":"skip input file checking when given files or a file list."},{"names":["-i","--stdin-label"],"argument":"string","description":"label for replacing default \"-\" for stdin (default \"-\")"},{"names":["-T","--tabular"],"argument":"","description":"output in machine-friendly tabular format"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"subseq","description":"get subsequences by region/gtf/bed, including flanking sequences","usage":"seqkit subseq [flags]","options":[{"names":["--bed"],"argument":"string","description":"by tab-delimited BED file"},{"names":["--chr"],"argument":"strings","description":"select limited sequence with sequence IDs when using --gtf or --bed (multiple value supported, case ignored)"},{"names":["-d","--down-stream"],"argument":"int","description":"down stream length"},{"names":["--feature"],"argument":"strings","description":"select limited feature types (multiple value supported, case ignored, only works with GTF)"},{"names":["--gtf"],"argument":"string","description":"by GTF (version 2.2) file"},{"names":["--gtf-tag"],"argument":"string","description":"output this tag as sequence comment (default \"gene_id\")"},{"names":["-h","--help"],"argument":"","description":"help for subseq"},{"names":["-f","--only-flank"],"argument":"","description":"only return up/down stream sequence"},{"names":["-r","--region"],"argument":"string","description":"by region. e.g 1:12 for first 12 bases, -12:-1 for last 12 bases, 13:-1 for cutting first 12 bases. type \"seqkit subseq -h\" for more examples"},{"names":["-R","--region-coord"],"argument":"","description":"append coordinates to sequence ID for -r/--region"},{"names":["-u","--up-stream"],"argument":"int","description":"up stream length"},{"names":["-U","--update-faidx"],"argument":"","description":"update the fasta index file if it exists. Use this if you are not sure whether the fasta file changed"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"translate","description":"translate DNA/RNA to protein sequence (supporting ambiguous bases)","usage":"seqkit translate [flags]","options":[{"names":["-x","--allow-unknown-codon"],"argument":"","description":"translate unknown code to 'X'. And you may not use flag"},{"names":["--trim"],"argument":"which removes 'X'","description":"-F, --append-frame append frame information to sequence ID"},{"names":["--clean"],"argument":"","description":"change all STOP codon positions from the '*' character"},{"names":["-f","--frame"],"argument":"strings","description":"frame(s) to translate, available value: 1, 2, 3, -1, -2,"},{"names":["-M","--init-codon-as-M"],"argument":"","description":"translate initial codon at beginning to 'M'"},{"names":["-l","--list-transl-table"],"argument":"int","description":"show details of translate table N, 0 for all (default -1)"},{"names":["-L","--list-transl-table-with-amb-codons"],"argument":"int","description":"show details of translate table N (including ambigugous"},{"names":["-m","--min-len"],"argument":"int","description":"the minimum length of amino acid sequence"},{"names":["-s","--out-subseqs"],"argument":"","description":"output individual amino acid subsequences seperated by"},{"names":["-e","--skip-translate-errors"],"argument":"","description":"skip errors during translate and output blank sequence"},{"names":["-T","--transl-table"],"argument":"int","description":"translate table/genetic code, type 'seqkit translate"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"watch","description":"monitoring and online histograms of sequence features","usage":"seqkit watch [flags]","options":[{"names":["-B","--bins"],"argument":"int","description":"number of histogram bins (default -1)"},{"names":["-W","--delay"],"argument":"int","description":"sleep this many seconds after online plotting (default 1)"},{"names":["-y","--dump"],"argument":"","description":"print histogram data to stderr instead of plotting"},{"names":["-f","--fields"],"argument":"string","description":"target fields, available values: ReadLen, MeanQual, GC, GCSkew (default \"ReadLen\")"},{"names":["-h","--help"],"argument":"","description":"help for watch"},{"names":["-O","--img"],"argument":"string","description":"save histogram to this PDF/image file"},{"names":["-H","--list-fields"],"argument":"","description":"print out a list of available fields"},{"names":["-L","--log"],"argument":"","description":"log10(x+1) transform numeric values"},{"names":["-x","--pass"],"argument":"","description":"pass through mode (write input to stdout)"},{"names":["-p","--print-freq"],"argument":"int","description":"print/report after this many records (-1 for print after EOF) (default -1)"},{"names":["-b","--qual-ascii-base"],"argument":"int","description":"ASCII BASE, 33 for Phred+33 (default 33)"},{"names":["-Q","--quiet-mode"],"argument":"","description":"supress all plotting to stderr"},{"names":["-R","--reset"],"argument":"","description":"reset histogram after every report"},{"names":["-v","--validate-seq"],"argument":"","description":"validate bases according to the alphabet"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"convert","description":"convert FASTQ quality encoding between Sanger, Solexa and Illumina","usage":"seqkit convert [flags]","options":[{"names":["-d","--dry-run"],"argument":"","description":"dry run"},{"names":["-f","--force"],"argument":"","description":"for Illumina-1.8+ -> Sanger, truncate scores > 40 to 40"},{"names":["--from"],"argument":"string","description":"source quality encoding. if not given, we'll guess it"},{"names":["-h","--help"],"argument":"","description":"help for convert"},{"names":["-n","--nrecords"],"argument":"int","description":"number of records for guessing quality encoding (default 1000)"},{"names":["-N","--thresh-B-in-n-most-common"],"argument":"int","description":"threshold of 'B' in top N most common quality for guessing Illumina 1.5. (default 2)"},{"names":["-F","--thresh-illumina1.5-frac"],"argument":"float","description":"threshold of faction of Illumina 1.5 in the leading N records (default 0.1)"},{"names":["--to"],"argument":"string","description":"target quality encoding (default \"Sanger\")"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"fa2fq","description":"retrieve corresponding FASTQ records by a FASTA file","usage":"seqkit fa2fq [flags]","options":[{"names":["-f","--fasta-file"],"argument":"string","description":"FASTA file)"},{"names":["-h","--help"],"argument":"","description":"help for fa2fq"},{"names":["-P","--only-positive-strand"],"argument":"","description":"only search on positive strand"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"fq2fa","description":"convert FASTQ to FASTA","usage":"seqkit fq2fa [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for fq2fa"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"fx2tab","description":"convert FASTA/Q to tabular format (and length, GC content, average quality...)","usage":"seqkit fx2tab [flags]","options":[{"names":["-a","--alphabet"],"argument":"","description":"print alphabet letters"},{"names":["-q","--avg-qual"],"argument":"","description":"print average quality of a read"},{"names":["-B","--base-content"],"argument":"strings","description":"print base content. (case ignored, multiple values supported) e.g. -B AT -B N"},{"names":["-C","--base-count"],"argument":"strings","description":"print base count. (case ignored, multiple values supported) e.g. -C AT -C N"},{"names":["-I","--case-sensitive"],"argument":"","description":"calculate case sensitive base content/sequence hash"},{"names":["-g","--gc"],"argument":"","description":"print GC content"},{"names":["-G","--gc-skew"],"argument":"","description":"print GC-Skew"},{"names":["-H","--header-line"],"argument":"","description":"print header line"},{"names":["-h","--help"],"argument":"","description":"help for fx2tab"},{"names":["-l","--length"],"argument":"","description":"print sequence length"},{"names":["-n","--name"],"argument":"","description":"only print names (no sequences and qualities)"},{"names":["-Q","--no-qual"],"argument":"","description":"only output two column even for FASTQ file"},{"names":["-i","--only-id"],"argument":"","description":"print ID instead of full head"},{"names":["-b","--qual-ascii-base"],"argument":"int","description":"ASCII BASE, 33 for Phred+33 (default 33)"},{"names":["-s","--seq-hash"],"argument":"","description":"print hash (MD5) of sequence"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"tab2fx","description":"convert tabular format to FASTA/Q format","usage":"seqkit tab2fx [flags]","options":[{"names":["-b","--buffer-size"],"argument":"string","description":"size of buffer, supported unit: K, M, G. You need increase the value when \"bufio.Scanner: token too long\" error reported (default \"1G\")"},{"names":["-p","--comment-line-prefix"],"argument":"strings","description":"comment line prefix (default [#,//])"},{"names":["-h","--help"],"argument":"","description":"help for tab2fx"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"amplicon","description":"extract amplicon (or specific region around it) via primer(s)","usage":"seqkit amplicon [flags]","options":[{"names":["-5-3-1"],"argument":"","description":"x/y"},{"names":["--bed"],"argument":"","description":"output in BED6+1 format with amplicon as the 7th column"},{"names":["-f","--flanking-region"],"argument":"","description":"region is flanking region"},{"names":["-F","--forward"],"argument":"string","description":"forward primer (5'-primer-3'), degenerate bases allowed"},{"names":["-h","--help"],"argument":"","description":"help for amplicon"},{"names":["-I","--immediate-output"],"argument":"","description":"print output immediately, do not use write buffer"},{"names":["-m","--max-mismatch"],"argument":"int","description":"max mismatch when matching primers, no degenerate bases allowed"},{"names":["-P","--only-positive-strand"],"argument":"","description":"only search on positive strand"},{"names":["-M","--output-mismatches"],"argument":"","description":"append the total mismatches and mismatches of 5' end and 3' end"},{"names":["-p","--primer-file"],"argument":"string","description":"3- or 2-column tabular primer file, with first column as primer name"},{"names":["-r","--region"],"argument":"string","description":"specify region to return. type \"seqkit amplicon -h\" for detail"},{"names":["-R","--reverse"],"argument":"string","description":"reverse primer (5'-primer-3'), degenerate bases allowed"},{"names":["-u","--save-unmatched"],"argument":"","description":"also save records that do not match any primer"},{"names":["-s","--strict-mode"],"argument":"","description":"strict mode, i.e., discarding seqs not fully matching (shorter) given region range"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"fish","description":"look for short sequences in larger sequences using local alignment","usage":"seqkit fish [flags]","options":[{"names":["-a","--all"],"argument":"","description":"search all"},{"names":["-p","--aln-params"],"argument":"string","description":"alignment parameters in format \"<match>,<mismatch>,<gap_open>,<gap_extend>\" (default \"4,-4,-2,-1\")"},{"names":["-h","--help"],"argument":"","description":"help for fish"},{"names":["-i","--invert"],"argument":"","description":"print out references not matching with any query"},{"names":["-q","--min-qual"],"argument":"float","description":"minimum mapping quality (default 5)"},{"names":["-b","--out-bam"],"argument":"string","description":"save aligmnets to this BAM file (memory intensive)"},{"names":["-x","--pass"],"argument":"","description":"pass through mode (write input to stdout)"},{"names":["-g","--print-aln"],"argument":"","description":"print sequence alignments"},{"names":["-D","--print-desc"],"argument":"","description":"print full sequence header"},{"names":["-f","--query-fastx"],"argument":"string","description":"query fasta"},{"names":["-F","--query-sequences"],"argument":"string","description":"query sequences"},{"names":["-r","--ranges"],"argument":"string","description":"target ranges, for example: \":10,30:40,-20:\""},{"names":["-s","--stranded"],"argument":"","description":"search + strand only"},{"names":["-v","--validate-seq"],"argument":"","description":"validate bases according to the alphabet"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"grep","description":"search sequences by ID/name/sequence/sequence motifs, mismatch allowed","usage":"seqkit grep [flags]","options":[{"names":["-D","--allow-duplicated-patterns"],"argument":"","description":"output records multiple times when duplicated patterns are given"},{"names":["-n","--by-name"],"argument":"","description":"match by full name instead of just ID"},{"names":["-s","--by-seq"],"argument":"","description":"search subseq on seq. Both positive and negative strand are searched by default, you might use -P/--only-positive-strand. Mismatch allowed using flag -m/--max-mismatch"},{"names":["-c","--circular"],"argument":"","description":"circular genome"},{"names":["-C","--count"],"argument":"","description":"just print a count of matching records. with the -v/--invert-match flag, count non-matching records"},{"names":["-d","--degenerate"],"argument":"","description":"pattern/motif contains degenerate base"},{"names":["--delete-matched"],"argument":"","description":"delete a pattern right after being matched, this keeps the firstly matched data and speedups when using regular expressions"},{"names":["-h","--help"],"argument":"","description":"help for grep"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-I","--immediate-output"],"argument":"","description":"print output immediately, do not use write buffer"},{"names":["-v","--invert-match"],"argument":"","description":"invert the sense of matching, to select non-matching records"},{"names":["-m","--max-mismatch"],"argument":"int","description":"max mismatch when matching by seq. For large genomes like human genome, using mapping/alignment tools would be faster"},{"names":["-P","--only-positive-strand"],"argument":"","description":"only search on the positive strand"},{"names":["-p","--pattern"],"argument":"strings","description":"search pattern (multiple values supported. Attention: use double quotation marks for patterns containing comma, e.g., -p '\"A{2,}\"')"},{"names":["-f","--pattern-file"],"argument":"string","description":"pattern file (one record per line)"},{"names":["-R","--region"],"argument":"string","description":"specify sequence region for searching. e.g 1:12 for first 12 bases, -12:-1 for last 12 bases"},{"names":["-r","--use-regexp"],"argument":"","description":"patterns are regular expression"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"locate","description":"locate subsequences/motifs, mismatch allowed","usage":"seqkit locate [flags]","options":[{"names":["--bed"],"argument":"","description":"output in BED6 format"},{"names":["-c","--circular"],"argument":"","description":"circular genome. type \"seqkit locate -h\" for details"},{"names":["-d","--degenerate"],"argument":"","description":"pattern/motif contains degenerate base"},{"names":["--gtf"],"argument":"","description":"output in GTF format"},{"names":["-h","--help"],"argument":"","description":"help for locate"},{"names":["-M","--hide-matched"],"argument":"","description":"do not show matched sequences"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-I","--immediate-output"],"argument":"","description":"print output immediately, do not use write buffer"},{"names":["-s","--max-len-to-show"],"argument":"int","description":"show at most X characters for the search pattern or matched sequences"},{"names":["-m","--max-mismatch"],"argument":"int","description":"max mismatch when matching by seq. For large genomes like human genome, using mapping/alignment tools would be faster"},{"names":["-G","--non-greedy"],"argument":"","description":"non-greedy mode, faster but may miss motifs overlapping with others"},{"names":["-P","--only-positive-strand"],"argument":"","description":"only search on positive strand"},{"names":["-p","--pattern"],"argument":"strings","description":"pattern/motif (multiple values supported. Attention: use double quotation marks for patterns containing comma, e.g., -p '\"A{2,}\"')"},{"names":["-f","--pattern-file"],"argument":"string","description":"pattern/motif file (FASTA format)"},{"names":["-F","--use-fmi"],"argument":"","description":"use FM-index for much faster search of lots of sequence patterns"},{"names":["-r","--use-regexp"],"argument":"","description":"patterns/motifs are regular expression"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"common","description":"find common/shared sequences of multiple files by id/name/sequence","usage":"seqkit common [flags]","options":[{"names":["-n","--by-name"],"argument":"","description":"match by full name instead of just id"},{"names":["-s","--by-seq"],"argument":"","description":"match by sequence"},{"names":["-e","--check-embedded-seqs"],"argument":"","description":"check embedded sequences, e.g., if a sequence is part of another one, we'll keep the shorter one"},{"names":["-h","--help"],"argument":"","description":"help for common"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-P","--only-positive-strand"],"argument":"","description":"only considering the positive strand when comparing by sequence"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"duplicate","description":"duplicate sequences N times","usage":"seqkit duplicate [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for duplicate"},{"names":["-n","--times"],"argument":"int","description":"duplication number (default 1)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"head","description":"print first N FASTA/Q records","usage":"seqkit head [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for head"},{"names":["-n","--number"],"argument":"int","description":"print first N FASTA/Q records (default 10)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"head-genome","description":"print sequences of the first genome with common prefixes in name","usage":"seqkit head-genome [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for head-genome"},{"names":["-m","--mini-common-words"],"argument":"int","description":"minimal shared prefix words (default 1)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"pair","description":"match up paired-end reads from two fastq files","usage":"seqkit pair [flags]","options":[{"names":["-f","--force"],"argument":"","description":"overwrite output directory"},{"names":["-h","--help"],"argument":"","description":"help for pair"},{"names":["-O","--out-dir"],"argument":"string","description":"output directory"},{"names":["-1","--read1"],"argument":"string","description":"(gzipped) read1 file"},{"names":["-2","--read2"],"argument":"string","description":"(gzipped) read2 file"},{"names":["-u","--save-unpaired"],"argument":"","description":"save unpaired reads if there are"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"range","description":"print FASTA/Q records in a range (start:end)","usage":"seqkit range [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for range"},{"names":["-r","--range"],"argument":"string","description":"range. e.g., 1:12 for first 12 records (head -n 12), -12:-1 for last 12 records (tail -n 12)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"rmdup","description":"remove duplicated sequences by ID/name/sequence","usage":"seqkit rmdup [flags]","options":[{"names":["-n","--by-name"],"argument":"","description":"by full name instead of just id"},{"names":["-s","--by-seq"],"argument":"","description":"by seq"},{"names":["-D","--dup-num-file"],"argument":"string","description":"file to save numbers and ID lists of duplicated seqs"},{"names":["-d","--dup-seqs-file"],"argument":"string","description":"file to save duplicated seqs"},{"names":["-h","--help"],"argument":"","description":"help for rmdup"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-P","--only-positive-strand"],"argument":"","description":"only considering positive strand when comparing by sequence"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"sample","description":"sample sequences by number or proportion","usage":"seqkit sample [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for sample"},{"names":["-n","--number"],"argument":"int","description":"sample by number (result may not exactly match), DO NOT use on large FASTQ files."},{"names":["-p","--proportion"],"argument":"float","description":"sample by proportion"},{"names":["-s","--rand-seed"],"argument":"int","description":"random seed. For paired-end data, use the same seed across fastq files to sample the same read pairs (default 11)"},{"names":["-2","--two-pass"],"argument":"","description":"2-pass mode read files twice to lower memory usage. Not allowed when reading from stdin"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"split","description":"split sequences into files by id/seq region/size/parts (mainly for FASTA)","usage":"seqkit split [flags]","options":[{"names":["-i","--by-id"],"argument":"","description":"split squences according to sequence ID"},{"names":["--by-id-prefix"],"argument":"string","description":"file prefix for --by-id"},{"names":["-p","--by-part"],"argument":"int","description":"split sequences into N parts"},{"names":["--by-part-prefix"],"argument":"string","description":"file prefix for --by-part"},{"names":["-r","--by-region"],"argument":"string","description":"split squences according to subsequence of given region. e.g 1:12 for first 12 bases, -12:-1 for last 12 bases. type \"seqkit split -h\" for more examples"},{"names":["--by-region-prefix"],"argument":"string","description":"file prefix for --by-region"},{"names":["-s","--by-size"],"argument":"int","description":"split sequences into multi parts with N sequences"},{"names":["--by-size-prefix"],"argument":"string","description":"file prefix for --by-size"},{"names":["-d","--dry-run"],"argument":"","description":"dry run, just print message and no files will be created."},{"names":["-e","--extension"],"argument":"string","description":"set output file extension, e.g., \".gz\", \".xz\", or \".zst\""},{"names":["-f","--force"],"argument":"","description":"overwrite output directory"},{"names":["-h","--help"],"argument":"","description":"help for split"},{"names":["-I","--ignore-case"],"argument":"","description":"ignore case when using -i/--by-id"},{"names":["-k","--keep-temp"],"argument":"","description":"keep temporary FASTA and .fai file when using 2-pass mode"},{"names":["-O","--out-dir"],"argument":"string","description":"output directory (default value is $infile.split)"},{"names":["-2","--two-pass"],"argument":"","description":"two-pass mode read files twice to lower memory usage. (only for FASTA format)"},{"names":["-U","--update-faidx"],"argument":"","description":"update the fasta index file if it exists. Use this if you are not sure whether the fasta file changed"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"split2","description":"split sequences into files by size/parts (FASTA, PE/SE FASTQ)","usage":"seqkit split2 [flags]","options":[{"names":["-l","--by-length"],"argument":"string","description":"split sequences into chunks of >=N bases, supports K/M/G suffix"},{"names":["--by-length-prefix"],"argument":"string","description":"file prefix for --by-length. The placeholder \"{read}\" is needed for paired-end files."},{"names":["-p","--by-part"],"argument":"int","description":"split sequences into N parts with the round robin distribution"},{"names":["--by-part-prefix"],"argument":"string","description":"file prefix for --by-part. The placeholder \"{read}\" is needed for paired-end files."},{"names":["-s","--by-size"],"argument":"int","description":"split sequences into multi parts with N sequences"},{"names":["--by-size-prefix"],"argument":"string","description":"file prefix for --by-size. The placeholder \"{read}\" is needed for paired-end files."},{"names":["-e","--extension"],"argument":"string","description":"set output file extension, e.g., \".gz\", \".xz\", or \".zst\""},{"names":["-f","--force"],"argument":"","description":"overwrite output directory"},{"names":["-h","--help"],"argument":"","description":"help for split2"},{"names":["-O","--out-dir"],"argument":"string","description":"output directory (default value is $infile.split)"},{"names":["-1","--read1"],"argument":"string","description":"(gzipped) read1 file"},{"names":["-2","--read2"],"argument":"string","description":"(gzipped) read2 file"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"concat","description":"concatenate sequences with the same ID from multiple files","usage":"seqkit concat [flags]","options":[{"names":["-F","--fill"],"argument":"string","description":"fill with N bases/residues for IDs missing in some files when using -f/--full"},{"names":["-f","--full"],"argument":"","description":"keep all sequences, like full/outer join"},{"names":["-h","--help"],"argument":"","description":"help for concat"},{"names":["-s","--separator"],"argument":"string","description":"separator for descriptions of records with the same ID (default \"|\")"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"mutate","description":"edit sequence (point mutation, insertion, deletion)","usage":"seqkit mutate [flags]","options":[{"names":["-n","--by-name"],"argument":"","description":"[match seqs to mutate] match by full name instead of just id"},{"names":["-d","--deletion"],"argument":"string","description":"deletion mutation: deleting subsequence in a range. e.g., -d 1:2 for deleting leading two bases, -d -3:-1 for removing last 3 bases"},{"names":["-h","--help"],"argument":"","description":"help for mutate"},{"names":["-I","--ignore-case"],"argument":"","description":"[match seqs to mutate] ignore case of search pattern"},{"names":["-i","--insertion"],"argument":"string","description":"insertion mutation: inserting bases behind of given position, e.g., -i 0:ACGT for inserting ACGT at the beginning, -1:* for add * to the end"},{"names":["-v","--invert-match"],"argument":"","description":"[match seqs to mutate] invert the sense of matching, to select non-matching records"},{"names":["-s","--pattern"],"argument":"strings","description":"[match seqs to mutate] search pattern (multiple values supported. Attention: use double quotation marks for patterns containing comma, e.g., -p '\"A{2,}\"'))"},{"names":["-f","--pattern-file"],"argument":"string","description":"[match seqs to mutate] pattern file (one record per line)"},{"names":["-p","--point"],"argument":"strings","description":"point mutation: changing base at given position. e.g., -p 2:C for setting 2nd base as C, -p -1:A for change last base as A"},{"names":["-r","--use-regexp"],"argument":"","description":"[match seqs to mutate] search patterns are regular expression"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"rename","description":"rename duplicated IDs","usage":"seqkit rename [flags]","options":[{"names":["-n","--by-name"],"argument":"","description":"check duplication by full name instead of just id"},{"names":["-f","--force"],"argument":"","description":"overwrite output directory"},{"names":["-h","--help"],"argument":"","description":"help for rename"},{"names":["-m","--multiple-outfiles"],"argument":"","description":"write results into separated files for multiple input files"},{"names":["-O","--out-dir"],"argument":"string","description":"output directory (default \"renamed\")"},{"names":["-1","--rename-1st-rec"],"argument":"","description":"rename the first record as well"},{"names":["-s","--separator"],"argument":"string","description":"separator between original ID/name and the counter (default \"_\")"},{"names":["-N","--start-num"],"argument":"int","description":"starting count number for *duplicated* IDs/names, should be greater than zero (default 2)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"replace","description":"replace name/sequence by regular expression","usage":"seqkit replace [flags]","options":[{"names":["-s","--by-seq"],"argument":"","description":"replace seq (only FASTA)"},{"names":["--f-by-name"],"argument":"","description":"[target filter] match by full name instead of just ID"},{"names":["--f-by-seq"],"argument":"","description":"[target filter] search subseq on seq, both positive and negative strand are searched, and mismatch allowed using flag -m/--max-mismatch"},{"names":["--f-ignore-case"],"argument":"","description":"[target filter] ignore case"},{"names":["--f-invert-match"],"argument":"","description":"[target filter] invert the sense of matching, to select non-matching records"},{"names":["--f-only-positive-strand"],"argument":"","description":"[target filter] only search on positive strand"},{"names":["--f-pattern"],"argument":"strings","description":"[target filter] search pattern (multiple values supported. Attention: use double quotation marks for patterns containing comma, e.g., -p '\"A{2,}\"')"},{"names":["--f-pattern-file"],"argument":"string","description":"[target filter] pattern file (one record per line)"},{"names":["--f-use-regexp"],"argument":"","description":"[target filter] patterns are regular expression"},{"names":["-h","--help"],"argument":"","description":"help for replace"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-K","--keep-key"],"argument":"","description":"keep the key as value when no value found for the key (only for sequence name)"},{"names":["-U","--keep-untouch"],"argument":"","description":"do not change anything when no value found for the key (only for sequence name)"},{"names":["-I","--key-capt-idx"],"argument":"int","description":"capture variable index of key (1-based) (default 1)"},{"names":["-m","--key-miss-repl"],"argument":"string","description":"replacement for key with no corresponding value"},{"names":["-k","--kv-file"],"argument":"string","description":"tab-delimited key-value file for replacing key with value when using \"{kv}\" in -r (--replacement) (only for sequence name)"},{"names":["--nr-width"],"argument":"int","description":"minimum width for {nr} in flag -r/--replacement. e.g., formatting \"1\" to \"001\" by --nr-width 3 (default 1)"},{"names":["-p","--pattern"],"argument":"string","description":"search regular expression"},{"names":["-r","--replacement"],"argument":"string","description":"replacement. supporting capture variables. e.g. $1 represents the text of the first submatch. ATTENTION: for *nix OS, use SINGLE quote NOT double quotes or use the \\ escape character. Record number and file name is also supported by \"{nr}\" and \"{fn}\".use ${1} instead of $1 when {kv} given!"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"restart","description":"reset start position for circular genome","usage":"seqkit restart [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for restart"},{"names":["-i","--new-start"],"argument":"int","description":"new start position (1-base, supporting negative value counting from the end) (default 1)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"sana","description":"sanitize broken single line FASTQ files","usage":"seqkit sana [flags]","options":[{"names":["-A","--allow-gaps"],"argument":"","description":"allow gap character (-) in sequences"},{"names":["-i","--format"],"argument":"string","description":"input and output format: fastq or fasta (default \"fastq\")"},{"names":["-h","--help"],"argument":"","description":"help for sana"},{"names":["-I","--in-format"],"argument":"string","description":"input format: fastq or fasta"},{"names":["-O","--out-format"],"argument":"string","description":"output format: fastq or fasta"},{"names":["-b","--qual-ascii-base"],"argument":"int","description":"ASCII BASE, 33 for Phred+33 (default 33)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"shuffle","description":"shuffle sequences","usage":"seqkit shuffle [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for shuffle"},{"names":["-k","--keep-temp"],"argument":"","description":"keep temporary FASTA and .fai file when using 2-pass mode"},{"names":["-s","--rand-seed"],"argument":"int","description":"rand seed for shuffle (default 23)"},{"names":["-2","--two-pass"],"argument":"","description":"two-pass mode read files twice to lower memory usage. (only for FASTA format)"},{"names":["-U","--update-faidx"],"argument":"","description":"update the fasta index file if it exists. Use this if you are not sure whether the fasta file changed"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"sort","description":"sort sequences by id/name/sequence/length","usage":"seqkit sort [flags]","options":[{"names":["-b","--by-bases"],"argument":"","description":"by non-gap bases"},{"names":["-l","--by-length"],"argument":"","description":"by sequence length"},{"names":["-n","--by-name"],"argument":"","description":"by full name instead of just id"},{"names":["-s","--by-seq"],"argument":"","description":"by sequence"},{"names":["-G","--gap-letters"],"argument":"string","description":"gap letters (default \"- \\t.\")"},{"names":["-h","--help"],"argument":"","description":"help for sort"},{"names":["-i","--ignore-case"],"argument":"","description":"ignore case"},{"names":["-k","--keep-temp"],"argument":"","description":"keep temporary FASTA and .fai file when using 2-pass mode"},{"names":["-N","--natural-order"],"argument":"","description":"sort in natural order, when sorting by IDs/full name"},{"names":["-r","--reverse"],"argument":"","description":"reverse the result"},{"names":["-L","--seq-prefix-length"],"argument":"int","description":"length of sequence prefix on which seqkit sorts by sequences (0 for whole sequence) (default 10000)"},{"names":["-2","--two-pass"],"argument":"","description":"two-pass mode read files twice to lower memory usage. (only for FASTA format)"},{"names":["-U","--update-faidx"],"argument":"","description":"update the fasta index file if it exists. Use this if you are not sure whether the fasta file changed"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"bam","description":"monitoring and online histograms of BAM record features","usage":"seqkit bam [flags]","options":[{"names":["-B","--bins"],"argument":"int","description":"number of histogram bins (default -1)"},{"names":["-N","--bundle"],"argument":"int","description":"partition BAM file into loci (-1) or bundles with this minimum size"},{"names":["-c","--count"],"argument":"string","description":"count reads per reference and save to this file"},{"names":["-W","--delay"],"argument":"int","description":"sleep this many seconds after plotting (default 1)"},{"names":["-y","--dump"],"argument":"","description":"print histogram data to stderr instead of plotting"},{"names":["-G","--exclude-ids"],"argument":"string","description":"exclude records with IDs contained in this file"},{"names":["-e","--exec-after"],"argument":"string","description":"execute command after reporting"},{"names":["-E","--exec-before"],"argument":"string","description":"execute command before reporting"},{"names":["-f","--field"],"argument":"string","description":"target fields"},{"names":["-g","--grep-ids"],"argument":"string","description":"only keep records with IDs contained in this file"},{"names":["-h","--help"],"argument":"","description":"help for bam"},{"names":["-C","--idx-count"],"argument":"","description":"fast read per reference counting based on the BAM index"},{"names":["-i","--idx-stat"],"argument":"","description":"fast statistics based on the BAM index"},{"names":["-O","--img"],"argument":"string","description":"save histogram to this PDF/image file"},{"names":["-H","--list-fields"],"argument":"","description":"list all available BAM record features"},{"names":["-L","--log"],"argument":"","description":"log10(x+1) transform numeric values"},{"names":["-q","--map-qual"],"argument":"int","description":"minimum mapping quality"},{"names":["-x","--pass"],"argument":"","description":"passthrough mode (forward filtered BAM to output)"},{"names":["-k","--pretty"],"argument":"","description":"pretty print certain TSV outputs"},{"names":["-F","--prim-only"],"argument":"","description":"filter out non-primary alignment records"},{"names":["-p","--print-freq"],"argument":"int","description":"print/report after this many records (-1 for print after EOF) (default -1)"},{"names":["-Q","--quiet-mode"],"argument":"","description":"supress all plotting to stderr"},{"names":["-M","--range-max"],"argument":"float","description":"discard record with field (-f) value greater than this flag (default NaN)"},{"names":["-m","--range-min"],"argument":"float","description":"discard record with field (-f) value less than this flag (default NaN)"},{"names":["-R","--reset"],"argument":"","description":"reset histogram after every report"},{"names":["-Z","--silent-mode"],"argument":"","description":"supress TSV output to stderr"},{"names":["-s","--stat"],"argument":"","description":"print BAM satistics of the input files"},{"names":["-T","--tool"],"argument":"string","description":"invoke toolbox in YAML format (see documentation)"},{"names":["-@","--top-bam"],"argument":"string","description":"save the top -? records to this bam file"},{"names":["-?","--top-size"],"argument":"int","description":"size of the top-mode buffer (default 100)"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"merge-slides","description":"merge sliding windows generated from seqkit sliding","usage":"seqkit merge-slides [flags]","options":[{"names":["-b","--buffer-size"],"argument":"string","description":"size of buffer, supported unit: K, M, G. You need increase the value when \"bufio.Scanner: token too long\" error reported (default \"1G\")"},{"names":["-p","--comment-line-prefix"],"argument":"strings","description":"comment line prefix (default [#,//])"},{"names":["-h","--help"],"argument":"","description":"help for merge-slides"},{"names":["-g","--max-gap"],"argument":"int","description":"maximum distance of starting positions of two adjacent regions, 0 for no limitation, 1 for no merging."},{"names":["-l","--min-overlap"],"argument":"int","description":"minimum overlap of two adjacent regions, recommend $sliding_step_size - 1. (default 1)"},{"names":["-r","--regexp"],"argument":"string","description":"regular expression for extract the reference name and window position. (default \"^(.+)_sliding:(\\\\d+)\\\\-(\\\\d+)\")"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"sum","description":"compute message digest for all sequences in FASTA/Q files","usage":"seqkit sum [flags]","options":[{"names":["-"],"argument":"","description":"For single-stranded genomes like ssRNA genomes, use -s/--single-strand."},{"names":["-"],"argument":"","description":"The message digest would change with different values of k-mer size."},{"names":["-a","--all"],"argument":"","description":"show all information, including the sequences length and the number of sequences"},{"names":["-b","--basename"],"argument":"","description":"only output basename of files"},{"names":["-c","--circular"],"argument":"","description":"the file contains a single cicular genome sequence"},{"names":["-G","--gap-letters"],"argument":"string","description":"gap letters to delete with the flag -g/--remove-gaps (default \"- \\t.*\")"},{"names":["-h","--help"],"argument":"","description":"help for sum"},{"names":["-k","--kmer-size"],"argument":"int","description":"k-mer size for processing circular genomes (default 1000)"},{"names":["-g","--remove-gaps"],"argument":"","description":"remove gap characters set in the option -G/gap-letters"},{"names":["--rna2dna"],"argument":"","description":"convert RNA to DNA"},{"names":["-s","--single-strand"],"argument":"","description":"only consider the positive strand of a circular genome, e.g., ssRNA virus genomes"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"genautocomplete","description":"generate shell autocompletion script (bash|zsh|fish|powershell)","usage":"seqkit genautocomplete [flags]","options":[{"names":["--file"],"argument":"string","description":"autocompletion file (default \"~/.bash_completion.d/seqkit.sh\")"},{"names":["-h","--help"],"argument":"","description":"help for genautocomplete"},{"names":["--shell"],"argument":"string","description":"autocompletion type (bash|zsh|fish|powershell) (default \"bash\")"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]},{"name":"version","description":"print version information and check for update","usage":"seqkit version [flags]","options":[{"names":["-u","--check-update"],"argument":"","description":"check update"},{"names":["-h","--help"],"argument":"","description":"help for version"},{"names":["--alphabet-guess-seq-length"],"argument":"int","description":"length of sequence prefix of the first FASTA record based on which seqkit guesses the sequence type (0 for whole seq) (default 10000)"},{"names":["--compress-level"],"argument":"int","description":"compression level for gzip, zstd, xz and bzip2. type \"seqkit -h\" for the range and default value for each format (default -1)"},{"names":["--id-ncbi"],"argument":"","description":"FASTA head is NCBI-style, e.g. >gi|110645304|ref|NC_002516.2| Pseud..."},{"names":["--id-regexp"],"argument":"string","description":"regular expression for parsing ID (default \"^(\\\\S+)\\\\s?\")"},{"names":["-X","--infile-list"],"argument":"string","description":"file of input files list (one file per line), if given, they are appended to files from cli arguments"},{"names":["-w","--line-width"],"argument":"int","description":"line width when outputting FASTA format (0 for no wrap) (default 60)"},{"names":["-o","--out-file"],"argument":"string","description":"out file (\"-\" for stdout, suffix .gz for gzipped out) (default \"-\")"},{"names":["--quiet"],"argument":"","description":"be quiet and do not show extra information"},{"names":["-t","--seq-type"],"argument":"string","description":"sequence type (dna|rna|protein|unlimit|auto) (for auto, it automatically detect by the first sequence) (default \"auto\")"},{"names":["--skip-file-check"],"argument":"","description":"skip input file checking when given a file list if you believe these files do exist"},{"names":["-j","--threads"],"argument":"int","description":"number of CPUs. can also set with environment variable SEQKIT_THREADS) (default 4)"}]}],"version":"seqkit v2.10.0","tldr":"> Manipulate FASTA and FASTQ files\n\n- Get statistics of FASTA and FASTQ files\n\n`seqkit stats *.f{a,q}.gz`\n\n- Show only IDs in a FASTA file\n\n`seqkit seq {{hairpin.fa.gz}} -n -i`\n\n- Get reverse complement sequence\n\n`seqkit seq {{reads_1.fq.gz}} -r -p`\n\n- Search with list of sequence IDs\n\n`seqkit grep -f {{id.txt}} {{seqs.fq.gz}} -o {{result.fq.gz}}`\n\n- Locate subsequences\n\n`zcat {{t.fa.gz}} | seqkit locate -p {{agc}} -M | csvtk pretty -t`\n\n- Locate ORFs\n\n`zcat {{hairpin.fa.gz}} | seqkit locate -i -p \"A[TU]G(?:.{3})+?[TU](?:AG|AA|GA)\" -r | head -n 4 | csvtk pretty -t`\n\n- Sample sequence by 10%\n\n`zcat {{hairpin.fa.gz}} | seqkit sample -p 0.1 -o {{sample.fa.gz}}`\n"}
