{"name":"smof","description":"smof","usage":"<fastafile> | smof <subcommand> <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-v","--version"],"argument":"","description":"show program's version number and exit"}],"subcommands":[{"name":"cut","description":"emulates UNIX cut command, where fields are entries","usage":"<fastafile> | smof cut <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-f","--fields"],"argument":"FIELDS","description":"Indices to print, comma delimited, with ranges"},{"names":["-v","--complement"],"argument":"","description":"Invert selection"}]},{"name":"clean","description":"cleans fasta files","usage":"<fastafile> | smof clean <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-t","--type"],"argument":"n|p","description":"sequence type"},{"names":["-u","--toupper"],"argument":"","description":"convert to uppercase"},{"names":["-l","--tolower"],"argument":"","description":"convert to lowercase"},{"names":["-x","--toseq"],"argument":"","description":"removes all non-letter characters (gaps, stops, etc.)"},{"names":["-s","--reduce-header"],"argument":"","description":"Remove all text from header that follows the first word (delimited by the value of the --delimiter argument, '[ |]' by default)"},{"names":["--delimiter"],"argument":"DELIMITER","description":"The regex delimiter used by --reduce-header"},{"names":["-r","--mask-irregular"],"argument":"","description":"converts irregular letters to unknown"},{"names":["-m","--mask-lowercase"],"argument":"","description":"convert lower-case to unknown"},{"names":["-w","--col_width"],"argument":"W","description":"width of the sequence output (0 indicates no wrapping)"},{"names":["-d","--standardize"],"argument":"","description":"Convert 'X' in DNA to 'N' and '[._]' to '-' (for gaps)"}]},{"name":"consensus","description":"finds the consensus sequence for aligned sequence","usage":"<fastafile> | smof consensus <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-t","--table"],"argument":"","description":"Print count table instead of consensus"}]},{"name":"filter","description":"extracts sequences meeting the given conditions","usage":"<fastafile> | smof filter <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-s","--shorter-than"],"argument":"LEN","description":"keep only if length is less than or equal to LEN"},{"names":["-l","--longer-than"],"argument":"LEN","description":"keep only if length is greater than or equal to LEN"},{"names":["-c","--composition"],"argument":"EXPR","description":"keep only if composition meets the condition (e.g. 'GC > .5')"}]},{"name":"grep","description":"roughly emulates the UNIX grep command","usage":"<fastafile> | smof grep <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-q","--match-sequence"],"argument":"","description":"match sequence rather than header"},{"names":["-f","--file"],"argument":"FILE","description":"obtain patterns from FILE, one per line"},{"names":["-L","--files-without-match"],"argument":"","description":"print names files with no matches"},{"names":["-l","--files-with-matches"],"argument":"","description":"print names input files with matches"},{"names":["-w","--wrap"],"argument":"REG","description":"a regular expression to capture patterns"},{"names":["-P","--perl-regexp"],"argument":"","description":"treat patterns as perl regular expressions"},{"names":["-G","--ambiguous-nucl"],"argument":"","description":"parse extended nucleotide alphabet"},{"names":["-I","--case-sensitive"],"argument":"","description":"DO NOT ignore case distinctions (ignore by default)"},{"names":["-v","--invert-match"],"argument":"","description":"print non-matching entries"},{"names":["-o","--only-matching"],"argument":"","description":"show only the part that matches"},{"names":["-B","--before-context"],"argument":"N","description":"Include N characters before match"},{"names":["-A","--after-context"],"argument":"N","description":"Include N characters after match"},{"names":["-C","--context"],"argument":"N","description":"Include N characters before and after match"},{"names":["-c","--count"],"argument":"","description":"print number of entries with matches"},{"names":["-m","--count-matches"],"argument":"","description":"print number of non-overlapping matches"},{"names":["-x","--line-regexp"],"argument":"","description":"force PATTERN to match the whole text (regex allowed)"},{"names":["-X","--exact"],"argument":"","description":"force PATTERN to literally equal the text (fast)"},{"names":["-g","--gapped"],"argument":"","description":"match across gaps when searching aligned sequences"},{"names":["-b","--both-strands"],"argument":"","description":"search both strands"},{"names":["-r","--reverse-only"],"argument":"","description":"only search the reverse strand"},{"names":["-y","--no-color"],"argument":"","description":"do not print in color"},{"names":["-Y","--force-color"],"argument":"","description":"print in color even to non-tty (DANGEROUS)"},{"names":["-S","--preserve-color"],"argument":"","description":"Preserve incoming color"},{"names":["--color"],"argument":"STR","description":"Choose a highlight color"},{"names":["--gff"],"argument":"","description":"output matches in gff format"},{"names":["--gff-type"],"argument":"STR","description":"name of searched feature"},{"names":["--fastain"],"argument":"FASTA","description":"Search for exact sequence matches against FASTA"}]},{"name":"md5sum","description":"calculate an md5 checksum for the input sequences","usage":"<fastafile> | smof md5sum <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-i","--ignore-case"],"argument":"","description":"convert all to uppercase, before hashing"},{"names":["-q","--each-sequence"],"argument":"","description":"calculate md5sum for each sequence (TAB delimited)"},{"names":["-s","--all-sequences"],"argument":"","description":"calculate one md5sum for all concatenated sequences"},{"names":["-d","--all-headers"],"argument":"","description":"calculate one md5sum for all concatenated headers"},{"names":["-r","--replace-header"],"argument":"","description":"replace the header of each entry with the checksum of the sequence"}]},{"name":"head","description":"writes the first sequences in a file","usage":"<fastafile> | smof head <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-n","--entries"],"argument":"K","description":"print first K entries; or use -n -K to print all but the last K entries"},{"names":["-f","--first"],"argument":"K","description":"print first K letters of each sequence"},{"names":["-l","--last"],"argument":"K","description":"print last K letters of each sequence"}]},{"name":"permute","description":"randomly order sequence","usage":"<fastafile> | smof permute <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-w","--word-size"],"argument":"INT","description":"size of each word (default=1)"},{"names":["-s","--start-offset"],"argument":"INT","description":"number of letters to ignore at beginning (default=0)"},{"names":["-e","--end-offset"],"argument":"INT","description":"number of letters to ignore at end (default=0)"},{"names":["--seed"],"argument":"SEED","description":"set random seed (for reproducibility/debugging)"}]},{"name":"reverse","description":"reverse each sequence (or reverse complement)","usage":"<fastafile> | smof reverse <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-c","--complement"],"argument":"","description":"take the reverse complement of the sequence"},{"names":["-V","--no-validate"],"argument":"","description":"do not check whether the sequence is DNA before reverse complement"},{"names":["-S","--preserve-color"],"argument":"","description":"Preserve incoming color"},{"names":["-Y","--force-color"],"argument":"","description":"print in color even to non-tty (DANGEROUS)"}]},{"name":"sample","description":"randomly select entries from fasta file","usage":"<fastafile> | smof sample <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-n","--number"],"argument":"NUMBER","description":"sample size (default=1)"},{"names":["--seed"],"argument":"SEED","description":"set random seed (for reproducibility/debugging)"}]},{"name":"sniff","description":"extract info about the sequence","usage":"<fastafile> | smof sniff <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"}]},{"name":"sort","description":"sort sequences","usage":"<fastafile> | smof sort <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-x","--regex"],"argument":"REG","description":"sort by single regex capture"},{"names":["-r","--reverse"],"argument":"","description":"reverse sort"},{"names":["-n","--numeric-sort"],"argument":"","description":"numeric sort"},{"names":["-l","--length-sort"],"argument":"","description":"sort by sequence length"},{"names":["-R","--random-sort"],"argument":"","description":"randomly sort sequences"},{"names":["-k","--key"],"argument":"KEY","description":"Key to sort on (column number or tag)"},{"names":["-t","--field-separator"],"argument":"FIELD_SEPARATOR","description":"The field separator (default: '|')"},{"names":["-p","--pair-separator"],"argument":"PAIR_SEPARATOR","description":"The separator between a tag and value (default: '=')"}]},{"name":"split","description":"split a fasta file into smaller files","usage":"<fastafile> | smof split <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-n","--number"],"argument":"NUMBER","description":"Number of output files or sequences per file"},{"names":["-q","--seqs"],"argument":"","description":"split by maximum sequences per file"},{"names":["-p","--prefix"],"argument":"PREFIX","description":"prefix for output files (default=\"xxx\")"}]},{"name":"stat","description":"calculate sequence statistics","usage":"<fastafile> | smof stat <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-d","--delimiter"],"argument":"DELIMITER","description":"output delimiter"},{"names":["-q","--byseq"],"argument":"","description":"write a line for each sequence"},{"names":["-I","--case-sensitive"],"argument":"","description":"match case"},{"names":["-m","--count-lower"],"argument":"","description":"count the number of lowercase characters"},{"names":["-c","--counts"],"argument":"","description":"write counts of all characters"},{"names":["-t","--type"],"argument":"","description":"guess sequence type"},{"names":["-l","--length"],"argument":"","description":"write sequence length"},{"names":["-p","--proportion"],"argument":"","description":"write proportion of each character"},{"names":["-C","--aa-profile"],"argument":"","description":"display protein profile"},{"names":["-g","--hist"],"argument":"","description":"write ascii histogram of sequence lengths"},{"names":["-G","--log-hist"],"argument":"","description":"write ascii histogram of sequence log2 lengths"}]},{"name":"subseq","description":"extract subsequence from each entry (revcomp if a<b)","usage":"<fastafile> | smof subseq <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-b","--bounds"],"argument":"N N","description":"from and to values (indexed from 1)"},{"names":["-f","--gff"],"argument":"FILE","description":"get bounds from this gff3 file"},{"names":["-k","--keep"],"argument":"","description":"With --gff, keep sequences with no matches"},{"names":["-c","--color"],"argument":"STR","description":"color subsequence (do not extract)"},{"names":["-a","--annotate"],"argument":"","description":"Append the subsequence interval to the defline"},{"names":["-Y","--force-color"],"argument":"","description":"print in color even to non-tty (DANGEROUS)"}]},{"name":"tail","description":"writes the last sequences in a file","usage":"<fastafile> | smof tail <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-n","--entries"],"argument":"K","description":"print last K entries; or use -n +K to output starting with the Kth"},{"names":["-f","--first"],"argument":"K","description":"print first K letters of each sequence"},{"names":["-l","--last"],"argument":"K","description":"print last K letters of each sequence"}]},{"name":"translate","description":"translate a DNA sequence into a protein sequence","usage":"<fastafile> | smof translate <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-s","--from-start"],"argument":"","description":"Require each product begin with a start codon"},{"names":["-f","--all-frames"],"argument":"","description":"Translate in all frames, keep longest"},{"names":["-c","--cds"],"argument":"","description":"Write the DNA coding sequence"}]},{"name":"uniq","description":"count, omit, or merge repeated entries","usage":"<fastafile> | smof uniq <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-c","--count"],"argument":"","description":"writes (count|header) in tab-delimited format"},{"names":["-d","--repeated"],"argument":"","description":"print only repeated entries"},{"names":["-u","--uniq"],"argument":"","description":"print only unique entries"},{"names":["-p","--pack"],"argument":"","description":"combine redundant sequences by concatenating the headers"},{"names":["-P","--unpack"],"argument":"","description":"reverse the pack operation"},{"names":["-z","--pack-sep"],"argument":"PACK_SEP","description":"set delimiting string for pack/unpack operations (SOH, 0x01, by default)"},{"names":["-f","--first-header"],"argument":"","description":"remove entries with duplicate headers (keep only the first)"},{"names":["--removed"],"argument":"FILE","description":"With -f, store removed sequences in FILE"}]},{"name":"wc","description":"roughly emulates the UNIX wc command","usage":"<fastafile> | smof wc <options>","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-m","--chars"],"argument":"","description":"writes the summed length of all sequences"},{"names":["-l","--lines"],"argument":"","description":"writes the total number of sequences"}]}],"version":"smof 2.22.2"}
