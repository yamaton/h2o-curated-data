{"name":"svtools","description":"svtools","usage":"svtools [-h] [--version] [--support] subcommand ...","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["--version"],"argument":"","description":"show program's version number and exit"},{"names":["--support"],"argument":"","description":"information on obtaining support"}],"subcommands":[{"name":"lsort","description":"sort N LUMPY VCF files into a single file","usage":"svtools lsort [-h] [-f <FILE>] [-r] [-t <DIRECTORY_PATH>] [-b <INT>] [<VCF> [<VCF> ...]]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-f","--vcf-list"],"argument":"<FILE>","description":"file containing a line-delimited list of VCF files to combine and sort"},{"names":["-r","--include-reference"],"argument":"","description":"whether or not to include homozygous reference or missing calls in the output."},{"names":["-t","--tempdir"],"argument":"<DIRECTORY_PATH>","description":"temporary directory"},{"names":["-b","--batchsize"],"argument":"<INT>","description":"number of files to sort in batch"}]},{"name":"lmerge","description":"merge LUMPY calls inside a single file from svtools lsort","usage":"svtools lmerge [-h] [-i <FILE>] [-p <FLOAT>] [-f <INT>] [--sum] [-g] [-w <STRING>] [-t <DIR>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-i","--inFile"],"argument":"<FILE>","description":"a sorted VCF file generated by svtools lsort. Each INFO field must contain an SNAME tag containing the sample name (e.g. SNAME=SAMPLE_NAME)"},{"names":["-p","--percent-slop"],"argument":"<FLOAT>","description":"increase the the breakpoint confidence interval both up and down stream by a given proportion of the original size"},{"names":["-f","--fixed-slop"],"argument":"<INT>","description":"increase the the breakpoint confidence interval both up and down stream by a given fixed size"},{"names":["--sum"],"argument":"","description":"calculate breakpoint PDF and position using sum algorithm instead of product"},{"names":["-g"],"argument":"","description":"include original genotypes in output. When multiple variants are merged, the last will dictate the genotype field"},{"names":["-w"],"argument":"<STRING>","description":"weighting scheme (intended for use in tiered merging), options: unweighted, carrier_wt, evidence_wt"},{"names":["-t","--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"}]},{"name":"vcfpaste","description":"paste VCFs from multiple samples","usage":"svtools vcfpaste [-h] -f <FILE> [-m <VCF>] [-t <DIR>] [-q]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-f","--vcf-list"],"argument":"<FILE>","description":"file containing a line-delimited list of VCF files to paste (required)"},{"names":["-m","--master"],"argument":"<VCF>","description":"VCF file to set first 8 columns of variant info (otherwise first file in --vcf-list)"},{"names":["-t","--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"},{"names":["-q","--sum-quals"],"argument":"","description":"sum QUAL scores of input VCFs as output QUAL score"}]},{"name":"copynumber","description":"add copynumber information using cnvnator","usage":"svtools copynumber [-h] -c <FILE> -r <FILE> -w <INT> -s <STRING> --cnvnator <PATH> [-i <VCF>] [-o <PATH>] [-t <DIR>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-c","--coordinates"],"argument":"<FILE>","description":"file containing coordinate for which to retrieve copynumber (required)"},{"names":["-r","--root"],"argument":"<FILE>","description":"CNVnator .root histogram file (required)"},{"names":["-w","--window"],"argument":"<INT>","description":"CNVnator window size (required)"},{"names":["-s","--sample"],"argument":"<STRING>","description":"sample to annotate (required)"},{"names":["--cnvnator"],"argument":"<PATH>","description":"path to cnvnator binary for the cnvnator used by speedseq (required)"},{"names":["-i","--input"],"argument":"<VCF>","description":"VCF input"},{"names":["-o","--output"],"argument":"<PATH>","description":"output VCF to write (default: stdout)"},{"names":["-t","--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"}]},{"name":"genotype","description":"compute genotype of structural variants based on breakpoint depth","usage":"svtools genotype [-h] [-i <VCF>] [-o <VCF>] -B <BAM> [-T <FASTA>] [-l <JSON>] [-m <INT>] [-n <INT>] [-q] [--max_reads <INT>] [--max_ci_dist <INT>] [--split_weight <FLOAT>] [--disc_weight <FLOAT>] [-w <BAM>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-i","--input_vcf"],"argument":"<VCF>","description":"VCF input (default: stdin)"},{"names":["-o","--output_vcf"],"argument":"<VCF>","description":"output VCF to write (default: stdout)"},{"names":["-B","--bam"],"argument":"<BAM>","description":"BAM or CRAM file"},{"names":["-T","--ref_fasta"],"argument":"<FASTA>","description":"Indexed reference FASTA file (recommended for reading CRAM files)"},{"names":["-l","--lib_info"],"argument":"<JSON>","description":"create/read JSON file of library information"},{"names":["-m","--min_aligned"],"argument":"<INT>","description":"minimum number of aligned bases to consider read as evidence [20]"},{"names":["-n"],"argument":"<INT>","description":"number of pairs to sample from BAM file for building insert size distribution [1000000]"},{"names":["-q","--sum_quals"],"argument":"","description":"add genotyping quality to existing QUAL (default: overwrite QUAL field)"},{"names":["--max_reads"],"argument":"<INT>","description":"maximum number of reads to assess at any variant (reduces processing time in high-depth regions, default: 10000)"},{"names":["--max_ci_dist"],"argument":"<INT>","description":"maximum size of a confidence interval before 95% CI is used intead (default: 1e10)"},{"names":["--split_weight"],"argument":"<FLOAT>","description":"weight for split reads [1]"},{"names":["--disc_weight"],"argument":"<FLOAT>","description":"weight for discordant paired-end reads [1]"},{"names":["-w","--write_alignment"],"argument":"<BAM>","description":"write relevant reads to BAM file"}]},{"name":"afreq","description":"add allele frequency information to a VCF file","usage":"svtools afreq [-h] [-t <DIR>] [<VCF>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-t","--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"}]},{"name":"bedpetobed12","description":"convert a BEDPE file to BED12 format for viewing in IGV or the UCSC browser","usage":"svtools bedpetobed12 [-h] [-i <BEDPE>] [-o <BED12>] [-n <STRING>] [-d <INT>] [-t <DIR>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-i","--input"],"argument":"<BEDPE>","description":"BEDPE input file"},{"names":["-o","--output"],"argument":"<BED12>","description":"Output BED12 to write (default: stdout)"},{"names":["-n","--name"],"argument":"<STRING>","description":"The name of the track. Default is 'BEDPE'"},{"names":["-d","--maxdist"],"argument":"<INT>","description":"The minimum distance for drawing intrachromosomal features as if they are interchromosomal (i.e., without a line spanning the two footprints). Default is 1Mb."},{"names":["-t","--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"}]},{"name":"bedpetovcf","description":"convert a BEDPE file to VCF","usage":"svtools bedpetovcf [-h] [-i <BEDPE>] [-o <VCF>] [-t <DIR>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-i","--input"],"argument":"<BEDPE>","description":"BEDPE input (default: stdin)"},{"names":["-o","--output"],"argument":"<VCF>","description":"Output VCF to write (default: stdout)"},{"names":["-t","--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"}]},{"name":"vcftobedpe","description":"convert a VCF file to a BEDPE file","usage":"svtools vcftobedpe [-h] [-i <VCF>] [-o <BEDPE>] [-t <DIR>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-i","--input"],"argument":"<VCF>","description":"VCF input (default: stdin)"},{"names":["-o","--output"],"argument":"<BEDPE>","description":"output BEDPE to write (default: stdout)"},{"names":["-t","--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"}]},{"name":"vcfsort","description":"sort a VCF file","usage":"svtools vcfsort [-h] [<VCF>] [<VCF>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"}]},{"name":"bedpesort","description":"sort a BEDPE file","usage":"svtools bedpesort [-h] [<BEDPE file>] [<output file>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"}]},{"name":"prune","description":"cluster and prune a BEDPE file by position based on allele frequency","usage":"svtools prune [-h] [-d <INT>] [-e <STRING>] [-s] [-o <BEDPE>] [-t <DIR>] [<BEDPE>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-d","--distance"],"argument":"<INT>","description":"max separation distance (bp) of adjacent loci in cluster [50]"},{"names":["-e","--eval-param"],"argument":"<STRING>","description":"evaluating parameter for choosing best bedpe in a cluster(e.g. af=AlleleFrequency default:af)"},{"names":["-s","--is-sorted"],"argument":"","description":"specify if an input file is sorted. Sort with svtools bedpesort. (default=False)"},{"names":["-o","--output"],"argument":"<BEDPE>","description":"output bedpe to write (default: stdout)"},{"names":["-t","--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"}]},{"name":"varlookup","description":"look for variants common between two BEDPE files","usage":"svtools varlookup [-h] [-d <INT>] [-a <BEDPE>] [-b <BEDPE>] [-c <STRING>] [-o <BEDPE>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-d","--distance"],"argument":"<INT>","description":"max separation distance (bp) of adjacent loci between bedpe files [50]"},{"names":["-a","--aFile"],"argument":"<BEDPE>","description":"pruned, merged BEDPE (A file) or standard input (-a stdin)."},{"names":["-b","--bFile"],"argument":"<BEDPE>","description":"pruned merged BEDPE (B file) (-b stdin). For pruning use svtools prune"},{"names":["-c","--cohort"],"argument":"<STRING>","description":"cohort name to add information of matching variants (default:bFile)"},{"names":["-o","--output"],"argument":"<BEDPE>","description":"output BEDPE to write (default: stdout)"}]},{"name":"classify","description":"reclassify DEL and DUP based on read depth information","usage":"svtools classify [-h] [-i <VCF>] [-o <VCF>] -g <FILE> [-a <BED>] [-f <FLOAT>] [-e <FILE>] [-s <FLOAT>] [-r <FLOAT>] [-t <STRING>] [-m <STRING>] [-d <STRING>] [--sex-chrom <STRING>] [--tempdir <DIR>]","options":[{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-i","--input"],"argument":"<VCF>","description":"VCF input"},{"names":["-o","--output"],"argument":"<VCF>","description":"VCF output [stdout]"},{"names":["-g","--gender"],"argument":"<FILE>","description":"tab delimited file of sample genders (male=1, female=2) ex: SAMPLE_A 2"},{"names":["-a","--annotation"],"argument":"<BED>","description":"BED file of annotated elements"},{"names":["-f","--fraction"],"argument":"<FLOAT>","description":"fraction of reciprocal overlap to apply annotation to variant [0.9]"},{"names":["-e","--exclude"],"argument":"<FILE>","description":"list of samples to exclude from classification algorithms"},{"names":["-s","--slope_threshold"],"argument":"<FLOAT>","description":"minimum slope absolute value of regression line to classify as DEL or DUP[1.0]"},{"names":["-r","--rsquared_threshold"],"argument":"<FLOAT>","description":"minimum R^2 correlation value of regression line to classify as DEL or DUP [0.2], for large sample reclassification"},{"names":["-t","--tSet"],"argument":"<STRING>","description":"high quality deletions & duplications training dataset[vcf], required by naive Bayes reclassification"},{"names":["-m","--method"],"argument":"<STRING>","description":"reclassification method, one of (large_sample, naive_bayes, hybrid)"},{"names":["-d","--diag_file"],"argument":"<STRING>","description":"text file to output method comparisons"},{"names":["--sex-chrom"],"argument":"<STRING>","description":"Comma-separated list of sex chromosome names [chrX,chrY]"},{"names":["--tempdir"],"argument":"<DIR>","description":"Directory for temp file downloads"}]}],"version":"svtools 0.5.1"}
