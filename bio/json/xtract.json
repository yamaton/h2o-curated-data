{"name":"xtract","description":"convert XML into a table of data values","options":[{"names":["-strict"],"argument":"","description":"Remove HTML and MathML tags."},{"names":["-mixed"],"argument":"","description":"Allow mixed content XML."},{"names":["-accent"],"argument":"","description":"Delete Unicode accents and diacritical marks."},{"names":["-ascii"],"argument":"","description":"Convert Unicode to numeric HTML character entities."},{"names":["-compress"],"argument":"","description":"Compress runs of spaces."},{"names":["-stops"],"argument":"","description":"Retain stop words in selected phrases."},{"names":["-input"],"argument":"filename","description":"Read XML from file instead of standard input."},{"names":["-transform"],"argument":"filename","description":"File of substitutions for -translate."},{"names":["-pattern","-group","-block","-subset"],"argument":"expr","description":"Name of record within set. Use of different argument names allows command-line control of nested looping."},{"names":["-path"],"argument":"path","description":"Explore by list of adjacent object names."},{"names":["-if"],"argument":"expr [constraint]","description":"Element (or @attribute) must exist and satisfy any specified constraint."},{"names":["-unless"],"argument":"expr [constraint]","description":"Skip if element matches."},{"names":["-and"],"argument":"condition","description":"Preceding and following tests must both pass."},{"names":["-or"],"argument":"condition","description":"Any passing test suffices."},{"names":["-else"],"argument":"","description":"Execute if conditional test failed."},{"names":["-position"],"argument":"pos","description":"first/last/outer/inner/even/odd/all."},{"names":["-equals"],"argument":"str","description":"String must match exactly."},{"names":["-contains"],"argument":"str","description":"Substring must be present."},{"names":["-is-within"],"argument":"str","description":"String must be present."},{"names":["-starts-with"],"argument":"str","description":"Substring must be at beginning."},{"names":["-ends-with"],"argument":"str","description":"Substring must be at end."},{"names":["-is-not"],"argument":"str","description":"String must not match."},{"names":["-is-equal-to"],"argument":"expr","description":"Object values must match."},{"names":["-differs-from"],"argument":"expr","description":"Object values must differ."},{"names":["-gt"],"argument":"N","description":"Greater than."},{"names":["-ge"],"argument":"N","description":"Greater than or equal to."},{"names":["-lt"],"argument":"N","description":"Less than to."},{"names":["-le"],"argument":"N","description":"Less than or equal to."},{"names":["-eq"],"argument":"N","description":"Equal to."},{"names":["-ne"],"argument":"N","description":"Not equal to."},{"names":["-ret"],"argument":"str","description":"Override line break between patterns."},{"names":["-tab"],"argument":"str","description":"Replace tab character between fields."},{"names":["-sep"],"argument":"str","description":"Separator between group members."},{"names":["-pfx"],"argument":"str","description":"Prefix to print before group."},{"names":["-sfx"],"argument":"str","description":"Suffix to print after group."},{"names":["-plg"],"argument":"str","description":"Prologue to print once before elements."},{"names":["-elg"],"argument":"str","description":"Epilogue to print once after elements."},{"names":["-rst"],"argument":"","description":"Reset -sep through -elg."},{"names":["-clr"],"argument":"","description":"Clear queued tab separator."},{"names":["-pfc"],"argument":"str","description":"Preface combines -clr and -pfx."},{"names":["-deq"],"argument":"str","description":"Delete and replace queued tab separator."},{"names":["-wrp"],"argument":"tag","description":"Wrap elements in XML object."},{"names":["-def"],"argument":"str","description":"Default placeholder for missing fields."},{"names":["-lbl"],"argument":"str","description":"Insert arbitrary text."},{"names":["-element"],"argument":"element","description":"Print all items that match tag name."},{"names":["-first"],"argument":"element","description":"Only print value of first item."},{"names":["-last"],"argument":"element","description":"Only print value of last item."},{"names":["-NAME"],"argument":"","description":"Record value in named variable."},{"names":["-num"],"argument":"element","description":"Count."},{"names":["-len"],"argument":"element","description":"Length."},{"names":["-sum"],"argument":"element","description":"Sum."},{"names":["-min"],"argument":"element","description":"Minimum."},{"names":["-max"],"argument":"element","description":"Maximum."},{"names":["-inc"],"argument":"element","description":"Increment."},{"names":["-dec"],"argument":"element","description":"Decrement."},{"names":["-sub"],"argument":"element","description":"Difference."},{"names":["-avg"],"argument":"element","description":"Average."},{"names":["-dev"],"argument":"element","description":"Deviation."},{"names":["-med"],"argument":"element","description":"Median."},{"names":["-bin"],"argument":"element","description":"Binary."},{"names":["-bit"],"argument":"element","description":"Bit count."},{"names":["-encode"],"argument":"element","description":"URL-encode <, >, &, \", and ' characters."},{"names":["-plain"],"argument":"element","description":"Remove embedded mixed-content markup tags."},{"names":["-upper"],"argument":"element","description":"Convert text to uppercase."},{"names":["-lower"],"argument":"element","description":"Convert text to lowercase."},{"names":["-title"],"argument":"element","description":"Capitalize initial letters of words."},{"names":["-year"],"argument":"element","description":"Extract first 4-digit year from string."},{"names":["-translate"],"argument":"element","description":"Substitute values with -transform table."},{"names":["-terms"],"argument":"element","description":"Partition text at spaces."},{"names":["-words"],"argument":"element","description":"Split at punctuation marks."},{"names":["-pairs"],"argument":"element","description":"Adjacent informative words."},{"names":["-reverse"],"argument":"element","description":"Reverse words in string."},{"names":["-letters"],"argument":"element","description":"Separate individual letters."},{"names":["-clauses"],"argument":"element","description":"Break at phrase separators."},{"names":["-indices"],"argument":"element","description":"Word pair index generation."},{"names":["-e2index"],"argument":"","description":"Create Entrez index XML."},{"names":["-revcomp"],"argument":"","description":"Reverse-complement nucleotide sequence."},{"names":["-nucleic"],"argument":"","description":"Subrange determines forward or revcomp."},{"names":["-0-based"],"argument":"element","description":"Zero-based."},{"names":["-1-based"],"argument":"element","description":"One-based."},{"names":["-ucsc-based"],"argument":"element","description":"Half-open."},{"names":["-insd"],"argument":"arg ...","description":"Generate INSDSeq extraction commands. Print them if invoked standalone; run them if invoked as part of a pipeline. Requires one or more arguments, which may appear in the following order:"},{"names":["-head"],"argument":"str","description":"Print before everything else."},{"names":["-tail"],"argument":"str","description":"Print after everything else."},{"names":["-hd"],"argument":"str","description":"Print before each record."},{"names":["-tl"],"argument":"str","description":"Print after each record."},{"names":["-require"],"argument":"str","description":"Keep records that contain a given phrase."},{"names":["-exclude"],"argument":"str","description":"Keep records that do not contain a given phrase."},{"names":["-format"],"argument":"{copy,compact,flush,indent,expand}","description":"copy Fast block copy (still applies processing flags). compact Compress runs of spaces. flush Suppress line indentation. indent Indent according to nesting depth. expand Place each attribute on a separate line."},{"names":["-unicode"],"argument":"{fuse,space,period,brackets,markdown,slash,tag}","description":"How to handle Unicode superscript and subscript digits (first converted to ASCII form in all cases). fuse Run them all together, with no additional markup. space Add spaces between digits in different positions. period Add periods between digits in different positions. brackets Surround superscripts by square brackets and subscripts by parentheses. markdown Surround superscripts with carets and subscripts with tildes. slash Add backslashes when going up in height and forward slashes when going down. tag Put superscripts in XML sup elements and subscripts in sub elements."},{"names":["-script"],"argument":"style","description":"How to handle XML sup and sub elements (denoting superscripts and subscripts, respectively). brackets Surround superscripts by square brackets and subscripts by parentheses. markdown Surround superscripts with carets and subscripts with tildes."},{"names":["-mathml"],"argument":"terse","description":"Flatten MathML markup tersely."},{"names":["-filter"],"argument":"element action target","description":"Actions: retain Keep matching elements (no-op). remove Remove matching elements. encode HTML-escape special characters. decode Decode HTML escapes. shrink Compress runs of spaces. expand Place each attribute on a separate line. accent Strip off Unicode accents."},{"names":["-verify"],"argument":"","description":"Report XML data integrity problems."},{"names":["-outline"],"argument":"","description":"Display outline of XML structure."},{"names":["-synopsis"],"argument":"","description":"Display count of unique XML paths."},{"names":["-select"],"argument":"condition","description":"Select record subset by conditions."},{"names":["-in"],"argument":"filename","description":"File of identifiers to select."},{"names":["-j2x"],"argument":"","description":"Convert JSON stream to XML suitable for -path navigation."},{"names":["-set"],"argument":"tag","description":"Replace set wrapper tag."},{"names":["-rec"],"argument":"tag","description":"Replace record wrapper tag."},{"names":["-nest"],"argument":"flat|recurse|plural|depth","description":"Nested array naming policy."},{"names":["-help"],"argument":"","description":"Print usage information and some example argument combinations."},{"names":["-examples"],"argument":"","description":"Complete examples of edirect(1) and xtract usage."},{"names":["-version"],"argument":"","description":"Print version number."}]}
