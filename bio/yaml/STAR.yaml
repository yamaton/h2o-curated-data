name: STAR
description: RNA-seq aligner
options:
  - names:
      - --versionGenome
    argument: string
    description: earliest genome index version compatible with this STAR release. Please do not change this value!
  - names:
      - --parametersFiles
    argument: file
    description: 'name of a user-defined parameters file, "-": none. Can only be defined on the command line. (default: -)'
  - names:
      - --sysShell
    argument: path
    description: path to the shell binary, preferably bash, e.g. /bin/bash.
  - names:
      - --runMode
    argument: '{alignReads|genomeGenerate|inputAlignmentsFromBAM|liftOver|soloCellFiltering}'
    description: 'type of the run. (default: alignReads)'
  - names:
      - --runThreadN
    argument: int
    description: 'number of threads to run STAR (default: 1)'
  - names:
      - --runDirPerm
    argument: '{User_RWX|All_RWX}'
    description: 'permissions for the directories created at the run-time. (default: User_RWX)'
  - names:
      - --runRNGseed
    argument: int
    description: 'random number generator seed. (default: 777)'
  - names:
      - --genomeDir
    argument: path
    description: 'path to the directory where genome files are stored (for --runMode alignReads) or will be generated (for --runMode generateGenome) (default: ./GenomeDir/)'
  - names:
      - --genomeLoad
    argument: '{LoadAndKeep|LoadAndRemove|LoadAndExit|Remove|NoSharedMemory}'
    description: 'mode of shared memory usage for the genome files. Only used with --runMode alignReads. (defaullt: NoSharedMemory)'
  - names:
      - --genomeFastaFiles
    argument: path(s)
    description: path(s) to the fasta files with the genome sequences, separated by spaces. These files should be plain text FASTA files, they *cannot* be zipped. Required for the genome generation (--runMode genomeGenerate). Can also be used in the mapping (--runMode alignReads) to add extra (new) sequences to the genome (e.g. spike-ins).
  - names:
      - --genomeChainFiles
    argument: file(s)
    description: chain files for genomic liftover. Only used with --runMode liftOver .
  - names:
      - --genomeFileSizes
    argument: int
    description: 'genome files exact sizes in bytes. Typically, this should not be defined by the user. (default: 0)'
  - names:
      - --genomeTransformOutput
    argument: '{SAM|SJ|None}'
    description: 'which output to transform back to original genome (default: None)'
  - names:
      - --genomeChrSetMitochondrial
    argument: string
    description: 'names of the mitochondrial chromosomes. Presently only used for STARsolo statisics output/ (default: chrM M MT)'
  - names:
      - --genomeChrBinNbits
    argument: int
    description: 'where chrBin is the size of the bins for genome storage: each chromosome will occupy an integer number of bins. For a genome with large number of contigs, it is recommended to scale this parameter as min(18, log2[max(GenomeLength/NumberOfReferences,ReadLength)]). (default: 18)'
  - names:
      - --genomeSAindexNbases
    argument: int
    description: 'length (bases) of the SA pre-indexing string. Typically between 10 and 15. Longer strings will use much more memory, but allow faster searches. For small genomes, the parameter --genomeSAindexNbases must be scaled down to min(14, log2(GenomeLength)/2 - 1). (default: 14)'
  - names:
      - --genomeSAsparseD
    argument: int
    description: 'suffux array sparsity, i.e. distance between indices: use bigger numbers to decrease needed RAM at the cost of mapping speed reduction (default: 1)'
  - names:
      - --genomeSuffixLengthMax
    argument: int
    description: 'maximum length of the suffixes, has to be longer than read length. -1 = infinite. (default: -1)'
  - names:
      - --genomeTransformType
    argument: '{None|Haploid|Diploid}'
    description: 'type of genome transformation (default: None)'
  - names:
      - --genomeTransformVCF
    argument: path
    description: path to VCF file for genome transformation
  - names:
      - --sjdbFileChrStartEnd
    argument: path
    description: path to the files with genomic coordinates (chr <tab> start <tab> end <tab> strand) for the splice junction introns. Multiple files can be supplied wand will be concatenated.
  - names:
      - --sjdbGTFfile
    argument: path
    description: path to the GTF file with annotations
  - names:
      - --sjdbGTFchrPrefix
    argument: path
    description: prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL annotations with UCSC genomes)
  - names:
      - --sjdbGTFfeatureExon
    argument: string
    description: 'feature type in GTF file to be used as exons for building transcripts (default: exon)'
  - names:
      - --sjdbGTFtagExonParentTranscript
    argument: string
    description: 'GTF attribute name for parent transcript ID (default "transcript_id" works for GTF files) (default: transcript_id)'
  - names:
      - --sjdbGTFtagExonParentGene
    argument: string
    description: 'GTF attribute name for parent gene ID (default "gene_id" works for GTF files) (default: gene_id)'
  - names:
      - --sjdbGTFtagExonParentGeneName
    argument: string(s)
    description: 'GTF attrbute name for parent gene name (default: gene_name)'
  - names:
      - --sjdbGTFtagExonParentGeneType
    argument: string(s)
    description: 'GTF attrbute name for parent gene type (default: gene_type gene_biotype)'
  - names:
      - --sjdbOverhang
    argument: int
    description: 'length of the donor/acceptor sequence on each side of the junctions, ideally = (mate_length - 1) (default: 100)'
  - names:
      - --sjdbScore
    argument: int
    description: 'extra alignment score for alignments that cross database junctions (default: 2)'
  - names:
      - --sjdbInsertSave
    argument: '{Basic|All}'
    description: 'which files to save when sjdb junctions are inserted on the fly at the mapping step (default: Basic)'
  - names:
      - --varVCFfile
    argument: path
    description: path to the VCF file that contains variation data. The 10th column should contain the genotype information, e.g. 0/1
  - names:
      - --inputBAMfile
    argument: path
    description: path to BAM input file, to be used with --runMode inputAlignmentsFromBAM
  - names:
      - --readFilesType
    argument: '{Fastx|SAM SE|SAM PE}'
    description: 'format of input read files (default: Fastx)'
  - names:
      - --readFilesSAMattrKeep
    argument: '{All|None}'
    description: 'for --readFilesType SAM SE/PE, which SAM tags to keep in the output BAM, e.g.: --readFilesSAMtagsKeep RG PL (default: All)'
  - names:
      - --readFilesIn
    argument: path(s)
    description: 'paths to files that contain input read1 (and, if needed, read2) (default: Read1 Read2)'
  - names:
      - --readFilesManifest
    argument: path
    description: 'path to the "manifest" file with the names of read files. The manifest file should contain 3 tab-separated columns: paired-end reads: read1_file_name $tab$ read2_file_name $tab$ read_group_line. single-end reads: read1_file_name $tab$ - $tab$ read_group_line. Spaces, but not tabs are allowed in file names. If read_group_line does not start with ID:, it can only contain one ID field, and ID: will be added to it. If read_group_line starts with ID:, it can contain several fields separated by $tab$, and all fields will be be copied verbatim into SAM @RG header line.'
  - names:
      - --readFilesPrefix
    argument: string
    description: prefix for the read files names, i.e. it will be added in front of the strings in --readFilesIn
  - names:
      - --readFilesCommand
    argument: string(s)
    description: 'command line to execute for each of the input file. This command should generate FASTA or FASTQ text and send it to stdout For example: zcat - to uncompress .gz files, bzcat - to uncompress .bz2 files, etc.'
  - names:
      - --readMapNumber
    argument: int
    description: 'number of reads to map from the beginning of the file. -1: map all reads. (default: -1)'
  - names:
      - --readMatesLengthsIn
    argument: '{Equal|NotEqual}'
    description: 'Equal/NotEqual - lengths of names,sequences,qualities for both mates are the same / not the same. NotEqual is safe in all situations. (default: NotEqual)'
  - names:
      - --readNameSeparator
    argument: string(s)
    description: 'character(s) separating the part of the read names that will be trimmed in output (read name after space is always trimmed) (default: /)'
  - names:
      - --readQualityScoreBase
    argument: int
    description: 'number to be subtracted from the ASCII code to get Phred quality score (default: 33)'
  - names:
      - --clipAdapterType
    argument: '{Hamming|CellRanger4|None}'
    description: 'adapter clipping type (default: Hamming)'
  - names:
      - --clip3pNbases
    argument: int(s)
    description: 'number(s) of bases to clip from 3p of each mate. If one value is given, it will be assumed the same for both mates. (default: 0)'
  - names:
      - --clip3pAdapterSeq
    argument: string(s)
    description: adapter sequences to clip from 3p of each mate. If one value is given, it will be assumed the same for both mates. polyA ... polyA sequence with the length equal to read length
  - names:
      - --clip3pAdapterMMp
    argument: double(s)
    description: 'max proportion of mismatches for 3p adapter clipping for each mate. If one value is given, it will be assumed the same for both mates. (default: 0.1)'
  - names:
      - --clip3pAfterAdapterNbases
    argument: int(s)
    description: 'number of bases to clip from 3p of each mate after the adapter clipping. If one value is given, it will be assumed the same for both mates. (default: 0)'
  - names:
      - --clip5pNbases
    argument: int(s)
    description: 'number(s) of bases to clip from 5p of each mate. If one value is given, it will be assumed the same for both mates. (default: 0)'
  - names:
      - --limitGenomeGenerateRAM
    argument: int
    description: 'maximum available RAM (bytes) for genome generation. (default: 31000000000)'
  - names:
      - --limitIObufferSize
    argument: int
    description: 'max available buffers size (bytes) for input/output, per thread. (default: 30000000)'
  - names:
      - --limitOutSAMoneReadBytes
    argument: int
    description: 'max size of the SAM record (bytes) for one read. Recommended value: >(2*(LengthMate1+LengthMate2+100)*outFilterMultimapNmax (default: 100000)'
  - names:
      - --limitOutSJoneRead
    argument: int
    description: 'max number of junctions for one read (including all multi-mappers) (default: 1000)'
  - names:
      - --limitOutSJcollapsed
    argument: int
    description: 'max number of collapsed junctions (default: 1000000)'
  - names:
      - --limitBAMsortRAM
    argument: int
    description: 'maximum available RAM (bytes) for sorting BAM. If =0, it will be set to the genome index size. 0 value can only be used with --genomeLoad NoSharedMemory option. (default: 0)'
  - names:
      - --limitSjdbInsertNsj
    argument: int
    description: 'maximum number of junction to be inserted to the genome on the fly at the mapping stage, including those from annotations and those detected in the 1st step of the 2-pass run (default: 1000000)'
  - names:
      - --limitNreadsSoft
    argument: int
    description: 'soft limit on the number of reads (default: -1)'
  - names:
      - --outFileNamePrefix
    argument: path
    description: 'output files name prefix (including full or relative path). Can only be defined on the command line. (default: ./)'
  - names:
      - --outTmpDir
    argument: string
    description: path to a directory that will be used as temporary by STAR. All contents of this directory will be removed! The temp directory will default to --outFileNamePrefix_STARtmp
  - names:
      - --outTmpKeep
    argument: '{None|All}'
    description: 'whether to keep the temporary files after STAR runs is finished (default: None)'
  - names:
      - --outStd
    argument: '{Log|SAM|BAM_Unsorted|BAM_SortedByCoordinate|BAM_Quant}'
    description: 'which output will be directed to stdout (standard out) (default: Log)'
  - names:
      - --outReadsUnmapped
    argument: '{None|Fastx}'
    description: 'output of unmapped and partially mapped (i.e. mapped only one mate of a paired end read) reads in separate file(s). (default: None)'
  - names:
      - --outQSconversionAdd
    argument: int
    description: 'add this number to the quality score (e.g. to convert from Illumina to Sanger, use -31) (default: 0)'
  - names:
      - --outMultimapperOrder
    argument: '{Old_2.4|Random}'
    description: 'order of multimapping alignments in the output files (default: Old_2.4)'
  - names:
      - --outSAMtype
    argument: strings
    description: 'type of SAM/BAM output. {BAM|SAM|None} for 1st word. {Unsorted|SortedByCoordinate} for 2nd and 3rd. (default: SAM)'
  - names:
      - --outSAMmode
    argument: '{None|Full|NoQS}'
    description: 'mode of SAM output (default: Full)'
  - names:
      - --outSAMstrandField
    argument: '{None|intronMotif}'
    description: 'Cufflinks-like strand field flag (default: None)'
  - names:
      - --outSAMattributes
    argument: string
    description: 'a string of desired SAM attributes, in the order desired for the output SAM. Tags can be listed in any combination/order. (default: Standard)'
  - names:
      - --outSAMattrIHstart
    argument: int
    description: 'start value for the IH attribute. 0 may be required by some downstream software, such as Cufflinks or StringTie. (default: 1)'
  - names:
      - --outSAMunmapped
    argument: string(s)
    description: 'output of unmapped reads in the SAM format. {None|Within} for 1st word. KeepPairs for 2nd. (default: None)'
  - names:
      - --outSAMorder
    argument: '{Paired|PairedKeepInputOrder}'
    description: 'type of sorting for the SAM output (default: Paired)'
  - names:
      - --outSAMprimaryFlag
    argument: '{OneBestScore|AllBestScore}'
    description: 'which alignments are considered primary - all others will be marked with 0x100 bit in the FLAG (default: OneBestScore)'
  - names:
      - --outSAMreadID
    argument: '{Standard|Number}'
    description: 'read ID record type (default: Standard)'
  - names:
      - --outSAMmapqUnique
    argument: int
    description: 'the MAPQ value for unique mappers (default: 255)'
  - names:
      - --outSAMflagOR
    argument: int
    description: 'sam FLAG will be bitwise OR''d with this value, i.e. FLAG=FLAG | outSAMflagOR. This is applied after all flags have been set by STAR, and after outSAMflagAND. Can be used to set specific bits that are not set otherwise. (default: 0)'
  - names:
      - --outSAMflagAND
    argument: int
    description: 'sam FLAG will be bitwise AND''d with this value, i.e. FLAG=FLAG & outSAMflagOR. This is applied after all flags have been set by STAR, but before outSAMflagOR. Can be used to unset specific bits that are not set otherwise. (default: 65535)'
  - names:
      - --outSAMattrRGline
    argument: string(s)
    description: SAM/BAM read group line. The first word contains the read group identifier and must start with "ID:", e.g. --outSAMattrRGline ID:xxx CN:yy "DS:z z z". xxx will be added as RG tag to each output alignment. Any spaces in the tag values have to be double quoted. Comma separated RG lines correspons to different (comma separated) input files in --readFilesIn. Commas have to be surrounded by spaces, e.g. --outSAMattrRGline ID:xxx , ID:zzz "DS:z z" , ID:yyy DS:yyyy
  - names:
      - --outSAMheaderHD
    argument: strings
    description: '@HD (header) line of the SAM header'
  - names:
      - --outSAMheaderPG
    argument: strings
    description: extra @PG (software) line of the SAM header (in addition to STAR)
  - names:
      - --outSAMheaderCommentFile
    argument: path
    description: path to the file with @CO (comment) lines of the SAM header
  - names:
      - --outSAMfilter
    argument: '{KeepOnlyAddedReferences|KeepAllAddedReferences}'
    description: 'filter the output into main SAM/BAM files (default: None)'
  - names:
      - --outSAMmultNmax
    argument: int
    description: 'max number of multiple alignments for a read that will be output to the SAM/BAM files. Note that if this value is not equal to -1, the top scoring alignment will be output first (default: -1) -1 ... all alignments (up to --outFilterMultimapNmax) will be output'
  - names:
      - --outSAMtlen
    argument: int
    description: 'calculation method for the TLEN field in the SAM/BAM files (default: 1)'
  - names:
      - --outBAMcompression
    argument: int
    description: 'BAM compression level from -1 to 10, -1=default compression (6?), 0=no compression, 10=maximum compression (default: 1)'
  - names:
      - --outBAMsortingThreadN
    argument: int
    description: 'number of threads for BAM sorting. 0 will default to min(6,--runThreadN). (default: 0)'
  - names:
      - --outBAMsortingBinsN
    argument: int
    description: 'number of genome bins fo coordinate-sorting (default: 50)'
  - names:
      - --bamRemoveDuplicatesType
    argument: '{-|UniqueIdentical|UniqueIdenticalNotMulti}'
    description: mark duplicates in the BAM file, for now only works with (i) sorted BAM fed with inputBAMfile, and (ii) for paired-end alignments only
  - names:
      - --bamRemoveDuplicatesMate2basesN
    argument: int
    description: 'number of bases from the 5'' of mate 2 to use in collapsing (e.g. for RAMPAGE) (default: 0)'
  - names:
      - --outWigType
    argument: string(s)
    description: 'type of signal output, e.g. "bedGraph" OR "bedGraph read1_5p". Requires sorted BAM: --outSAMtype BAM SortedByCoordinate. (default: None)'
  - names:
      - --outWigStrand
    argument: '{Stranded|Unstranded}'
    description: 'strandedness of wiggle/bedGraph output (default: Stranded)'
  - names:
      - --outWigReferencesPrefix
    argument: string
    description: prefix matching reference names to include in the output wiggle file, e.g. "chr", default "-" - include all references
  - names:
      - --outWigNorm
    argument: '{RPM|None}'
    description: 'type of normalization for the signal (default: RPM)'
  - names:
      - --outFilterType
    argument: '{Normal|BySJout}'
    description: 'type of filtering (default: Normal)'
  - names:
      - --outFilterMultimapScoreRange
    argument: int
    description: 'the score range below the maximum score for multimapping alignments (default: 1)'
  - names:
      - --outFilterMultimapNmax
    argument: int
    description: maximum number of loci the read is allowed to map to. Alignments (all of them) will be output only if the read maps to no more loci than this value.
  - names:
      - --outFilterMismatchNmax
    argument: int
    description: 'alignment will be output only if it has no more mismatches than this value. (default: 10)'
  - names:
      - --outFilterMismatchNoverLmax
    argument: double
    description: 'alignment will be output only if its ratio of mismatches to *mapped* length is less than or equal to this value. (default: 0.3)'
  - names:
      - --outFilterMismatchNoverReadLmax
    argument: double
    description: 'alignment will be output only if its ratio of mismatches to *read* length is less than or equal to this value. (default: 1.0)'
  - names:
      - --outFilterScoreMin
    argument: int
    description: 'alignment will be output only if its score is higher than or equal to this value. (default: 0)'
  - names:
      - --outFilterScoreMinOverLread
    argument: double
    description: 'same as outFilterScoreMin, but normalized to read length (sum of mates'' lengths for paired-end reads) (default: 0.66)'
  - names:
      - --outFilterMatchNmin
    argument: int
    description: 'alignment will be output only if the number of matched bases is higher than or equal to this value. (default: 0)'
  - names:
      - --outFilterMatchNminOverLread
    argument: double
    description: 'sam as outFilterMatchNmin, but normalized to the read length (sum of mates'' lengths for paired-end reads). (default: 0.66)'
  - names:
      - --outFilterIntronMotifs
    argument: '{None|RemoveNoncanonical|RemoveNoncanonicalUnannotated}'
    description: 'filter alignment using their motifs (default: None)'
  - names:
      - --outFilterIntronStrands
    argument: '{RemoveInconsistentStrands|None}'
    description: 'filter alignments (default: RemoveInconsistentStrands)'
  - names:
      - --outSJtype
    argument: '{Standard|None}'
    description: 'type of splice junction output (default: Standard)'
  - names:
      - --outSJfilterReads
    argument: '{All|Unique}'
    description: 'which reads to consider for collapsed splice junctions output (default: All)'
  - names:
      - --outSJfilterOverhangMin
    argument: ints
    description: '4 integers: minimum overhang length for splice junctions on both sides for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif (default: 30 12 12 12) does not apply to annotated junctions'
  - names:
      - --outSJfilterCountUniqueMin
    argument: ints
    description: '4 integers: minimum uniquely mapping read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif (default: 3 1 1 1) Junctions are output if one of outSJfilterCountUniqueMin OR outSJfilterCountTotalMin conditions are satisfied does not apply to annotated junctions'
  - names:
      - --outSJfilterCountTotalMin
    argument: ints
    description: '4 integers: minimum total (multi-mapping+unique) read count per junction for: (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif (default: 3 1 1 1) Junctions are output if one of outSJfilterCountUniqueMin OR outSJfilterCountTotalMin conditions are satisfied does not apply to annotated junctions'
  - names:
      - --outSJfilterDistToOtherSJmin
    argument: ints
    description: '4 integers>=0: minimum allowed distance to other junctions'' donor/acceptor (default: 10 0 5 10)'
  - names:
      - --outSJfilterIntronMaxVsReadN
    argument: integers
    description: 'maximum gap allowed for junctions supported by 1,2,3,,,N reads (default: 50000 100000 200000)'
  - names:
      - --scoreGap
    argument: int
    description: 'splice junction penalty (independent on intron motif) (default: 0)'
  - names:
      - --scoreGapNoncan
    argument: int
    description: 'non-canonical junction penalty (in addition to scoreGap) (default: -8)'
  - names:
      - --scoreGapGCAG
    argument: int
    description: 'GC/AG and CT/GC junction penalty (in addition to scoreGap) (default: -4)'
  - names:
      - --scoreGapATAC
    argument: int
    description: 'AT/AC and GT/AT junction penalty (in addition to scoreGap) (default: -8)'
  - names:
      - --scoreGenomicLengthLog2scale
    argument: double
    description: 'extra score logarithmically scaled with genomic length of the alignment: scoreGenomicLengthLog2scale*log2(genomicLength) (default: -0.25)'
  - names:
      - --scoreDelOpen
    argument: int
    description: 'deletion open penalty (default: -2)'
  - names:
      - --scoreDelBase
    argument: int
    description: 'deletion extension penalty per base (in addition to scoreDelOpen) (default: -2)'
  - names:
      - --scoreInsOpen
    argument: int
    description: 'insertion open penalty (default: -2)'
  - names:
      - --scoreInsBase
    argument: int
    description: 'insertion extension penalty per base (in addition to scoreInsOpen) (default: -2)'
  - names:
      - --scoreStitchSJshift
    argument: int
    description: 'maximum score reduction while searching for SJ boundaries in the stitching step (default: 1)'
  - names:
      - --seedSearchStartLmax
    argument: int
    description: 'defines the search start point through the read - the read is split into pieces no longer than this value (default: 50)'
  - names:
      - --seedSearchStartLmaxOverLread
    argument: real
    description: 'seedSearchStartLmax normalized to read length (sum of mates'' lengths for paired-end reads) (default: 1.0)'
  - names:
      - --seedSearchLmax
    argument: int
    description: 'defines the maximum length of the seeds, if =0 seed length is not limited (default: 0)'
  - names:
      - --seedMultimapNmax
    argument: int
    description: 'only pieces that map fewer than this value are utilized in the stitching procedure (default: 10000)'
  - names:
      - --seedPerReadNmax
    argument: int
    description: 'max number of seeds per read (default: 1000)'
  - names:
      - --seedPerWindowNmax
    argument: int
    description: 'max number of seeds per window (default: 50)'
  - names:
      - --seedNoneLociPerWindow
    argument: int
    description: 'max number of one seed loci per window (default: 10)'
  - names:
      - --seedSplitMin
    argument: int
    description: 'min length of the seed sequences split by Ns or mate gap (default: 12)'
  - names:
      - --seedMapMin
    argument: int
    description: 'min length of seeds to be mapped (default: 5)'
  - names:
      - --alignIntronMin
    argument: int
    description: 'minimum intron size: genomic gap is considered intron if its length>=alignIntronMin, otherwise it is considered Deletion (default: 21)'
  - names:
      - --alignIntronMax
    argument: int
    description: 'maximum intron size, if 0, max intron size will be determined by (2^winBinNbits)*winAnchorDistNbins (default: 0)'
  - names:
      - --alignMatesGapMax
    argument: int
    description: 'maximum gap between two mates, if 0, max intron gap will be determined by (2^winBinNbits)*winAnchorDistNbins (default: 0)'
  - names:
      - --alignSJoverhangMin
    argument: int
    description: 'minimum overhang (i.e. block size) for spliced alignments (default: 5)'
  - names:
      - --alignSJstitchMismatchNmax
    argument: ints
    description: '4*int>=0: maximum number of mismatches for stitching of the splice junctions (-1: no limit). (default: 0 -1 0 0) (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif.'
  - names:
      - --alignSJDBoverhangMin
    argument: int
    description: 'minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments (default: 3)'
  - names:
      - --alignSplicedMateMapLmin
    argument: int
    description: 'minimum mapped length for a read mate that is spliced (default: 0)'
  - names:
      - --alignSplicedMateMapLminOverLmate
    argument: real
    description: 'alignSplicedMateMapLmin normalized to mate length (default: 0.66)'
  - names:
      - --alignWindowsPerReadNmax
    argument: int
    description: 'max number of windows per read (default: 10000)'
  - names:
      - --alignTranscriptsPerWindowNmax
    argument: int
    description: 'max number of transcripts per window (default: 100)'
  - names:
      - --alignTranscriptsPerReadNmax
    argument: int
    description: 'max number of different alignments per read to consider (default: 10000)'
  - names:
      - --alignEndsType
    argument: '{Local|EndToEnd|Extend5pOfRead1|Extend5pOfReads12}'
    description: 'string: type of read ends alignment (default: Local)'
  - names:
      - --alignEndsProtrude
    argument: '{int, string}'
    description: 'allow protrusion of alignment ends, i.e. start (end) of the +strand mate downstream of the start (end) of the -strand mate (default: 0 ConcordantPair) 1st word: int: maximum number of protrusion bases allowed. 2nd word: string: {ConcordantPair|DiscordantPair}.'
  - names:
      - --alignSoftClipAtReferenceEnds
    argument: '{Yes|No}'
    description: 'allow the soft-clipping of the alignments past the end of the chromosomes. (default: Yes)'
  - names:
      - --alignInsertionFlush
    argument: '{None|Right}'
    description: 'how to flush ambiguous insertion positions (default: None)'
  - names:
      - --peOverlapNbasesMin
    argument: int
    description: 'minimum number of overlap bases to trigger mates merging and realignment (default: 0)'
  - names:
      - --peOverlapMMp
    argument: real
    description: 'maximum proportion of mismatched bases in the overlap area (default: 0.01)'
  - names:
      - --winAnchorMultimapNmax
    argument: int
    description: 'max number of loci anchors are allowed to map to (default: 50)'
  - names:
      - --winBinNbits
    argument: int
    description: 'log2(winBin), where winBin is the size of the bin for the windows/clustering, each window will occupy an integer number of bins. (default: 16)'
  - names:
      - --winAnchorDistNbins
    argument: int
    description: 'max number of bins between two anchors that allows aggregation of anchors into one window (default: 9)'
  - names:
      - --winFlankNbins
    argument: int
    description: 'log2(winFlank), where win Flank is the size of the left and right flanking regions for each window (default: 4)'
  - names:
      - --winReadCoverageRelativeMin
    argument: real
    description: 'minimum relative coverage of the read sequence by the seeds in a window, for STARlong algorithm only. (default: 0.5)'
  - names:
      - --winReadCoverageBasesMin
    argument: int
    description: 'minimum number of bases covered by the seeds in a window , for STARlong algorithm only. (default: 0)'
  - names:
      - --chimOutType
    argument: '{Junctions|SeparateSAMold|WithinBAM|WithinBAM HardClip|WithinBAM SoftClip}'
    description: 'type of chimeric output (default: Junctions)'
  - names:
      - --chimSegmentMin
    argument: int
    description: 'minimum length of chimeric segment length, if ==0, no chimeric output (default: 0)'
  - names:
      - --chimScoreMin
    argument: int
    description: 'minimum total (summed) score of the chimeric segments (default: 0)'
  - names:
      - --chimScoreDropMax
    argument: int
    description: 'max drop (difference) of chimeric score (the sum of scores of all chimeric segments) from the read length (default: 20)'
  - names:
      - --chimScoreSeparation
    argument: int
    description: 'minimum difference (separation) between the best chimeric score and the next one (default: 10)'
  - names:
      - --chimScoreJunctionNonGTAG
    argument: int
    description: 'penalty for a non-GT/AG chimeric junction (default: -1)'
  - names:
      - --chimJunctionOverhangMin
    argument: int
    description: 'minimum overhang for a chimeric junction (default: 20)'
  - names:
      - --chimSegmentReadGapMax
    argument: int
    description: 'maximum gap in the read sequence between chimeric segments (default: 0)'
  - names:
      - --chimFilter
    argument: '{banGenomicN|None}'
    description: 'different filters for chimeric alignments (default: banGenomicN)'
  - names:
      - --chimMainSegmentMultNmax
    argument: int
    description: 'maximum number of multi-alignments for the main chimeric segment. =1 will prohibit multimapping main segments. (default: 10)'
  - names:
      - --chimMultimapNmax
    argument: int
    description: 'maximum number of chimeric multi-alignments (default: 0) 0 ... use the old scheme for chimeric detection which only considered unique alignments'
  - names:
      - --chimMultimapScoreRange
    argument: int
    description: 'the score range for multi-mapping chimeras below the best chimeric score. Only works with --chimMultimapNmax > 1 (default: 1)'
  - names:
      - --chimNonchimScoreDropMin
    argument: int
    description: 'to trigger chimeric detection, the drop in the best non-chimeric alignment score with respect to the read length has to be greater than this value (default: 20)'
  - names:
      - --chimOutJunctionFormat
    argument: int
    description: 'formatting type for the Chimeric.out.junction file (default: 0)'
  - names:
      - --quantMode
    argument: '{TranscriptomeSAM|GeneCounts}'
    description: types of quantification requested
  - names:
      - --quantTranscriptomeBAMcompression
    argument: int
    description: 'transcriptome BAM compression level (default: 1)'
  - names:
      - --quantTranscriptomeBan
    argument: '{IndelSoftclipSingleend|Singleend}'
    description: 'prohibit various alignment type (default: IndelSoftclipSingleend)'
  - names:
      - --twopassMode
    argument: '{None|Basic}'
    description: 'string: 2-pass mapping mode. (default: None)'
  - names:
      - --twopass1readsN
    argument: int
    description: 'number of reads to process for the 1st step. Use very large number (or default -1) to map all reads in the first step. (default: -1)'
  - names:
      - --waspOutputMode
    argument: string
    description: 'WASP allele-specific output type. (default: None) This is re-implementation of the original WASP mappability filtering by Bryce van de Geijn, Graham McVicker, Yoav Gilad & Jonathan K Pritchard. Please cite the original WASP paper: Nature Methods 12, 1061–1063 (2015), https://www.nature.com/articles/nmeth.3582 .'
  - names:
      - --soloType
    argument: '{CB_UMI_Simple|CB_UMI_Complex|CB_samTagOut|SmartSeq}'
    description: 'type of single-cell RNA-seq (default: None)'
  - names:
      - --soloCBwhitelist
    argument: file(s)
    description: 'file(s) with whitelist(s) of cell barcodes. Only --soloType CB_UMI_Complex allows more than one whitelist file. (default: None)'
  - names:
      - --soloCBstart
    argument: int
    description: 'cell barcode start base (default: 1)'
  - names:
      - --soloCBlen
    argument: int
    description: 'cell barcode length (default: 16)'
  - names:
      - --soloUMIstart
    argument: int
    description: 'UMI start base (default: 17)'
  - names:
      - --soloUMIlen
    argument: int
    description: 'UMI length (default: 10)'
  - names:
      - --soloBarcodeReadLength
    argument: int
    description: 'length of the barcode read (default: 1)'
  - names:
      - --soloBarcodeMate
    argument: int
    description: 'identifies which read mate contains the barcode (CB+UMI) sequence (default: 0)'
  - names:
      - --soloCBposition
    argument: strings(s)
    description: position of Cell Barcode(s) on the barcode read.
  - names:
      - --soloUMIposition
    argument: string
    description: 'position of the UMI on the barcode read, same as soloCBposition. Example: inDrop (Zilionis et al, Nat. Protocols, 2017): --soloCBposition 3_9_3_14'
  - names:
      - --soloAdapterSequence
    argument: string
    description: adapter sequence to anchor barcodes.
  - names:
      - --soloAdapterMismatchesNmax
    argument: int 1
    description: 'maximum number of mismatches allowed in adapter sequence. (default: 1)'
  - names:
      - --soloCBmatchWLtype
    argument: '{Exact|1MM|1MM_multi|1MM_multi_pseudocounts|1MM_multi_Nbase_pseudocounts}'
    description: 'matching the Cell Barcodes to the WhiteList (default: 1MM_multi)'
  - names:
      - --soloInputSAMattrBarcodeSeq
    argument: string(s)
    description: when inputting reads from a SAM file (--readsFileType SAM SE/PE), these SAM attributes mark the barcode sequence (in proper order). For instance, for 10X CellRanger or STARsolo BAMs, use --soloInputSAMattrBarcodeSeq CR UR . This parameter is required when running STARsolo with input from SAM.
  - names:
      - --soloInputSAMattrBarcodeQual
    argument: string(s)
    description: when inputting reads from a SAM file (--readsFileType SAM SE/PE), these SAM attributes mark the barcode qualities (in proper order). For instance, for 10X CellRanger or STARsolo BAMs, use --soloInputSAMattrBarcodeQual CY UY . If this parameter is '-' (default), the quality 'H' will be assigned to all bases.
  - names:
      - --soloStrand
    argument: '{Unstranded|Forward|Reverse}'
    description: 'strandedness of the solo libraries (default: Forward)'
  - names:
      - --soloFeatures
    argument: '{Gene|SJ|GeneFull}'
    description: 'genomic features for which the UMI counts per Cell Barcode are collected (default: Gene)'
  - names:
      - --soloMultiMappers
    argument: '{Unique|Uniform|Rescue|PropUnique}'
    description: 'counting method for reads mapping to multiple genes (default: Unique)'
  - names:
      - --soloUMIdedup
    argument: string(s)               1MM_All
    description: 'type of UMI deduplication (collapsing) algorithm (default: 1MM_All)'
  - names:
      - --soloUMIfiltering
    argument: '{-|MultiGeneUMI|MultiGeneUMI_All|MultiGeneUMI_CR}'
    description: 'type of UMI filtering (for reads uniquely mapping to genes) (default: -)'
  - names:
      - --soloOutFileNames
    argument: Solo.out/          features.tsv barcodes.tsv        matrix.mtx
    description: 'file names for STARsolo output. (default: Solo.out/ features.tsv barcodes.tsv matrix.mtx) file_name_prefix gene_names barcode_sequences cell_feature_count_matrix'
  - names:
      - --soloCellFilter
    argument: string(s)
    description: 'cell filtering type and parameters (default: CellRanger2.2 3000 0.99 10)'
  - names:
      - --soloOutFormatFeaturesGeneField3
    argument: string(s)
    description: 'field 3 in the Gene features.tsv file. If "-", then no 3rd field is output. (default: "Gene Expression")'
  - names:
      - --soloCellReadStats
    argument: string(s)
    description: 'Output reads statistics for each CB. Standard ... standard output (default: None)'
version: '2.7.10a'
__meta__:
  date: '2022-05-09'

