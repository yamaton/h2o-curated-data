name: busco
description: busco
options:
  - names:
      - -i
      - --in
    argument: SEQUENCE_FILE
    description: Input sequence file in FASTA format. Can be an assembled genome or transcriptome (DNA), or protein sequences from an annotated gene set. Also possible to use a path to a directory containing multiple input files.
  - names:
      - -o
      - --out
    argument: OUTPUT
    description: Give your analysis run a recognisable short name. Output folders and files will be labelled with this name. The path to the output folder is set with --out_path.
  - names:
      - -m
      - --mode
    argument: '{genome|transcriptome|protein}'
    description: 'Specify which BUSCO analysis mode to run.   There are three valid modes: - geno or genome, for genome assemblies (DNA) - tran or transcriptome, for transcriptome assemblies (DNA) - prot or proteins, for annotated gene sets (protein)'
  - names:
      - -l
      - --lineage_dataset
    argument: LINEAGE
    description: Specify the name of the BUSCO lineage to be used.
  - names:
      - --augustus
    argument: ""
    description: Use augustus gene predictor for eukaryote runs
  - names:
      - --augustus_parameters
    argument: '"--PARAM1=VALUE1,--PARAM2=VALUE2"'
    description: Pass additional arguments to Augustus. All arguments should be contained within a single string with no white space, with each argument separated by a comma.
  - names:
      - --augustus_species
    argument: AUGUSTUS_SPECIES
    description: Specify a species for Augustus training.
  - names:
      - --auto-lineage
    argument: ""
    description: Run auto-lineage to find optimum lineage path
  - names:
      - --auto-lineage-euk
    argument: ""
    description: Run auto-placement just on eukaryote tree to find optimum lineage path
  - names:
      - --auto-lineage-prok
    argument: ""
    description: Run auto-lineage just on non-eukaryote trees to find optimum lineage path
  - names:
      - -c
      - --cpu
    argument: "N"
    description: Specify the number (N=integer) of threads/cores to use.
  - names:
      - --config
    argument: CONFIG_FILE
    description: Provide a config file
  - names:
      - --datasets_version
    argument: DATASETS_VERSION
    description: Specify the version of BUSCO datasets, e.g. odb10
  - names:
      - --download
    argument: '[dataset [dataset ...]]'
    description: Download dataset. Possible values are a specific dataset name, "all", "prokaryota", "eukaryota", or "virus". If used together with other command line arguments, make sure to place this last.
  - names:
      - --download_base_url
    argument: DOWNLOAD_BASE_URL
    description: Set the url to the remote BUSCO dataset location
  - names:
      - --download_path
    argument: DOWNLOAD_PATH
    description: Specify local filepath for storing BUSCO dataset downloads
  - names:
      - -e
      - --evalue
    argument: "N"
    description: 'E-value cutoff for BLAST searches. Allowed formats, 0.001 or 1e-03 (Default: 1e-03)'
  - names:
      - -f
      - --force
    argument: ""
    description: Force rewriting of existing files. Must be used when output files with the provided name already exist.
  - names:
      - -h
      - --help
    argument: ""
    description: Show this help message and exit
  - names:
      - --limit
    argument: "N"
    description: 'How many candidate regions (contig or transcript) to consider per BUSCO (default: 3)'
  - names:
      - --list-datasets
    argument: ""
    description: Print the list of available BUSCO datasets
  - names:
      - --long
    argument: ""
    description: 'Optimization Augustus self-training mode (Default: Off); adds considerably to the run time, but can improve results for some non-model organisms'
  - names:
      - --metaeuk_parameters
    argument: '"--PARAM1=VALUE1,--PARAM2=VALUE2"'
    description: Pass additional arguments to Metaeuk for the first run. All arguments should be contained within a single string with no white space, with each argument separated by a comma.
  - names:
      - --metaeuk_rerun_parameters
    argument: '"--PARAM1=VALUE1,--PARAM2=VALUE2"'
    description: Pass additional arguments to Metaeuk for the second run. All arguments should be contained within a single string with no white space, with each argument separated by a comma.
  - names:
      - --offline
    argument: ""
    description: To indicate that BUSCO cannot attempt to download files
  - names:
      - --out_path
    argument: OUTPUT_PATH
    description: Optional location for results folder, excluding results folder name. Default is current working directory.
  - names:
      - -q
      - --quiet
    argument: ""
    description: Disable the info logs, displays only errors
  - names:
      - -r
      - --restart
    argument: ""
    description: Continue a run that had already partially completed.
  - names:
      - --tar
    argument: ""
    description: Compress some subdirectories with many files to save space
  - names:
      - --update-data
    argument: ""
    description: Download and replace with last versions all lineages datasets and files necessary to their automated selection
  - names:
      - -v
      - --version
    argument: ""
    description: Show this version and exit
usage: busco -i [SEQUENCE_FILE] -l [LINEAGE] -o [OUTPUT_NAME] -m [MODE] [OTHER OPTIONS]
version: BUSCO 5.3.2
tldr: |
  > Benchmarking Universal Single-Copy Ortholog assessment tool.
  > More information: < https://gitlab.com/ezlab/busco#how-to-cite-busco>

  - List of available BUSCO datasets

  `busco --list-datasets`

  - Assess a genome assembly using automated prokaryote lineage with 12 CPUs.

  `busco -m genome -i {{input.fa}} -o {{OUTPUT}} --auto-lineage-prok -c {{12}}`

  - Assess an assembled transcript using bacteria_odb10 lineage with 12 CPUs.

  `busco -m transcriptome -i {{input.fa}} -o {{OUTPUT}} -l {{bacteria_odb10}} -c {{12}}`

  - Assess a gene set using bacteria_odb10 lineage with 12 CPUs.

  `busco -m protein -i {{input.fa}} -o {{OUTPUT}} -l {{bacteria_odb10}} -c {{12}}`


