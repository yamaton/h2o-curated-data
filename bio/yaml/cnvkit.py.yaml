name: cnvkit.py
description: a toolkit for copy number analysis.
usage: |-
  cnvkit.py [-h]
            {batch,target,access,antitarget,autobin,coverage,reference,fix,segment,call,diagram,scatter,heatmap,breaks,genemetrics,gainloss,sex,gender,metrics,segmetrics,bintest,import-picard,import-seg,import-theta,import-rna,export,version}
            ...
options:
  - names:
      - -h
      - --help
    argument: ""
    description: show this help message and exit
subcommands:
  - name: batch
    description: Run the complete CNVkit pipeline on one or more BAM files.
    usage: cnvkit.py batch [-h] [-m {hybrid,amplicon,wgs}] [--segment-method {cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline}] [-y] [-c] [--drop-low-coverage] [-p [PROCESSES]] [--rscript-path PATH] [-n [FILES ...]] [-f FILENAME] [-t FILENAME] [-a FILENAME] [--annotate FILENAME] [--short-names] [--target-avg-size TARGET_AVG_SIZE] [-g FILENAME] [--antitarget-avg-size ANTITARGET_AVG_SIZE] [--antitarget-min-size ANTITARGET_MIN_SIZE] [--output-reference FILENAME] [--cluster] [-r REFERENCE] [-d DIRECTORY] [--scatter] [--diagram] [bam_files ...]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -m
          - --seq-method
          - --method
        argument: '{hybrid,amplicon,wgs}'
        description: 'Sequencing assay type: hybridization capture (''hybrid''), targeted amplicon sequencing (''amplicon''), or whole genome sequencing (''wgs''). Determines whether and how to use antitarget bins. [Default: hybrid]'
      - names:
          - --segment-method
        argument: '{cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline}'
        description: 'Method used in the ''segment'' step. [Default: cbs]'
      - names:
          - -y
          - --male-reference
          - --haploid-x-reference
        argument: ""
        description: Use or assume a male reference (i.e. female samples will have +1 log-CNR of chrX; otherwise male samples would have -1 chrX).
      - names:
          - -c
          - --count-reads
        argument: ""
        description: Get read depths by counting read midpoints within each bin. (An alternative algorithm).
      - names:
          - --drop-low-coverage
        argument: ""
        description: Drop very-low-coverage bins before segmentation to avoid false-positive deletions in poor-quality tumor samples.
      - names:
          - -p
          - --processes
        argument: '[PROCESSES]'
        description: 'Number of subprocesses used to running each of the BAM files in parallel. Without an argument, use the maximum number of available CPUs. [Default: process each BAM in serial]'
      - names:
          - --rscript-path
        argument: PATH
        description: 'Path to the Rscript excecutable to use for running R code. Use this option to specify a non-default R installation. [Default: Rscript]'
      - names:
          - -n
          - --normal
        argument: '[FILES ...]'
        description: Normal samples (.bam) used to construct the pooled, paired, or flat reference. If this option is used but no filenames are given, a "flat" reference will be built. Otherwise, all filenames following this option will be used.
      - names:
          - -f
          - --fasta
        argument: FILENAME
        description: Reference genome, FASTA format (e.g. UCSC hg19.fa)
      - names:
          - -t
          - --targets
        argument: FILENAME
        description: Target intervals (.bed or .list)
      - names:
          - -a
          - --antitargets
        argument: FILENAME
        description: Antitarget intervals (.bed or .list)
      - names:
          - --annotate
        argument: FILENAME
        description: 'Use gene models from this file to assign names to the target regions. Format: UCSC refFlat.txt or ensFlat.txt file (preferred), or BED, interval list, GFF, or similar.'
      - names:
          - --short-names
        argument: ""
        description: Reduce multi-accession bait labels to be short and consistent.
      - names:
          - --target-avg-size
        argument: TARGET_AVG_SIZE
        description: Average size of split target bins (results are approximate).
      - names:
          - -g
          - --access
        argument: FILENAME
        description: Regions of accessible sequence on chromosomes (.bed), as output by the 'access' command.
      - names:
          - --antitarget-avg-size
        argument: ANTITARGET_AVG_SIZE
        description: Average size of antitarget bins (results are approximate).
      - names:
          - --antitarget-min-size
        argument: ANTITARGET_MIN_SIZE
        description: Minimum size of antitarget bins (smaller regions are dropped).
      - names:
          - --output-reference
        argument: FILENAME
        description: Output filename/path for the new reference file being created. (If given, ignores the -o/--output-dir option and will write the file to the given path. Otherwise, "reference.cnn" will be created in the current directory or specified output directory.)
      - names:
          - --cluster
        argument: ""
        description: Calculate and use cluster-specific summary stats in the reference pool to normalize samples.
      - names:
          - -r
          - --reference
        argument: REFERENCE
        description: Copy number reference file (.cnn).
      - names:
          - -d
          - --output-dir
        argument: DIRECTORY
        description: Output directory.
      - names:
          - --scatter
        argument: ""
        description: Create a whole-genome copy ratio profile as a PDF scatter plot.
      - names:
          - --diagram
        argument: ""
        description: Create an ideogram of copy ratios on chromosomes as a PDF.
  - name: target
    description: Transform bait intervals into targets more suitable for CNVkit.
    usage: cnvkit.py target [-h] [--annotate ANNOTATE] [--short-names] [--split] [-a AVG_SIZE] [-o FILENAME] interval
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --annotate
        argument: ANNOTATE
        description: 'Use gene models from this file to assign names to the target regions. Format: UCSC refFlat.txt or ensFlat.txt file (preferred), or BED, interval list, GFF, or similar.'
      - names:
          - --short-names
        argument: ""
        description: Reduce multi-accession bait labels to be short and consistent.
      - names:
          - --split
        argument: ""
        description: Split large tiled intervals into smaller, consecutive targets.
      - names:
          - -a
          - --avg-size
        argument: AVG_SIZE
        description: 'Average size of split target bins (results are approximate). [Default: 266.6666666666667]'
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output file name.
  - name: access
    description: List the locations of accessible sequence regions in a FASTA file.
    usage: cnvkit.py access [-h] [-s MIN_GAP_SIZE] [-x EXCLUDE] [-o FILENAME] fa_fname
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -s
          - --min-gap-size
        argument: MIN_GAP_SIZE
        description: 'Minimum gap size between accessible sequence regions. Regions separated by less than this distance will be joined together. [Default: 5000]'
      - names:
          - -x
          - --exclude
        argument: EXCLUDE
        description: Additional regions to exclude, in BED format. Can be used multiple times.
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output file name
  - name: antitarget
    description: Derive off-target ("antitarget") bins from target regions.
    usage: cnvkit.py antitarget [-h] [-g FILENAME] [-a AVG_SIZE] [-m MIN_SIZE] [-o FILENAME] targets
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -g
          - --access
        argument: FILENAME
        description: Regions of accessible sequence on chromosomes (.bed), as output by genome2access.py.
      - names:
          - -a
          - --avg-size
        argument: AVG_SIZE
        description: 'Average size of antitarget bins (results are approximate). [Default: 150000]'
      - names:
          - -m
          - --min-size
        argument: MIN_SIZE
        description: 'Minimum size of antitarget bins (smaller regions are dropped). [Default: 1/16 avg size, calculated]'
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output file name.
  - name: autobin
    description: Quickly calculate reasonable bin sizes from BAM read counts.
    usage: cnvkit.py autobin [-h] [-f FILENAME] [-m {hybrid,amplicon,wgs}] [-g FILENAME] [-t TARGETS] [-b BP_PER_BIN] [--target-max-size BASES] [--target-min-size BASES] [--antitarget-max-size BASES] [--antitarget-min-size BASES] [--annotate FILENAME] [--short-names] [--target-output-bed FILENAME] [--antitarget-output-bed FILENAME] bams [bams ...]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -f
          - --fasta
        argument: FILENAME
        description: Reference genome, FASTA format (e.g. UCSC hg19.fa)
      - names:
          - -m
          - --method
        argument: '{hybrid,amplicon,wgs}'
        description: 'Sequencing protocol: hybridization capture (''hybrid''), targeted amplicon sequencing (''amplicon''), or whole genome sequencing (''wgs''). Determines whether and how to use antitarget bins. [Default: hybrid]'
      - names:
          - -g
          - --access
        argument: FILENAME
        description: Sequencing-accessible genomic regions, or exons to use as possible targets (e.g. output of refFlat2bed.py)
      - names:
          - -t
          - --targets
        argument: TARGETS
        description: 'Potentially targeted genomic regions, e.g. all possible exons for the reference genome. Format: BED, interval list, etc.'
      - names:
          - -b
          - --bp-per-bin
        argument: BP_PER_BIN
        description: 'Desired average number of sequencing read bases mapped to each bin. [Default: 100000.0]'
      - names:
          - --target-max-size
        argument: BASES
        description: 'Maximum size of target bins. [Default: 20000]'
      - names:
          - --target-min-size
        argument: BASES
        description: 'Minimum size of target bins. [Default: 20]'
      - names:
          - --antitarget-max-size
        argument: BASES
        description: 'Maximum size of antitarget bins. [Default: 500000]'
      - names:
          - --antitarget-min-size
        argument: BASES
        description: 'Minimum size of antitarget bins. [Default: 500]'
      - names:
          - --annotate
        argument: FILENAME
        description: 'Use gene models from this file to assign names to the target regions. Format: UCSC refFlat.txt or ensFlat.txt file (preferred), or BED, interval list, GFF, or similar.'
      - names:
          - --short-names
        argument: ""
        description: Reduce multi-accession bait labels to be short and consistent.
      - names:
          - --target-output-bed
        argument: FILENAME
        description: Filename for target BED output. If not specified, constructed from the input file basename.
      - names:
          - --antitarget-output-bed
        argument: FILENAME
        description: Filename for antitarget BED output. If not specified, constructed from the input file basename.
  - name: coverage
    description: Calculate coverage in the given regions from BAM read depths.
    usage: cnvkit.py coverage [-h] [-f FILENAME] [-c] [-q MIN_MAPQ] [-o FILENAME] [-p [PROCESSES]] bam_file interval
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -f
          - --fasta
        argument: FILENAME
        description: Reference genome, FASTA format (e.g. UCSC hg19.fa)
      - names:
          - -c
          - --count
        argument: ""
        description: Get read depths by counting read midpoints within each bin. (An alternative algorithm).
      - names:
          - -q
          - --min-mapq
        argument: MIN_MAPQ
        description: 'Minimum mapping quality score (phred scale 0-60) to count a read for coverage depth. [Default: 0]'
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output file name.
      - names:
          - -p
          - --processes
        argument: '[PROCESSES]'
        description: 'Number of subprocesses to calculate coverage in parallel. Without an argument, use the maximum number of available CPUs. [Default: use 1 process]'
  - name: reference
    description: Compile a coverage reference from the given files (normal samples).
    usage: cnvkit.py reference [-h] [-f FASTA] [-o FILENAME] [-c] [--min-cluster-size NUM] [-x {m,y,male,Male,f,x,female,Female}] [-y] [-t TARGETS] [-a ANTITARGETS] [--no-gc] [--no-edge] [--no-rmask] [references ...]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -f
          - --fasta
        argument: FASTA
        description: Reference genome, FASTA format (e.g. UCSC hg19.fa)
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output file name.
      - names:
          - -c
          - --cluster
        argument: ""
        description: Calculate and store summary stats for clustered subsets of the normal samples with similar coverage profiles.
      - names:
          - --min-cluster-size
        argument: NUM
        description: Minimum cluster size to keep in reference profiles.
      - names:
          - -x
          - --sample-sex
          - -g
          - --gender
        argument: '{m,y,male,Male,f,x,female,Female}'
        description: 'Specify the chromosomal sex of all given samples as male or female. (Default: guess each sample from coverage of X and Y chromosomes).'
      - names:
          - -y
          - --male-reference
          - --haploid-x-reference
        argument: ""
        description: 'Create a male reference: shift female samples'' chrX log-coverage by -1, so the reference chrX average is -1. Otherwise, shift male samples'' chrX by +1, so the reference chrX average is 0.'
      - names:
          - -t
          - --targets
        argument: TARGETS
        description: Target intervals (.bed or .list)
      - names:
          - -a
          - --antitargets
        argument: ANTITARGETS
        description: Antitarget intervals (.bed or .list)
      - names:
          - --no-gc
        argument: ""
        description: Skip GC correction.
      - names:
          - --no-edge
        argument: ""
        description: Skip edge-effect correction.
      - names:
          - --no-rmask
        argument: ""
        description: Skip RepeatMasker correction.
  - name: fix
    description: Combine target and antitarget coverages and correct for biases.
    usage: cnvkit.py fix [-h] [-c] [-i SAMPLE_ID] [--no-gc] [--no-edge] [--no-rmask] [-o FILENAME] target antitarget reference
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -c
          - --cluster
        argument: ""
        description: Compare and use cluster-specific values present in the reference profile. (Requires that the reference profile was built with the --cluster option.)
      - names:
          - -i
          - --sample-id
        argument: SAMPLE_ID
        description: Sample ID for target/antitarget files. Otherwise inferred from file names.
      - names:
          - --no-gc
        argument: ""
        description: Skip GC correction.
      - names:
          - --no-edge
        argument: ""
        description: Skip edge-effect correction.
      - names:
          - --no-rmask
        argument: ""
        description: Skip RepeatMasker correction.
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output file name.
  - name: segment
    description: Infer copy number segments from the given coverage table.
    usage: cnvkit.py segment [-h] [-o FILENAME] [-d DATAFRAME] [-m {cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline}] [-t THRESHOLD] [--drop-low-coverage] [--drop-outliers FACTOR] [--rscript-path PATH] [-p [PROCESSES]] [--smooth-cbs] [-v FILENAME] [-i SAMPLE_ID] [-n NORMAL_ID] [--min-variant-depth MIN_VARIANT_DEPTH] [-z [ALT_FREQ]] filename
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output table file name (CNR-like table of segments, .cns).
      - names:
          - -d
          - --dataframe
        argument: DATAFRAME
        description: File name to save the raw R dataframe emitted by CBS or Fused Lasso. (Useful for debugging.)
      - names:
          - -m
          - --method
        argument: '{cbs,flasso,haar,none,hmm,hmm-tumor,hmm-germline}'
        description: 'Segmentation method (see docs), or ''none'' for chromosome arm-level averages as segments. [Default: cbs]'
      - names:
          - -t
          - --threshold
        argument: THRESHOLD
        description: Significance threshold (p-value or FDR, depending on method) to accept breakpoints during segmentation. For HMM methods, this is the smoothing window size.
      - names:
          - --drop-low-coverage
        argument: ""
        description: Drop very-low-coverage bins before segmentation to avoid false-positive deletions in poor-quality tumor samples.
      - names:
          - --drop-outliers
        argument: FACTOR
        description: 'Drop outlier bins more than this many multiples of the 95th quantile away from the average within a rolling window. Set to 0 for no outlier filtering. [Default: 10]'
      - names:
          - --rscript-path
        argument: PATH
        description: 'Path to the Rscript excecutable to use for running R code. Use this option to specify a non-default R installation. [Default: Rscript]'
      - names:
          - -p
          - --processes
        argument: '[PROCESSES]'
        description: 'Number of subprocesses to segment in parallel. Give 0 or a negative value to use the maximum number of available CPUs. [Default: use 1 process]'
      - names:
          - --smooth-cbs
        argument: ""
        description: Perform an additional smoothing before CBS segmentation, which in some cases may increase the sensitivity. Used only for CBS method.
      - names:
          - -v
          - --vcf
        argument: FILENAME
        description: VCF file name containing variants for segmentation by allele frequencies.
      - names:
          - -i
          - --sample-id
        argument: SAMPLE_ID
        description: Specify the name of the sample in the VCF (-v/--vcf) to use for b-allele frequency extraction and as the default plot title.
      - names:
          - -n
          - --normal-id
        argument: NORMAL_ID
        description: Corresponding normal sample ID in the input VCF (-v/--vcf). This sample is used to select only germline SNVs to plot b-allele frequencies.
      - names:
          - --min-variant-depth
        argument: MIN_VARIANT_DEPTH
        description: 'Minimum read depth for a SNV to be displayed in the b-allele frequency plot. [Default: 20]'
      - names:
          - -z
          - --zygosity-freq
        argument: '[ALT_FREQ]'
        description: 'Ignore VCF''s genotypes (GT field) and instead infer zygosity from allele frequencies. [Default if used without a number: 0.25]'
  - name: call
    description: Call copy number variants from segmented log2 ratios.
    usage: cnvkit.py call [-h] [--center [{mean,median,mode,biweight}]] [--center-at CENTER_AT] [--filter {ampdel,cn,ci,sem}] [-m {threshold,clonal,none}] [-t THRESHOLDS] [--ploidy PLOIDY] [--purity PURITY] [--drop-low-coverage] [-x {m,y,male,Male,f,x,female,Female}] [-y] [-o FILENAME] [-v FILENAME] [-i SAMPLE_ID] [-n NORMAL_ID] [--min-variant-depth MIN_VARIANT_DEPTH] [-z [ALT_FREQ]] filename
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --center
        argument: '[{mean,median,mode,biweight}]'
        description: Re-center the log2 ratio values using this estimator of the center or average value. ('median' if no argument given.)
      - names:
          - --center-at
        argument: CENTER_AT
        description: Subtract a constant number from all log2 ratios. For "manual" re-centering, in case the --center option gives unsatisfactory results.)
      - names:
          - --filter
        argument: '{ampdel,cn,ci,sem}'
        description: Merge segments flagged by the specified filter(s) with the adjacent segment(s).
      - names:
          - -m
          - --method
        argument: '{threshold,clonal,none}'
        description: 'Calling method. [Default: threshold]'
      - names:
          - -t
          - --thresholds
        argument: THRESHOLDS
        description: 'Hard thresholds for calling each integer copy number, separated by commas. Use the ''='' sign on the command line, e.g.: -t=-1,0,1 [Default: -1.1,-0.25,0.2,0.7]'
      - names:
          - --ploidy
        argument: PLOIDY
        description: 'Ploidy of the sample cells. [Default: 2]'
      - names:
          - --purity
        argument: PURITY
        description: Estimated tumor cell fraction, a.k.a. purity or cellularity.
      - names:
          - --drop-low-coverage
        argument: ""
        description: Drop very-low-coverage bins before segmentation to avoid false-positive deletions in poor-quality tumor samples.
      - names:
          - -x
          - --sample-sex
          - -g
          - --gender
        argument: '{m,y,male,Male,f,x,female,Female}'
        description: Specify the sample's chromosomal sex as male or female. (Otherwise guessed from X and Y coverage).
      - names:
          - -y
          - --male-reference
          - --haploid-x-reference
        argument: ""
        description: Was a male reference used? If so, expect half ploidy on chrX and chrY; otherwise, only chrY has half ploidy. In CNVkit, if a male reference was used, the "neutral" copy number (ploidy) of chrX is 1; chrY is haploid for either reference sex.
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output table file name (CNR-like table of segments, .cns).
      - names:
          - -v
          - --vcf
        argument: FILENAME
        description: VCF file name containing variants for calculation of b-allele frequencies.
      - names:
          - -i
          - --sample-id
        argument: SAMPLE_ID
        description: Name of the sample in the VCF (-v/--vcf) to use for b-allele frequency extraction.
      - names:
          - -n
          - --normal-id
        argument: NORMAL_ID
        description: Corresponding normal sample ID in the input VCF (-v/--vcf). This sample is used to select only germline SNVs to calculate b-allele frequencies.
      - names:
          - --min-variant-depth
        argument: MIN_VARIANT_DEPTH
        description: 'Minimum read depth for a SNV to be used in the b-allele frequency calculation. [Default: 20]'
      - names:
          - -z
          - --zygosity-freq
        argument: '[ALT_FREQ]'
        description: 'Ignore VCF''s genotypes (GT field) and instead infer zygosity from allele frequencies. [Default if used without a number: 0.25]'
  - name: diagram
    description: Draw copy number (log2 coverages, segments) on chromosomes as a diagram.
    usage: cnvkit.py diagram [-h] [-s SEGMENT] [-t THRESHOLD] [-m MIN_PROBES] [-y] [-x {m,y,male,Male,f,x,female,Female}] [--no-shift-xy] [-o FILENAME] [--title TITLE] [filename]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -s
          - --segment
        argument: SEGMENT
        description: Segmentation calls (.cns), the output of the 'segment' command.
      - names:
          - -t
          - --threshold
        argument: THRESHOLD
        description: 'Copy number change threshold to label genes. [Default: 0.5]'
      - names:
          - -m
          - --min-probes
        argument: MIN_PROBES
        description: 'Minimum number of covered probes to label a gene. [Default: 3]'
      - names:
          - -y
          - --male-reference
          - --haploid-x-reference
        argument: ""
        description: Assume inputs were normalized to a male reference (i.e. female samples will have +1 log-CNR of chrX; otherwise male samples would have -1 chrX).
      - names:
          - -x
          - --sample-sex
          - -g
          - --gender
        argument: '{m,y,male,Male,f,x,female,Female}'
        description: Specify the sample's chromosomal sex as male or female. (Otherwise guessed from X and Y coverage).
      - names:
          - --no-shift-xy
        argument: ""
        description: Don't adjust the X and Y chromosomes according to sample sex.
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output PDF file name.
      - names:
          - --title
        argument: TITLE
        description: 'Plot title. [Default: sample ID, from filename or -i]'
  - name: scatter
    description: Plot probe log2 coverages and segmentation calls together.
    usage: cnvkit.py scatter [-h] [-s FILENAME] [-c RANGE] [-g GENE] [-l RANGE_LIST] [-w WIDTH] [-o FILENAME] [-a CHARACTER] [--by-bin] [--segment-color SEGMENT_COLOR] [--title TITLE] [-t] [--y-max Y_MAX] [--y-min Y_MIN] [-v FILENAME] [-i SAMPLE_ID] [-n NORMAL_ID] [-m MIN_VARIANT_DEPTH] [-z [ALT_FREQ]] [filename]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -s
          - --segment
        argument: FILENAME
        description: Segmentation calls (.cns), the output of the 'segment' command.
      - names:
          - -c
          - --chromosome
        argument: RANGE
        description: Chromosome or chromosomal range, e.g. 'chr1' or 'chr1:2333000-2444000', to display. If a range is given, all targeted genes in this range will be shown, unless -g/--gene is also given.
      - names:
          - -g
          - --gene
        argument: GENE
        description: Name of gene or genes (comma-separated) to display.
      - names:
          - -l
          - --range-list
        argument: RANGE_LIST
        description: File listing the chromosomal ranges to display, as BED, interval list or 'chr:start-end' text. Creates focal plots similar to -c/--chromosome for each listed region, combined into a multi-page PDF. The output filename must also be specified (-o/--output).
      - names:
          - -w
          - --width
        argument: WIDTH
        description: 'Width of margin to show around the selected gene(s) (-g/--gene) or small chromosomal region (-c/--chromosome). [Default: 1000000]'
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output PDF file name.
      - names:
          - -a
          - --antitarget-marker
        argument: CHARACTER
        description: 'Plot antitargets using this symbol when plotting in a selected chromosomal region (-g/--gene or -c/--chromosome). [Default: same as targets]'
      - names:
          - --by-bin
        argument: ""
        description: Plot data x-coordinates by bin indices instead of genomic coordinates. All bins will be shown with equal width, no blank regions will be shown, and x-axis values indicate bin number (within chromosome) instead of genomic position.
      - names:
          - --segment-color
        argument: SEGMENT_COLOR
        description: Plot segment lines in this color. Value can be any string accepted by matplotlib, e.g. 'red' or '#CC0000'.
      - names:
          - --title
        argument: TITLE
        description: 'Plot title. [Default: sample ID, from filename or -i]'
      - names:
          - -t
          - --trend
        argument: ""
        description: Draw a smoothed local trendline on the scatter plot.
      - names:
          - --y-max
        argument: Y_MAX
        description: y-axis upper limit.
      - names:
          - --y-min
        argument: Y_MIN
        description: y-axis lower limit.
      - names:
          - -v
          - --vcf
        argument: FILENAME
        description: VCF file name containing variants to plot for SNV b-allele frequencies.
      - names:
          - -i
          - --sample-id
        argument: SAMPLE_ID
        description: Name of the sample in the VCF to use for b-allele frequency extraction and as the default plot title.
      - names:
          - -n
          - --normal-id
        argument: NORMAL_ID
        description: Corresponding normal sample ID in the input VCF. This sample is used to select only germline SNVs to plot.
      - names:
          - -m
          - --min-variant-depth
        argument: MIN_VARIANT_DEPTH
        description: 'Minimum read depth for a SNV to be used in the b-allele frequency calculation. [Default: 20]'
      - names:
          - -z
          - --zygosity-freq
        argument: '[ALT_FREQ]'
        description: 'Ignore VCF''s genotypes (GT field) and instead infer zygosity from allele frequencies. [Default if used without a number: 0.25]'
  - name: heatmap
    description: Plot copy number for multiple samples as a heatmap.
    usage: cnvkit.py heatmap [-h] [-b] [-c CHROMOSOME] [-d] [-y] [-x {m,y,male,Male,f,x,female,Female}] [--no-shift-xy] [-o FILENAME] filenames [filenames ...]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -b
          - --by-bin
        argument: ""
        description: Plot data x-coordinates by bin indices instead of genomic coordinates. All bins will be shown with equal width, no blank regions will be shown, and x-axis values indicate bin number (within chromosome) instead of genomic position.
      - names:
          - -c
          - --chromosome
        argument: CHROMOSOME
        description: Chromosome (e.g. 'chr1') or chromosomal range (e.g. 'chr1:2333000-2444000') to display. If a range is given, all targeted genes in this range will be shown, unless '--gene'/'-g' is already given.
      - names:
          - -d
          - --desaturate
        argument: ""
        description: Tweak color saturation to focus on significant changes.
      - names:
          - -y
          - --male-reference
          - --haploid-x-reference
        argument: ""
        description: Assume inputs were normalized to a male reference (i.e. female samples will have +1 log-CNR of chrX; otherwise male samples would have -1 chrX).
      - names:
          - -x
          - --sample-sex
          - -g
          - --gender
        argument: '{m,y,male,Male,f,x,female,Female}'
        description: 'Specify the chromosomal sex of all given samples as male or female. (Default: guess each sample from coverage of X and Y chromosomes).'
      - names:
          - --no-shift-xy
        argument: ""
        description: Don't adjust the X and Y chromosomes according to sample sex.
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output PDF file name.
  - name: breaks
    description: List the targeted genes in which a copy number breakpoint occurs.
    usage: cnvkit.py breaks [-h] [-m MIN_PROBES] [-o FILENAME] filename segment
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -m
          - --min-probes
        argument: MIN_PROBES
        description: 'Minimum number of within-gene probes on both sides of a breakpoint to report it. [Default: 1]'
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output table file name.
  - name: genemetrics
    description: Identify targeted genes with copy number gain or loss.
    usage: cnvkit.py genemetrics [-h] [-s SEGMENT] [-t THRESHOLD] [-m MIN_PROBES] [--drop-low-coverage] [-y] [-x {m,y,male,Male,f,x,female,Female}] [-o FILENAME] [--mean] [--median] [--mode] [--ttest] [--stdev] [--sem] [--mad] [--mse] [--iqr] [--bivar] [--ci] [--pi] [-a ALPHA] [-b BOOTSTRAP] filename
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -s
          - --segment
        argument: SEGMENT
        description: Segmentation calls (.cns), the output of the 'segment' command).
      - names:
          - -t
          - --threshold
        argument: THRESHOLD
        description: 'Copy number change threshold to report a gene gain/loss. [Default: 0.2]'
      - names:
          - -m
          - --min-probes
        argument: MIN_PROBES
        description: 'Minimum number of covered probes to report a gain/loss. [Default: 3]'
      - names:
          - --drop-low-coverage
        argument: ""
        description: Drop very-low-coverage bins before segmentation to avoid false-positive deletions in poor-quality tumor samples.
      - names:
          - -y
          - --male-reference
          - --haploid-x-reference
        argument: ""
        description: Assume inputs were normalized to a male reference (i.e. female samples will have +1 log-coverage of chrX; otherwise male samples would have -1 chrX).
      - names:
          - -x
          - --sample-sex
          - -g
          - --gender
        argument: '{m,y,male,Male,f,x,female,Female}'
        description: Specify the sample's chromosomal sex as male or female. (Otherwise guessed from X and Y coverage).
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output table file name.
      - names:
          - --mean
        argument: ""
        description: Mean log2-ratio (unweighted).
      - names:
          - --median
        argument: ""
        description: Median.
      - names:
          - --mode
        argument: ""
        description: Mode (i.e. peak density of log2 ratios).
      - names:
          - --ttest
        argument: ""
        description: One-sample t-test of bin log2 ratios versus 0.0.
      - names:
          - --stdev
        argument: ""
        description: Standard deviation.
      - names:
          - --sem
        argument: ""
        description: Standard error of the mean.
      - names:
          - --mad
        argument: ""
        description: Median absolute deviation (standardized).
      - names:
          - --mse
        argument: ""
        description: Mean squared error.
      - names:
          - --iqr
        argument: ""
        description: Inter-quartile range.
      - names:
          - --bivar
        argument: ""
        description: Tukey's biweight midvariance.
      - names:
          - --ci
        argument: ""
        description: Confidence interval (by bootstrap).
      - names:
          - --pi
        argument: ""
        description: Prediction interval.
      - names:
          - -a
          - --alpha
        argument: ALPHA
        description: 'Level to estimate confidence and prediction intervals; use with --ci and --pi. [Default: 0.05]'
      - names:
          - -b
          - --bootstrap
        argument: BOOTSTRAP
        description: 'Number of bootstrap iterations to estimate confidence interval; use with --ci. [Default: 100]'
  - name: sex
    description: Guess samples' sex from the relative coverage of chromosomes X and Y.
    usage: cnvkit.py sex [-h] [-y] [-o FILENAME] filenames [filenames ...]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -y
          - --male-reference
          - --haploid-x-reference
        argument: ""
        description: Assume inputs were normalized to a male reference (i.e. female samples will have +1 log-coverage of chrX; otherwise male samples would have -1 chrX).
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output table file name.
  - name: metrics
    description: Compute coverage deviations and other metrics for self-evaluation.
    usage: cnvkit.py metrics [-h] [-s SEGMENTS [SEGMENTS ...]] [--drop-low-coverage] [-o FILENAME] cnarrays [cnarrays ...]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -s
          -  --segments
        argument: "SEGMENTS [SEGMENTS ...]"
        description: One or more segmentation data files (*.cns, output of the 'segment' command).
      - names:
          - --drop-low-coverage
        argument: ""
        description: Drop very-low-coverage bins before calculations to reduce negative "fat tail" of bin log2 values in poor-quality tumor samples.
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output table file name.
  - name: segmetrics
    description: Compute segment-level metrics from bin-level log2 ratios.
    usage: cnvkit.py segmetrics [-h] -s SEGMENTS [--drop-low-coverage] [-o FILENAME] [--mean] [--median] [--mode] [--t-test] [--stdev] [--sem] [--mad] [--mse] [--iqr] [--bivar] [--ci] [--pi] [-a ALPHA] [-b BOOTSTRAP] [--smooth-bootstrap] cnarray
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -s
          - --segments
        argument: SEGMENTS
        description: Segmentation data file (*.cns, output of the 'segment' command).
      - names:
          - --drop-low-coverage
        argument: ""
        description: Drop very-low-coverage bins before calculations to avoid negative bias in poor-quality tumor samples.
      - names:
          - -o
          - --output
        argument: FILENAME
        description: Output table file name.
      - names:
          - --mean
        argument: ""
        description: Mean log2 ratio (unweighted).
      - names:
          - --median
        argument: ""
        description: Median.
      - names:
          - --mode
        argument: ""
        description: Mode (i.e. peak density of bin log2 ratios).
      - names:
          - --t-test
        argument: ""
        description: One-sample t-test of bin log2 ratios versus 0.0.
      - names:
          - --stdev
        argument: ""
        description: Standard deviation.
      - names:
          - --sem
        argument: ""
        description: Standard error of the mean.
      - names:
          - --mad
        argument: ""
        description: Median absolute deviation (standardized).
      - names:
          - --mse
        argument: ""
        description: Mean squared error.
      - names:
          - --iqr
        argument: ""
        description: Inter-quartile range.
      - names:
          - --bivar
        argument: ""
        description: Tukey's biweight midvariance.
      - names:
          - --ci
        argument: ""
        description: Confidence interval (by bootstrap).
      - names:
          - --pi
        argument: ""
        description: Prediction interval.
      - names:
          - -a
          - --alpha
        argument: ALPHA
        description: 'Level to estimate confidence and prediction intervals; use with --ci and --pi. [Default: 0.05]'
      - names:
          - -b
          - --bootstrap
        argument: BOOTSTRAP
        description: 'Number of bootstrap iterations to estimate confidence interval; use with --ci. [Default: 100]'
      - names:
          - --smooth-bootstrap
        argument: ""
        description: Apply Gaussian noise to bootstrap samples, a.k.a. smoothed bootstrap, to estimate confidence interval; use with --ci.
  - name: bintest
    description: Test for single-bin copy number alterations.
    usage: cnvkit.py bintest [-h] [-s FILENAME] [-a ALPHA] [-t] [-o OUTPUT] cnarray
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -s
          - --segment
        argument: FILENAME
        description: Segmentation calls (.cns), the output of the 'segment' command).
      - names:
          - -a
          - --alpha
        argument: ALPHA
        description: 'Significance threhold. [Default: 0.005]'
      - names:
          - -t
          - --target
        argument: ""
        description: Test target bins only; ignore off-target bins.
      - names:
          - -o
          - --output
        argument: OUTPUT
        description: Output filename.
  - name: import-picard
    description: Convert Picard CalculateHsMetrics tabular output to CNVkit .cnn files.
    usage: cnvkit.py import-picard [-h] [-d DIRECTORY] targets [targets ...]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -d
          - --output-dir
        argument: DIRECTORY
        description: Output directory name.
  - name: import-seg
    description: Convert a SEG file to CNVkit .cns files.
    usage: cnvkit.py import-seg [-h] [-c CHROMOSOMES] [-p PREFIX] [--from-log10] [-d DIRECTORY] segfile
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -c
          - --chromosomes
        argument: CHROMOSOMES
        description: 'Mapping of chromosome indexes to names. Syntax: "from1:to1,from2:to2". Or use "human" for the preset: "23:X,24:Y,25:M".'
      - names:
          - -p
          - --prefix
        argument: PREFIX
        description: Prefix to add to chromosome names (e.g 'chr' to rename '8' in the SEG file to 'chr8' in the output).
      - names:
          - --from-log10
        argument: ""
        description: Convert base-10 logarithm values in the input to base-2 logs.
      - names:
          - -d
          - --output-dir
        argument: DIRECTORY
        description: Output directory name.
  - name: import-theta
    description: Convert THetA output to a BED-like, CNVkit-like tabular format.
    usage: cnvkit.py import-theta [-h] [--ploidy PLOIDY] [-d DIRECTORY] tumor_cns theta_results
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --ploidy
        argument: PLOIDY
        description: 'Ploidy of normal cells. [Default: 2]'
      - names:
          - -d
          - --output-dir
        argument: DIRECTORY
        description: Output directory name.
  - name: import-rna
    description: Convert a cohort of per-gene log2 ratios to CNVkit .cnr format.
    usage: cnvkit.py import-rna [-h] [-f NAME] -g FILE [-c FILE] [--max-log2 FLOAT] [-n NORMAL [NORMAL ...]] [-d PATH] [-o FILE] [--no-gc] [--no-txlen] FILES [FILES ...]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -f
          - --format
        argument: NAME
        description: 'Input format name: ''rsem'' for RSEM gene-level read counts (*_rsem.genes.results), or ''counts'' for generic 2-column gene IDs and their read counts (e.g. TCGA level 2 RNA expression).'
      - names:
          - -g
          - --gene-resource
        argument: FILE
        description: Location of gene info table from Ensembl BioMart.
      - names:
          - -c
          - --correlations
        argument: FILE
        description: Correlation of each gene's copy number with expression. Output of cnv_expression_correlate.py.
      - names:
          - --max-log2
        argument: FLOAT
        description: 'Maximum log2 ratio in output. Observed values above this limit will be replaced with this value. [Default: 3.0]'
      - names:
          - -n
          - --normal
        argument: NORMAL [NORMAL ...]
        description: Normal samples (same format as `gene_counts`) to be used as a control to when normalizing and re-centering gene read depth ratios. All filenames following this option will be used.
      - names:
          - -d
          - --output-dir
        argument: PATH
        description: 'Directory to write a CNVkit .cnr file for each input sample. [Default: .]'
      - names:
          - -o
          - --output
        argument: FILE
        description: Output file name (summary table).
      - names:
          - --no-gc
        argument: ""
        description: Skip GC correction.
      - names:
          - --no-txlen
        argument: ""
        description: Skip transcript length correction.
  - name: export
    description: Convert CNVkit output files to another format.
    usage: cnvkit.py export [-h] {bed,seg,vcf,theta,nexus-basic,nexus-ogt,cdt,jtv} ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: bed
        description: Convert segments to BED format. Input is a segmentation file (.cns) where, preferably, log2 ratios have already been adjusted to integer absolute values using the 'call' command.
        usage: cnvkit.py export bed [-h] [-i LABEL] [--label-genes] [--ploidy PLOIDY] [-x {m,y,male,Male,f,x,female,Female}] [--show {ploidy,variant,all}] [-y] [-o FILENAME] segments [segments ...]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -i
              - --sample-id
            argument: LABEL
            description: 'Identifier to write in the 4th column of the BED file. [Default: use the sample ID, taken from the file name]'
          - names:
              - --label-genes
            argument: ""
            description: Show gene names in the 4th column of the BED file. (This is a bad idea if >1 input files are given.)
          - names:
              - --ploidy
            argument: PLOIDY
            description: 'Ploidy of the sample cells. [Default: 2]'
          - names:
              - -x
              - --sample-sex
              - -g
              - --gender
            argument: '{m,y,male,Male,f,x,female,Female}'
            description: Specify the sample's chromosomal sex as male or female. (Otherwise guessed from X and Y coverage).
          - names:
              - --show
            argument: '{ploidy,variant,all}'
            description: 'Which segmented regions to show: ''all'' = all segment regions; ''variant'' = CNA regions with non-neutral copy number; ''ploidy'' = CNA regions with non-default ploidy. [Default: ploidy]'
          - names:
              - -y
              - --male-reference
              - --haploid-x-reference
            argument: ""
            description: Was a male reference used? If so, expect half ploidy on chrX and chrY; otherwise, only chrY has half ploidy. In CNVkit, if a male reference was used, the "neutral" copy number (ploidy) of chrX is 1; chrY is haploid for either reference sex.
          - names:
              - -o
              - --output
            argument: FILENAME
            description: Output file name.
      - name: seg
        description: Convert segments to SEG format. Compatible with IGV and GenePattern.
        usage: cnvkit.py export seg [-h] [--enumerate-chroms] [-o FILENAME] filenames [filenames ...]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --enumerate-chroms
            argument: ""
            description: Replace chromosome names with sequential integer IDs.
          - names:
              - -o
              - --output
            argument: FILENAME
            description: Output file name.
      - name: vcf
        description: Convert segments to VCF format. Input is a segmentation file (.cns) where, preferably, log2 ratios have already been adjusted to integer absolute values using the 'call' command.
        usage: cnvkit.py export vcf [-h] [--cnr CNR] [-i LABEL] [--ploidy PLOIDY] [-x {m,y,male,Male,f,x,female,Female}] [-y] [-o FILENAME] segments
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --cnr
            argument: CNR
            description: Bin-level copy ratios (*.cnr). Used to indicate fuzzy boundaries for segments in the output VCF via the CIPOS and CIEND tags.
          - names:
              - -i
              - --sample-id
            argument: LABEL
            description: 'Sample name to write in the genotype field of the output VCF file. [Default: use the sample ID, taken from the file name]'
          - names:
              - --ploidy
            argument: PLOIDY
            description: 'Ploidy of the sample cells. [Default: 2]'
          - names:
              - -x
              - --sample-sex
              - -g
              - --gender
            argument: '{m,y,male,Male,f,x,female,Female}'
            description: Specify the sample's chromosomal sex as male or female. (Otherwise guessed from X and Y coverage).
          - names:
              - -y
              - --male-reference
              - --haploid-x-reference
            argument: ""
            description: Was a male reference used? If so, expect half ploidy on chrX and chrY; otherwise, only chrY has half ploidy. In CNVkit, if a male reference was used, the "neutral" copy number (ploidy) of chrX is 1; chrY is haploid for either reference sex.
          - names:
              - -o
              - --output
            argument: FILENAME
            description: Output file name.
      - name: theta
        description: Convert segments to THetA2 input file format (*.input).
        usage: cnvkit.py export theta [-h] [-r REFERENCE] [-o FILENAME] [-v VCF] [-i SAMPLE_ID] [-n NORMAL_ID] [-m MIN_VARIANT_DEPTH] [-z [ALT_FREQ]] tumor_segment
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -r
              - --reference
            argument: REFERENCE
            description: Reference copy number profile (.cnn), or normal-sample bin-level log2 copy ratios (.cnr). Use if the tumor_segment input file does not contain a "weight" column.
          - names:
              - -o
              - --output
            argument: FILENAME
            description: Output file name.
          - names:
              - -v
              - --vcf
            argument: VCF
            description: VCF file containing SNVs observed in both the tumor and normal samples. Tumor sample ID should match the `tumor_segment` filename or be specified with -i/--sample-id.
          - names:
              - -i
              - --sample-id
            argument: SAMPLE_ID
            description: 'Specify the name of the tumor sample in the VCF (given with -v/--vcf). [Default: taken the tumor_segment file name]'
          - names:
              - -n
              - --normal-id
            argument: NORMAL_ID
            description: Corresponding normal sample ID in the input VCF.
          - names:
              - -m
              - --min-variant-depth
            argument: MIN_VARIANT_DEPTH
            description: 'Minimum read depth for a SNP in the VCF to be counted. [Default: 20]'
          - names:
              - -z
              - --zygosity-freq
            argument: '[ALT_FREQ]'
            description: 'Ignore VCF''s genotypes (GT field) and instead infer zygosity from allele frequencies. [Default if used without a number: 0.25]'
      - name: nexus-basic
        description: Convert bin-level log2 ratios to Nexus Copy Number "basic" format.
        usage: cnvkit.py export nexus-basic [-h] [-o FILENAME] filename
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: FILENAME
            description: Output file name.
      - name: nexus-ogt
        description: Convert log2 ratios and b-allele freqs to Nexus "Custom-OGT" format.
        usage: cnvkit.py export nexus-ogt [-h] [-i SAMPLE_ID] [-n NORMAL_ID] [-m MIN_VARIANT_DEPTH] [-z [ALT_FREQ]] [-w MIN_WEIGHT] [-o FILENAME] filename vcf
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -i
              - --sample-id
            argument: SAMPLE_ID
            description: Specify the name of the sample in the VCF to use to extract b-allele frequencies.
          - names:
              - -n
              - --normal-id
            argument: NORMAL_ID
            description: Corresponding normal sample ID in the input VCF.
          - names:
              - -m
              - --min-variant-depth
            argument: MIN_VARIANT_DEPTH
            description: 'Minimum read depth for a SNV to be included in the b-allele frequency calculation. [Default: 20]'
          - names:
              - -z
              - --zygosity-freq
            argument: '[ALT_FREQ]'
            description: 'Ignore VCF''s genotypes (GT field) and instead infer zygosity from allele frequencies. [Default if used without a number: 0.25]'
          - names:
              - -w
              - --min-weight
            argument: MIN_WEIGHT
            description: 'Minimum weight (between 0 and 1) for a bin to be included in the output. [Default: 0.0]'
          - names:
              - -o
              - --output
            argument: FILENAME
            description: Output file name.
      - name: cdt
        description: Convert log2 ratios to CDT format. Compatible with Java TreeView.
        usage: cnvkit.py export cdt [-h] [-o FILENAME] filenames [filenames ...]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: FILENAME
            description: Output file name.
      - name: jtv
        description: Convert log2 ratios to Java TreeView's native format.
        usage: cnvkit.py export jtv [-h] [-o FILENAME] filenames [filenames ...]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: FILENAME
            description: Output file name.
  - name: version
    description: Display this program's version.
    usage: cnvkit.py version [-h]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
version: 0.9.9