name: csvformat
description: Convert a CSV file to a custom output format.
usage: csvformat [-h] [-d DELIMITER] [-t] [-q QUOTECHAR] [-u {0,1,2,3}] [-b] [-p ESCAPECHAR] [-z FIELD_SIZE_LIMIT] [-e ENCODING] [-S] [-H] [-K SKIP_LINES] [-v] [-l] [--zero] [-V] [-D OUT_DELIMITER] [-T] [-Q OUT_QUOTECHAR] [-U {0,1,2,3}] [-B] [-P OUT_ESCAPECHAR] [-M OUT_LINETERMINATOR] [FILE]
options:
  - names:
      - -h
      - --help
    argument: ""
    description: show this help message and exit
  - names:
      - -d
      - --delimiter
    argument: DELIMITER
    description: Delimiting character of the input CSV file.
  - names:
      - -t
      - --tabs
    argument: ""
    description: Specify that the input CSV file is delimited with tabs. Overrides "-d".
  - names:
      - -q
      - --quotechar
    argument: QUOTECHAR
    description: Character used to quote strings in the input CSV file.
  - names:
      - -u
      - --quoting
    argument: '{0,1,2,3}'
    description: Quoting style used in the input CSV file. 0 = Quote Minimal, 1 = Quote All, 2 = Quote Non-numeric, 3 = Quote None.
  - names:
      - -b
      - --no-doublequote
    argument: ""
    description: Whether or not double quotes are doubled in the input CSV file.
  - names:
      - -p
      - --escapechar
    argument: ESCAPECHAR
    description: Character used to escape the delimiter if --quoting 3 ("Quote None") is specified and to escape the QUOTECHAR if --no-doublequote is specified.
  - names:
      - -z
      - --maxfieldsize
    argument: FIELD_SIZE_LIMIT
    description: Maximum length of a single field in the input CSV file.
  - names:
      - -e
      - --encoding
    argument: ENCODING
    description: Specify the encoding of the input CSV file.
  - names:
      - -S
      - --skipinitialspace
    argument: ""
    description: Ignore whitespace immediately following the delimiter.
  - names:
      - -H
      - --no-header-row
    argument: ""
    description: Specify that the input CSV file has no header row. Will create default headers (a,b,c,...).
  - names:
      - -K
      - --skip-lines
    argument: SKIP_LINES
    description: Specify the number of initial lines to skip before the header row (e.g. comments, copyright notices, empty rows).
  - names:
      - -v
      - --verbose
    argument: ""
    description: Print detailed tracebacks when errors occur.
  - names:
      - -l
      - --linenumbers
    argument: ""
    description: Insert a column of line numbers at the front of the output. Useful when piping to grep or as a simple primary key.
  - names:
      - --zero
    argument: ""
    description: When interpreting or displaying column numbers, use zero-based numbering instead of the default 1-based numbering.
  - names:
      - -V
      - --version
    argument: ""
    description: Display version information and exit.
  - names:
      - -D
      - --out-delimiter
    argument: OUT_DELIMITER
    description: Delimiting character of the output CSV file.
  - names:
      - -T
      - --out-tabs
    argument: ""
    description: Specify that the output CSV file is delimited with tabs. Overrides "-D".
  - names:
      - -Q
      - --out-quotechar
    argument: OUT_QUOTECHAR
    description: Character used to quote strings in the output CSV file.
  - names:
      - -U
      - --out-quoting
    argument: '{0,1,2,3}'
    description: Quoting style used in the output CSV file. 0 = Quote Minimal, 1 = Quote All, 2 = Quote Non-numeric, 3 = Quote None.
  - names:
      - -B
      - --out-no-doublequote
    argument: ""
    description: Whether or not double quotes are doubled in the output CSV file.
  - names:
      - -P
      - --out-escapechar
    argument: OUT_ESCAPECHAR
    description: Character used to escape the delimiter in the output CSV file if --quoting 3 ("Quote None") is specified and to escape the QUOTECHAR if --no-doublequote is specified.
  - names:
      - -M
      - --out-lineterminator
    argument: OUT_LINETERMINATOR
    description: Character used to terminate lines in the output CSV file.
version: csvformat 1.0.7
tldr: |
  > Convert a CSV file to a custom output format.
  > Included in csvkit.
  > More information: <https://csvkit.readthedocs.io/en/latest/scripts/csvformat.html>.

  - Convert to a tab-delimited file (TSV):

  `csvformat -T {{data.csv}}`

  - Convert delimiters to a custom character:

  `csvformat -D "{{custom_character}}" {{data.csv}}`

  - Convert line endings to carriage return (^M) + line feed:

  `csvformat -M "{{\r\n}}" {{data.csv}}`

  - Minimize use of quote characters:

  `csvformat -U 0 {{data.csv}}`

  - Maximize use of quote characters:

  `csvformat -U 1 {{data.csv}}`
