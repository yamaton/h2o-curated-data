name: fastp
description: fastp
options:
  - names:
      - -i
      - --in1
    argument: <file>
    description: read1 input file name (string [=])
  - names:
      - -o
      - --out1
    argument: <file>
    description: read1 output file name (string [=])
  - names:
      - -I
      - --in2
    argument: <file>
    description: read2 input file name (string [=])
  - names:
      - -O
      - --out2
    argument: <file>
    description: read2 output file name (string [=])
  - names:
      - --unpaired1
    argument: <string>
    description: for PE input, if read1 passed QC but read2 not, it will be written to unpaired1. Default is to discard it. (string [=])
  - names:
      - --unpaired2
    argument: <string>
    description: for PE input, if read2 passed QC but read1 not, it will be written to unpaired2. If --unpaired2 is same as --unpaired1 (default mode), both unpaired reads will be written to this same file. (string [=])
  - names:
      - --failed_out
    argument: <file>
    description: specify the file to store reads that cannot pass the filters. (string [=])
  - names:
      - -m
      - --merge
    argument: ""
    description: for paired-end input, merge each pair of reads into a single read if they are overlapped. The merged reads will be written to the file given by --merged_out, the unmerged reads will be written to the files specified by --out1 and --out2. The merging mode is disabled by default.
  - names:
      - --merged_out
    argument: <file>
    description: in the merging mode, specify the file name to store merged output, or specify --stdout to stream the merged output (string [=])
  - names:
      - --include_unmerged
    argument: ""
    description: in the merging mode, write the unmerged or unpaired reads to the file specified by --merge. Disabled by default.
  - names:
      - "-6"
      - --phred64
    argument: ""
    description: indicate the input is using phred64 scoring (it'll be converted to phred33, so the output will still be phred33)
  - names:
      - -z
      - --compression
    argument: <int>
    description: compression level for gzip output (1 ~ 9). 1 is fastest, 9 is smallest, default is 4. (int [=4])
  - names:
      - --stdin
    argument: ""
    description: input from STDIN. If the STDIN is interleaved paired-end FASTQ, please also add --interleaved_in.
  - names:
      - --stdout
    argument: ""
    description: stream passing-filters reads to STDOUT. This option will result in interleaved FASTQ output for paired-end output. Disabled by default.
  - names:
      - --interleaved_in
    argument: ""
    description: indicate that <in1> is an interleaved FASTQ which contains both read1 and read2. Disabled by default.
  - names:
      - --reads_to_process
    argument: <int>
    description: specify how many reads/pairs to be processed. Default 0 means process all reads. (int [=0])
  - names:
      - --dont_overwrite
    argument: ""
    description: don't overwrite existing files. Overwritting is allowed by default.
  - names:
      - --fix_mgi_id
    argument: ""
    description: the MGI FASTQ ID format is not compatible with many BAM operation tools, enable this option to fix it.
  - names:
      - -V
      - --verbose
    argument: ""
    description: output verbose log information (i.e. when every 1M reads are processed).
  - names:
      - -A
      - --disable_adapter_trimming
    argument: ""
    description: adapter trimming is enabled by default. If this option is specified, adapter trimming is disabled
  - names:
      - -a
      - --adapter_sequence
    argument: <string>
    description: the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto])
  - names:
      - --adapter_sequence_r2
    argument: <string>
    description: the adapter for read2 (PE data only). This is used if R1/R2 are found not overlapped. If not specified, it will be the same as <adapter_sequence> (string [=auto])
  - names:
      - --adapter_fasta
    argument: <file>
    description: specify a FASTA file to trim both read1 and read2 (if PE) by all the sequences in this FASTA file (string [=])
  - names:
      - --detect_adapter_for_pe
    argument: ""
    description: by default, the auto-detection for adapter is for SE data input only, turn on this option to enable it for PE data.
  - names:
      - -f
      - --trim_front1
    argument: <int>
    description: trimming how many bases in front for read1, default is 0 (int [=0])
  - names:
      - -t
      - --trim_tail1
    argument: <int>
    description: trimming how many bases in tail for read1, default is 0 (int [=0])
  - names:
      - -b
      - --max_len1
    argument: <int>
    description: if read1 is longer than max_len1, then trim read1 at its tail to make it as long as max_len1. Default 0 means no limitation (int [=0])
  - names:
      - -F
      - --trim_front2
    argument: <int>
    description: trimming how many bases in front for read2. If it's not specified, it will follow read1's settings (int [=0])
  - names:
      - -T
      - --trim_tail2
    argument: <int>
    description: trimming how many bases in tail for read2. If it's not specified, it will follow read1's settings (int [=0])
  - names:
      - -B
      - --max_len2
    argument: <int>
    description: if read2 is longer than max_len2, then trim read2 at its tail to make it as long as max_len2. Default 0 means no limitation. If it's not specified, it will follow read1's settings (int [=0])
  - names:
      - -g
      - --trim_poly_g
    argument: ""
    description: force polyG tail trimming, by default trimming is automatically enabled for Illumina NextSeq/NovaSeq data
  - names:
      - --poly_g_min_len
    argument: <int>
    description: the minimum length to detect polyG in the read tail. 10 by default. (int [=10])
  - names:
      - -G
      - --disable_trim_poly_g
    argument: ""
    description: disable polyG tail trimming, by default trimming is automatically enabled for Illumina NextSeq/NovaSeq data
  - names:
      - -x
      - --trim_poly_x
    argument: ""
    description: enable polyX trimming in 3' ends.
  - names:
      - --poly_x_min_len
    argument: <int>
    description: the minimum length to detect polyX in the read tail. 10 by default. (int [=10])
  - names:
      - "-5"
      - --cut_front
    argument: ""
    description: move a sliding window from front (5') to tail, drop the bases in the window if its mean quality < threshold, stop otherwise.
  - names:
      - "-3"
      - --cut_tail
    argument: ""
    description: move a sliding window from tail (3') to front, drop the bases in the window if its mean quality < threshold, stop otherwise.
  - names:
      - -r
      - --cut_right
    argument: ""
    description: move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop.
  - names:
      - -W
      - --cut_window_size
    argument: <int>
    description: 'the window size option shared by cut_front, cut_tail or cut_sliding. Range: 1~1000, default: 4 (int [=4])'
  - names:
      - -M
      - --cut_mean_quality
    argument: <int>
    description: 'the mean quality requirement option shared by cut_front, cut_tail or cut_sliding. Range: 1~36 default: 20 (Q20) (int [=20])'
  - names:
      - --cut_front_window_size
    argument: <int>
    description: the window size option of cut_front, default to cut_window_size if not specified (int [=4])
  - names:
      - --cut_front_mean_quality
    argument: <int>
    description: the mean quality requirement option for cut_front, default to cut_mean_quality if not specified (int [=20])
  - names:
      - --cut_tail_window_size
    argument: <int>
    description: the window size option of cut_tail, default to cut_window_size if not specified (int [=4])
  - names:
      - --cut_tail_mean_quality
    argument: <int>
    description: the mean quality requirement option for cut_tail, default to cut_mean_quality if not specified (int [=20])
  - names:
      - --cut_right_window_size
    argument: <int>
    description: the window size option of cut_right, default to cut_window_size if not specified (int [=4])
  - names:
      - --cut_right_mean_quality
    argument: <int>
    description: the mean quality requirement option for cut_right, default to cut_mean_quality if not specified (int [=20])
  - names:
      - -Q
      - --disable_quality_filtering
    argument: ""
    description: quality filtering is enabled by default. If this option is specified, quality filtering is disabled
  - names:
      - -q
      - --qualified_quality_phred
    argument: <int>
    description: the quality value that a base is qualified. Default 15 means phred quality >=Q15 is qualified. (int [=15])
  - names:
      - -u
      - --unqualified_percent_limit
    argument: <int>
    description: how many percents of bases are allowed to be unqualified (0~100). Default 40 means 40% (int [=40])
  - names:
      - -n
      - --n_base_limit
    argument: <int>
    description: if one read's number of N base is >n_base_limit, then this read/pair is discarded. Default is 5 (int [=5])
  - names:
      - -e
      - --average_qual
    argument: <int>
    description: if one read's average quality score <avg_qual, then this read/pair is discarded. Default 0 means no requirement (int [=0])
  - names:
      - -L
      - --disable_length_filtering
    argument: ""
    description: length filtering is enabled by default. If this option is specified, length filtering is disabled
  - names:
      - -l
      - --length_required
    argument: <int>
    description: reads shorter than length_required will be discarded, default is 15. (int [=15])
  - names:
      - --length_limit
    argument: <int>
    description: reads longer than length_limit will be discarded, default 0 means no limitation. (int [=0])
  - names:
      - -y
      - --low_complexity_filter
    argument: ""
    description: enable low complexity filter. The complexity is defined as the percentage of base that is different from its next base (base[i] != base[i+1]).
  - names:
      - -Y
      - --complexity_threshold
    argument: <int>
    description: the threshold for low complexity filter (0~100). Default is 30, which means 30% complexity is required. (int [=30])
  - names:
      - --filter_by_index1
    argument: <file>
    description: specify a file contains a list of barcodes of index1 to be filtered out, one barcode per line (string [=])
  - names:
      - --filter_by_index2
    argument: <file>
    description: specify a file contains a list of barcodes of index2 to be filtered out, one barcode per line (string [=])
  - names:
      - --filter_by_index_threshold
    argument: <int>
    description: the allowed difference of index barcode for index filtering, default 0 means completely identical. (int [=0])
  - names:
      - -c
      - --correction
    argument: ""
    description: enable base correction in overlapped regions (only for PE data), default is disabled
  - names:
      - --overlap_len_require
    argument: <int>
    description: the minimum length to detect overlapped region of PE reads. This will affect overlap analysis based PE merge, adapter trimming and correction. 30 by default. (int [=30])
  - names:
      - --overlap_diff_limit
    argument: <int>
    description: the maximum number of mismatched bases to detect overlapped region of PE reads. This will affect overlap analysis based PE merge, adapter trimming and correction. 5 by default. (int [=5])
  - names:
      - --overlap_diff_percent_limit
    argument: <int>
    description: the maximum percentage of mismatched bases to detect overlapped region of PE reads. This will affect overlap analysis based PE merge, adapter trimming and correction. Default 20 means 20%. (int [=20])
  - names:
      - -U
      - --umi
    argument: ""
    description: enable unique molecular identifier (UMI) preprocessing
  - names:
      - --umi_loc
    argument: "index1|index2|read1|read2|per_index|per_read"
    description: specify the location of UMI, can be (index1/index2/read1/read2/per_index/per_read, default is none (string [=])
  - names:
      - --umi_len
    argument: <int>
    description: if the UMI is in read1/read2, its length should be provided (int [=0])
  - names:
      - --umi_prefix
    argument: <string>
    description: if specified, an underline will be used to connect prefix and UMI (i.e. prefix=UMI, UMI=AATTCG, final=UMI_AATTCG). No prefix by default (string [=])
  - names:
      - --umi_skip
    argument: <int>
    description: if the UMI is in read1/read2, fastp can skip several bases following UMI, default is 0 (int [=0])
  - names:
      - -p
      - --overrepresentation_analysis
    argument: ""
    description: enable overrepresented sequence analysis.
  - names:
      - -P
      - --overrepresentation_sampling
    argument: <int>
    description: one in (--overrepresentation_sampling) reads will be computed for overrepresentation analysis (1~10000), smaller is slower, default is 20. (int [=20])
  - names:
      - -j
      - --json
    argument: <filename>
    description: the json format report file name (string [=fastp.json])
  - names:
      - -h
      - --html
    argument: <filename>
    description: the html format report file name (string [=fastp.html])
  - names:
      - -R
      - --report_title
    argument: <quoted string>
    description: should be quoted with ' or ", default is "fastp report" (string [=fastp report])
  - names:
      - -w
      - --thread
    argument: <int>
    description: worker thread number, default is 2 (int [=2])
  - names:
      - -s
      - --split
    argument: <int>
    description: split output by limiting total split file number with this option (2~999), a sequential number prefix will be added to output name ( 0001.out.fq, 0002.out.fq...), disabled by default (int [=0])
  - names:
      - -S
      - --split_by_lines
    argument: <int>
    description: split output by limiting lines of each file with this option(>=1000), a sequential number prefix will be added to output name ( 0001.out.fq, 0002.out.fq...), disabled by default (long [=0])
  - names:
      - -d
      - --split_prefix_digits
    argument: <int>
    description: the digits for the sequential number padding (1~10), default is 4, so the filename will be padded as 0001.xxx, 0 to disable padding (int [=4])
  - names:
      - --cut_by_quality5
    argument: ""
    description: DEPRECATED, use --cut_front instead.
  - names:
      - --cut_by_quality3
    argument: ""
    description: DEPRECATED, use --cut_tail instead.
  - names:
      - --cut_by_quality_aggressive
    argument: ""
    description: DEPRECATED, use --cut_right instead.
  - names:
      - --discard_unmerged
    argument: ""
    description: DEPRECATED, no effect now, see the introduction for merging.
  - names:
      - -?
      - --help
    argument: ""
    description: print this message
