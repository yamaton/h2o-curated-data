name: rename
description: renames multiple files
usage: rename [switches|transforms] [files]
options:
  - names:
      - -h
      - --help
    argument: ""
    description: See a synopsis.
  - names:
      - --man
    argument: ""
    description: Browse the manpage.
  - names:
      - "-0"
      - --null
    argument: ""
    description: When reading file names from "STDIN", split on NUL bytes instead of newlines. This is useful in combination with GNU find's "-print0" option, GNU grep's "-Z" option, and GNU sort's "-z" option, to name just a few. Only valid if no filenames have been given on the commandline.
  - names:
      - -f
      - --force
    argument: ""
    description: Rename even when a file with the destination name already exists.
  - names:
      - -g
      - --glob
    argument: ""
    description: Glob filename arguments. This is useful if you're using a braindead shell such as cmd.exe which won't expand wildcards on behalf of the user.
  - names:
      - -i
      - --interactive
    argument: ""
    description: Ask the user to confirm every action before it is taken.
  - names:
      - -k
      - --backwards
      - --reverse-order
    argument: ""
    description: Process the list of files in reverse order, last file first. This prevents conflicts when renaming files to names which are currently taken but would be freed later during the process of renaming.
  - names:
      - -l
      - --symlink
    argument: ""
    description: Create symlinks from the new names to the existing ones, instead of renaming the files. Cannot be used in conjunction with "-L".
  - names:
      - -L
      - --hardlink
    argument: ""
    description: Create hard links from the new names to the existing ones, instead of renaming the files. Cannot be used in conjunction with "-l".
  - names:
      - -M
      - --use
    argument: ""
    description: Like perl's own "-M" switch. Loads the named modules at the beginning of the rename, and can pass import options separated by commata after an equals sign, i.e. "Module=foo,bar" will pass the "foo" and "bar" import options to "Module".
  - names:
      - -n
      - --dry-run
      - --just-print
    argument: ""
    description: Show how the files would be renamed, but don't actually do anything.
  - names:
      - -N
      - --counter-format
    argument: ""
    description: Format and set the $N counter variable according to the given template.
  - names:
      - -p
      - --mkpath
      - --make-dirs
    argument: ""
    description: 'Create any non-existent directories in the target path. This is very handy if you want to scatter a pile of files into subdirectories based on some part of their name (eg. the first two letters or the extension): you don''t need to make all necessary directories beforehand, just tell "rename" to create them as necessary.'
  - names:
      - --stdin
      - --no-stdin
    argument: ""
    description: Always – or never – read the list of filenames from STDIN; do not guess based on the presence or absence of filename arguments. Filename arguments must not be present when using "--stdin".
  - names:
      - -T
      - --transcode
    argument: ""
    description: Decode each filename before processing and encode it after processing, according to the given encoding supplied.
  - names:
      - -v
      - --verbose
    argument: ""
    description: Print additional information about the operations (not) executed.
  - names:
      - -a
      - --append
    argument: ""
    description: Append the string argument you supply to every filename.
  - names:
      - -A
      - --prepend
    argument: ""
    description: Prepend the string argument you supply to every filename.
  - names:
      - -c
      - --lower-case
    argument: ""
    description: Convert file names to all lower case.
  - names:
      - -C
      - --upper-case
    argument: ""
    description: Convert file names to all upper case.
  - names:
      - -e
      - --expr
    argument: ""
    description: The "code" argument to this option should be a Perl expression that assumes the filename in the $_ variable and modifies it for the filenames to be renamed. When no other "-c", "-C", "-e", "-s", or "-z" options are given, you can omit the "-e" from infront of the code.
  - names:
      - -P
      - --pipe
    argument: ""
    description: Pass the filename to an external command on its standard input and read back the transformed filename on its standard output.
  - names:
      - -s
      - --subst
    argument: ""
    description: Perform a simple textual substitution of "from" to "to". The "from" and "to" parameters must immediately follow the argument.
  - names:
      - -S
      - --subst-all
    argument: ""
    description: Same as "-s", but replaces *every* instance of the "from" text by the "to" text.
  - names:
      - -x
      - --remove-extension
    argument: ""
    description: Remove the last extension from a filename, if there is any.
  - names:
      - -X
      - --keep-extension
    argument: ""
    description: Save and remove the last extension from a filename, if there is any. The saved extension will be appended back to the filename at the end of the rest of the operations.
  - names:
      - -z
      - --sanitize
    argument: ""
    description: A shortcut for passing "--nows --noctrl --nometa --trim".
  - names:
      - --camelcase
    argument: ""
    description: Capitalise every separate word within the filename.
  - names:
      - --urlesc
    argument: ""
    description: Decode URL-escaped filenames, such as wget(1) used to produce.
  - names:
      - --nows
    argument: ""
    description: Replace all sequences of whitespace in the filename with single underscore characters.
  - names:
      - --rews
    argument: ""
    description: 'Reverse "--nows": replace each underscore in the filename with a space.'
  - names:
      - --noctrl
    argument: ""
    description: Replace all sequences of control characters in the filename with single underscore characters.
  - names:
      - --nometa
    argument: ""
    description: Replace every shell meta-character with an underscore.
  - names:
      - --trim
    argument: ""
    description: Remove any sequence of spaces and underscores at the left and right ends of the filename.
version: '1.601'
tldr: |
  > Rename multiple files.
  > NOTE: this page refers to the command from bioconda channel.
  > More information: <http://plasmasturm.org/code/rename/>.

  - Strip file extensions from all .bak files:

  `rename -x {{*.bak}}`

  - Strip file extensions from all .bak files using perl notation:

  `rename {{'s/\.bak\z//'}} {{*}}`

  - Rename files using simple substitutions (substitute 'foo' with 'bar' wherever found):

  `rename -s {{foo}} {{bar}} {{*}}`

  - Dry-run - display which renames would occur without performing them:

  `rename -svn {{foo}} {{bar}} {{*}}`

  - Prepend "foo" to all filenames in the current directory:

  `rename -A {{'foo'}} {{*}}`

