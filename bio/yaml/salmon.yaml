name: salmon
description: salmon
usage: |-
  salmon -h|--help or
  salmon -v|--version or
  salmon -c|--cite or
  salmon [--no-version-check] <COMMAND> [-h | options]
options: []
subcommands:
  - name: index
    description: create a salmon index
    usage: ""
    options:
      - names:
          - -v
          - --version
        argument: ""
        description: print version string
      - names:
          - -h
          - --help
        argument: ""
        description: produce help message
      - names:
          - -t
          - --transcripts
        argument: arg
        description: Transcript fasta file.
      - names:
          - -k
          - --kmerLen
        argument: arg (=31)
        description: The size of k-mers that should be used for the quasi index.
      - names:
          - -i
          - --index
        argument: arg
        description: salmon index.
      - names:
          - --gencode
        argument: ""
        description: This flag will expect the input transcript fasta to be in GENCODE format, and will split the transcript name at the first '|' character. These reduced names will be used in the output and when looking for these transcripts in a gene to transcript GTF.
      - names:
          - --features
        argument: ""
        description: This flag will expect the input reference to be in the tsv file format, and will split the feature name at the first 'tab' character. These reduced names will be used in the output and when looking for the sequence of the features.GTF.
      - names:
          - --keepDuplicates
        argument: ""
        description: This flag will disable the default indexing behavior of discarding sequence-identical duplicate transcripts. If this flag is passed, then duplicate transcripts that appear in the input will be retained and quantified separately.
      - names:
          - -p
          - --threads
        argument: arg (=2)
        description: Number of threads to use during indexing.
      - names:
          - --keepFixedFasta
        argument: ""
        description: Retain the fixed fasta file (without short transcripts and duplicates, clipped, etc.) generated during indexing
      - names:
          - -f
          - --filterSize
        argument: arg (=-1)
        description: The size of the Bloom filter that will be used by TwoPaCo during indexing. The filter will be of size 2^{filterSize}. The default value of -1 means that the filter size will be automatically set based on the number of distinct k-mers in the input, as estimated by nthll.
      - names:
          - --tmpdir
        argument: arg
        description: The directory location that will be used for TwoPaCo temporary files; it will be created if need be and be removed prior to indexing completion. The default value will cause a (temporary) subdirectory of the salmon index directory to be used for this purpose.
      - names:
          - --sparse
        argument: ""
        description: Build the index using a sparse sampling of k-mer positions This will require less memory (especially during quantification), but will take longer to construct and can slow down mapping / alignment
      - names:
          - -d
          - --decoys
        argument: arg
        description: Treat these sequences ids from the reference as the decoys that may have sequence homologous to some known transcript. for example in case of the genome, provide a list of chromosome name --- one per line
      - names:
          - -n
          - --no-clip
        argument: ""
        description: Don't clip poly-A tails from the ends of target sequences
      - names:
          - --type
        argument: arg (=puff)
        description: The type of index to build; the only option is "puff" in this version of salmon.
  - name: quant
    description: quantify a sample
    usage: ""
    options:
      - names:
          - -l
          - --libType
        argument: arg
        description: Format string describing the library type
      - names:
          - -i
          - --index
        argument: arg
        description: salmon index
      - names:
          - -r
          - --unmatedReads
        argument: arg
        description: List of files containing unmated reads of (e.g. single-end reads)
      - names:
          - "-1"
          - --mates1
        argument: arg
        description: 'File containing the #1 mates'
      - names:
          - "-2"
          - --mates2
        argument: arg
        description: 'File containing the #2 mates'
      - names:
          - -v
          - --version
        argument: ""
        description: print version string
      - names:
          - -h
          - --help
        argument: ""
        description: produce help message
      - names:
          - -o
          - --output
        argument: arg
        description: Output quantification directory.
      - names:
          - --seqBias
        argument: ""
        description: Perform sequence-specific bias correction.
      - names:
          - --gcBias
        argument: ""
        description: '[beta for single-end reads] Perform fragment GC bias correction.'
      - names:
          - --posBias
        argument: ""
        description: Perform positional bias correction.
      - names:
          - -p
          - --threads
        argument: arg (=12)
        description: The number of threads to use concurrently.
      - names:
          - --incompatPrior
        argument: arg (=0)
        description: This option sets the prior probability that an alignment that disagrees with the specified library type (--libType) results from the true fragment origin. Setting this to 0 specifies that alignments that disagree with the library type should be "impossible", while setting it to 1 says that alignments that disagree with the library type are no less likely than those that do
      - names:
          - -g
          - --geneMap
        argument: arg
        description: File containing a mapping of transcripts to genes. If this file is provided salmon will output both quant.sf and quant.genes.sf files, where the latter contains aggregated gene-level abundance estimates. The transcript to gene mapping should be provided as either a GTF file, or a in a simple tab-delimited format where each line contains the name of a transcript and the gene to which it belongs separated by a tab. The extension of the file is used to determine how the file should be parsed. Files ending in '.gtf', '.gff' or '.gff3' are assumed to be in GTF format; files with any other extension are assumed to be in the simple format. In GTF / GFF format, the "transcript_id" is assumed to contain the transcript identifier and the "gene_id" is assumed to contain the corresponding gene identifier.
      - names:
          - --auxTargetFile
        argument: arg
        description: A file containing a list of "auxiliary" targets. These are valid targets (i.e., not decoys) to which fragments are allowed to map and be assigned, and which will be quantified, but for which auxiliary models like sequence-specific and fragment-GC bias correction should not be applied.
      - names:
          - --meta
        argument: ""
        description: If you're using Salmon on a metagenomic dataset, consider setting this flag to disable parts of the abundance estimation model that make less sense for metagenomic data.
      - names:
          - --discardOrphansQuasi
        argument: ""
        description: '[selective-alignment mode only] : Discard orphan mappings in selective-alignment mode. If this flag is passed then only paired mappings will be considered toward quantification estimates. The default behavior is to consider orphan mappings if no valid paired mappings exist. This flag is independent of the option to write the orphaned mappings to file (--writeOrphanLinks).'
      - names:
          - --validateMappings
        argument: ""
        description: '[*deprecated* (no effect; selective-alignment is the default)]'
      - names:
          - --consensusSlack
        argument: arg (=0.349999994)
        description: '[selective-alignment mode only] : The amount of slack allowed in the selective-alignment filtering mechanism. If this is set to a fraction, X, greater than 0 (and in [0,1)), then uniMEM chains with scores below (100 * X)% of the best chain score for a read, and read pairs with a sum of chain scores below (100 * X)% of the best chain score for a read pair will be discounted as a mapping candidates. The default value of this option is 0.35.'
      - names:
          - --preMergeChainSubThresh
        argument: arg (=0.75)
        description: '[selective-alignment mode only] : The threshold of sub-optimal chains, compared to the best chain on a given target, that will be retained and passed to the next phase of mapping. Specifically, if the best chain for a read (or read-end in paired-end mode) to target t has score X_t, then all chains for this read with score >= X_t * preMergeChainSubThresh will be retained and passed to subsequent mapping phases. This value must be in the range [0, 1].'
      - names:
          - --postMergeChainSubThresh
        argument: arg (=0.90000000000000002)
        description: '[selective-alignment mode only] : The threshold of sub-optimal chain pairs, compared to the best chain pair on a given target, that will be retained and passed to the next phase of mapping. This is different than preMergeChainSubThresh, because this is applied to pairs of chains (from the ends of paired-end reads) after merging (i.e. after checking concordancy constraints etc.). Specifically, if the best chain pair to target t has score X_t, then all chain pairs for this read pair with score >= X_t * postMergeChainSubThresh will be retained and passed to subsequent mapping phases. This value must be in the range [0, 1]. Note: This option is only meaningful for paired-end libraries, and is ignored for single-end libraries.'
      - names:
          - --orphanChainSubThresh
        argument: arg (=0.94999999999999996)
        description: '[selective-alignment mode only] : This threshold sets a global sub-optimality threshold for chains corresponding to orphan mappings. That is, if the merging procedure results in no concordant mappings then only orphan mappings with a chain score >= orphanChainSubThresh * bestChainScore will be retained and passed to subsequent mapping phases. This value must be in the range [0, 1]. Note: This option is only meaningful for paired-end libraries, and is ignored for single-end libraries.'
      - names:
          - --scoreExp
        argument: arg (=1)
        description: '[selective-alignment mode only] : The factor by which sub-optimal alignment scores are downweighted to produce a probability. If the best alignment score for the current read is S, and the score for a particular alignment is w, then the probability will be computed porportional to exp( - scoreExp * (S-w) ).'
      - names:
          - --minScoreFraction
        argument: arg
        description: '[selective-alignment mode only] : The fraction of the optimal possible alignment score that a mapping must achieve in order to be considered "valid" --- should be in (0,1]. Salmon Default 0.65 and Alevin Default 0.87'
      - names:
          - --mismatchSeedSkip
        argument: arg (=3)
        description: '[selective-alignment mode only] : After a k-mer hit is extended to a uni-MEM, the uni-MEM extension can terminate for one of 3 reasons; the end of the read, the end of the unitig, or a mismatch. If the extension ends because of a mismatch, this is likely the result of a sequencing error. To avoid looking up many k-mers that will likely fail to be located in the index, the search procedure skips by a factor of mismatchSeedSkip until it either (1) finds another match or (2) is k-bases past the mismatch position. This value controls that skip length. A smaller value can increase sensitivity, while a larger value can speed up seeding.'
      - names:
          - --disableChainingHeuristic
        argument: ""
        description: '[selective-alignment mode only] : By default, the heuristic of (Li 2018) is implemented, which terminates the chaining DP once a given number of valid backpointers are found. This speeds up the seed (MEM) chaining step, but may result in sub-optimal chains in complex situations (e.g. sequences with many repeats and overlapping repeats). Passing this flag will disable the chaining heuristic, and perform the full chaining dynamic program, guaranteeing the optimal chain is found in this step.'
      - names:
          - --decoyThreshold
        argument: arg (=1)
        description: '[selective-alignment mode only] : For an alignemnt to an annotated transcript to be considered invalid, it must have an alignment score < (decoyThreshold * bestDecoyScore). A value of 1.0 means that any alignment strictly worse than the best decoy alignment will be discarded. A smaller value will allow reads to be allocated to transcripts even if they strictly align better to the decoy sequence.'
      - names:
          - --ma
        argument: arg (=2)
        description: '[selective-alignment mode only] : The value given to a match between read and reference nucleotides in an alignment.'
      - names:
          - --mp
        argument: arg (=-4)
        description: '[selective-alignment mode only] : The value given to a mis-match between read and reference nucleotides in an alignment.'
      - names:
          - --go
        argument: arg (=6)
        description: '[selective-alignment mode only] : The value given to a gap opening in an alignment.'
      - names:
          - --ge
        argument: arg (=2)
        description: '[selective-alignment mode only] : The value given to a gap extension in an alignment.'
      - names:
          - --bandwidth
        argument: arg (=15)
        description: '[selective-alignment mode only] : The value used for the bandwidth passed to ksw2. A smaller bandwidth can make the alignment verification run more quickly, but could possibly miss valid alignments.'
      - names:
          - --allowDovetail
        argument: ""
        description: '[selective-alignment mode only] : allow dovetailing mappings.'
      - names:
          - --recoverOrphans
        argument: ""
        description: '[selective-alignment mode only] : Attempt to recover the mates of orphaned reads. This uses edlib for orphan recovery, and so introduces some computational overhead, but it can improve sensitivity.'
      - names:
          - --mimicBT2
        argument: ""
        description: '[selective-alignment mode only] : Set flags to mimic parameters similar to Bowtie2 with --no-discordant and --no-mixed flags. This increases disallows dovetailing reads, and discards orphans. Note, this does not impose the very strict parameters assumed by RSEM+Bowtie2, like gapless alignments. For that behavior, use the --mimiStrictBT2 flag below.'
      - names:
          - --mimicStrictBT2
        argument: ""
        description: '[selective-alignment mode only] : Set flags to mimic the very strict parameters used by RSEM+Bowtie2. This increases --minScoreFraction to 0.8, disallows dovetailing reads, discards orphans, and disallows gaps in alignments.'
      - names:
          - --softclip
        argument: ""
        description: '[selective-alignment mode only (experimental)] : Allos soft-clipping of reads during selective-alignment. If this option is provided, then regions at the beginning or end of the read can be withheld from alignment without any effect on the resulting score (i.e. neither adding nor removing from the score). This will drastically reduce the penalty if there are mismatches at the beginning or end of the read due to e.g. low-quality bases or adapters. NOTE: Even with soft-clipping enabled, the read must still achieve a score of at least minScoreFraction * maximum achievable score, where the maximum achievable score is computed based on the full (un-clipped) read length.'
      - names:
          - --softclipOverhangs
        argument: ""
        description: '[selective-alignment mode only] : Allow soft-clipping of reads that overhang the beginning or ends of the transcript. In this case, the overhaning section of the read will simply be unaligned, and will not contribute or detract from the alignment score. The default policy is to force an end-to-end alignment of the entire read, so that overhanings will result in some deletion of nucleotides from the read.'
      - names:
          - --fullLengthAlignment
        argument: ""
        description: '[selective-alignment mode only] : Perform selective alignment over the full length of the read, beginning from the (approximate) initial mapping location and using extension alignment.'
      - names:
          - --hardFilter
        argument: ""
        description: '[selective-alignemnt mode only] : Instead of weighting mappings by their alignment score, this flag will discard any mappings with sub-optimal alignment score. The default option of soft-filtering (i.e. weighting mappings by their alignment score) usually yields slightly more accurate abundance estimates but this flag may be desirable if you want more accurate ''naive'' equivalence classes, rather than range factorized equivalence classes.'
      - names:
          - --minAlnProb
        argument: arg (=1.0000000000000001e-05)
        description: '[selective-alignment mode only] : Any mapping whose alignment probability (as computed by P(aln) = exp(-scoreExp * difference from best mapping score) is less than minAlnProb will not be considered as a valid alignment for this read. The goal of this flag is to remove very low probability alignments that are unlikely to have any non-trivial effect on the final quantifications. Filtering such alignments reduces the number of variables that need to be considered and can result in slightly faster inference and ''cleaner'' equivalence classes.'
      - names:
          - -z
          - --writeMappings
        argument: '[=arg(=-)]'
        description: If this option is provided, then the selective-alignment results will be written out in SAM-compatible format. By default, output will be directed to stdout, but an alternative file name can be provided instead.
      - names:
          - --writeQualities
        argument: ""
        description: This flag only has meaning if mappings are being written (with --writeMappings/-z). If this flag is provided, then the output SAM file will contain quality strings as well as read sequences. Note that this can greatly increase the size of the output file.
      - names:
          - --hitFilterPolicy
        argument: arg (=AFTER)
        description: '[selective-alignment mode only] : Determines the policy by which hits are filtered in selective alignment. Filtering hits after chaining (the default) is more sensitive, but more computationally intensive, because it performs the chaining dynamic program for all hits. Filtering before chaining is faster, but some true hits may be missed. The options are BEFORE, AFTER, BOTH and NONE.'
      - names:
          - --alternativeInitMode
        argument: ""
        description: '[Experimental]: Use an alternative strategy (rather than simple interpolation between) the online and uniform abundance estimates to initialize the EM / VBEM algorithm.'
      - names:
          - --auxDir
        argument: arg (=aux_info)
        description: The sub-directory of the quantification directory where auxiliary information e.g. bootstraps, bias parameters, etc. will be written.
      - names:
          - --skipQuant
        argument: ""
        description: Skip performing the actual transcript quantification (including any Gibbs sampling or bootstrapping).
      - names:
          - --dumpEq
        argument: ""
        description: Dump the simple equivalence class counts that were computed during mapping or alignment.
      - names:
          - -d
          - --dumpEqWeights
        argument: ""
        description: Dump conditional probabilities associated with transcripts when equivalence class information is being dumped to file. Note, this will dump the factorization that is actually used by salmon's offline phase for inference. If you are using range-factorized equivalence classes (the default) then the same transcript set may appear multiple times with different associated conditional probabilities.
      - names:
          - --minAssignedFrags
        argument: arg (=10)
        description: The minimum number of fragments that must be assigned to the transcriptome for quantification to proceed.
      - names:
          - --reduceGCMemory
        argument: ""
        description: If this option is selected, a more memory efficient (but slightly slower) representation is used to compute fragment GC content. Enabling this will reduce memory usage, but can also reduce speed. However, the results themselves will remain the same.
      - names:
          - --biasSpeedSamp
        argument: arg (=5)
        description: The value at which the fragment length PMF is down-sampled when evaluating sequence-specific & GC fragment bias. Larger values speed up effective length correction, but may decrease the fidelity of bias modeling results.
      - names:
          - --fldMax
        argument: arg (=1000)
        description: The maximum fragment length to consider when building the empirical distribution
      - names:
          - --fldMean
        argument: arg (=250)
        description: The mean used in the fragment length distribution prior
      - names:
          - --fldSD
        argument: arg (=25)
        description: The standard deviation used in the fragment length distribution prior
      - names:
          - -f
          - --forgettingFactor
        argument: arg (=0.65000000000000002)
        description: The forgetting factor used in the online learning schedule. A smaller value results in quicker learning, but higher variance and may be unstable. A larger value results in slower learning but may be more stable. Value should be in the interval (0.5, 1.0].
      - names:
          - --initUniform
        argument: ""
        description: initialize the offline inference with uniform parameters, rather than seeding with online parameters.
      - names:
          - --maxOccsPerHit
        argument: arg (=1000)
        description: When collecting "hits" (MEMs), hits having more than maxOccsPerHit occurrences won't be considered.
      - names:
          - -w
          - --maxReadOcc
        argument: arg (=200)
        description: Reads "mapping" to more than this many places won't be considered.
      - names:
          - --maxRecoverReadOcc
        argument: arg (=2500)
        description: 'Relevant for alevin with ''--sketch'' mode only: if a read has valid seed matches, but no read has matches leading to fewer than "maxReadOcc" mappings, then try to recover mappings for this read as long as there are fewer than "maxRecoverReadOcc" mappings.'
      - names:
          - --noLengthCorrection
        argument: ""
        description: '[experimental] : Entirely disables length correction when estimating the abundance of transcripts. This option can be used with protocols where one expects that fragments derive from their underlying targets without regard to that target''s length (e.g. QuantSeq)'
      - names:
          - --noEffectiveLengthCorrection
        argument: ""
        description: Disables effective length correction when computing the probability that a fragment was generated from a transcript. If this flag is passed in, the fragment length distribution is not taken into account when computing this probability.
      - names:
          - --noSingleFragProb
        argument: ""
        description: Disables the estimation of an associated fragment length probability for single-end reads or for orphaned mappings in paired-end libraries. The default behavior is to consider the probability of all possible fragment lengths associated with the retained mapping. Enabling this flag (i.e. turning this default behavior off) will simply not attempt to estimate a fragment length probability in such cases.
      - names:
          - --noFragLengthDist
        argument: ""
        description: '[experimental] : Don''t consider concordance with the learned fragment length distribution when trying to determine the probability that a fragment has originated from a specified location. Normally, Fragments with unlikely lengths will be assigned a smaller relative probability than those with more likely lengths. When this flag is passed in, the observed fragment length has no effect on that fragment''s a priori probability.'
      - names:
          - --noBiasLengthThreshold
        argument: ""
        description: '[experimental] : If this option is enabled, then no (lower) threshold will be set on how short bias correction can make effective lengths. This can increase the precision of bias correction, but harm robustness. The default correction applies a threshold.'
      - names:
          - --numBiasSamples
        argument: arg (=2000000)
        description: Number of fragment mappings to use when learning the sequence-specific bias model.
      - names:
          - --numAuxModelSamples
        argument: arg (=5000000)
        description: The first <numAuxModelSamples> are used to train the auxiliary model parameters (e.g. fragment length distribution, bias, etc.). After ther first <numAuxModelSamples> observations the auxiliary model parameters will be assumed to have converged and will be fixed.
      - names:
          - --numPreAuxModelSamples
        argument: arg (=5000)
        description: The first <numPreAuxModelSamples> will have their assignment likelihoods and contributions to the transcript abundances computed without applying any auxiliary models. The purpose of ignoring the auxiliary models for the first <numPreAuxModelSamples> observations is to avoid applying these models before their parameters have been learned sufficiently well.
      - names:
          - --useEM
        argument: ""
        description: Use the traditional EM algorithm for optimization in the batch passes.
      - names:
          - --useVBOpt
        argument: ""
        description: Use the Variational Bayesian EM [default]
      - names:
          - --rangeFactorizationBins
        argument: arg (=4)
        description: 'Factorizes the likelihood used in quantification by adopting a new notion of equivalence classes based on the conditional probabilities with which fragments are generated from different transcripts. This is a more fine-grained factorization than the normal rich equivalence classes. The default value (4) corresponds to the default used in Zakeri et al. 2017 (doi: 10.1093/bioinformatics/btx262), and larger values imply a more fine-grained factorization. If range factorization is enabled, a common value to select for this parameter is 4. A value of 0 signifies the use of basic rich equivalence classes.'
      - names:
          - --numGibbsSamples
        argument: arg (=0)
        description: Number of Gibbs sampling rounds to perform.
      - names:
          - --noGammaDraw
        argument: ""
        description: This switch will disable drawing transcript fractions from a Gamma distribution during Gibbs sampling. In this case the sampler does not account for shot-noise, but only assignment ambiguity
      - names:
          - --numBootstraps
        argument: arg (=0)
        description: 'Number of bootstrap samples to generate. Note: This is mutually exclusive with Gibbs sampling.'
      - names:
          - --bootstrapReproject
        argument: ""
        description: This switch will learn the parameter distribution from the bootstrapped counts for each sample, but will reproject those parameters onto the original equivalence class counts.
      - names:
          - --thinningFactor
        argument: arg (=16)
        description: Number of steps to discard for every sample kept from the Gibbs chain. The larger this number, the less chance that subsequent samples are auto-correlated, but the slower sampling becomes.
      - names:
          - -q
          - --quiet
        argument: ""
        description: Be quiet while doing quantification (don't write informative output to the console unless something goes wrong).
      - names:
          - --perTranscriptPrior
        argument: ""
        description: The prior (either the default or the argument provided via --vbPrior) will be interpreted as a transcript-level prior (i.e. each transcript will be given a prior read count of this value)
      - names:
          - --perNucleotidePrior
        argument: ""
        description: The prior (either the default or the argument provided via --vbPrior) will be interpreted as a nucleotide-level prior (i.e. each nucleotide will be given a prior read count of this value)
      - names:
          - --sigDigits
        argument: arg (=3)
        description: The number of significant digits to write when outputting the EffectiveLength and NumReads columns
      - names:
          - --vbPrior
        argument: arg (=0.01)
        description: The prior that will be used in the VBEM algorithm. This is interpreted as a per-transcript prior, unless the --perNucleotidePrior flag is also given. If the --perNucleotidePrior flag is given, this is used as a nucleotide-level prior. If the default is used, it will be divided by 1000 before being used as a nucleotide-level prior, i.e. the default per-nucleotide prior will be 1e-5.
      - names:
          - --writeOrphanLinks
        argument: ""
        description: Write the transcripts that are linked by orphaned reads.
      - names:
          - --writeUnmappedNames
        argument: ""
        description: Write the names of un-mapped reads to the file unmapped_names.txt in the auxiliary directory.
      - names:
          - --discardOrphans
        argument: ""
        description: '[alignment-based mode only] : Discard orphan alignments in the input . If this flag is passed, then only paired alignments will be considered toward quantification estimates. The default behavior is to consider orphan alignments if no valid paired mappings exist.'
      - names:
          - -l
          - --libType
        argument: arg
        description: Format string describing the library type
      - names:
          - -a
          - --alignments
        argument: arg
        description: input alignment (BAM) file(s).
      - names:
          - -e
          - --eqclasses
        argument: arg
        description: input salmon weighted equivalence class file.
      - names:
          - -t
          - --targets
        argument: arg
        description: FASTA format file containing target transcripts.
      - names:
          - --ont
        argument: ""
        description: use alignment model for Oxford Nanopore long reads
      - names:
          - -v
          - --version
        argument: ""
        description: print version string
      - names:
          - -h
          - --help
        argument: ""
        description: produce help message
      - names:
          - -o
          - --output
        argument: arg
        description: Output quantification directory.
      - names:
          - --seqBias
        argument: ""
        description: Perform sequence-specific bias correction.
      - names:
          - --gcBias
        argument: ""
        description: '[beta for single-end reads] Perform fragment GC bias correction.'
      - names:
          - --posBias
        argument: ""
        description: Perform positional bias correction.
      - names:
          - -p
          - --threads
        argument: arg (=8)
        description: The number of threads to use concurrently.
      - names:
          - --incompatPrior
        argument: arg (=0)
        description: This option sets the prior probability that an alignment that disagrees with the specified library type (--libType) results from the true fragment origin. Setting this to 0 specifies that alignments that disagree with the library type should be "impossible", while setting it to 1 says that alignments that disagree with the library type are no less likely than those that do
      - names:
          - -g
          - --geneMap
        argument: arg
        description: File containing a mapping of transcripts to genes. If this file is provided salmon will output both quant.sf and quant.genes.sf files, where the latter contains aggregated gene-level abundance estimates. The transcript to gene mapping should be provided as either a GTF file, or a in a simple tab-delimited format where each line contains the name of a transcript and the gene to which it belongs separated by a tab. The extension of the file is used to determine how the file should be parsed. Files ending in '.gtf', '.gff' or '.gff3' are assumed to be in GTF format; files with any other extension are assumed to be in the simple format. In GTF / GFF format, the "transcript_id" is assumed to contain the transcript identifier and the "gene_id" is assumed to contain the corresponding gene identifier.
      - names:
          - --auxTargetFile
        argument: arg
        description: A file containing a list of "auxiliary" targets. These are valid targets (i.e., not decoys) to which fragments are allowed to map and be assigned, and which will be quantified, but for which auxiliary models like sequence-specific and fragment-GC bias correction should not be applied.
      - names:
          - --meta
        argument: ""
        description: If you're using Salmon on a metagenomic dataset, consider setting this flag to disable parts of the abundance estimation model that make less sense for metagenomic data.
      - names:
          - --noErrorModel
        argument: ""
        description: Turn off the alignment error model, which takes into account the the observed frequency of different types of mismatches / indels when computing the likelihood of a given alignment. Turning this off can speed up alignment-based salmon, but can harm quantification accuracy.
      - names:
          - --numErrorBins
        argument: arg (=6)
        description: The number of bins into which to divide each read when learning and applying the error model. For example, a value of 10 would mean that effectively, a separate error model is leared and applied to each 10th of the read, while a value of 3 would mean that a separate error model is applied to the read beginning (first third), middle (second third) and end (final third).
      - names:
          - -s
          - --sampleOut
        argument: ""
        description: Write a "postSample.bam" file in the output directory that will sample the input alignments according to the estimated transcript abundances. If you're going to perform downstream analysis of the alignments with tools which don't, themselves, take fragment assignment ambiguity into account, you should use this output.
      - names:
          - -u
          - --sampleUnaligned
        argument: ""
        description: In addition to sampling the aligned reads, also write the un-aligned reads to "postSample.bam".
      - names:
          - --gencode
        argument: ""
        description: This flag will expect the input transcript fasta to be in GENCODE format, and will split the transcript name at the first '|' character. These reduced names will be used in the output and when looking for these transcripts in a gene to transcript GTF.
      - names:
          - --scoreExp
        argument: arg (=1)
        description: 'The factor by which sub-optimal alignment scores are downweighted to produce a probability. If the best alignment score for the current read is S, and the score for a particular alignment is w, then the probability will be computed porportional to exp( - scoreExp * (S-w) ). NOTE: This flag only has an effect if you are parsing alignments produced by salmon itself (i.e. pufferfish or RapMap in selective-alignment mode).'
      - names:
          - --mappingCacheMemoryLimit
        argument: arg (=2000000)
        description: If the file contained fewer than this many mapped reads, then just keep the data in memory for subsequent rounds of inference. Obviously, this value should not be too large if you wish to keep a low memory usage, but setting it large enough to accommodate all of the mapped read can substantially speed up inference on "small" files that contain only a few million reads.
      - names:
          - --alternativeInitMode
        argument: ""
        description: '[Experimental]: Use an alternative strategy (rather than simple interpolation between) the online and uniform abundance estimates to initialize the EM / VBEM algorithm.'
      - names:
          - --auxDir
        argument: arg (=aux_info)
        description: The sub-directory of the quantification directory where auxiliary information e.g. bootstraps, bias parameters, etc. will be written.
      - names:
          - --skipQuant
        argument: ""
        description: Skip performing the actual transcript quantification (including any Gibbs sampling or bootstrapping).
      - names:
          - --dumpEq
        argument: ""
        description: Dump the simple equivalence class counts that were computed during mapping or alignment.
      - names:
          - -d
          - --dumpEqWeights
        argument: ""
        description: Dump conditional probabilities associated with transcripts when equivalence class information is being dumped to file. Note, this will dump the factorization that is actually used by salmon's offline phase for inference. If you are using range-factorized equivalence classes (the default) then the same transcript set may appear multiple times with different associated conditional probabilities.
      - names:
          - --minAssignedFrags
        argument: arg (=10)
        description: The minimum number of fragments that must be assigned to the transcriptome for quantification to proceed.
      - names:
          - --reduceGCMemory
        argument: ""
        description: If this option is selected, a more memory efficient (but slightly slower) representation is used to compute fragment GC content. Enabling this will reduce memory usage, but can also reduce speed. However, the results themselves will remain the same.
      - names:
          - --biasSpeedSamp
        argument: arg (=5)
        description: The value at which the fragment length PMF is down-sampled when evaluating sequence-specific & GC fragment bias. Larger values speed up effective length correction, but may decrease the fidelity of bias modeling results.
      - names:
          - --fldMax
        argument: arg (=1000)
        description: The maximum fragment length to consider when building the empirical distribution
      - names:
          - --fldMean
        argument: arg (=250)
        description: The mean used in the fragment length distribution prior
      - names:
          - --fldSD
        argument: arg (=25)
        description: The standard deviation used in the fragment length distribution prior
      - names:
          - -f
          - --forgettingFactor
        argument: arg (=0.65000000000000002)
        description: The forgetting factor used in the online learning schedule. A smaller value results in quicker learning, but higher variance and may be unstable. A larger value results in slower learning but may be more stable. Value should be in the interval (0.5, 1.0].
      - names:
          - --initUniform
        argument: ""
        description: initialize the offline inference with uniform parameters, rather than seeding with online parameters.
      - names:
          - --maxOccsPerHit
        argument: arg (=1000)
        description: When collecting "hits" (MEMs), hits having more than maxOccsPerHit occurrences won't be considered.
      - names:
          - -w
          - --maxReadOcc
        argument: arg (=200)
        description: Reads "mapping" to more than this many places won't be considered.
      - names:
          - --maxRecoverReadOcc
        argument: arg (=2500)
        description: 'Relevant for alevin with ''--sketch'' mode only: if a read has valid seed matches, but no read has matches leading to fewer than "maxReadOcc" mappings, then try to recover mappings for this read as long as there are fewer than "maxRecoverReadOcc" mappings.'
      - names:
          - --noLengthCorrection
        argument: ""
        description: '[experimental] : Entirely disables length correction when estimating the abundance of transcripts. This option can be used with protocols where one expects that fragments derive from their underlying targets without regard to that target''s length (e.g. QuantSeq)'
      - names:
          - --noEffectiveLengthCorrection
        argument: ""
        description: Disables effective length correction when computing the probability that a fragment was generated from a transcript. If this flag is passed in, the fragment length distribution is not taken into account when computing this probability.
      - names:
          - --noSingleFragProb
        argument: ""
        description: Disables the estimation of an associated fragment length probability for single-end reads or for orphaned mappings in paired-end libraries. The default behavior is to consider the probability of all possible fragment lengths associated with the retained mapping. Enabling this flag (i.e. turning this default behavior off) will simply not attempt to estimate a fragment length probability in such cases.
      - names:
          - --noFragLengthDist
        argument: ""
        description: '[experimental] : Don''t consider concordance with the learned fragment length distribution when trying to determine the probability that a fragment has originated from a specified location. Normally, Fragments with unlikely lengths will be assigned a smaller relative probability than those with more likely lengths. When this flag is passed in, the observed fragment length has no effect on that fragment''s a priori probability.'
      - names:
          - --noBiasLengthThreshold
        argument: ""
        description: '[experimental] : If this option is enabled, then no (lower) threshold will be set on how short bias correction can make effective lengths. This can increase the precision of bias correction, but harm robustness. The default correction applies a threshold.'
      - names:
          - --numBiasSamples
        argument: arg (=2000000)
        description: Number of fragment mappings to use when learning the sequence-specific bias model.
      - names:
          - --numAuxModelSamples
        argument: arg (=5000000)
        description: The first <numAuxModelSamples> are used to train the auxiliary model parameters (e.g. fragment length distribution, bias, etc.). After ther first <numAuxModelSamples> observations the auxiliary model parameters will be assumed to have converged and will be fixed.
      - names:
          - --numPreAuxModelSamples
        argument: arg (=5000)
        description: The first <numPreAuxModelSamples> will have their assignment likelihoods and contributions to the transcript abundances computed without applying any auxiliary models. The purpose of ignoring the auxiliary models for the first <numPreAuxModelSamples> observations is to avoid applying these models before their parameters have been learned sufficiently well.
      - names:
          - --useEM
        argument: ""
        description: Use the traditional EM algorithm for optimization in the batch passes.
      - names:
          - --useVBOpt
        argument: ""
        description: Use the Variational Bayesian EM [default]
      - names:
          - --rangeFactorizationBins
        argument: arg (=4)
        description: 'Factorizes the likelihood used in quantification by adopting a new notion of equivalence classes based on the conditional probabilities with which fragments are generated from different transcripts. This is a more fine-grained factorization than the normal rich equivalence classes. The default value (4) corresponds to the default used in Zakeri et al. 2017 (doi: 10.1093/bioinformatics/btx262), and larger values imply a more fine-grained factorization. If range factorization is enabled, a common value to select for this parameter is 4. A value of 0 signifies the use of basic rich equivalence classes.'
      - names:
          - --numGibbsSamples
        argument: arg (=0)
        description: Number of Gibbs sampling rounds to perform.
      - names:
          - --noGammaDraw
        argument: ""
        description: This switch will disable drawing transcript fractions from a Gamma distribution during Gibbs sampling. In this case the sampler does not account for shot-noise, but only assignment ambiguity
      - names:
          - --numBootstraps
        argument: arg (=0)
        description: 'Number of bootstrap samples to generate. Note: This is mutually exclusive with Gibbs sampling.'
      - names:
          - --bootstrapReproject
        argument: ""
        description: This switch will learn the parameter distribution from the bootstrapped counts for each sample, but will reproject those parameters onto the original equivalence class counts.
      - names:
          - --thinningFactor
        argument: arg (=16)
        description: Number of steps to discard for every sample kept from the Gibbs chain. The larger this number, the less chance that subsequent samples are auto-correlated, but the slower sampling becomes.
      - names:
          - -q
          - --quiet
        argument: ""
        description: Be quiet while doing quantification (don't write informative output to the console unless something goes wrong).
      - names:
          - --perTranscriptPrior
        argument: ""
        description: The prior (either the default or the argument provided via --vbPrior) will be interpreted as a transcript-level prior (i.e. each transcript will be given a prior read count of this value)
      - names:
          - --perNucleotidePrior
        argument: ""
        description: The prior (either the default or the argument provided via --vbPrior) will be interpreted as a nucleotide-level prior (i.e. each nucleotide will be given a prior read count of this value)
      - names:
          - --sigDigits
        argument: arg (=3)
        description: The number of significant digits to write when outputting the EffectiveLength and NumReads columns
      - names:
          - --vbPrior
        argument: arg (=0.01)
        description: The prior that will be used in the VBEM algorithm. This is interpreted as a per-transcript prior, unless the --perNucleotidePrior flag is also given. If the --perNucleotidePrior flag is given, this is used as a nucleotide-level prior. If the default is used, it will be divided by 1000 before being used as a nucleotide-level prior, i.e. the default per-nucleotide prior will be 1e-5.
      - names:
          - --writeOrphanLinks
        argument: ""
        description: Write the transcripts that are linked by orphaned reads.
      - names:
          - --writeUnmappedNames
        argument: ""
        description: Write the names of un-mapped reads to the file unmapped_names.txt in the auxiliary directory.

  - name: alevin
    description: single cell analysis
    usage: ""
    options:
      - names:
          - -l
          - --libType
        argument: arg
        description: Format string describing the library type
      - names:
          - -i
          - --index
        argument: arg
        description: salmon index
      - names:
          - -r
          - --unmatedReads
        argument: arg
        description: List of files containing unmated reads of (e.g. single-end reads)
      - names:
          - "-1"
          - --mates1
        argument: arg
        description: 'File containing the #1 mates'
      - names:
          - "-2"
          - --mates2
        argument: arg
        description: 'File containing the #2 mates'
      - names:
          - -v
          - --version
        argument: ""
        description: print version string
      - names:
          - -h
          - --help
        argument: ""
        description: produce help message
      - names:
          - -o
          - --output
        argument: arg
        description: Output quantification directory.
      - names:
          - -j
          - --rad
        argument: ""
        description: just selectively align the data and write the results to a RAD file. Do not perform the rest of the quantification procedure.
      - names:
          - --sketch
        argument: ""
        description: perform sketching rather than selective alignment and write the results to a RAD file. Requires the `--rad` flag. Do not perform the rest of the quantification procedure.
      - names:
          - -p
          - --threads
        argument: arg (=3)
        description: The number of threads to use concurrently.
      - names:
          - --tgMap
        argument: arg
        description: transcript to gene map tsv file
      - names:
          - --hash
        argument: arg
        description: Secondary input point for Alevin using Big freaking Hash (bfh.txt) file. Works Only with --chromium
      - names:
          - --dropseq
        argument: ""
        description: Use DropSeq Single Cell protocol for the library
      - names:
          - --chromiumV3
        argument: ""
        description: Use 10x chromium v3 Single Cell protocol for the library.
      - names:
          - --chromium
        argument: ""
        description: Use 10x chromium v2 Single Cell protocol for the library.
      - names:
          - --gemcode
        argument: ""
        description: Use 10x gemcode v1 Single Cell protocol for the library.
      - names:
          - --citeseq
        argument: ""
        description: Use CITESeq Single Cell protocol for the library, 16 CB, 12 UMI and features.
      - names:
          - --celseq
        argument: ""
        description: Use CEL-Seq Single Cell protocol for the library.
      - names:
          - --celseq2
        argument: ""
        description: Use CEL-Seq2 Single Cell protocol for the library.
      - names:
          - --splitseqV1
        argument: ""
        description: Use Split-SeqV1 Single Cell protocol for the library.
      - names:
          - --splitseqV2
        argument: ""
        description: Use Split-SeqV2 Single Cell protocol for the library.
      - names:
          - --quartzseq2
        argument: ""
        description: Use Quartz-Seq2 v3.2 Single Cell protocol for the library assumes 15 length barcode and 8 length UMI.
      - names:
          - --sciseq3
        argument: ""
        description: Use sci-RNA-seq3 protocol for the library.
      - names:
          - --whitelist
        argument: arg
        description: File containing white-list barcodes
      - names:
          - --featureStart
        argument: arg
        description: This flag should be used with citeseq and specifies the starting index of the feature barcode on Read2.
      - names:
          - --featureLength
        argument: arg
        description: This flag should be used with citeseq and specifies the length of the feature barcode.
      - names:
          - --noQuant
        argument: ""
        description: Don't run downstream barcode-salmon model.
      - names:
          - --numCellBootstraps
        argument: arg (=0)
        description: Generate mean and variance for cell x gene matrix quantification estimates.
      - names:
          - --numCellGibbsSamples
        argument: arg (=0)
        description: Generate mean and variance for cell x gene matrix quantification by running gibbs chain estimates.
      - names:
          - --forceCells
        argument: arg (=0)
        description: Explicitly specify the number of cells.
      - names:
          - --expectCells
        argument: arg (=0)
        description: define a close upper bound on expected number of cells
      - names:
          - --mrna
        argument: arg
        description: path to a file containing mito-RNA gene, one per line
      - names:
          - --rrna
        argument: arg
        description: path to a file containing ribosomal RNA, one per line
      - names:
          - --keepCBFraction
        argument: arg (=0)
        description: fraction of CB to keep, value must be in range (0,1], use 1 to quantify all CB.
      - names:
          - --read-geometry
        argument: arg
        description: format string describing the geometry of the read
      - names:
          - --bc-geometry
        argument: arg
        description: format string describing the geometry of the cell barcode
      - names:
          - --umi-geometry
        argument: arg
        description: format string describing the genometry of the umi
      - names:
          - --end
        argument: arg
        description: Cell-Barcodes end (5 or 3) location in the read sequence from where barcode has to be extracted. (end, umiLength, barcodeLength) should all be provided if using this option
      - names:
          - --umiLength
        argument: arg
        description: umi length Parameter for unknown protocol. (end, umiLength, barcodeLength) should all be provided if using this option
      - names:
          - --barcodeLength
        argument: arg
        description: barcode length Parameter for unknown protocol. (end, umiLength, barcodeLength) should all be provided if using this option
      - names:
          - --noem
        argument: ""
        description: do not run em
      - names:
          - --freqThreshold
        argument: arg (=10)
        description: threshold for the frequency of the barcodes
      - names:
          - --umiEditDistance
        argument: arg (=1)
        description: Maximum allowble edit distance to collapse UMIs, Expect delay in running time if != 1
      - names:
          - --dumpfq
        argument: ""
        description: Dump barcode modified fastq file for downstream analysis by using coin toss for multi-mapping.
      - names:
          - --dumpBfh
        argument: ""
        description: dump the big hash with all the barcodes and the UMI sequence.
      - names:
          - --dumpArborescences
        argument: ""
        description: dump the gene-v-cell matrix for the total number of fragments used in the UMI deduplicaiton.
      - names:
          - --dumpUmiGraph
        argument: ""
        description: dump the per cell level Umi Graph.
      - names:
          - --dumpCellEq
        argument: ""
        description: dump the per cell level deduplicated equivalence classes.
      - names:
          - --dumpFeatures
        argument: ""
        description: Dump features for whitelist and downstream analysis.
      - names:
          - --dumpMtx
        argument: ""
        description: Dump cell v transcripts count matrix in sparse mtx format.
      - names:
          - --lowRegionMinNumBarcodes
        argument: arg (=200)
        description: 'Minimum Number of CB to use for learning Low confidence region (Default: 200).'
      - names:
          - --maxNumBarcodes
        argument: arg (=100000)
        description: 'Maximum allowable limit to process the cell barcodes. (Default: 100000)'
  - name: swim
    description: perform super-secret operation
    usage: ""
    options: []
  - name: quantmerge
    description: merge multiple quantifications into a single file
    usage: ""
    options:
      - names:
          - -v
          - --version
        argument: ""
        description: print version string
      - names:
          - -h
          - --help
        argument: ""
        description: produce help message
      - names:
          - --quants
        argument: arg
        description: List of quantification directories.
      - names:
          - --names
        argument: arg
        description: Optional list of names to give to the samples.
      - names:
          - -c
          - --column
        argument: arg (=TPM)
        description: The name of the column that will be merged together into the output files. The options are {len, elen, tpm, numreads}
      - names:
          - --genes
        argument: ""
        description: Use gene quantification instead of transcript.
      - names:
          - --missing
        argument: arg (=NA)
        description: The value of missing values.
      - names:
          - -o
          - --output
        argument: arg
        description: Output quantification file.
version: salmon 1.9.0
