name: wtdbg2
description: wtdbg2
options:
  - names:
      - -i
    argument: <string>
    description: Long reads sequences file (REQUIRED; can be multiple), []
  - names:
      - -o
    argument: <string>
    description: Prefix of output files (REQUIRED), []
  - names:
      - -t
    argument: <int>
    description: Number of threads, 0 for all cores, [4]
  - names:
      - -f
    argument: ""
    description: Force to overwrite output files
  - names:
      - -x
    argument: <string>
    description: Presets, comma delimited, []
  - names:
      - -g
    argument: <number>
    description: Approximate genome size (k/m/g suffix allowed) [0]
  - names:
      - -X
    argument: <float>
    description: Choose the best <float> depth from input reads(effective with -g) [50.0]
  - names:
      - -L
    argument: <int>
    description: Choose the longest subread and drop reads shorter than <int> (5000 recommended for PacBio) [0]   Negative integer indicate tidying read names too, e.g. -5000.
  - names:
      - -k
    argument: <int>
    description: Kmer fsize, 0 <= k <= 23, [0]
  - names:
      - -p
    argument: <int>
    description: Kmer psize, 0 <= p <= 23, [21]   k + p <= 25, seed is <k-mer>+<p-homopolymer-compressed>
  - names:
      - -K
    argument: <float>
    description: Filter high frequency kmers, maybe repetitive, [1000.05]   >= 1000 and indexing >= (1 - 0.05) * total_kmers_count
  - names:
      - -S
    argument: <float>
    description: Subsampling kmers, 1/(<-S>) kmers are indexed, [4.00]   -S is very useful in saving memeory and speeding up please note that subsampling kmers will have less matched length
  - names:
      - -l
    argument: <float>
    description: Min length of alignment, [2048]
  - names:
      - -m
    argument: <float>
    description: Min matched length by kmer matching, [200]
  - names:
      - -R
    argument: ""
    description: Enable realignment mode
  - names:
      - -A
    argument: ""
    description: Keep contained reads during alignment
  - names:
      - -s
    argument: <float>
    description: Min similarity, calculated by kmer matched length / aligned length, [0.05]
  - names:
      - -e
    argument: <int>
    description: Min read depth of a valid edge, [3]
  - names:
      - -q
      - -v
    argument: Quiet
    description: Verbose (can be multiple)
  - names:
      - -V
    argument: ""
    description: Print version information and then exit
  - names:
      - --help
    argument: ""
    description: Show more options
  - names:
      - --cpu
    argument: <int>
    description: 'See -t 0, default: all cores'
  - names:
      - --input
    argument: <string> +
    description: See -i
  - names:
      - --force
    argument: ""
    description: See -f
  - names:
      - --prefix
    argument: <string>
    description: See -o
  - names:
      - --preset
    argument: <string>
    description: See -x
  - names:
      - --kmer-fsize
    argument: <int>
    description: See -k 0
  - names:
      - --kmer-psize
    argument: <int>
    description: See -p 21
  - names:
      - --kmer-depth-max
    argument: <float>
    description: See -K 1000.05
  - names:
      - -E
      - --kmer-depth-min
    argument: <int>
    description: Min kmer frequency, [2]
  - names:
      - --kmer-subsampling
    argument: <float>
    description: See -S 4.0
  - names:
      - --kbm-parts
    argument: <int>
    description: Split total reads into multiple parts, index one part by one to save memory, [1]
  - names:
      - --aln-kmer-sampling
    argument: <int>
    description: 'Select no more than n seeds in a query bin, default: 256'
  - names:
      - --dp-max-gap
    argument: <int>
    description: Max number of bin(256bp) in one gap, [4]
  - names:
      - --dp-max-var
    argument: <int>
    description: Max number of bin(256bp) in one deviation, [4]
  - names:
      - --dp-penalty-gap
    argument: <int>
    description: Penalty for BIN gap, [-7]
  - names:
      - --dp-penalty-var
    argument: <int>
    description: Penalty for BIN deviation, [-21]
  - names:
      - --aln-min-length
    argument: <int>
    description: See -l 2048
  - names:
      - --aln-min-match
    argument: <int>
    description: See -m 200. Here the num of matches counting basepair of the matched kmer's regions
  - names:
      - --aln-min-similarity
    argument: <float>
    description: See -s 0.05
  - names:
      - --aln-max-var
    argument: <float>
    description: 'Max length variation of two aligned fragments, default: 0.25'
  - names:
      - --aln-dovetail
    argument: <int>
    description: 'Retain dovetail overlaps only, the max overhang size is <--aln-dovetail>, the value should be times of 256, -1 to disable filtering, default: 256'
  - names:
      - --aln-strand
    argument: <int>
    description: '1: forward, 2: reverse, 3: both. Please don''t change the deault vaule 3, unless you exactly know what you are doing'
  - names:
      - --aln-maxhit
    argument: <int>
    description: 'Max n hits for each read in build graph, default: 1000'
  - names:
      - --aln-bestn
    argument: <int>
    description: 'Use best n hits for each read in build graph, 0: keep all, default: 500 <prefix>.alignments always store all alignments'
  - names:
      - -R
      - --realign
    argument: ""
    description: Enable re-alignment, see --realn-kmer-psize=15, --realn-kmer-subsampling=1, --realn-min-length=2048, --realn-min-match=200, --realn-min-similarity=0.1, --realn-max-var=0.25
  - names:
      - --realn-kmer-psize
    argument: <int>
    description: Set kmer-psize in realignment, (kmer-ksize always eq 0), default:15
  - names:
      - --realn-kmer-subsampling
    argument: <int>
    description: Set kmer-subsampling in realignment, default:1
  - names:
      - --realn-min-length
    argument: <int>
    description: 'Set aln-min-length in realignment, default: 2048'
  - names:
      - --realn-min-match
    argument: <int>
    description: 'Set aln-min-match in realignment, default: 200'
  - names:
      - --realn-min-similarity
    argument: <float>
    description: 'Set aln-min-similarity in realignment, default: 0.1'
  - names:
      - --realn-max-var
    argument: <float>
    description: 'Set aln-max-var in realignment, default: 0.25'
  - names:
      - -A
      - --aln-noskip
    argument: ""
    description: Even a read was contained in previous alignment, still align it against other reads
  - names:
      - --keep-multiple-alignment-parts
    argument: ""
    description: By default, wtdbg will keep only the best alignment between two reads after chainning. This option will disable it, and keep multiple
  - names:
      - --verbose
    argument: +
    description: See -v. -vvvv will display the most detailed information
  - names:
      - --quiet
    argument: ""
    description: See -q
  - names:
      - --limit-input
    argument: <int>
    description: Limit the input sequences to at most <int> M bp. Usually for test
  - names:
      - -L
      - --tidy-reads
    argument: <int>
    description: 'Default: 0. Pick longest subreads if possible. Filter reads less than <--tidy-reads>. Please add --tidy-name or set --tidy-reads to nagetive value if want to rename reads. Set to 0 bp to disable tidy. Suggested value is 5000 for pacbio RSII reads'
  - names:
      - --tidy-name
    argument: ""
    description: Rename reads into 'S%010d' format. The first read is named as S0000000001
  - names:
      - --rdname-filter
    argument: <string>
    description: A file contains lines of reads name to be discarded in loading. If you want to filter reads by yourself, please also set -X 0
  - names:
      - --rdname-includeonly
    argument: <string>
    description: Reverse manner with --rdname-filter
  - names:
      - -g
      - --genome-size
    argument: <number>
    description: Provide genome size, e.g. 100.4m, 2.3g. In this version, it is used with -X/--rdcov-cutoff in selecting reads just after readed all.
  - names:
      - -X
      - --rdcov-cutoff
    argument: <float>
    description: 'Default: 50.0. Retaining 50.0 folds of genome coverage, combined with -g and --rdcov-filter.'
  - names:
      - --rdcov-filter
    argument: '[0|1]'
    description: 'Default 0. Strategy 0: retaining longest reads. Strategy 1: retaining medain length reads.'
  - names:
      - --err-free-nodes
    argument: ""
    description: Select nodes from error-free-sequences only. E.g. you have contigs assembled from NGS-WGS reads, and long noisy reads. You can type '--err-free-seq your_ctg.fa --input your_long_reads.fa --err-free-nodes' to perform assembly somehow act as long-reads scaffolding
  - names:
      - --node-len
    argument: <int>
    description: 'The default value is 1024, which is times of KBM_BIN_SIZE(always equals 256 bp). It specifies the length of intervals (or call nodes after selecting). kbm indexs sequences into BINs of 256 bp in size, so that many parameter should be times of 256 bp. There are: --node-len, --node-ovl, --aln-min-length, --aln-dovetail . Other parameters are counted in BINs, --dp-max-gap, --dp-max-var .'
  - names:
      - --node-matched-bins
    argument: <int>
    description: Min matched bins in a node, default:1
  - names:
      - --node-ovl
    argument: <int>
    description: 'Default: 256. Max overlap size between two adjacent intervals in any read. It is used in selecting best nodes representing reads in graph'
  - names:
      - --node-drop
    argument: <float>
    description: 'Default: 0.25. Will discard an node when has more this ratio intervals are conflicted with previous generated node'
  - names:
      - -e
      - --edge-min
    argument: <int>
    description: 'Default: 3. The minimal depth of a valid edge is set to 3. In another word, Valid edges must be supported by at least 3 reads When the sequence depth is low, have a try with --edge-min 2. Or very high, try --edge-min 4'
  - names:
      - --edge-max-span
    argument: <int>
    description: 'Default: 1024 BINs. Program will build edges of length no large than 1024'
  - names:
      - --drop-low-cov-edges
    argument: ""
    description: Don't attempt to rescue low coverage edges
  - names:
      - --node-min
    argument: <int>
    description: Min depth of an interval to be selected as valid node. Defaultly, this value is automaticly the same with --edge-min.
  - names:
      - --node-max
    argument: <int>
    description: 'Nodes with too high depth will be regarded as repetitive, and be masked. Default: 200, more than 200 reads contain this node'
  - names:
      - --ttr-cutoff-depth
      - --ttr-cutoff-ratio
    argument: <int>, 0
    description: 'Tiny Tandom Repeat. A node located inside ttr will bring noisy in graph, should be masked. The pattern of such nodes is: depth >= <--ttr-cutoff-depth>, and none of their edges have depth greater than depth * <--ttr-cutoff-ratio 0.5> set --ttr-cutoff-depth 0 to disable ttr masking'
  - names:
      - --dump-kbm
    argument: <string>
    description: Dump kbm index into file for loaded by `kbm` or `wtdbg`
  - names:
      - --dump-seqs
    argument: <string>
    description: 'Dump kbm index (only sequences, no k-mer index) into file for loaded by `kbm` or `wtdbg` Please note: normally load it with --load-kbm, not with --load-seqs'
  - names:
      - --load-kbm
    argument: <string>
    description: Instead of reading sequences and building kbm index, which is time-consumed, loading kbm-index from already dumped file. Please note that, once kbm-index is mmaped by kbm -R <kbm-index> start, will just get the shared memory in minute time. See `kbm` -R <your_seqs.kbmidx> [start | stop]
  - names:
      - --load-seqs
    argument: <string>
    description: Similar with --load-kbm, but only use the sequences in kbmidx, and rebuild index in process's RAM.
  - names:
      - --load-alignments
    argument: '<string> +'
    description: "`wtdbg` output reads' alignments into <--prefix>.alignments, program can load them to fastly build assembly graph. Or you can offer other source of alignments to `wtdbg`. When --load-alignment, will only reading long sequences but skip building kbm index You can type --load-alignments <file> more than once to load alignments from many files"
  - names:
      - --load-clips
    argument: <string>
    description: Combined with --load-nodes. Load reads clips. You can find it in `wtdbg`'s <--prefix>.clps
  - names:
      - --load-nodes
    argument: <sting>
    description: Load dumped nodes from previous execution for fast construct the assembly graph, should be combined with --load-clips. You can find it in `wtdbg`'s <--prefix>.1.nodes
  - names:
      - --bubble-step
    argument: <int>
    description: 'Max step to search a bubble, meaning the max step from the starting node to the ending node. Default: 40'
  - names:
      - --tip-step
    argument: <int>
    description: Max step to search a tip, 10
  - names:
      - --ctg-min-length
    argument: <int>
    description: Min length of contigs to be output, 5000
  - names:
      - --ctg-min-nodes
    argument: <int>
    description: Min num of nodes in a contig to be ouput, 3
  - names:
      - --minimal-output
    argument: ""
    description: Will generate as less output files (<--prefix>.*) as it can
  - names:
      - --bin-complexity-cutoff
    argument: <int>
    description: Used in filtering BINs. If a BIN has less indexed valid kmers than <--bin-complexity-cutoff 2>, masks it.
  - names:
      - --no-local-graph-analysis
    argument: ""
    description: Before building edges, for each node, local-graph-analysis reads all related reads and according nodes, and builds a local graph to judge whether to mask it The analysis aims to find repetitive nodes
  - names:
      - --no-read-length-sort
    argument: ""
    description: Defaultly, `wtdbg` sorts input sequences by length DSC. The order of reads affects the generating of nodes in selecting important intervals
  - names:
      - --keep-isolated-nodes
    argument: ""
    description: In graph clean, `wtdbg` normally masks isolated (orphaned) nodes
  - names:
      - --no-read-clip
    argument: ""
    description: Defaultly, `wtdbg` clips a input sequence by analyzing its overlaps to remove high error endings, rolling-circle repeats (see PacBio CCS), and chimera. When building edges, clipped region won't contribute. However, `wtdbg` will use them in the final linking of unitigs
  - names:
      - --no-chainning-clip
    argument: ""
    description: Defaultly, performs alignments chainning in read clipping ** If '--aln-bestn 0 --no-read-clip', alignments will be parsed directly, and less RAM spent on recording alignments
