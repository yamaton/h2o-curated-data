#compdef _bcftools bcftools

# Auto-generated with h2o

    function _bcftools_index {
        _arguments \
            {-c,--csi}'[generate CSI-format index for VCF/BCF files \[default\]]' \
            {-f,--force}'[overwrite index if it already exists]' \
            {-m,--min-shift}'[set minimal interval size for CSI indices to 2^INT \[14\]]' \
            {-o,--output}'[optional output index file name]':file:_files \
            {-t,--tbi}'[generate TBI-format index for VCF files]' \
            '--threads[use multithreading with INT worker threads \[0\]]' \
            {-n,--nrecords}'[print number of records based on existing index file]' \
            {-s,--stats}'[print per contig stats based on existing index file]' \
            "*: :_files"

    }

    function _bcftools_annotate {
        _arguments \
            {-a,--annotations}'[VCF file or tabix-indexed FILE with annotations: CHR\tPOS\[\tVALUE\]+]':file:_files \
            '--collapse[Matching records by <snps|indels|both|all|some|none>, see man page for details \[some\]]' \
            {-c,--columns}'[List of columns in the annotation file, e.g. CHROM,POS,REF,ALT,-,INFO/TAG. See man page for details]' \
            {-C,--columns-file}'[Read -c columns from FILE, one name per row, with optional --merge-logic TYPE: NAME\[ TYPE\]]':file:_files \
            {-e,--exclude}'[Exclude sites for which the expression is true (see man page for details)]' \
            '--force[Continue despite parsing error (at your own risk!)]' \
            {-h,--header-lines}'[Lines which should be appended to the VCF header]':file:_files \
            {-I,--set-id}'[Set ID column using a `bcftools query`-like expression, see man page for details]' \
            {-i,--include}'[Select sites for which the expression is true (see man page for details)]' \
            {-k,--keep-sites}'[Leave -i/-e sites unchanged instead of discarding them]' \
            {-l,--merge-logic}'[Merge logic for multiple overlapping regions (see man page for details), EXPERIMENTAL]' \
            {-m,--mark-sites}'[Add INFO/TAG flag to sites which are ("+") or are not ("-") listed in the -a file]' \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in FILE]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            '--rename-annots[Rename annotations: TYPE/old\tnew, where TYPE is one of FILTER,INFO,FORMAT]':file:_files \
            '--rename-chrs[Rename sequences according to the mapping: old\tnew]':file:_files \
            {-s,--samples}'[Comma separated list of samples to annotate (or exclude with "^" prefix)]' \
            {-S,--samples-file}'[File of samples to annotate (or exclude with "^" prefix)]':file:_files \
            '--single-overlaps[Keep memory low by avoiding complexities arising from handling multiple overlapping intervals]' \
            {-x,--remove}'[List of annotations (e.g. ID,INFO/DP,FORMAT/DP,FILTER) to remove (or keep with "^" prefix). See man page for details]' \
            '--threads[Number of extra output compression threads \[0\]]' \
            "*: :_files"

    }

    function _bcftools_concat {
        _arguments \
            {-a,--allow-overlaps}'[First coordinate of the next file can precede last record of the current file.]' \
            {-c,--compact-PS}'[Do not output PS tag at each site, only at the start of a new phase set block.]' \
            {-d,--rm-dups}'[Output duplicate records present in multiple files only once: <snps|indels|both|all|exact>]' \
            {-D,--remove-duplicates}'[Alias for -d exact]' \
            {-f,--file-list}'[Read the list of files from a file.]':file:_files \
            {-l,--ligate}'[Ligate phased VCFs by matching phase at overlapping haplotypes]' \
            '--ligate-force[Ligate even non-overlapping chunks, keep all sites]' \
            '--ligate-warn[Drop sites in imperfect overlaps]' \
            '--no-version[Do not append version and command line to the header]' \
            {-n,--naive}'[Concatenate files without recompression, a header check compatibility is performed]' \
            '--naive-force[Same as --naive, but header compatibility is not checked. Dangerous, use with caution.]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-q,--min-PQ}'[Break phase set if phasing quality is lower than <int> \[30\]]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            '--threads[Use multithreading with <int> worker threads \[0\]]' \
            {-v,--verbose}'[Set verbosity level \[1\]]' \
            "*: :_files"

    }

    function _bcftools_convert {
        _arguments \
            {-e,--exclude}'[Exclude sites for which the expression is true]' \
            {-i,--include}'[Select sites for which the expression is true]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--samples}'[List of samples to include]' \
            {-S,--samples-file}'[File of samples to include]':file:_files \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Output file name \[stdout\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            '--threads[Use multithreading with INT worker threads \[0\]]' \
            {-G,--gensample2vcf}'[<PREFIX>|<GEN-FILE>,<SAMPLE-FILE>]' \
            {-g,--gensample}'[<PREFIX>|<GEN-FILE>,<SAMPLE-FILE>]' \
            '--tag[Tag to take values for .gen file: GT,PL,GL,GP \[GT\]]' \
            '--chrom[Output chromosome in first column instead of CHROM:POS_REF_ALT]' \
            '--keep-duplicates[Keep duplicate positions]' \
            '--sex[Output sex column in the sample-file, input format is: Sample\t\[MF\]]':file:_files \
            '--vcf-ids[Output VCF IDs in second column instead of CHROM:POS_REF_ALT]' \
            '--gvcf2vcf[Expand gVCF reference blocks]' \
            {-f,--fasta-ref}'[Reference sequence in fasta format]':file:_files \
            '--hapsample2vcf[<PREFIX>|<HAP-FILE>,<SAMPLE-FILE>]' \
            '--hapsample[<PREFIX>|<HAP-FILE>,<SAMPLE-FILE>]' \
            '--haploid2diploid[Convert haploid genotypes to diploid homozygotes]' \
            '--vcf-ids[Output VCF IDs instead of CHROM:POS_REF_ALT]' \
            {-H,--haplegendsample2vcf}'[<PREFIX>|<HAP-FILE>,<LEGEND-FILE>,<SAMPLE-FILE>]' \
            {-h,--haplegendsample}'[<PREFIX>|<HAP-FILE>,<LEGEND-FILE>,<SAMPLE-FILE>]' \
            '--tsv2vcf[Convert TSV to VCF.]':file:_files \
            {-c,--columns}'[Columns of the input tsv file \[ID,CHROM,POS,AA\]]' \
            {-s,--samples}'[List of sample names]' \
            {-S,--samples-file}'[File of sample names]':file:_files \
            "*: :_files"

    }

    function _bcftools_isec {
        _arguments \
            {-c,--collapse}'[Treat as identical records with <snps|indels|both|all|some|none>, see man page for details \[none\]]' \
            {-C,--complement}'[Output positions present only in the first file but missing in the others]' \
            {-e,--exclude}'[Exclude sites for which the expression is true]' \
            {-f,--apply-filters}'[Require at least one of the listed FILTER strings (e.g. "PASS,.")]' \
            {-i,--include}'[Include only sites for which the expression is true]' \
            '--no-version[Do not append version and command line to the header]' \
            {-n,--nfiles}'[Output positions present in this many (=), this many or more (+), this many or fewer (-), the exact (~) files]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-p,--prefix}'[If given, subset each of the input files accordingly, see also -w]':file:_files \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            '--threads[Use multithreading with <int> worker threads \[0\]]' \
            {-w,--write}'[List of files to write with -p given as 1-based indexes. By default, all files are written]' \
            "*: :_files"

    }

    function _bcftools_merge {
        _arguments \
            '--force-samples[Resolve duplicate sample names]' \
            '--print-header[Print only the merged header and exit]' \
            '--use-header[Use the provided header]':file:_files \
            {-0,--missing-to-ref}'[Assume genotypes at missing sites are 0/0]' \
            {-f,--apply-filters}'[Require at least one of the listed FILTER strings (e.g. "PASS,.")]' \
            {-F,--filter-logic}'[Remove filters if some input is PASS ("x"), or apply all filters ("+") \[+\]]' \
            {-g,--gvcf}'[Merge gVCF blocks, INFO/END tag is expected. Implies -i QS:sum,MinDP:min,I16:sum,IDV:max,IMF:max]' \
            {-i,--info-rules}'[Rules for merging INFO fields (method is one of sum,avg,min,max,join) or "-" to turn off the default \[DP:sum,DP4:sum\]]' \
            {-l,--file-list}'[Read file names from the file]':file:_files \
            {-L,--local-alleles}'[EXPERIMENTAL: if more than <int> ALT alleles are encountered, drop FMT/PL and output LAA+LPL instead; 0=unlimited \[0\]]' \
            {-m,--merge}'[Allow multiallelic records for <snps|indels|both|all|none|id>, see man page for details \[both\]]' \
            '--no-index[Merge unindexed files, the same chromosomal order is required and -r/-R are not allowed]' \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            '--threads[Use multithreading with <int> worker threads \[0\]]' \
            "*: :_files"

    }

    function _bcftools_norm {
        _arguments \
            {-a,--atomize}'[Decompose complex variants (e.g. MNVs become consecutive SNVs)]' \
            '--atom-overlaps[Use the star allele (*) for overlapping alleles or set to missing (.) \[*\]]' \
            {-c,--check-ref}'[Check REF alleles and exit (e), warn (w), exclude (x), or set (s) bad sites \[e\]]' \
            {-D,--remove-duplicates}'[Remove duplicate lines of the same type.]' \
            {-d,--rm-dup}'[Remove duplicate snps|indels|both|all|exact]' \
            {-f,--fasta-ref}'[Reference sequence]':file:_files \
            '--force[Try to proceed even if malformed tags are encountered. Experimental, use at your own risk]' \
            '--keep-sum[Keep vector sum constant when splitting multiallelics (see github issue #360)]' \
            {-m,--multiallelics}'[Split multiallelics (-) or join biallelics (+), type: snps|indels|both|any \[both\]]' \
            '--no-version[Do not append version and command line to the header]' \
            {-N,--do-not-normalize}'[Do not normalize indels (with -m or -c s)]' \
            '--old-rec-tag[Annotate modified records with INFO/STR indicating the original variant]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--strict-filter}'[When merging (-m+), merged site is PASS only if all sites being merged PASS]' \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            '--threads[Use multithreading with <int> worker threads \[0\]]' \
            {-w,--site-win}'[Buffer for sorting lines which changed position during realignment \[1000\]]' \
            "*: :_files"

    }

    function _bcftools_plugin {
        _arguments \
            {-e,--exclude}'[Exclude sites for which the expression is true]' \
            {-i,--include}'[Select sites for which the expression is true]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            '--threads[Use multithreading with <int> worker threads \[0\]]' \
            {-h,--help}'[List plugin'\''s options]' \
            {-l,--list-plugins}'[List available plugins. See BCFTOOLS_PLUGINS environment variable and man page for details]' \
            {-v,--verbose}'[Print verbose information, -vv increases verbosity]' \
            {-V,--version}'[Print version string and exit]' \
            "*: :_files"

    }

    function _bcftools_query {
        _arguments \
            {-e,--exclude}'[Exclude sites for which the expression is true (see man page for details)]' \
            {-f,--format}'[See man page for details]' \
            {-H,--print-header}'[Print header]' \
            {-i,--include}'[Select sites for which the expression is true (see man page for details)]' \
            {-l,--list-samples}'[Print the list of samples and exit]' \
            {-o,--output}'[Output file name \[stdout\]]':file:_files \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--samples}'[List of samples to include]' \
            {-S,--samples-file}'[File of samples to include]':file:_files \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            {-u,--allow-undef-tags}'[Print "." for undefined tags]' \
            {-v,--vcf-list}'[Process multiple VCFs listed in the file]':file:_files \
            "*: :_files"

    }

    function _bcftools_reheader {
        _arguments \
            {-f,--fai}'[update sequences and their lengths from the .fai file]':file:_files \
            {-h,--header}'[new header]':file:_files \
            {-o,--output}'[write output to a file \[standard output\]]':file:_files \
            {-s,--samples}'[new sample names]':file:_files \
            {-T,--temp-prefix}'[template for temporary file name \[/tmp/bcftools.XXXXXX\]]':file:_files \
            '--threads[use multithreading with <int> worker threads (BCF only) \[0\]]' \
            "*: :_files"

    }

    function _bcftools_sort {
        _arguments \
            {-m,--max-mem}'[maximum memory to use \[768M\]]' \
            {-o,--output}'[output file name \[stdout\]]':file:_files \
            {-O,--output-type}'[b: compressed BCF, u: uncompressed BCF, z: compressed VCF, v: uncompressed VCF \[v\]]' \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-T,--temp-dir}'[temporary files \[/tmp/bcftools.XXXXXX\]]':file:_files \
            "*: :_files"

    }

    function _bcftools_view {
        _arguments \
            {-G,--drop-genotypes}'[Drop individual genotype information (after subsetting if -s option set)]' \
            {-h,--header-only}'[Print only the header in VCF output (equivalent to bcftools head)]' \
            {-H,--no-header}'[Suppress the header in VCF output]' \
            '--with-header[Print both header and records in VCF output \[default\]]' \
            {-l,--compression-level}'[Compression level: 0 uncompressed, 1 best speed, 9 best compression \[-1\]]' \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Output file name \[stdout\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in FILE]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps. Exclude regions with "^" prefix]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps. Exclude regions with "^" prefix]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            '--threads[Use multithreading with INT worker threads \[0\]]' \
            {-a,--trim-alt-alleles}'[Trim ALT alleles not seen in the genotype fields (or their subset with -s/-S)]' \
            {-I,--no-update}'[Do not (re)calculate INFO fields for the subset (currently INFO/AC and INFO/AN)]' \
            {-s,--samples}'[Comma separated list of samples to include (or exclude with "^" prefix)]' \
            {-S,--samples-file}'[File of samples to include (or exclude with "^" prefix)]':file:_files \
            '--force-samples[Only warn about unknown subset samples]' \
            {-f,--apply-filters}'[Require at least one of the listed FILTER strings (e.g. "PASS,.")]' \
            {-g,--genotype}'[Require one or more hom/het/missing genotype or, if prefixed with "^", exclude such sites]' \
            "*: :_files"

    }

    function _bcftools_call {
        _arguments \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[Output type: '\''b'\'' compressed BCF; '\''u'\'' uncompressed BCF; '\''z'\'' compressed VCF; '\''v'\'' uncompressed VCF \[v\]]' \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            '--ploidy[Predefined ploidy, '\''list'\'' to print available settings, append '\''?'\'' for details \[2\]]' \
            '--ploidy-file[Space/tab-delimited list of CHROM,FROM,TO,SEX,PLOIDY]':file:_files \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--samples}'[List of samples to include \[all samples\]]' \
            {-S,--samples-file}'[PED file or a file with an optional column with sex (see man page for details) \[all samples\]]':file:_files \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--threads[Use multithreading with INT worker threads \[0\]]' \
            {-A,--keep-alts}'[Keep all possible alternate alleles at variant sites]' \
            {-a,--annotate}'[Optional tags to output (lowercase allowed); '\''?'\'' to list available tags]' \
            {-F,--prior-freqs}'[Use prior allele frequencies, determined from these pre-filled tags]' \
            {-G,--group-samples}'[Group samples by population (file with "sample\tgroup") or "-" for single-sample calling. This requires FORMAT/QS or other Number=R,Type=Integer tag such as FORMAT/AD]':file:_files \
            '--group-samples-tag[The tag to use with -G, by default FORMAT/QS and FORMAT/AD are checked automatically]' \
            {-g,--gvcf}'[Group non-variant sites into gVCF blocks by minimum per-sample DP]' \
            {-i,--insert-missed}'[Output also sites missed by mpileup but present in -T]' \
            {-M,--keep-masked-ref}'[Keep sites with masked reference allele (REF=N)]' \
            {-V,--skip-variants}'[Skip indels/snps]' \
            {-v,--variants-only}'[Output variant sites only]' \
            {-c,--consensus-caller}'[The original calling method (conflicts with -m)]' \
            {-C,--constrain}'[One of: alleles, trio (see manual)]' \
            {-m,--multiallelic-caller}'[Alternative model for multiallelic and rare-variant calling (conflicts with -c)]' \
            {-n,--novel-rate}'[Likelihood of novel mutation for constrained trio calling, see man page for details \[1e-8,1e-9,1e-9\]]' \
            {-p,--pval-threshold}'[Variant if P(ref|D)<FLOAT with -c \[0.5\]]' \
            {-P,--prior}'[Mutation rate (use bigger for greater sensitivity), use with -m \[1.1e-3\]]' \
            "*: :_files"

    }

    function _bcftools_consensus {
        _arguments \
            '--sample[option will apply genotype]' \
            '--sample[option will apply genotype   (or haplotype) calls from FORMAT/GT. The program ignores allelic depth]' \
            {-c,--chain}'[write a chain file for liftover]':file:_files \
            {-a,--absent}'[replace positions absent from VCF with CHAR]' \
            {-e,--exclude}'[exclude sites for which the expression is true (see man page for details)]' \
            {-f,--fasta-ref}'[reference sequence in fasta format]':file:_files \
            {-H,--haplotype}'[choose which allele to use from the FORMAT/GT field, note the codes are case-insensitive:]' \
            {-i,--include}'[select sites for which the expression is true (see man page for details)]' \
            {-I,--iupac-codes}'[output variants in the form of IUPAC ambiguity codes]' \
            '--mark-del[instead of removing sequence, insert CHAR for deletions]' \
            '--mark-ins[highlight insertions in uppercase (uc) or lowercase (lc), leaving the rest as is]' \
            '--mark-snv[highlight substitutions in uppercase (uc) or lowercase (lc), leaving the rest as is]' \
            {-m,--mask}'[replace regions according to the next --mask-with option. The default is --mask-with N]':file:_files \
            '--mask-with[replace with CHAR (skips overlapping variants); change to uppercase (uc) or lowercase (lc)]' \
            {-M,--missing}'[output CHAR instead of skipping a missing genotype "./."]' \
            {-o,--output}'[write output to a file \[standard output\]]':file:_files \
            {-p,--prefix}'[prefix to add to output sequence names]' \
            {-s,--sample}'[apply variants of the given sample]' \
            "*: :_files"

    }

    function _bcftools_cnv {
        _arguments \
            {-c,--control-sample}'[Optional control sample name to highlight differences]' \
            {-f,--AF-file}'[Read allele frequencies from file (CHR\tPOS\tREF,ALT\tAF)]':file:_files \
            {-o,--output-dir,-p,--plot-threshold}'[Plot aberrant chromosomes with quality at least FLOAT]':file:_files \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--query-sample}'[Query samply name]' \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            {-a,--aberrant}'[Fraction of aberrant cells in query and control \[1.0,1.0\]]' \
            {-b,--BAF-weight}'[Relative contribution from BAF \[1\]]' \
            {-d,--BAF-dev}'[Expected BAF deviation in query and control \[0.04,0.04\]]' \
            {-e,--err-prob}'[Uniform error probability \[1e-4\]]' \
            {-k,--LRR-dev}'[Expected LRR deviation \[0.2,0.2\]]' \
            {-l,--LRR-weight}'[Relative contribution from LRR \[0.2\]]' \
            {-L,--LRR-smooth-win}'[Window of LRR moving average smoothing \[10\]]' \
            {-O,--optimize}'[Estimate fraction of aberrant cells down to FLOAT \[1.0\]]' \
            {-P,--same-prob}'[Prior probability of -s/-c being the same \[0.5\]]' \
            {-x,--xy-prob}'[P(x|y) transition probability \[1e-9\]]' \
            "*: :_files"

    }

    function _bcftools_csq {
        _arguments \
            {-f,--fasta-ref}'[Reference file in fasta format]':file:_files \
            {-g,--gff-annot}'[GFF3 annotation file]':file:_files \
            {-B,--trim-protein-seq}'[Abbreviate protein-changing predictions to max INT aminoacids]' \
            {-c,--custom-tag}'[Use this tag instead of the default BCSQ]' \
            {-l,--local-csq}'[Localized predictions, consider only one VCF record at a time]' \
            {-n,--ncsq}'[Maximum number of per-haplotype consequences to consider for each site \[15\]]' \
            {-p,--phase}'[How to handle unphased heterozygous genotypes: \[r\]]' \
            {-e,--exclude}'[Exclude sites for which the expression is true]' \
            '--force[Run even if some sanity checks fail]' \
            {-i,--include}'[Select sites for which the expression is true]' \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[b: compressed BCF, u: uncompressed BCF, z: compressed VCF   v: uncompressed VCF, t: plain tab-delimited text output, 0-9: compression level \[v\]]' \
            {-O,--output-type}'[b: compressed BCF, u: uncompressed BCF, z: compressed VCF   v: uncompressed VCF, t: plain tab-delimited text output, 0-9: compression level \[v\]]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-S,--samples-file}'[Samples to include]':file:_files \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            '--threads[Use multithreading with <int> worker threads \[0\]]' \
            {-v,--verbose}'[Verbosity level 0-2 \[1\]]' \
            "*: :_files"

    }

    function _bcftools_filter {
        _arguments \
            {-e,--exclude}'[Exclude sites for which the expression is true (see man page for details)]' \
            {-g,--SnpGap}'[Filter SNPs within <int> base pairs of an indel (the default) or any combination of indel,mnp,bnd,other,overlap]' \
            {-G,--IndelGap}'[Filter clusters of indels separated by <int> or fewer base pairs allowing only one to pass]' \
            {-i,--include}'[Include only sites for which the expression is true (see man page for details]' \
            {-m,--mode}'["+": do not replace but add to existing FILTER; "x": reset filters at sites which pass]' \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[u/b: un/compressed BCF, v/z: un/compressed VCF, 0-9: compression level \[v\]]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--soft-filter}'[Annotate FILTER column with <string> or unique filter name ("Filter%d") made up by the program ("+")]' \
            {-S,--set-GTs}'[Set genotypes of failed samples to missing (.) or ref (0)]' \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            '--threads[Use multithreading with <int> worker threads \[0\]]' \
            "*: :_files"

    }

    function _bcftools_gtcheck {
        _arguments \
            '--distinctive-sites[Find sites that can distinguish between at least NUM sample pairs.]' \
            '--dry-run[Stop after first record to estimate required time]' \
            {-e,--error-probability}'[Phred-scaled probability of genotyping error, 0 for faster but less accurate results \[40\]]' \
            {-g,--genotypes}'[Genotypes to compare against]':file:_files \
            {-H,--homs-only}'[Homozygous genotypes only, useful with low coverage data (requires -g)]' \
            '--n-matches[Print only top INT matches for each sample (sorted by average score), 0 for unlimited.]' \
            '--no-HWE-prob[Disable calculation of HWE probability]' \
            {-p,--pairs}'[Comma-separated sample pairs to compare (qry,gt\[,qry,gt..\] with -g or qry,qry\[,qry,qry..\] w/o)]' \
            {-P,--pairs-file}'[File with tab-delimited sample pairs to compare (qry,gt with -g or qry,qry w/o)]':file:_files \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--samples}'[List of query or -g samples, "-" to select all samples (by default all samples are compared)]' \
            {-S,--samples-file}'[File with the query or -g samples to compare]':file:_files \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            {-u,--use}'[Which tag to use in the query file (TAG1) and the -g file (TAG2) \[PL,GT\]]' \
            "*: :_files"

    }

    function _bcftools_mpileup {
        _arguments \
            {-6,--illumina1.3+}'[Quality is in the Illumina-1.3+ encoding]' \
            {-A,--count-orphans}'[Do not discard anomalous read pairs]' \
            {-b,--bam-list}'[List of input BAM filenames, one per line]':file:_files \
            {-B,--no-BAQ}'[Disable BAQ (per-Base Alignment Quality)]' \
            {-C,--adjust-MQ}'[Adjust mapping quality \[0\]]' \
            {-D,--full-BAQ}'[Apply BAQ everywhere, not just in problematic regions]' \
            {-d,--max-depth}'[Max raw per-file depth; avoids excessive memory usage \[250\]]' \
            {-E,--redo-BAQ}'[Recalculate BAQ on the fly, ignore existing BQs]' \
            {-f,--fasta-ref}'[Faidx indexed reference sequence file]':file:_files \
            '--no-reference[Do not require fasta reference file]' \
            {-G,--read-groups}'[Select or exclude read groups listed in the file]':file:_files \
            {-q,--min-MQ}'[Skip alignments with mapQ smaller than INT \[0\]]' \
            {-Q,--min-BQ}'[Skip bases with baseQ/BAQ smaller than INT \[1\]]' \
            '--max-BQ[Limit baseQ/BAQ to no more than INT \[60\]]' \
            '--delta-BQ[Use neighbour_qual + INT if less than qual \[30\]]' \
            {-r,--regions}'[Comma separated list of regions in which pileup is generated]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--ignore-RG[Ignore RG tags (one BAM = one sample)]' \
            {--rf,--incl-flags}'[Required flags: skip reads with mask bits unset \[\]]' \
            {--ff,--excl-flags}'[Filter flags: skip reads with mask bits set \[UNMAP,SECONDARY,QCFAIL,DUP\]]' \
            {-s,--samples}'[comma separated list of samples to include]' \
            {-S,--samples-file}'[File of samples to include]':file:_files \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            {-x,--ignore-overlaps}'[Disable read-pair overlap detection]' \
            '--seed[Random number seed used for sampling deep regions \[0\]]' \
            {-a,--annotate}'[Optional tags to output; '\''?'\'' to list available tags \[\]]' \
            {-g,--gvcf}'[Group non-variant sites into gVCF blocks according To minimum per-sample DP]' \
            '--no-version[Do not append version and command line to the header]' \
            {-o,--output}'[Write output to FILE \[standard output\]]':file:_files \
            {-O,--output-type}'['\''b'\'' compressed BCF; '\''u'\'' uncompressed BCF; '\''z'\'' compressed VCF; '\''v'\'' uncompressed VCF; 0-9 compression level \[v\]]' \
            {-U,--mwu-u}'[Use older probability scale for Mann-Whitney U test]' \
            '--threads[Use multithreading with INT worker threads \[0\]]' \
            {-X,--config}'[Specify platform specific profiles (see below)]' \
            {-e,--ext-prob}'[Phred-scaled gap extension seq error probability \[20\]]' \
            {-F,--gap-frac}'[Minimum fraction of gapped reads \[0.05\]]' \
            {-h,--tandem-qual}'[Coefficient for homopolymer errors \[500\]]' \
            {-I,--skip-indels}'[Do not perform indel calling]' \
            {-L,--max-idepth}'[Maximum per-file depth for INDEL calling \[250\]]' \
            {-m,--min-ireads}'[Minimum number gapped reads for indel candidates \[2\]]' \
            {-M,--max-read-len}'[Maximum length of read to pass to BAQ algorithm \[500\]]' \
            {-o,--open-prob}'[Phred-scaled gap open seq error probability \[40\]]' \
            {-p,--per-sample-mF}'[Apply -m and -F per-sample for increased sensitivity]' \
            {-P,--platforms}'[Comma separated list of platforms for indels \[all\]]' \
            {--ar,--ambig-reads}'[What to do with ambiguous indel reads: drop,incAD,incAD0 \[drop\]]' \
            '--indel-bias[Raise to favour recall over precision \[1.00\]]' \
            '--indel-size[Approximate maximum indel size considered \[110\]]' \
            "*: :_files"

    }

    function _bcftools_polysomy {
        _arguments \
            {-o,--output-dir}'[-r, --regions REGION Restrict to comma-separated list of regions]':file:_files \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--sample}'[Sample to analyze]' \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            {-b,--peak-size}'[Minimum peak size (0-1, larger is stricter) \[0.1\]]' \
            {-c,--cn-penalty}'[Penalty for increasing CN (0-1, larger is stricter) \[0.7\]]' \
            {-f,--fit-th}'[Goodness of fit threshold (>0, smaller is stricter) \[3.3\]]' \
            {-i,--include-aa}'[Include the AA peak in CN2 and CN3 evaluation]' \
            {-m,--min-fraction}'[Minimum distinguishable fraction of aberrant cells \[0.1\]]' \
            {-p,--peak-symmetry}'[Peak symmetry threshold (0-1, larger is stricter) \[0.5\]]' \
            "*: :_files"

    }

    function _bcftools_roh {
        _arguments \
            '--AF-dflt[if AF is not known, use this allele frequency \[skip\]]' \
            '--AF-tag[use TAG for allele frequency]' \
            '--AF-file[read allele frequencies from file (CHR\tPOS\tREF,ALT\tAF)]':file:_files \
            {-b,--buffer-size}'[buffer size and the number of overlapping sites, 0 for unlimited \[0\]]' \
            {-e,--estimate-AF}'[estimate AF from FORMAT/TAG (GT or PL) of all samples ("-") or samples listed]':file:_files \
            '--exclude[exclude sites for which the expression is true]' \
            {-G,--GTs-only}'[use GTs and ignore PLs, instead using <float> for PL of the two least likely genotypes.]' \
            '--include[select sites for which the expression is true]' \
            {-i,--ignore-homref}'[skip hom-ref genotypes (0/0)]' \
            '--include-noalt[include sites with no ALT allele (ignored by default)]' \
            {-I,--skip-indels}'[skip indels as their genotypes are enriched for errors]' \
            {-m,--genetic-map}'[genetic map in IMPUTE2 format, single file or mask, where string "{CHROM}"]':file:_files \
            {-M,--rec-rate}'[constant recombination rate per bp]' \
            {-o,--output}'[write output to a file \[standard output\]]':file:_files \
            {-O,--output-type}'[output s:per-site, r:regions, z:compressed \[sr\]]' \
            {-r,--regions}'[restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--samples}'[list of samples to analyze \[all samples\]]' \
            {-S,--samples-file}'[file of samples to analyze \[all samples\]]':file:_files \
            {-t,--targets}'[similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            '--threads[use multithreading with <int> worker threads \[0\]]' \
            {-a,--hw-to-az}'[P(AZ|HW) transition probability from HW (Hardy-Weinberg) to AZ (autozygous) state \[6.7e-8\]]' \
            {-H,--az-to-hw}'[P(HW|AZ) transition probability from AZ to HW state \[5e-9\]]' \
            {-V,--viterbi-training}'[estimate HMM parameters, <float> is the convergence threshold, e.g. 1e-10 (experimental)]' \
            "*: :_files"

    }

    function _bcftools_stats {
        _arguments \
            '--af-bins[Allele frequency bins, a list (0.1,0.5,1) or a file (0.1\n0.5\n1)]' \
            '--af-tag[Allele frequency tag to use, by default estimated from AN,AC or GT]' \
            {-1,--1st-allele-only}'[Include only 1st allele at multiallelic sites]' \
            {-c,--collapse}'[Treat as identical records with <snps|indels|both|all|some|none>, see man page for details \[none\]]' \
            {-d,--depth}'[Depth distribution: min,max,bin size \[0,500,1\]]' \
            {-e,--exclude}'[Exclude sites for which the expression is true (see man page for details)]' \
            {-E,--exons}'[Tab-delimited file with exons for indel frameshifts (chr,beg,end; 1-based, inclusive, bgzip compressed)]':file:_files \
            {-f,--apply-filters}'[Require at least one of the listed FILTER strings (e.g. "PASS,.")]' \
            {-F,--fasta-ref}'[Faidx indexed reference sequence file to determine INDEL context]':file:_files \
            {-i,--include}'[Select sites for which the expression is true (see man page for details)]' \
            {-I,--split-by-ID}'[Collect stats for sites with ID separately (known vs novel)]' \
            {-r,--regions}'[Restrict to comma-separated list of regions]' \
            {-R,--regions-file}'[Restrict to regions listed in a file]':file:_files \
            '--regions-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[1\]]' \
            {-s,--samples}'[List of samples for sample stats, "-" to include all samples]' \
            {-S,--samples-file}'[File of samples to include]':file:_files \
            {-t,--targets}'[Similar to -r but streams rather than index-jumps]' \
            {-T,--targets-file}'[Similar to -R but streams rather than index-jumps]':file:_files \
            '--targets-overlap[Include if POS in the region (0), record overlaps (1), variant overlaps (2) \[0\]]' \
            {-u,--user-tstv}'[Collect Ts/Tv stats for any tag using the given binning \[0:1:100\]]' \
            '--threads[Use multithreading with <int> worker threads \[0\]]' \
            {-v,--verbose}'[Produce verbose per-site and per-sample output]' \
            "*: :_files"

    }


function _bcftools {
    local line state

    function _commands {
        local -a commands
        commands=(
            'index:index VCF/BCF files'
            'annotate:annotate and edit VCF/BCF files'
            'concat:concatenate VCF/BCF files from the same set of samples'
            'convert:convert VCF/BCF files to different formats and back'
            'isec:intersections of VCF/BCF files'
            'merge:merge VCF/BCF files files from non-overlapping sample sets'
            'norm:left-align and normalize indels'
            'plugin:user-defined plugins'
            'query:transform VCF/BCF into user-defined formats'
            'reheader:modify VCF/BCF header, change sample names'
            'sort:sort VCF/BCF file'
            'view:VCF/BCF conversion, view, subset and filter VCF/BCF files'
            'call:SNP/indel calling'
            'consensus:create consensus sequence by applying VCF variants'
            'cnv:HMM CNV calling'
            'csq:call variation consequences'
            'filter:filter VCF/BCF files using fixed thresholds'
            'gtcheck:check sample concordance, detect sample swaps and contamination'
            'mpileup:multi-way pileup producing genotype likelihoods'
            'polysomy:detect number of chromosomal copies'
            'roh:identify runs of autozygosity (HMM)'
            'stats:produce VCF/BCF stats'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (index)
            _bcftools_index
            ;;

        (annotate)
            _bcftools_annotate
            ;;

        (concat)
            _bcftools_concat
            ;;

        (convert)
            _bcftools_convert
            ;;

        (isec)
            _bcftools_isec
            ;;

        (merge)
            _bcftools_merge
            ;;

        (norm)
            _bcftools_norm
            ;;

        (plugin)
            _bcftools_plugin
            ;;

        (query)
            _bcftools_query
            ;;

        (reheader)
            _bcftools_reheader
            ;;

        (sort)
            _bcftools_sort
            ;;

        (view)
            _bcftools_view
            ;;

        (call)
            _bcftools_call
            ;;

        (consensus)
            _bcftools_consensus
            ;;

        (cnv)
            _bcftools_cnv
            ;;

        (csq)
            _bcftools_csq
            ;;

        (filter)
            _bcftools_filter
            ;;

        (gtcheck)
            _bcftools_gtcheck
            ;;

        (mpileup)
            _bcftools_mpileup
            ;;

        (polysomy)
            _bcftools_polysomy
            ;;

        (roh)
            _bcftools_roh
            ;;

        (stats)
            _bcftools_stats
            ;;

        esac
        ;;
     esac

}

