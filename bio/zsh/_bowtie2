#compdef _bowtie2 bowtie2

# Generated with h2o 0.1.18


function _bowtie2 {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-q[query input files are FASTQ .fq/.fastq (default)]' \
        '--tab5[query input files are TAB5 .tab5]' \
        '--tab6[query input files are TAB6 .tab6]' \
        '--qseq[query input files are in Illumina'\''s qseq format]' \
        '-f[query input files are (multi-)FASTA .fa/.mfa]' \
        '-r[query input files are raw one-sequence-per-line]' \
        '-F[query input files are continuous FASTA where reads are substrings (k-mers) extracted from a FASTA file <s> and aligned at offsets 1, 1+i, 1+2i ... end of reference]' \
        '-c[<m1>, <m2>, <r> are sequences themselves, not files]' \
        '(-s --skip)'{-s,--skip}'[skip the first <int> reads/pairs in the input (none)]' \
        '(-u --upto)'{-u,--upto}'[stop after first <int> reads/pairs (no limit)]' \
        '(-5 --trim5)'{-5,--trim5}'[trim <int> bases from 5'\''/left end of reads (0)]' \
        '(-3 --trim3)'{-3,--trim3}'[trim <int> bases from 3'\''/right end of reads (0)]' \
        '--trim-to[If the read end is not specified then it defaults to 3 (0)]' \
        '--phred33[qualities are Phred+33 (default)]' \
        '--phred64[qualities are Phred+64]' \
        '--int-quals[qualities encoded as space-delimited integers]' \
        '-N[max # mismatches in seed alignment; can be 0 or 1 (0)]' \
        '-L[length of seed substrings; must be >3, <32 (22)]' \
        '-i[interval between seed substrings w/r/t read len (S,1,1.15)]' \
        '--n-ceil[func for max # non-A/C/G/Ts permitted in aln (L,0,0.15)]' \
        '--dpad[include <int> extra ref chars on sides of DP table (15)]' \
        '--gbar[disallow gaps within <int> nucs of read extremes (4)]' \
        '--ignore-quals[treat all quality values as 30 on Phred scale (off)]' \
        '--nofw[do not align forward (original) version of read (off)]' \
        '--norc[do not align reverse-complement version of read (off)]' \
        '--no-1mm-upfront[do not allow 1 mismatch alignments before attempting to scan for the optimal seeded alignments]' \
        '--end-to-end[entire read must align; no clipping (on)]' \
        '--local[local alignment; ends might be soft clipped (off)]' \
        '--ma[match bonus (0 for --end-to-end, 2 for --local)]' \
        '--mp[max penalty for mismatch; lower qual = lower penalty (6)]' \
        '--np[penalty for non-A/C/G/Ts in read/ref (1)]' \
        '--rdg[read gap open, extend penalties (5,3)]' \
        '--rfg[reference gap open, extend penalties (5,3)]' \
        '--score-min[min acceptable alignment score w/r/t read length (G,20,8 for local, L,-0.6,-0.6 for end-to-end)]' \
        '-k[report up to <int> alns per read; MAPQ not meaningful]' \
        '(-a --all)'{-a,--all}'[report all alignments; very slow, MAPQ not meaningful]' \
        '-D[give up extending after <int> failed extends in a row (15)]' \
        '-R[for reads w/ repetitive seeds, try <int> sets of seeds (2)]' \
        '(-I --minins)'{-I,--minins}'[minimum fragment length (0)]' \
        '(-X --maxins)'{-X,--maxins}'[maximum fragment length (500)]' \
        '(--fr --rf --ff)'{--fr,--rf,--ff}'[-1, -2 mates align fw/rev, rev/fw, fw/fw (--fr)]' \
        '--no-mixed[suppress unpaired alignments for paired reads]' \
        '--no-discordant[suppress discordant alignments for paired reads]' \
        '--dovetail[concordant when mates extend past each other]' \
        '--no-contain[not concordant when one mate alignment contains other]' \
        '--no-overlap[not concordant when mates overlap at all]' \
        '--align-paired-reads[Bowtie2 will, by default, attempt to align unpaired BAM reads. Use this option to align paired-end reads instead.]' \
        '--preserve-tags[Preserve tags from the original BAM record by appending them to the end of the corresponding SAM output.]' \
        '(-t --time)'{-t,--time}'[print wall-clock time taken by search phases]' \
        '--un[write unpaired reads that didn'\''t align to <path>]:file:_files' \
        '--al[write unpaired reads that aligned at least once to <path>]:file:_files' \
        '--un-conc[write pairs that didn'\''t align concordantly to <path>]:file:_files' \
        '--al-conc[write pairs that aligned concordantly at least once to <path>]:file:_files' \
        '--quiet[print nothing to stderr except serious errors]' \
        '--met-file[send metrics to file at <path> (off)]:file:_files' \
        '--met-stderr[send metrics to stderr (off)]' \
        '--met[report internal counters & metrics every <int> secs (1)]' \
        '--no-unal[suppress SAM records for unaligned reads]' \
        '--no-head[suppress header lines, i.e. lines starting with @]' \
        '--no-sq[suppress @SQ header lines]' \
        '--rg-id[set read group id, reflected in @RG line and RG:Z: opt field]' \
        '--rg[add <text> ("lab:value") to @RG line of SAM header. Note: @RG line only printed when --rg-id is set.]' \
        '--omit-sec-seq[put '\''*'\'' in SEQ and QUAL fields for secondary alignments.]' \
        '--sam-no-qname-trunc[Suppress standard behavior of truncating readname at first whitespace at the expense of generating non-standard SAM.]' \
        '--xeq[Use '\''='\''/'\''X'\'', instead of '\''M,'\'' to specify matches/mismatches in SAM record.]' \
        '--soft-clipped-unmapped-tlen[Exclude soft-clipped bases when reporting TLEN]' \
        '--sam-append-comment[Append FASTA/FASTQ comment to SAM record]' \
        '(-p --threads)'{-p,--threads}'[number of alignment threads to launch (1)]' \
        '--reorder[force SAM output order to match order of input reads]' \
        '--mm[use memory-mapped I/O for index; many '\''bowtie'\''s can share]' \
        '--qc-filter[filter out reads that are bad according to QSEQ filter]' \
        '--seed[seed for random number generator (0)]' \
        '--non-deterministic[seed rand. gen. arbitrarily instead of using read attributes]' \
        '--version[print version information and quit]' \
        '(-h --help)'{-h,--help}'[print this usage message]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

