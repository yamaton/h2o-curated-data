#compdef _filtlong filtlong

# Generated with h2o 0.1.18


function _filtlong {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '(-t --target_bases)'{-t,--target_bases}'[keep only the best reads up to this many total bases]' \
        '(-p --keep_percent)'{-p,--keep_percent}'[keep only this percentage of the best reads (measured by bases)]' \
        '--min_length[minimum length threshold]' \
        '--max_length[maximum length threshold]' \
        '--min_mean_q[minimum mean quality threshold]' \
        '--min_window_q[minimum window quality threshold]' \
        '(-a --assembly)'{-a,--assembly}'[reference assembly in FASTA format]:file:_files' \
        '(-1 --illumina_1)'{-1,--illumina_1}'[reference Illumina reads in FASTQ format]:file:_files' \
        '(-2 --illumina_2)'{-2,--illumina_2}'[reference Illumina reads in FASTQ format]:file:_files' \
        '--length_weight[weight given to the length score (default: 1)]' \
        '--mean_q_weight[weight given to the mean quality score (default: 1)]' \
        '--window_q_weight[weight given to the window quality score (default: 1)]' \
        '--trim[trim non-k-mer-matching bases from start/end of reads]' \
        '--split[split reads at this many (or more) consecutive non-k-mer-matching bases]' \
        '--window_size[size of sliding window used when measuring window quality (default: 250)]' \
        '--verbose[verbose output to stderr with info for each read]' \
        '--version[display the program version and quit]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

