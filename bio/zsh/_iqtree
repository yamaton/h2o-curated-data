#compdef _iqtree iqtree

# Generated with h2o 0.1.18


function _iqtree {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '(-h --help)'{-h,--help}'[Print (more) help usages]' \
        '-s[PHYLIP/FASTA/NEXUS/CLUSTAL/MSF alignment file(s)]' \
        '-s[Directory of alignment files]' \
        '--seqtype[BIN, DNA, AA, NT2AA, CODON, MORPH (default: auto-detect)]' \
        '-t[Starting tree (default: 99 parsimony and BIONJ)]' \
        '-o[Outgroup taxon (list) for writing .treefile]' \
        '--prefix[Prefix for all output files (default: aln/partition)]' \
        '--seed[Random seed number, normally used for debugging purpose]' \
        '--safe[Safe likelihood kernel to avoid numerical underflow]' \
        '--mem[Maximal RAM usage in GB | MB | %]' \
        '--runs[Number of indepedent runs (default: 1)]' \
        '(-v --verbose)'{-v,--verbose}'[Verbose mode, printing more messages to screen]' \
        '(-V --version)'{-V,--version}'[Display version number]' \
        '--quiet[Quiet mode, suppress printing to screen (stdout)]' \
        '-fconst[Add constant patterns into alignment (N=no. states)]' \
        '--epsilon[Likelihood epsilon for parameter estimate (default 0.01)]' \
        '-T[No. cores/threads or AUTO-detect (default: 1)]' \
        '--threads-max[Max number of threads for -T AUTO (default: all cores)]' \
        '--redo[Redo both ModelFinder and tree search]' \
        '--redo-tree[Restore ModelFinder and only redo tree search]' \
        '--undo[Revoke finished run, used when changing some options]' \
        '--cptime[Minimum checkpoint interval (default: 60 sec and adapt)]' \
        '-p[NEXUS/RAxML partition file or directory with alignments Edge-linked proportional partition model]' \
        '-q[Like -p but edge-linked equal partition model]' \
        '-Q[Like -p but edge-unlinked partition model]' \
        '-S[Like -p but separate tree inference]' \
        '--subsample[Randomly sub-sample partitions (negative for complement)]' \
        '--subsample-seed[Random number seed for --subsample]' \
        '--lmap[Number of quartets for likelihood mapping analysis]' \
        '--lmclust[NEXUS file containing clusters for likelihood mapping]' \
        '--quartetlh[Print quartet log-likelihoods to .quartetlh file]' \
        '--ninit[Number of initial parsimony trees (default: 100)]' \
        '--ntop[Number of top initial trees (default: 20)]' \
        '--nbest[Number of best trees retained during search (defaut: 5)]' \
        '-n[Fix number of iterations to stop (default: OFF)]' \
        '--nstop[Number of unsuccessful iterations to stop (default: 100)]' \
        '--perturb[Perturbation strength for randomized NNI (default: 0.5)]' \
        '--radius[Radius for parsimony SPR search (default: 6)]' \
        '--allnni[Perform more thorough NNI search (default: OFF)]' \
        '-g[(Multifurcating) topological constraint tree file]' \
        '--fast[Fast search to resemble FastTree]' \
        '--polytomy[Collapse near-zero branches into polytomy]' \
        '--tree-fix[Fix -t tree (no tree search performed)]' \
        '--treels[Write locally optimal trees into .treels file]' \
        '--show-lh[Compute tree likelihood without optimisation]' \
        '--terrace[Check if the tree lies on a phylogenetic terrace]' \
        '(-B --ufboot)'{-B,--ufboot}'[Replicates for ultrafast bootstrap (>=1000)]' \
        '(-J --ufjack)'{-J,--ufjack}'[Replicates for ultrafast jackknife (>=1000)]' \
        '--jack-prop[Subsampling proportion for jackknife (default: 0.5)]' \
        '--sampling[GENE|GENESITE resampling for partitions (default: SITE)]' \
        '--boot-trees[Write bootstrap trees to .ufboot file (default: none)]' \
        '--wbtl[Like --boot-trees but also writing branch lengths]' \
        '--nmax[Maximum number of iterations (default: 1000)]' \
        '--nstep[Iterations for UFBoot stopping rule (default: 100)]' \
        '--bcor[Minimum correlation coefficient (default: 0.99)]' \
        '--beps[RELL epsilon to break tie (default: 0.5)]' \
        '--bnni[Optimize UFBoot trees by NNI on bootstrap alignment]' \
        '(-b --boot)'{-b,--boot}'[Replicates for bootstrap + ML tree + consensus tree]' \
        '(-j --jack)'{-j,--jack}'[Replicates for jackknife + ML tree + consensus tree]' \
        '--bcon[Replicates for bootstrap + consensus tree]' \
        '--bonly[Replicates for bootstrap only]' \
        '--tbe[Transfer bootstrap expectation]' \
        '--alrt[Replicates for SH approximate likelihood ratio test]' \
        '--alrt[Parametric aLRT test (Anisimova and Gascuel 2006)]' \
        '--abayes[approximate Bayes test (Anisimova et al. 2011)]' \
        '--lbp[Replicates for fast local bootstrap probabilities]' \
        '-m[Standard model selection (like jModelTest, ProtTest)]' \
        '-m[Standard model selection followed by tree inference]' \
        '-m[Extended model selection with FreeRate heterogeneity]' \
        '-m[Extended model selection followed by tree inference]' \
        '-m[Additionally test Lie Markov models]' \
        '-m[Additionally test Lie Markov models with RY symmetry]' \
        '-m[Additionally test Lie Markov models with WS symmetry]' \
        '-m[Additionally test Lie Markov models with MK symmetry]' \
        '-m[Additionally test strand-symmetric models]' \
        '--mset[Restrict search to models supported by other programs (raxml, phyml or mrbayes)]' \
        '--mset[Comma-separated model list (e.g. -mset WAG,LG,JTT)]' \
        '--msub[Amino-acid model source (nuclear, mitochondrial, chloroplast or viral)]' \
        '--mfreq[List of state frequencies]' \
        '--mrate[List of rate heterogeneity among sites (e.g. -mrate E,I,G,I+G,R is used for -m MF)]' \
        '--cmin[Min categories for FreeRate model \[+R\] (default: 2)]' \
        '--cmax[Max categories for FreeRate model \[+R\] (default: 10)]' \
        '--merit[Akaike|Bayesian information criterion (default: BIC)]' \
        '--mtree[Perform full tree search for every model]' \
        '--madd[List of mixture models to consider]' \
        '--mdef[Model definition NEXUS file (see Manual)]' \
        '--modelomatic[Find best codon/protein/DNA models (Whelan et al. 2015)]' \
        '--merge[Merge partitions to increase model fit]' \
        '--merge[Set merging algorithm (default: rclusterf)]' \
        '--merge-model[Use only 1 or all models for merging (default: 1)]' \
        '--merge-model[Comma-separated model list for merging]' \
        '--merge-rate[Use only 1 or all rate heterogeneity (default: 1)]' \
        '--merge-rate[Comma-separated rate list for merging]' \
        '--rcluster[Percentage of partition pairs for rcluster algorithm]' \
        '--rclusterf[Percentage of partition pairs for rclusterf algorithm]' \
        '--rcluster-max[Max number of partition pairs (default: 10*partitions)]' \
        '-m[Model name string (e.g. GTR+F+I+G)]' \
        '-m[Empirically counted frequencies from alignment]' \
        '-m[Optimized frequencies by maximum-likelihood]' \
        '-m[Equal frequencies]' \
        '-m[For DNA, freq(A+G)=1/2=freq(C+T)]' \
        '-m[For DNA, freq(A+T)=1/2=freq(C+G)]' \
        '-m[For DNA, freq(A+C)=1/2=freq(G+T)]' \
        '-m[4-digit constraint on ACGT frequency (e.g. +F1221 means f_A=f_T, f_C=f_G)]' \
        '-m[Amino-acid frequencies given protein matrix]' \
        '-m[Equal NT frequencies over three codon positions]' \
        '-m[Unequal NT frequencies over three codon positions]' \
        '-m[A proportion of invariable sites]' \
        '-m[Discrete Gamma model with n categories (default n=4)]' \
        '-m[Discrete Gamma model with unlinked model parameters]' \
        '-m[Invariable sites plus Gamma model with n categories]' \
        '-m[FreeRate model with n categories (default n=4)]' \
        '-m[FreeRate model with unlinked model parameters]' \
        '-m[Invariable sites plus FreeRate model with n categories]' \
        '-m[Heterotachy model with n classes]' \
        '-m[Heterotachy model with n classes and unlinked parameters]' \
        '--alpha-min[Min Gamma shape parameter for site rates (default: 0.02)]' \
        '--gamma-median[Median approximation for +G site rates (default: mean)]' \
        '--rate[Write empirical Bayesian site rates to .rate file]' \
        '--mlrate[Write maximum likelihood site rates to .mlrate file]' \
        '-s[Input counts file (see manual)]' \
        '-m[DNA substitution model (see above) used with PoMo]' \
        '-m[Virtual population size (default: 9)]' \
        '-m[Weighted binomial sampling]' \
        '-m[Weighted hypergeometric sampling]' \
        '-m[Sampled sampling]' \
        '-m[Discrete Gamma rate with n categories (default n=4)]' \
        '-m[Mixture model with K components]' \
        '-m[Frequency mixture model with K components]' \
        '--mix-opt[Optimize mixture weights (default: detect)]' \
        '-m[Ascertainment bias correction]' \
        '--tree-freq[Input tree to infer site frequency model]' \
        '--site-freq[Input site frequency model file]' \
        '--freq-max[Posterior maximum instead of mean approximation]' \
        '--trees[Set of trees to evaluate log-likelihoods]' \
        '--test[Replicates for topology test]' \
        '--test-weight[Perform weighted KH and SH tests]' \
        '--test-au[Approximately unbiased (AU) test (Shimodaira 2002)]' \
        '--sitelh[Write site log-likelihoods to .sitelh file]' \
        '--ancestral[Ancestral state reconstruction by empirical Bayes]' \
        '--asr-min[Min probability of ancestral state (default: equil freq)]' \
        '--symtest[Perform three tests of symmetry]' \
        '--symtest-only[Do --symtest then exist]' \
        '--symtest-remove-bad[Do --symtest and remove bad partitions]' \
        '--symtest-remove-good[Do --symtest and remove good partitions]' \
        '--symtest-type[Use MARginal/INTernal test when removing partitions]' \
        '--symtest-pval[P-value cutoff (default: 0.05)]' \
        '--symtest-keep-zero[Keep NAs in the tests]' \
        '-t[Reference tree to assign concordance factor]' \
        '--gcf[Set of source trees for gene concordance factor (gCF)]' \
        '--df-tree[Write discordant trees associated with gDF1]' \
        '--scf[Number of quartets for site concordance factor (sCF)]' \
        '-s[Sequence alignment for --scf]' \
        '-p[Partition file or directory for --scf]' \
        '--cf-verbose[Write CF per tree/locus to cf.stat_tree/_loci]' \
        '--cf-quartet[Write sCF for all resampled quartets to .cf.quartet]' \
        '--date[File containing dates of tips or ancestral nodes]' \
        '--date[Extract dates from taxon names after last '\''|'\'']' \
        '--date-tip[Tip dates as a real number or YYYY-MM-DD]' \
        '--date-root[Root date as a real number or YYYY-MM-DD]' \
        '--date-ci[Number of replicates to compute confidence interval]' \
        '--clock-sd[Std-dev for lognormal relaxed clock (default: 0.2)]' \
        '--date-no-outgroup[Exclude outgroup from time tree]' \
        '--date-outlier[Z-score cutoff to remove outlier tips/nodes (e.g. 3)]' \
        '--date-options[Extra options passing directly to LSD2]' \
        '--dating[Dating method: LSD for least square dating (default)]' \
        '-t[Set of input trees for consensus reconstruction]' \
        '--sup-min[Min split support, 0.5 for majority-rule consensus (default: 0, extended consensus)]' \
        '--burnin[Burnin number of trees to ignore]' \
        '--con-tree[Compute consensus tree to .contree file]' \
        '--con-net[Computing consensus network to .nex file]' \
        '--support[Assign support values into this tree from -t trees]' \
        '--suptag[Node name (or ALL) to assign tree IDs where node occurs]' \
        '--tree-dist-all[Compute all-to-all RF distances for -t trees]' \
        '--tree-dist[Compute RF distances between -t trees and this set]' \
        '--tree-dist2[Like -rf but trees can have unequal taxon sets]' \
        '-r[No. taxa for Yule-Harding random tree]' \
        '--rand[UNIform | CATerpillar | BALanced random tree]' \
        '--rlen[min, mean, and max random branch lengths]' \
        '--keep-ident[Keep identical sequences (default: remove & finally add)]' \
        '-blfix[Fix branch lengths of user tree passed via -te]' \
        '-blscale[Scale branch lengths of user tree passed via -t]' \
        '-blmin[Min branch length for optimization (default 0.000001)]' \
        '-blmax[Max branch length for optimization (default 100)]' \
        '-wslr[Write site log-likelihoods per rate category]' \
        '-wslm[Write site log-likelihoods per mixture class]' \
        '-wslmr[Write site log-likelihoods per mixture+rate class]' \
        '-wspr[Write site probabilities per rate category]' \
        '-wspm[Write site probabilities per mixture class]' \
        '-wspmr[Write site probabilities per mixture+rate class]' \
        '--partlh[Write partition log-likelihoods to .partlh file]' \
        '--no-outfiles[Suppress printing output files]' \
        '--eigenlib[Use Eigen3 library]' \
        '-alninfo[Print alignment sites statistics to .alninfo]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

