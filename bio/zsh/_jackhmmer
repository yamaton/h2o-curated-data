#compdef _jackhmmer jackhmmer

# Generated with h2o 0.1.18


function _jackhmmer {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-h[show brief   help on version and usage]' \
        '-N[set maximu   m number of iterations to <n>  \[5\]  (n>0)]' \
        '-o[direct output to file <f>, not stdout]' \
        '-A[save multiple alignment of hits to file <f>]' \
        '--tblout[save parseable table of per-sequence hits to file <f>]' \
        '--domtblout[save parseable table of per-domain hits to file <f>]' \
        '--chkhmm[save HMM checkpoints to files <f>-<iteration>.hmm]' \
        '--chkali[save alignment checkpoints to files <f>-<iteration>.sto]' \
        '--acc[prefer accessions over names in output]' \
        '--noali[don'\''t output alignments, so output is smaller]' \
        '--notextw[unlimit ASCII text output line width]' \
        '--textw[set max width of ASCII text output lines  \[120\]  (n>=120)]' \
        '--popen[gap open probability]' \
        '--pextend[gap extend probability]' \
        '--mx[substitution score matrix choice (of some built-in matrices)]' \
        '--mxfile[read substitution score matrix from file <f>]' \
        '-E[report sequences <= this E-value threshold in output  \[10.0\]  (x>0)]' \
        '-T[report sequences >= this score threshold in output]' \
        '--domE[report domains <= this E-value threshold in output  \[10.0\]  (x>0)]' \
        '--domT[report domains >= this score cutoff in output]' \
        '--incE[consider sequences <= this E-value threshold as significant]' \
        '--incT[consider sequences >= this score threshold as significant]' \
        '--incdomE[consider domains <= this E-value threshold as significant]' \
        '--incdomT[consider domains >= this score threshold as significant]' \
        '--max[Turn all heuristic filters off (less speed, more power)]' \
        '--F1[Stage 1 (MSV) threshold: promote hits w/ P <= F1  \[0.02\]]' \
        '--F2[Stage 2 (Vit) threshold: promote hits w/ P <= F2  \[1e-3\]]' \
        '--F3[Stage 3 (Fwd) threshold: promote hits w/ P <= F3  \[1e-5\]]' \
        '--nobias[turn off composition bias filter]' \
        '--fragthresh[if L <= x*alen, tag sequence as a fragment  \[0.5\]  (0<=x<=1)]' \
        '--wpb[Henikoff position-based weights  \[default\]]' \
        '--wgsc[Gerstein/Sonnhammer/Chothia tree weights]' \
        '--wblosum[Henikoff simple filter weights]' \
        '--wnone[don'\''t do any relative weighting; set all to 1]' \
        '--wid[for --wblosum: set identity cutoff  \[0.62\]  (0<=x<=1)]' \
        '--eent[adjust eff seq # to achieve relative entropy target]' \
        '--eentexp[adjust eff seq # to reach rel. ent. target using exp scaling]' \
        '--eclust[eff seq # is # of single linkage clusters]' \
        '--enone[no effective seq # weighting: just use nseq]' \
        '--eset[set eff seq # for all models to <x>]' \
        '--ere[for --eent\[exp\]: set minimum rel entropy/position to <x>]' \
        '--esigma[for --eent\[exp\]: set sigma param to <x>]' \
        '--eid[for --eclust: set fractional identity cutoff to <x>]' \
        '--pnone[don'\''t use any prior; parameters are frequencies]' \
        '--plaplace[use a Laplace +1 prior]' \
        '--EmL[length of sequences for MSV Gumbel mu fit  \[200\]  (n>0)]' \
        '--EmN[number of sequences for MSV Gumbel mu fit  \[200\]  (n>0)]' \
        '--EvL[length of sequences for Viterbi Gumbel mu fit  \[200\]  (n>0)]' \
        '--EvN[number of sequences for Viterbi Gumbel mu fit  \[200\]  (n>0)]' \
        '--EfL[length of sequences for Forward exp tail tau fit  \[100\]  (n>0)]' \
        '--EfN[number of sequences for Forward exp tail tau fit  \[200\]  (n>0)]' \
        '--Eft[tail mass for Forward exponential tail tau fit  \[0.04\]  (0<x<1)]' \
        '--nonull2[turn off biased composition score corrections]' \
        '-Z[set # of comparisons done, for E-value calculation]' \
        '--domZ[set # of significant seqs, for domain E-value calculation]' \
        '--seed[set RNG seed to <n> (if 0: one-time arbitrary seed)  \[42\]]' \
        '--qformat[assert query <seqfile> is in format <s>: no autodetection]' \
        '--tformat[assert target <seqdb> is in format <s>>: no autodetection]' \
        '--cpu[number of parallel CPU workers to use for multithreads  \[2\]]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

