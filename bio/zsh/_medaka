#compdef _medaka medaka

# Generated with h2o 0.1.18

    function _medaka_compress_bam {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--regions[Genomic regions to analyse, or a bed file. (default: None)]' \
            '--threads[Number of threads for parallel execution. (default: 1)]' \
            '--use_fast5_info[Root directory containing the fast5 files and .tsv file with columns filename and read_id. (default: None)]' \
            "*: :_files"

    }

    function _medaka_features {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--batch_size[Inference batch size. (default: 100)]' \
            '--chunk_len[Chunk length of samples. (default: 10000)]' \
            '--chunk_ovlp[Overlap of chunks. (default: 1000)]' \
            '--regions[Genomic regions to analyse, or a bed file. (default: None)]' \
            '--truth[Bam of truth aligned to ref to create features for training. (default: None)]' \
            '--truth_haplotag[Two-letter tag defining haplotype of alignments for polyploidy labels. (default: None)]' \
            '--threads[Number of threads for parallel execution. (default: 1)]' \
            '--label_scheme[Labelling scheme. (default: HaploidLabelScheme)]' \
            '--label_scheme_args[Y1=VAL1 KEY2=VAL2a,VAL2b... \[KEY1=VAL1 KEY2=VAL2a,VAL2b... ...\] Label scheme key-word arguments. (default: {})]' \
            '--feature_encoder[FeatureEncoder used to create the features. (default: CountsFeatureEncoder)]' \
            '--feature_encoder_args[KEY1=VAL1 KEY2=VAL2a,VAL2b... \[KEY1=VAL1 KEY2=VAL2a,VAL2b... ...\] Feature encoder key-word arguments. (default: {})]' \
            "*: :_files"

    }

    function _medaka_train {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--train_name[Name for training run. (default: keras_train)]' \
            '--model[Model definition and initial weights .hdf, or .yml with kwargs to build model. {r103_fast_g507, r103_fast_snp_g507, r103_fast_variant_g507, r103_hac_g507, r103_hac_snp_g507, r103_hac_variant_g507, r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r103_sup_g507, r103_sup_snp_g507, r103_sup_variant_g507, r10_min_high_g303, r10_min_high_g340, r941_min_fast_g303, r941_min_fast_g507, r941_min_fast_snp_g507, r941_min_fast_variant_g507, r941_min_hac_g507, r941_min_hac_snp_g507, r941_min_hac_variant_g507, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_min_sup_g507, r941_min_sup_snp_g507, r941_min_sup_variant_g507, r941_prom_fast_g303, r941_prom_fast_g507, r941_prom_fast_snp_g507, r941_prom_fast_variant_g507, r941_prom_hac_g507, r941_prom_hac_snp_g507, r941_prom_hac_variant_g507, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_high_g4011, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_sup_g507, r941_prom_sup_snp_g507, r941_prom_sup_variant_g507, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360} (default: None)]' \
            '--epochs[Maximum number of trainig epochs. (default: 5000)]' \
            '--batch_size[Training batch size. (default: 100)]' \
            '--max_samples[Only train on max_samples. (default: inf)]' \
            '--mini_epochs[Reduce fraction of data per epoch by this factor (default: 1)]' \
            '--seed[Seed for random batch shuffling. (default: None)]' \
            '--threads_io[Number of threads for parallel IO. (default: 1)]' \
            '--device[GPU device to use. (default: 0)]' \
            '--optimizer[Optimizer to use. (default: rmsprop)]' \
            '--optim_args[Optimizer key-word arguments. (default: None)]' \
            '--validation_split[Fraction of data to validate on. (default: 0.2)]' \
            '--validation_features[VALIDATION_FEATURES \[VALIDATION_FEATURES ...\] Paths to validation data (default: None)]' \
            "*: :_files"

    }

    function _medaka_consensus {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--batch_size[Inference batch size. (default: 100)]' \
            '--chunk_len[Chunk length of samples. (default: 10000)]' \
            '--chunk_ovlp[Overlap of chunks. (default: 1000)]' \
            '--regions[Genomic regions to analyse, or a bed file. (default: None)]' \
            '--model[Model to use. {r103_fast_g507, r103_fast_snp_g507, r103_fast_variant_g507, r103_hac_g507, r103_hac_snp_g507, r103_hac_variant_g507, r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r103_sup_g507, r103_sup_snp_g507, r103_sup_variant_g507, r10_min_high_g303, r10_min_high_g340, r941_min_fast_g303, r941_min_fast_g507, r941_min_fast_snp_g507, r941_min_fast_variant_g507, r941_min_hac_g507, r941_min_hac_snp_g507, r941_min_hac_variant_g507, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_min_sup_g507, r941_min_sup_snp_g507, r941_min_sup_variant_g507, r941_prom_fast_g303, r941_prom_fast_g507, r941_prom_fast_snp_g507, r941_prom_fast_variant_g507, r941_prom_hac_g507, r941_prom_hac_snp_g507, r941_prom_hac_variant_g507, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_high_g4011, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_sup_g507, r941_prom_sup_snp_g507, r941_prom_sup_variant_g507, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360} (default: r941_min_hac_g507)]' \
            '--threads[Number of threads used by inference. (default: 1)]' \
            '--bam_workers[Number of workers used to prepare data from bam. (default: 2)]' \
            '--bam_chunk[Size of reference chunks each worker parses from bam. (can be used to control memory use). (default: 1000000)]' \
            '--check_output[Verify integrity of output file after inference. (default: False)]' \
            '--save_features[Save features with consensus probabilities. (default: False)]' \
            '--RG[Read group to select. (default: None)]' \
            '--tag_name[Two-letter tag name. (default: None)]' \
            '--tag_value[Value of tag. (default: None)]' \
            '--tag_keep_missing[Keep alignments when tag is missing. (default: False)]' \
            "*: :_files"

    }

    function _medaka_smolecule {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--batch_size[Inference batch size. (default: 100)]' \
            '--chunk_len[Chunk length of samples. (default: 1000)]' \
            '--chunk_ovlp[Overlap of chunks. (default: 500)]' \
            '--model[Model to use. {r103_fast_g507, r103_fast_snp_g507, r103_fast_variant_g507, r103_hac_g507, r103_hac_snp_g507, r103_hac_variant_g507, r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r103_sup_g507, r103_sup_snp_g507, r103_sup_variant_g507, r10_min_high_g303, r10_min_high_g340, r941_min_fast_g303, r941_min_fast_g507, r941_min_fast_snp_g507, r941_min_fast_variant_g507, r941_min_hac_g507, r941_min_hac_snp_g507, r941_min_hac_variant_g507, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_min_sup_g507, r941_min_sup_snp_g507, r941_min_sup_variant_g507, r941_prom_fast_g303, r941_prom_fast_g507, r941_prom_fast_snp_g507, r941_prom_fast_variant_g507, r941_prom_hac_g507, r941_prom_hac_snp_g507, r941_prom_hac_variant_g507, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_high_g4011, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_sup_g507, r941_prom_sup_snp_g507, r941_prom_sup_variant_g507, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360} (default: r941_min_hac_g507)]' \
            '--method[Pre-medaka consensus generation method. (default: spoa)]' \
            '--depth[Minimum subread count. (default: 3)]' \
            '--length[Minimum median subread length. (default: 400)]' \
            '--threads[Number of threads used by inference. (default: 1)]' \
            '--check_output[Verify integrity of output file after inference. (default: False)]' \
            '--save_features[Save features with consensus probabilities. (default: False)]' \
            "*: :_files"

    }

    function _medaka_consensus_from_features {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--model[Model to use. {r103_fast_g507, r103_fast_snp_g507, r103_fast_variant_g507, r103_hac_g507, r103_hac_snp_g507, r103_hac_variant_g507, r103_min_high_g345, r103_min_high_g360, r103_prom_high_g360, r103_prom_snp_g3210, r103_prom_variant_g3210, r103_sup_g507, r103_sup_snp_g507, r103_sup_variant_g507, r10_min_high_g303, r10_min_high_g340, r941_min_fast_g303, r941_min_fast_g507, r941_min_fast_snp_g507, r941_min_fast_variant_g507, r941_min_hac_g507, r941_min_hac_snp_g507, r941_min_hac_variant_g507, r941_min_high_g303, r941_min_high_g330, r941_min_high_g340_rle, r941_min_high_g344, r941_min_high_g351, r941_min_high_g360, r941_min_sup_g507, r941_min_sup_snp_g507, r941_min_sup_variant_g507, r941_prom_fast_g303, r941_prom_fast_g507, r941_prom_fast_snp_g507, r941_prom_fast_variant_g507, r941_prom_hac_g507, r941_prom_hac_snp_g507, r941_prom_hac_variant_g507, r941_prom_high_g303, r941_prom_high_g330, r941_prom_high_g344, r941_prom_high_g360, r941_prom_high_g4011, r941_prom_snp_g303, r941_prom_snp_g322, r941_prom_snp_g360, r941_prom_sup_g507, r941_prom_sup_snp_g507, r941_prom_sup_variant_g507, r941_prom_variant_g303, r941_prom_variant_g322, r941_prom_variant_g360} (default: r941_min_hac_g507)]' \
            "*: :_files"

    }

    function _medaka_fastrle {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--block_size[Block size for hompolymer splitting, e.g. with a value of blocksize=3, AAAA -> A3 A1. (default: 94)]' \
            "*: :_files"

    }

    function _medaka_stitch {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--regions[Genomic ref_names to process, or a bed file. (default: None)]' \
            '--threads[Number of worker processes to use. (default: 1)]' \
            '--no-fillgaps[Don'\''t fill gaps in consensus sequence with draft sequence. (default: True)]' \
            "*: :_files"

    }

    function _medaka_variant {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--regions[Genomic ref_names to process, or a bed file. (default: None)]' \
            '--verbose[Populate VCF info fields. (default: False)]' \
            '--ambig_ref[Decode variants at ambiguous reference positions. (default: False)]' \
            '--gvcf[Output VCF records for reference loci predicted to be non-variant. (default: False)]' \
            "*: :_files"

    }

    function _medaka_snp {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            '--regions[Genomic ref_names to process, or a bed file. (default: None)]' \
            '--threshold[Threshold for considering secondary calls. A value of 1 will result in haploid decoding. (default: 0.04)]' \
            '--ref_vcf[Reference vcf. (default: None)]' \
            '--verbose[Populate VCF info fields. (default: False)]' \
            "*: :_files"

    }

    function _medaka_tools {
        _arguments \
            '(-h --help)'{-h,--help}'[show this help message and exit]' \
            '--debug[Verbose logging of debug information. (default: 20)]' \
            '--quiet[Minimal logging; warnings only). (default: 20)]' \
            "*: :_files"

    }


function _medaka {
    local line state

    function _commands {
        local -a commands
        commands=(
            'compress_bam:Compress an alignment into RLE form.'
            'features:Create features for inference.'
            'train:Train a model from features.'
            'consensus:Run inference from a trained model and alignments.'
            'smolecule:Create consensus sequences from single-molecule reads.'
            'consensus_from_features:Run inference from a trained model on existing features.'
            'fastrle:Create run-length encoded fastq (lengths in quality track).'
            'stitch:Stitch together output from medaka consensus into final output.'
            'variant:Decode probabilities to VCF.'
            'snp:Decode probabilities to SNPs.'
            'tools:tools subcommand.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '(-h --help)'{-h,--help}'[show this help message and exit]' \
        '--version[show program'\''s version number and exit]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (compress_bam)
            _medaka_compress_bam
            ;;

        (features)
            _medaka_features
            ;;

        (train)
            _medaka_train
            ;;

        (consensus)
            _medaka_consensus
            ;;

        (smolecule)
            _medaka_smolecule
            ;;

        (consensus_from_features)
            _medaka_consensus_from_features
            ;;

        (fastrle)
            _medaka_fastrle
            ;;

        (stitch)
            _medaka_stitch
            ;;

        (variant)
            _medaka_variant
            ;;

        (snp)
            _medaka_snp
            ;;

        (tools)
            _medaka_tools
            ;;

        esac
        ;;
     esac

}

