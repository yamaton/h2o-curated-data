#compdef _unicycler_check unicycler_check

# Generated with h2o 0.1.18


function _unicycler_check {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '(-h --help)'{-h,--help}'[show this help message and exit]' \
        '--sam[Input SAM file of alignments (if this file doesn'\''t exist, the alignment will be performed with results saved to this file - you can use the aligner arguments with this script)]' \
        '--ref[FASTA file containing one or more reference sequences]' \
        '--reads[FASTQ file of long reads]' \
        '--min_len[Minimum alignment length (bp) - exclude alignments shorter than this length (default: 100)]' \
        '--error_window_size[Window size for error summaries (default: 100)]' \
        '--depth_window_size[Window size for depth summaries (default: 100)]' \
        '--error_rate_threshold[Threshold for high error rates, expressed as the fraction between the mean error rate and the random alignment error rate (default: 0.3)]' \
        '--depth_p_val[P-value for low/high depth thresholds (default: 0.001)]' \
        '--window_tables[Path and/or prefix for table files summarising reference errors for reference windows (default: do not save window tables)]' \
        '--base_tables[Path and/or prefix for table files summarising reference errors at each base (default: do not save base tables)]' \
        '--html[Path for HTML report (default: do not save HTML report)]' \
        '--threads[Number of CPU threads used to align (default: the number of available CPUs)]' \
        '--verbosity[Level of stdout information (0 to 2) (default: 1)]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

