{"name":"dolt","description":"dolt","options":[],"subcommands":[{"name":"init","description":"Create an empty Dolt data repository.","options":[{"names":["--name"],"argument":"<name>","description":"The name used in commits to this repo. If not provided will be taken from user.name in the global config."},{"names":["--email"],"argument":"<email>","description":"The email address used. If not provided will be taken from user.email in the global config."},{"names":["--date"],"argument":"<date>","description":"Specify the date used in the initial commit. If not specified the current system time is used."},{"names":["-b","--initial-branch"],"argument":"<branch>","description":"The branch name used to initialize this database. If not provided will be taken from init.defaultbranch in the global config. If unset, the default initialized branch will be named 'main'."}]},{"name":"status","description":"Show the working tree status.","options":[]},{"name":"add","description":"Add table changes to the list of staged table changes.","options":[{"names":["-A","--all"],"argument":"","description":"Stages any and all changes (adds, deletes, and modifications)."}]},{"name":"diff","description":"Diff a table.","options":[{"names":["-d","--data"],"argument":"","description":"Show only the data changes, do not show the schema changes (Both shown by default)."},{"names":["-s","--schema"],"argument":"","description":"Show only the schema changes, do not show the data changes (Both shown by default)."},{"names":["--summary"],"argument":"","description":"Show summary of data changes"},{"names":["-r","--result-format"],"argument":"<result output format>","description":"How to format diff output. Valid values are tabular & sql. Defaults to tabular."},{"names":["--where"],"argument":"<column>","description":"filters columns based on values in the diff. See dolt diff --help for details."},{"names":["--limit"],"argument":"<record_count>","description":"limits to the first N diffs."},{"names":["-c","--cached"],"argument":"","description":"Show only the unstaged data changes."}]},{"name":"reset","description":"Remove table changes from the list of staged table changes.","options":[{"names":["--hard"],"argument":"","description":"Resets the working tables and staged tables. Any changes to tracked tables in the working tree since <commit> are discarded."},{"names":["--soft"],"argument":"","description":"Does not touch the working tables, but removes all tables staged to be committed."}]},{"name":"clean","description":"Remove untracked tables from working set.","options":[{"names":["--dry-run"],"argument":"","description":"Tests removing untracked tables without modifying the working set."}]},{"name":"commit","description":"Record changes to the repository.","options":[{"names":["-m","--message"],"argument":"<msg>","description":"Use the given <msg> as the commit message."},{"names":["--allow-empty"],"argument":"","description":"Allow recording a commit that has the exact same data as its sole parent. This is usually a mistake, so it is disabled by default. This option bypasses that safety."},{"names":["--date"],"argument":"<date>","description":"Specify the date used in the commit. If not specified the current system time is used."},{"names":["-f","--force"],"argument":"","description":"Ignores any foreign key warnings and proceeds with the commit."},{"names":["--author"],"argument":"<author>","description":"Specify an explicit author using the standard A U Thor <author@example.com> format."},{"names":["-a","--all"],"argument":"","description":"Adds all edited files in working to staged."}]},{"name":"sql","description":"Run a SQL query against tables in repository.","options":[{"names":["--multi-db-dir"],"argument":"<directory>","description":"uses each of the subdirectories of the supplied directory (each subdirectory must be a valid dolt data"},{"names":["--multi-db-dir"],"argument":"<directory>","description":"uses each of the subdirectories of the supplied directory (each subdirectory must be a valid dolt data   repository) as databases. Subdirectories starting with '.' are ignored."},{"names":["-q","--query"],"argument":"<SQL query to run>","description":"Runs a single query and exits"},{"names":["-r","--result-format"],"argument":"<result output format>","description":"How to format result output. Valid values are tabular, csv, json, vertical. Defaults to tabular."},{"names":["-s","--save"],"argument":"<saved query name>","description":"Used with --query, save the query to the query catalog with the name provided. Saved queries can be examined in the dolt_query_catalog system table."},{"names":["-x","--execute"],"argument":"<saved query name>","description":"Executes a saved query with the given name"},{"names":["-l","--list-saved"],"argument":"","description":"List all saved queries"},{"names":["-m","--message"],"argument":"<saved query description>","description":"Used with --query and --save, saves the query with the descriptive message given. See also --name"},{"names":["-b","--batch"],"argument":"","description":"Use to enable more efficient batch processing for large SQL import scripts consisting of only INSERT statements. Other statements types are not guaranteed to work in this mode."},{"names":["--multi-db-dir"],"argument":"<directory>","description":"Defines a directory whose subdirectories should all be dolt data repositories accessible as independent databases within"},{"names":["-c","--continue"],"argument":"","description":"Continue running queries on an error. Used for batch mode only."},{"names":["--file"],"argument":"<input file>","description":"Execute statements from the file given"},{"names":["--privilege-file"],"argument":"<privilege file>","description":"Path to a file to load and store users and grants. Without this flag, the database has a single user with all permissions, and more cannot be added."}]},{"name":"sql-server","description":"Start a MySQL-compatible server.","options":[{"names":["--config"],"argument":"<file>","description":"When provided configuration is taken from the yaml config file and all command line parameters are ignored."},{"names":["-H","--host"],"argument":"<host address>","description":"Defines the host address that the server will run on (default `localhost`)"},{"names":["-P","--port"],"argument":"<port>","description":"Defines the port that the server will run on (default `3306`)"},{"names":["-u","--user"],"argument":"<user>","description":"Defines the server user (default `root`)"},{"names":["-p","--password"],"argument":"<password>","description":"Defines the server password (default ``)"},{"names":["-t","--timeout"],"argument":"<connection timeout>","description":"Defines the timeout, in seconds, used for connections A value of `0` represents an infinite timeout (default `28800000`)"},{"names":["-r","--readonly"],"argument":"","description":"Disable modification of the database"},{"names":["-l","--loglevel"],"argument":"<log level>","description":"Defines the level of logging provided Options are: `trace', `debug`, `info`, `warning`, `error`, `fatal` (default `info`)"},{"names":["--multi-db-dir"],"argument":"<directory>","description":"Defines a directory whose subdirectories should all be dolt data repositories accessible as independent databases."},{"names":["--no-auto-commit"],"argument":"","description":"Set @@autocommit = off for the server"},{"names":["--query-parallelism"],"argument":"<num-go-routines>","description":"Set the number of go routines spawned to handle each query (default `2`)"},{"names":["--max-connections"],"argument":"<max-connections>","description":"Set the number of connections handled by the server (default `100`)"},{"names":["--persistence-behavior"],"argument":"<persistence-behavior>","description":"Indicate whether to `load` or `ignore` persisted global variables (default `load`)"},{"names":["--privilege-file"],"argument":"<privilege file>","description":"Path to a file to load and store users and grants. Without this flag, the database has a single user with all permissions, and more cannot be added."}]},{"name":"sql-client","description":"Starts a built-in MySQL client.","options":[{"names":["--config"],"argument":"<file>","description":"When provided configuration is taken from the yaml config file and all command line parameters are ignored."},{"names":["-H","--host"],"argument":"<host address>","description":"Defines the host address that the server will run on (default `localhost`)"},{"names":["-P","--port"],"argument":"<port>","description":"Defines the port that the server will run on (default `3306`)"},{"names":["-u","--user"],"argument":"<user>","description":"Defines the server user (default `root`)"},{"names":["-p","--password"],"argument":"<password>","description":"Defines the server password (default ``)"},{"names":["-t","--timeout"],"argument":"<connection timeout>","description":"Defines the timeout, in seconds, used for connections A value of `0` represents an infinite timeout (default `28800000`)"},{"names":["-r","--readonly"],"argument":"","description":"Disable modification of the database"},{"names":["-l","--loglevel"],"argument":"<log level>","description":"Defines the level of logging provided Options are: `trace', `debug`, `info`, `warning`, `error`, `fatal` (default `info`)"},{"names":["--multi-db-dir"],"argument":"<directory>","description":"Defines a directory whose subdirectories should all be dolt data repositories accessible as independent databases."},{"names":["--no-auto-commit"],"argument":"","description":"Set @@autocommit = off for the server"},{"names":["--query-parallelism"],"argument":"<num-go-routines>","description":"Set the number of go routines spawned to handle each query (default `2`)"},{"names":["--max-connections"],"argument":"<max-connections>","description":"Set the number of connections handled by the server (default `100`)"},{"names":["--persistence-behavior"],"argument":"<persistence-behavior>","description":"Indicate whether to `load` or `ignore` persisted global variables (default `load`)"},{"names":["--privilege-file"],"argument":"<privilege file>","description":"Path to a file to load and store users and grants. Without this flag, the database has a single user with all permissions, and more cannot be added."},{"names":["-d","--dual"],"argument":"","description":"Causes this command to spawn a dolt server that is automatically connected to."}]},{"name":"log","description":"Show commit logs.","options":[{"names":["-n","--number"],"argument":"<num_commits>","description":"Limit the number of commits to output."},{"names":["--min-parents"],"argument":"<parent_count>","description":"The minimum number of parents a commit must have to be included in the log."},{"names":["--merges"],"argument":"","description":"Equivalent to min-parents == 2, this will limit the log to commits with 2 or more parents."},{"names":["--parents"],"argument":"","description":"Shows all parents of each commit in the log."},{"names":["--decorate"],"argument":"<decorate_fmt>","description":"Shows refs next to commits. Valid options are short, full, no, and auto"},{"names":["--oneline"],"argument":"","description":"Shows logs in a compact format."}]},{"name":"branch","description":"Create, list, edit, delete branches.","options":[{"names":["--list"],"argument":"","description":"List branches"},{"names":["-f","--force"],"argument":"","description":"Reset <branchname> to <startpoint>, even if <branchname> exists already. Without -f, dolt branch refuses to change an existing branch. In combination with -d (or --delete), allow deleting the branch irrespective of its merged status. In combination with -m (or --move), allow renaming the branch even if the new branch name already exists, the same applies for -c (or --copy)."},{"names":["-c","--copy"],"argument":"","description":"Create a copy of a branch."},{"names":["-m","--move"],"argument":"","description":"Move/rename a branch"},{"names":["-d","--delete"],"argument":"","description":"Delete a branch. The branch must be fully merged in its upstream branch."},{"names":["--D"],"argument":"","description":"Shortcut for --delete --force."},{"names":["-v","--verbose"],"argument":"","description":"When in list mode, show the hash and commit subject line for each head"},{"names":["-a","--all"],"argument":"","description":"When in list mode, shows remote tracked branches"},{"names":["-r","--remote"],"argument":"","description":"When in list mode, show only remote tracked branches. When with -d, delete a remote tracking branch."},{"names":["--show-current"],"argument":"","description":"Print the name of the current branch"}]},{"name":"checkout","description":"Checkout a branch or overwrite a table from HEAD.","options":[{"names":["--b"],"argument":"<branch>","description":"Create a new branch named <new_branch> and start it at <start_point>."},{"names":["-f","--force"],"argument":"","description":"If there is any changes in working set, the force flag will wipe out the current changes and checkout the new branch."}]},{"name":"merge","description":"Merge a branch.","options":[{"names":["--no-ff"],"argument":"","description":"Create a merge commit even when the merge resolves as a fast-forward."},{"names":["--squash"],"argument":"","description":"Merges changes to the working set without updating the commit history"},{"names":["-m","--message"],"argument":"<msg>","description":"Use the given <msg> as the commit message."},{"names":["--abort"],"argument":"","description":"Abort the current conflict resolution process, and try to reconstruct the pre-merge state."}]},{"name":"conflicts","description":"Commands for viewing and resolving merge conflicts.","options":[],"subcommands":[{"name":"resolve","description":"- Removes rows from list of conflicts","options":[{"names":["--ours"],"argument":"","description":"For all conflicts, take the version from our branch and resolve the conflict"},{"names":["--theirs"],"argument":"","description":"For all conflicts, take the version from their branch and resolve the conflict"}]}]},{"name":"revert","description":"Undo the changes introduced in a commit.","options":[{"names":["--author"],"argument":"<author>","description":"Specify an explicit author using the standard A U Thor <author@example.com> format."}]},{"name":"clone","description":"Clone from a remote data repository.","options":[{"names":["--remote"],"argument":"<name>","description":"Name of the remote to be added. Default will be 'origin'."},{"names":["-b","--branch"],"argument":"<branch>","description":"The branch to be cloned. If not specified all branches will be cloned."},{"names":["--"],"argument":"","description":"aws-region=<region>"},{"names":["--"],"argument":"","description":"aws-creds-type=<creds-type>"},{"names":["--aws-creds-file"],"argument":"<file>","description":"AWS credentials file."},{"names":["--aws-creds-profile"],"argument":"<profile>","description":"AWS profile to use."}]},{"name":"fetch","description":"Update the database from a remote data repository.","options":[{"names":["-f","--force"],"argument":"","description":"Update refs to remote branches with the current state of the remote, overwriting any conflicting history."}]},{"name":"pull","description":"Fetch from a dolt remote data repository and merge.","options":[{"names":["--squash"],"argument":"","description":"Merges changes to the working set without updating the commit history"},{"names":["--no-ff"],"argument":"","description":"Create a merge commit even when the merge resolves as a fast-forward."},{"names":["-f","--force"],"argument":"","description":"Ignores any foreign key warnings and proceeds with the commit."}]},{"name":"push","description":"Push to a dolt remote.","options":[{"names":["-u","--set-upstream"],"argument":"","description":"For every branch that is up to date or successfully pushed, add upstream (tracking) reference, used by argument-less dolt pull and other commands."},{"names":["-f","--force"],"argument":"","description":"Update the remote with local history, overwriting any conflicting history in the remote."}]},{"name":"config","description":"Dolt configuration.","options":[{"names":["--global"],"argument":"","description":"Use global config."},{"names":["--local"],"argument":"","description":"Use repository local config."},{"names":["--add"],"argument":"","description":"Set the value of one or more config parameters"},{"names":["--list"],"argument":"","description":"List the values of all config parameters."},{"names":["--get"],"argument":"","description":"Get the value of one or more config parameters."},{"names":["--unset"],"argument":"","description":"Unset the value of one or more config parameters."}]},{"name":"remote","description":"Manage set of tracked repositories.","options":[{"names":["-v","--verbose"],"argument":"","description":"When printing the list of remotes adds additional details."},{"names":["--"],"argument":"","description":"aws-region=<region>"},{"names":["--"],"argument":"","description":"aws-creds-type=<creds-type>"},{"names":["--aws-creds-file"],"argument":"<file>","description":"AWS credentials file"},{"names":["--aws-creds-profile"],"argument":"<profile>","description":"AWS profile to use"}]},{"name":"backup","description":"Manage a set of server backups.","options":[{"names":["-v","--verbose"],"argument":"","description":"When printing the list of backups adds additional details."},{"names":["--"],"argument":"","description":"aws-region=<region>"},{"names":["--"],"argument":"","description":"aws-creds-type=<creds-type>"},{"names":["--aws-creds-file"],"argument":"<file>","description":"AWS credentials file"},{"names":["--aws-creds-profile"],"argument":"<profile>","description":"AWS profile to use"}]},{"name":"login","description":"Login to a dolt remote host.","options":[{"names":["-e","--auth-endpoint"],"argument":"<hostname:port>","description":"Specify the endpoint used to authenticate this client. Must be used with --login-url OR set in the configuration file as `creds.add_url`"},{"names":["-url","--login-url"],"argument":"<url>","description":"Specify the login url where the browser will add credentials."},{"names":["-i","--insecure"],"argument":"","description":"If set, makes insecure connection to remote authentication server"}]},{"name":"creds","description":"Commands for managing credentials.","options":[],"subcommands":[{"name":"check","description":"- Check authenticating with a credential keypair against a doltremoteapi.","options":[{"names":["--endpoint"],"argument":"","description":"API endpoint, otherwise taken from config."},{"names":["--creds"],"argument":"","description":"Public Key ID or Public Key for credentials, otherwise taken from config."}]}]},{"name":"ls","description":"List tables in the working set.","options":[{"names":["-v","--verbose"],"argument":"","description":"show the hash of the table"},{"names":["-s","--system"],"argument":"","description":"show system tables"},{"names":["-a","--all"],"argument":"","description":"show system tables"}]},{"name":"schema","description":"Commands for showing and importing table schemas.","options":[],"subcommands":[{"name":"export","description":"- Exports a table's schema in SQL form.","options":[]},{"name":"import","description":"- Creates a new table with an inferred schema.","options":[{"names":["-c","--create"],"argument":"","description":"Create a table with the schema inferred from the <file> provided."},{"names":["-u","--update"],"argument":"","description":"Update a table to match the inferred schema of the <file> provided"},{"names":["-r","--replace"],"argument":"","description":"Replace a table with a new schema that has the inferred schema from the <file> provided. All previous data will be lost."},{"names":["--dry-run"],"argument":"","description":"Print the sql statement that would be run if executed without the flag."},{"names":["--keep-types"],"argument":"","description":"When a column already exists in the table, and it's also in the <file> provided, use the type from the table."},{"names":["--file-type"],"argument":"<type>","description":"Explicitly define the type of the file if it can't be inferred from the file extension."},{"names":["--pks"],"argument":"<comma-separated-col-names>","description":"List of columns used as the primary key cols. Order of the columns will determine sort order."},{"names":["-m","--map"],"argument":"<mapping-file>","description":"A file that can map a column name in <file> to a new value."},{"names":["--float-threshold"],"argument":"<float>","description":"Minimum value at which the fractional component of a value must exceed in order to be considered a float."},{"names":["--delim"],"argument":"<delimiter>","description":"Specify a delimiter for a csv style file with a non-comma delimiter."}]}]},{"name":"table","description":"Commands for copying, renaming, deleting, and exporting tables.","options":[],"subcommands":[{"name":"import","description":"- Creates, overwrites, replaces, or updates a table from the data in a file.","options":[{"names":["-c","--create-table"],"argument":"","description":"Create a new table, or overwrite an existing table (with the -f flag) from the imported data."},{"names":["-u","--update-table"],"argument":"","description":"Update an existing table with the imported data."},{"names":["-f","--force"],"argument":"","description":"If a create operation is being executed, data already exists in the destination, the force flag will allow the target to be overwritten."},{"names":["-r","--replace-table"],"argument":"","description":"Replace existing table with imported data while preserving the original schema."},{"names":["--continue"],"argument":"","description":"Continue importing when row import errors are encountered."},{"names":["--ignore-skipped-rows"],"argument":"","description":"Ignore the skipped rows printed by the --continue flag."},{"names":["--disable-fk-checks"],"argument":"","description":"Disables foreign key checks."},{"names":["-s","--schema"],"argument":"<schema_file>","description":"The schema for the output data."},{"names":["-m","--map"],"argument":"<mapping_file>","description":"A file that lays out how fields should be mapped from input data to output data."},{"names":["-pk","--pk"],"argument":"<primary_key>","description":"Explicitly define the name of the field in the schema which should be used as the primary key."},{"names":["--file-type"],"argument":"<file_type>","description":"Explicitly define the type of the file if it can't be inferred from the file extension."},{"names":["--delim"],"argument":"<delimiter>","description":"Specify a delimiter for a csv style file with a non-comma delimiter."}]},{"name":"export","description":"- Export a table to a file.","options":[{"names":["-f","--force"],"argument":"","description":"If data already exists in the destination, the force flag will allow the target to be overwritten."},{"names":["--file-type"],"argument":"<file_type>","description":"Explicitly define the type of the file if it can't be inferred from the file extension."}]}]},{"name":"tag","description":"Create, list, delete tags.","options":[{"names":["-m","--message"],"argument":"<msg>","description":"Use the given <msg> as the tag message."},{"names":["-v","--verbose"],"argument":"","description":"list tags along with their metadata."},{"names":["-d","--delete"],"argument":"","description":"Delete a tag."}]},{"name":"blame","description":"Show what revision and author last modified each row of a table.","options":[]},{"name":"constraints","description":"Commands for handling constraints.","options":[],"subcommands":[{"name":"verify","description":"- Command to verify that the constraints on the given table(s) are satisfied.","options":[{"names":["-a","--all"],"argument":"","description":"Verifies constraints against every row."},{"names":["-o","--output-only"],"argument":"","description":"Disables writing the results to the constraint violations table."}]}]},{"name":"migrate","description":"Executes a database migration to use the latest Dolt data format.","options":[{"names":["--push"],"argument":"","description":"Push all migrated branches to the remote"},{"names":["--pull"],"argument":"","description":"Update all local tracking refs for a migrated remote"}]},{"name":"read-tables","description":"Fetch table(s) at a specific commit into a new dolt repo","options":[{"names":["-d","--dir"],"argument":"<directory>","description":"directory to create and put retrieved table data."}]},{"name":"gc","description":"Cleans up unreferenced data from the repository.","options":[{"names":["-s","--shallow"],"argument":"","description":"perform a fast, but incomplete garbage collection pass"}]},{"name":"filter-branch","description":"Edits the commit history using the provided query.","options":[{"names":["-a","--all"],"argument":"","description":"filter all branches"}]},{"name":"merge-base","description":"Find the common ancestor of two commits.","options":[]},{"name":"dump","description":"Export all tables in the working set into a file.","options":[{"names":["-r","--result-format"],"argument":"<result_file_type>","description":"Define the type of the output file. Defaults to sql. Valid values are sql, csv, json and parquet."},{"names":["-fn","--file-name"],"argument":"<file_name>","description":"Define file name for dump file. Defaults to `doltdump.sql`."},{"names":["-d","--directory"],"argument":"<directory_name>","description":"Define directory name to dump the files in. Defaults to `doltdump/`."},{"names":["-f","--force"],"argument":"","description":"If data already exists in the destination, the force flag will allow the target to be overwritten."},{"names":["--batch"],"argument":"","description":"Returns batch insert statements wherever possible."},{"names":["-na","--no-autocommit"],"argument":"","description":"Turns off autocommit for each dumped table. Used to speed up loading of outputted sql file"}]},{"name":"cherry-pick","description":"Apply the changes introduced by an existing commit.","options":[]}],"version":"dolt version 0.40.11","tldr":"> Dolt is an SQL database that you can fork, clone, branch, merge, push and pull just like a Git repository.\n> Some subcommands such as `dolt commit` have their own usage documentation.\n> More information: <https://github.com/dolthub/dolt>.\n\n- Execute a dolt subcommand:\n\n`dolt {{subcommand}}`\n\n- List available subcommands:\n\n`dolt help`\n"}
