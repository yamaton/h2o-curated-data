name: ansible-pull
description: pulls playbooks from a VCS repo and executes them for the local host
options:
  - names:
      - --accept-host-key
    argument: ""
    description: adds the hostkey for the repo url if not already added
  - names:
      - --ask-vault-password
      - --ask-vault-pass
    argument: ""
    description: ask for vault password
  - names:
      - --become-password-file
      - --become-pass-file
    argument: '''BECOME_PASSWORD_FILE'''
    description: Become password file
  - names:
      - --check
    argument: ""
    description: don't make any changes; instead, try to predict some of the changes that may occur
  - names:
      - --clean
    argument: ""
    description: modified files in the working repository will be discarded
  - names:
      - --connection-password-file
      - --conn-pass-file
    argument: '''CONNECTION_PASSWORD_FILE'''
    description: Connection password file
  - names:
      - --diff
    argument: ""
    description: when changing (small) files and templates, show the differences in those files; works great with --check
  - names:
      - --full
    argument: ""
    description: Do a full clone, instead of a shallow one.
  - names:
      - --list-hosts
    argument: ""
    description: outputs a list of matching hosts; does not execute anything else
  - names:
      - --private-key
      - --key-file
    argument: '''PRIVATE_KEY_FILE'''
    description: use this file to authenticate the connection
  - names:
      - --purge
    argument: ""
    description: purge checkout after playbook run
  - names:
      - --scp-extra-args
    argument: '''SCP_EXTRA_ARGS'''
    description: specify extra arguments to pass to scp only (e.g. -l)
  - names:
      - --sftp-extra-args
    argument: '''SFTP_EXTRA_ARGS'''
    description: specify extra arguments to pass to sftp only (e.g. -f, -l)
  - names:
      - --skip-tags
    argument: ""
    description: only run plays and tasks whose tags do not match these values
  - names:
      - --ssh-common-args
    argument: '''SSH_COMMON_ARGS'''
    description: specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
  - names:
      - --ssh-extra-args
    argument: '''SSH_EXTRA_ARGS'''
    description: specify extra arguments to pass to ssh only (e.g. -R)
  - names:
      - --track-subs
    argument: ""
    description: submodules will track the latest changes. This is equivalent to specifying the --remote flag to git submodule update
  - names:
      - --vault-id
    argument: ""
    description: the vault identity to use
  - names:
      - --vault-password-file
      - --vault-pass-file
    argument: ""
    description: vault password file
  - names:
      - --verify-commit
    argument: ""
    description: verify GPG signature of checked out commit, if it fails abort running the playbook. This needs the corresponding VCS module to support such an operation
  - names:
      - --version
    argument: ""
    description: show program's version number, config file location, configured module search path, module location, executable location and exit
  - names:
      - -C
      - --checkout
    argument: '''CHECKOUT'''
    description: branch/tag/commit to checkout. Defaults to behavior of repository module.
  - names:
      - -K
      - --ask-become-pass
    argument: ""
    description: ask for privilege escalation password
  - names:
      - -M
      - --module-path
    argument: ""
    description: prepend colon-separated path(s) to module library (default=~/.ansible/plugins/modules:/usr/share/ansible/plugins/modules)
  - names:
      - -T
      - --timeout
    argument: '''TIMEOUT'''
    description: override the connection timeout in seconds (default=10)
  - names:
      - -U
      - --url
    argument: '''URL'''
    description: URL of the playbook repository
  - names:
      - -c
      - --connection
    argument: '''CONNECTION'''
    description: connection type to use (default=smart)
  - names:
      - -d
      - --directory
    argument: '''DEST'''
    description: absolute path of repository checkout directory (relative paths are not supported)
  - names:
      - -e
      - --extra-vars
    argument: ""
    description: set additional variables as key=value or YAML/JSON, if filename prepend with @
  - names:
      - -f
      - --force
    argument: ""
    description: run the playbook even if the repository could not be updated
  - names:
      - -h
      - --help
    argument: ""
    description: show this help message and exit
  - names:
      - -i
      - --inventory
      - --inventory-file
    argument: ""
    description: specify inventory host path or comma separated host list. --inventory-file is deprecated
  - names:
      - -k
      - --ask-pass
    argument: ""
    description: ask for connection password
  - names:
      - -l
      - --limit
    argument: '''SUBSET'''
    description: further limit selected hosts to an additional pattern
  - names:
      - -m
      - --module-name
    argument: '''MODULE_NAME'''
    description: Repository module name, which ansible will use to check out the repo. Choices are ('git', 'subversion', 'hg', 'bzr'). Default is git.
  - names:
      - -m
    argument: '''MODULE_NAME'', --module-name ''MODULE_NAME'''
    description: Repository module name, which ansible will use to check out the repo. Choices are ('git', 'subversion', 'hg', 'bzr'). Default is git.
  - names:
      - -o
      - --only-if-changed
    argument: ""
    description: only run the playbook if the repository has been updated
  - names:
      - -s
      - --sleep
    argument: '''SLEEP'''
    description: sleep for random interval (between 0 and n number of seconds) before starting. This is a useful way to disperse git requests
  - names:
      - -t
      - --tags
    argument: ""
    description: only run plays and tasks tagged with these values
  - names:
      - -u
      - --user
    argument: '''REMOTE_USER'''
    description: connect as this user (default=None)
  - names:
      - -v
      - --verbose
    argument: ""
    description: verbose mode (-vvv for more, -vvvv to enable connection debugging)
version: 'ansible-pull [core 2.12.2]'
tldr: |
  # ansible-pull

  > Pull ansible playbooks from a VCS repo and executes them for the local host.
  > More information: <https://docs.ansible.com/ansible/latest/cli/ansible-pull.html>.

  - Pull a playbook from a VCS and execute a default local.yml playbook:

  `ansible-pull -U {{repository_url}}`

  - Pull a playbook from a VCS and execute a specific playbook:

  `ansible-pull -U {{repository_url}} {{playbook}}`

  - Pull a playbook from a VCS at a specific branch and execute a specific playbook:

  `ansible-pull -U {{repository_url}} -C {{branch}} {{playbook}}`

  - Pull a playbook from a VCS, specify hosts file and execute a specific playbook:

  `ansible-pull -U {{repository_url}} -i {{hosts_file}} {{playbook}}`
