#compdef _topgrade topgrade

# Auto-generated with h2o


function _topgrade {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-c,--cleanup}'[Cleanup temporary or old files]' \
        '--config[Alternative configuration file]' \
        '--config-reference[Show config reference]' \
        '--custom-commands[Run only specific custom commands]' \
        '--disable[Do not perform upgrades for the given steps \[possible values: asdf, atom, brew_cask, brew_formula, bin, cargo, chezmoi, chocolatey, choosenim, composer, conda, config_update, containers, custom_commands, deb_get, deno, dotnet, emacs, firmware, flatpak, flutter, fossil, gcloud, gem, github_cli_extensions, git_repos, go, haxelib, gnome_shell_extensions, home_manager, jetpack, kakoune, krew, macports, mas, micro, myrepos, nix, node, opam, pacstall, pearl, pipx, pip3, pkg, pkgin, powershell, raco, remotes, restarts, rtcl, rustup, scoop, sdkman, sheldon, shell, snap, spicetify, stack, system, tldr, tlmgr, tmux, toolbx, vagrant, vcpkg, vim, winget, wsl, yadm\]]' \
        '--disable-predefined-git-repos[Don'\''t pull the predefined git repos]' \
        '--edit-config[Edit the configuration file]' \
        '--env[Set environment variables]' \
        {-h,--help}'[Print help information]' \
        {-k,--keep}'[Prompt for a key before exiting]' \
        {-n,--dry-run}'[Print what would be done]' \
        '--no-retry[Do not ask to retry failed steps]' \
        '--only[Perform only the specified steps (experimental) \[possible values: asdf, atom, brew_cask, brew_formula, bin, cargo, chezmoi, chocolatey, choosenim, composer, conda, config_update, containers, custom_commands, deb_get, deno, dotnet, emacs, firmware, flatpak, flutter, fossil, gcloud, gem, github_cli_extensions, git_repos, go, haxelib, gnome_shell_extensions, home_manager, jetpack, kakoune, krew, macports, mas, micro, myrepos, nix, node, opam, pacstall, pearl, pipx, pip3, pkg, pkgin, powershell, raco, remotes, restarts, rtcl, rustup, scoop, sdkman, sheldon, shell, snap, spicetify, stack, system, tldr, tlmgr, tmux, toolbx, vagrant, vcpkg, vim, winget, wsl, yadm\]]' \
        '--remote-host-limit[A regular expression for restricting remote host execution]' \
        '--show-skipped[Show the reason for skipped steps]' \
        {-t,--tmux}'[Run inside tmux]' \
        {-v,--verbose}'[Output logs]' \
        {-V,--version}'[Print version information]' \
        {-y,--yes}'[Say yes to package manager'\''s prompt \[possible values: asdf, atom, brew_cask, brew_formula, bin, cargo, chezmoi, chocolatey, choosenim, composer, conda, config_update, containers, custom_commands, deb_get, deno, dotnet, emacs, firmware, flatpak, flutter, fossil, gcloud, gem, github_cli_extensions, git_repos, go, haxelib, gnome_shell_extensions, home_manager, jetpack, kakoune, krew, macports, mas, micro, myrepos, nix, node, opam, pacstall, pearl, pipx, pip3, pkg, pkgin, powershell, raco, remotes, restarts, rtcl, rustup, scoop, sdkman, sheldon, shell, snap, spicetify, stack, system, tldr, tlmgr, tmux, toolbx, vagrant, vcpkg, vim, winget, wsl, yadm\]]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

