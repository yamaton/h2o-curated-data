#compdef _vd vd

# Auto-generated with h2o


function _vd {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[show this help message and exit]' \
        '-f[uses loader for filetype instead of file extension]':file:_files \
        '-y[overwrites existing files without confirmation]' \
        {-p,--play}'[replays a saved .vd file within the interface]' \
        {-b,--batch}'[replays in batch mode (with no interface and all status sent to stdout)]' \
        {-o,--output}'[saves the final visible sheet to output (as .tsv) at the end of replay]' \
        '-w[time to wait between replayed commands, in seconds]' \
        '-d[delimiter to use for tsv filetype]' \
        '--diff[show diffs from all sheets against this source]' \
        {-v,--version}'[show program'\''s version number and exit]' \
        '--encoding[encoding passed to codecs.open]' \
        '--encoding-errors[encoding_errors passed to codecs.open]' \
        '--regex-flags[flags to pass to re.compile() \[AILMSUX\]]' \
        '--default-width[default column width]' \
        '--wrap[wrap text to fit window width on TextSheet]' \
        '--bulk-select-clear[clear selected rows before new bulk selections]' \
        '--cmd-after-edit[command longname to execute after successful edit]' \
        '--col-cache-size[max number of cache entries in each cached column]' \
        '--quitguard[confirm before quitting last sheet]' \
        '--null-value[a value to be counted as null]' \
        '--force-valid-colnames[clean column names to be valid Python identifiers]' \
        '--debug[exit on error and display stacktrace]' \
        '--curses-timeout[curses timeout in ms]' \
        '--force-256-colors[use 256 colors even if curses reports fewer]' \
        '--use-default-colors[curses use default terminal colors]' \
        '--note-pending[note to display for pending cells]' \
        '--note-format-exc[cell note for an exception during formatting]' \
        '--note-getter-exc[cell note for an exception during computation]' \
        '--note-type-exc[cell note for an exception during type conversion]' \
        '--note-unknown-type[cell note for unknown types in anytype column]' \
        '--scroll-incr[amount to scroll with scrollwheel]' \
        '--skip[skip first N lines of text input]' \
        '--confirm-overwrite[whether to prompt for overwrite confirmation on save]' \
        '--safe-error[error string to use while saving]' \
        '--header[parse first N rows of certain formats as column names]' \
        '--delimiter[delimiter to use for tsv filetype]' \
        '--filetype[specify file type]':file:_files \
        '--save-filetype[specify default file type to save as]':file:_files \
        '--tsv-safe-newline[replacement for tab character when saving to tsv]' \
        '--tsv-safe-tab[replacement for newline character when saving to tsv]' \
        '--clipboard-copy-cmd[command to copy stdin to system clipboard]' \
        '--visibility[visibility level (0=low, 1=high)]' \
        '--min-memory-mb[minimum memory to continue loading and async processing]' \
        '--replay-wait[time to wait between replayed commands, in seconds]' \
        '--replay-movement[insert movements during replay]' \
        '--visidata-dir[directory to load and store macros]':file:_files \
        '--rowkey-prefix[string prefix for rowkey in the cmdlog]' \
        '--cmdlog-histfile[file to autorecord each cmdlog action to]':file:_files \
        '--regex-maxsplit[maxsplit to pass to regex.split]' \
        '--show-graph-labels[show axes and legend on graph]' \
        '--plot-colors[list of distinct colors to use for plotting distinct objects]' \
        '--zoom-incr[amount to multiply current zoomlevel when zooming]' \
        '--motd-url[source of randomized startup messages]' \
        '--profile[filename to save binary profiling data]':file:_files \
        '--csv-dialect[dialect passed to csv.reader]' \
        '--csv-delimiter[delimiter passed to csv.reader]' \
        '--csv-quotechar[quotechar passed to csv.reader]' \
        '--csv-skipinitialspace[skipinitialspace passed to csv.reader]' \
        '--csv-escapechar[escapechar passed to csv.reader]' \
        '--safety-first[sanitize input/output to handle edge cases, with a performance cost]' \
        '--json-indent[indent to use when saving json]' \
        '--fixed-rows[number of rows to check for fixed width columns]' \
        '--pcap-internet[(y/s/n) if save_dot includes all internet hosts separately (y), combined (s), or does not include the internet (n)]' \
        '--graphviz-edge-labels[whether to include edge labels on graphviz diagrams]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

