# Auto-generated with h2o

_adb()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          devices) _adb_devices
            return
            ;;

          help) _adb_help
            return
            ;;

          version) _adb_version
            return
            ;;

          connect) _adb_connect
            return
            ;;

          diconnect) _adb_diconnect
            return
            ;;

          forward) _adb_forward
            return
            ;;

          ppp) _adb_ppp
            return
            ;;

          reverse) _adb_reverse
            return
            ;;

          push) _adb_push
            return
            ;;

          pull) _adb_pull
            return
            ;;

          sync) _adb_sync
            return
            ;;

          shell) _adb_shell
            return
            ;;

          emu) _adb_emu
            return
            ;;

          install) _adb_install
            return
            ;;

          install-multiple) _adb_installmultiple
            return
            ;;

          install-multi-package) _adb_installmultipackage
            return
            ;;

          uninstall) _adb_uninstall
            return
            ;;

          bugreport) _adb_bugreport
            return
            ;;

          jdwp) _adb_jdwp
            return
            ;;

          logcat) _adb_logcat
            return
            ;;

          disable-verify) _adb_disableverify
            return
            ;;

          enable-verify) _adb_enableverify
            return
            ;;

          keygen) _adb_keygen
            return
            ;;

          wait-for-device) _adb_waitfordevice
            return
            ;;

          wait-for-usb-device) _adb_waitforusbdevice
            return
            ;;

          wait-for-local-device) _adb_waitforlocaldevice
            return
            ;;

          wait-for-recovery) _adb_waitforrecovery
            return
            ;;

          wait-for-usb-recovery) _adb_waitforusbrecovery
            return
            ;;

          wait-for-local-recovery) _adb_waitforlocalrecovery
            return
            ;;

          wait-for-sideload) _adb_waitforsideload
            return
            ;;

          wait-for-usb-sideload) _adb_waitforusbsideload
            return
            ;;

          wait-for-local-sideload) _adb_waitforlocalsideload
            return
            ;;

          wait-for-bootloader) _adb_waitforbootloader
            return
            ;;

          wait-for-usb-bootloader) _adb_waitforusbbootloader
            return
            ;;

          wait-for-local-bootloader) _adb_waitforlocalbootloader
            return
            ;;

          get-state) _adb_getstate
            return
            ;;

          get-serialno) _adb_getserialno
            return
            ;;

          get-devpath) _adb_getdevpath
            return
            ;;

          remount) _adb_remount
            return
            ;;

          reboot) _adb_reboot
            return
            ;;

          sideload) _adb_sideload
            return
            ;;

          root) _adb_root
            return
            ;;

          unroot) _adb_unroot
            return
            ;;

          usb) _adb_usb
            return
            ;;

          tcpip) _adb_tcpip
            return
            ;;

          start-server) _adb_startserver
            return
            ;;

          kill-server) _adb_killserver
            return
            ;;

          reconnect) _adb_reconnect
            return
            ;;

      *)
          word_list=" devices help version connect diconnect forward ppp reverse push pull sync shell emu install install-multiple install-multi-package uninstall bugreport jdwp logcat disable-verify enable-verify keygen wait-for-device wait-for-usb-device wait-for-local-device wait-for-recovery wait-for-usb-recovery wait-for-local-recovery wait-for-sideload wait-for-usb-sideload wait-for-local-sideload wait-for-bootloader wait-for-usb-bootloader wait-for-local-bootloader get-state get-serialno get-devpath remount reboot sideload root unroot usb tcpip start-server kill-server reconnect "
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_adb_devices ()
{
    local cur word_list
    word_list=" -l" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_forward ()
{
    local cur word_list
    word_list=" --list --no-rebind --remove --remove-all" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_reverse ()
{
    local cur word_list
    word_list=" --list --no-rebind --remove --remove-all" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_push ()
{
    local cur word_list
    word_list=" --sync" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_pull ()
{
    local cur word_list
    word_list=" -a" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_sync ()
{
    local cur word_list
    word_list=" -l" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_shell ()
{
    local cur word_list
    word_list=" -e -n -T -t -x" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_install ()
{
    local cur word_list
    word_list=" -l -r -t -s -d -p -g --instant --no-streaming --streaming --fastdeploy --no-fastdeploy --force-agent --date-check-agent --version-check-agent --local-agent" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_installmultiple ()
{
    local cur word_list
    word_list=" -l -r -t -s -d -p -g --instant --no-streaming --streaming --fastdeploy --no-fastdeploy --force-agent --date-check-agent --version-check-agent --local-agent" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_installmultipackage ()
{
    local cur word_list
    word_list=" -l -r -t -s -d -p -g --instant --no-streaming --streaming --fastdeploy --no-fastdeploy --force-agent --date-check-agent --version-check-agent --local-agent" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_uninstall ()
{
    local cur word_list
    word_list=" -k" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_adb_reconnect ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          reconnect)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          device) _adb_device
            return
            ;;

          offline) _adb_offline
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" device offline" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _adb adb
