# Auto-generated with h2o

_ansiblevault()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          create) _ansiblevault_create
            return
            ;;

          decrypt) _ansiblevault_decrypt
            return
            ;;

          edit) _ansiblevault_edit
            return
            ;;

          view) _ansiblevault_view
            return
            ;;

          encrypt) _ansiblevault_encrypt
            return
            ;;

          encrypt_string) _ansiblevault_encryptstring
            return
            ;;

          rekey) _ansiblevault_rekey
            return
            ;;

      *)
          word_list=" create decrypt edit view encrypt encrypt_string rekey --version -h --help -v --verbose"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_ansiblevault_create ()
{
    local cur word_list
    word_list=" -h --help --encrypt-vault-id --vault-id --ask-vault-password --ask-vault-pass --vault-password-file -v --verbose" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_ansiblevault_decrypt ()
{
    local cur word_list
    word_list=" -h --help --output --vault-id --vault-password-file -v --verbose" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_ansiblevault_edit ()
{
    local cur word_list
    word_list=" -h --help --encrypt-vault-id --vault-id --ask-vault-password --ask-vault-pass --vault-password-file -v --verbose" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_ansiblevault_view ()
{
    local cur word_list
    word_list=" -h --help --vault-id --vault-password-file -v --verbose" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_ansiblevault_encrypt ()
{
    local cur word_list
    word_list=" -h --help --vault-id --ask-vault-password --ask-vault-pass --vault-password-file -v --verbose --output --encrypt-vault-id" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_ansiblevault_encryptstring ()
{
    local cur word_list
    word_list=" -h --help --vault-id --ask-vault-password --ask-vault-pass --vault-password-file -v --verbose --output --encrypt-vault-id -p --prompt --show-input -n --name --stdin-name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_ansiblevault_rekey ()
{
    local cur word_list
    word_list=" -h --help --vault-id --ask-vault-password --ask-vault-pass --vault-password-file -v --verbose --encrypt-vault-id --new-vault-password-file --new-vault-id" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _ansiblevault ansible-vault
