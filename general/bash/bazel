# Generated with h2o 0.1.18

# autogenerated bash script

_bazel()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          analyze-profile) _bazel_analyze-profile
            return
            ;;

          aquery) _bazel_aquery
            return
            ;;

          build) _bazel_build
            return
            ;;

          canonicalize-flags) _bazel_canonicalize-flags
            return
            ;;

          clean) _bazel_clean
            return
            ;;

          coverage) _bazel_coverage
            return
            ;;

          cquery) _bazel_cquery
            return
            ;;

          dump) _bazel_dump
            return
            ;;

          fetch) _bazel_fetch
            return
            ;;

          help) _bazel_help
            return
            ;;

          info) _bazel_info
            return
            ;;

          license) _bazel_license
            return
            ;;

          mobile-install) _bazel_mobile-install
            return
            ;;

          query) _bazel_query
            return
            ;;

          run) _bazel_run
            return
            ;;

          shutdown) _bazel_shutdown
            return
            ;;

          sync) _bazel_sync
            return
            ;;

          test) _bazel_test
            return
            ;;

          version) _bazel_version
            return
            ;;

      *)
          word_list=" analyze-profile aquery build canonicalize-flags clean coverage cquery dump fetch help info license mobile-install query run shutdown sync test version " 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_bazel_analyze-profile ()
{
    local cur word_list
    word_list=" --profile --distdir --repo_env --experimental_verify_repository_rules --bes_keywords --dump --dump -d --dump --experimental_profile_additional_tasks --ui_event_filters --all_incompatible_changes --config --override_repository" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bazel_canonicalize-flags ()
{
    local cur word_list
    word_list=" --distdir --loading_phase_threads --loading_phase_threads --remote_download_minimal --remote_download_toplevel --noorder_results --order_results --bes_keywords --experimental_profile_additional_tasks --remote_cache_header --remote_downloader_header --remote_header --all_incompatible_changes --config --override_repository" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bazel_dump ()
{
    local cur word_list
    word_list=" --distdir --bes_keywords --experimental_profile_additional_tasks --all_incompatible_changes --config --override_repository" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bazel_help ()
{
    local cur word_list
    word_list=" --distdir --bes_keywords --experimental_profile_additional_tasks --long --long -l --short --all_incompatible_changes --config --override_repository" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bazel_license ()
{
    local cur word_list
    word_list=" --distdir --bes_keywords --experimental_profile_additional_tasks --all_incompatible_changes --config --override_repository" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _bazel bazel
