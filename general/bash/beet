# Auto-generated with h2o

_beet()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          config) _beet_config
            return
            ;;

          import) _beet_import
            return
            ;;

          list) _beet_list
            return
            ;;

          modify) _beet_modify
            return
            ;;

          move) _beet_move
            return
            ;;

          remove) _beet_remove
            return
            ;;

          stats) _beet_stats
            return
            ;;

          update) _beet_update
            return
            ;;

          write) _beet_write
            return
            ;;

      *)
          word_list=" config import list modify move remove stats update write --format-item --format-album -l --library -d --directory -v --verbose -c --config -p --plugins -h --help"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_beet_config ()
{
    local cur word_list
    word_list=" -h --help -p --paths -e --edit -d --defaults -c --clear" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_beet_import ()
{
    local cur word_list
    word_list=" -h --help -c --copy -C --nocopy -m --move -w --write -W --nowrite -a --autotag -A --noautotag -p --resume -P --noresume -q --quiet -l --log -s --singletons -t --timid -L --library -i --incremental -I --noincremental --from-scratch --flat -g --group-albums --pretend -S --search-id --set" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_beet_list ()
{
    local cur word_list
    word_list=" -h --help -a --album -p --path -f --format" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_beet_modify ()
{
    local cur word_list
    word_list=" -h --help -m --move -M --nomove -w --write -W --nowrite -a --album -f --format -y --yes" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_beet_move ()
{
    local cur word_list
    word_list=" -h --help -d --dest -c --copy -p --pretend -t --timid -e --export -a --album" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_beet_remove ()
{
    local cur word_list
    word_list=" -h --help -d --delete -f --force -a --album" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_beet_stats ()
{
    local cur word_list
    word_list=" -h --help -e --exact" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_beet_update ()
{
    local cur word_list
    word_list=" -h --help -a --album -f --format -m --move -M --nomove -p --pretend -F --field" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_beet_write ()
{
    local cur word_list
    word_list=" -h --help -p --pretend -f --force" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _beet beet
