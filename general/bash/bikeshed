# Auto-generated with h2o

_bikeshed()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          spec) _bikeshed_spec
            return
            ;;

          echidna) _bikeshed_echidna
            return
            ;;

          watch) _bikeshed_watch
            return
            ;;

          serve) _bikeshed_serve
            return
            ;;

          update) _bikeshed_update
            return
            ;;

          issues-list) _bikeshed_issueslist
            return
            ;;

          debug) _bikeshed_debug
            return
            ;;

          refs) _bikeshed_refs
            return
            ;;

          source) _bikeshed_source
            return
            ;;

          test) _bikeshed_test
            return
            ;;

          profile) _bikeshed_profile
            return
            ;;

          wpt) _bikeshed_wpt
            return
            ;;

      *)
          word_list=" spec echidna watch serve update issues-list debug refs source test profile wpt -h --help --version -q --quiet -s --silent -f --force -d --dry-run -a --ascii-only --print --die-on --allow-nonlocal-files --allow-execute"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_bikeshed_spec ()
{
    local cur word_list
    word_list=" -h --help --debug --gh-token --byos -l --line-numbers" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_echidna ()
{
    local cur word_list
    word_list=" -h --help --gh-token --u --p --decision --editorial --cc --additional-directories --self-contained" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_watch ()
{
    local cur word_list
    word_list=" -h --help --gh-token --gh-token --byos" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_serve ()
{
    local cur word_list
    word_list=" -h --help --port --localhost --gh-token --byos" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_update ()
{
    local cur word_list
    word_list=" -h --help --skip-manifest --anchors --backrefs --biblio --boilerplate --caniuse --mdn --link-defaults --test-suites --languages --wpt" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_issueslist ()
{
    local cur word_list
    word_list=" -h --help -t" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_debug ()
{
    local cur word_list
    word_list=" -h --help --print-exports --print-refs-for --print --print-json --refresh-data --print-metadata" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_refs ()
{
    local cur word_list
    word_list=" -h --help --text --for --status --latest-only" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_source ()
{
    local cur word_list
    word_list=" -h --help --big-text" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_test ()
{
    local cur word_list
    word_list=" -h --help --rebase --manual-only" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_profile ()
{
    local cur word_list
    word_list=" -h --help --root --leaf --svg" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bikeshed_wpt ()
{
    local cur word_list
    word_list=" -h --help --template" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _bikeshed bikeshed
