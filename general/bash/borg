# Auto-generated with h2o

_borg()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          benchmark) _borg_benchmark
            return
            ;;

          break-lock) _borg_breaklock
            return
            ;;

          check) _borg_check
            return
            ;;

          compact) _borg_compact
            return
            ;;

          config) _borg_config
            return
            ;;

          create) _borg_create
            return
            ;;

          debug) _borg_debug
            return
            ;;

          delete) _borg_delete
            return
            ;;

          diff) _borg_diff
            return
            ;;

          export-tar) _borg_exporttar
            return
            ;;

          extract) _borg_extract
            return
            ;;

          info) _borg_info
            return
            ;;

          init) _borg_init
            return
            ;;

          key) _borg_key
            return
            ;;

          list) _borg_list
            return
            ;;

          mount) _borg_mount
            return
            ;;

          prune) _borg_prune
            return
            ;;

          recreate) _borg_recreate
            return
            ;;

          rename) _borg_rename
            return
            ;;

          serve) _borg_serve
            return
            ;;

          umount) _borg_umount
            return
            ;;

          upgrade) _borg_upgrade
            return
            ;;

          with-lock) _borg_withlock
            return
            ;;

          import-tar) _borg_importtar
            return
            ;;

      *)
          word_list=" benchmark break-lock check compact config create debug delete diff export-tar extract info init key list mount prune recreate rename serve umount upgrade with-lock import-tar -V --version -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_borg_benchmark ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_breaklock ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_check ()
{
    local cur word_list
    word_list=" --repository-only --archives-only --verify-data --repair --save-space --max-duration -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_compact ()
{
    local cur word_list
    word_list=" --cleanup-commits --threshold -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_config ()
{
    local cur word_list
    word_list=" -c --cache -d --delete -l --list -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_create ()
{
    local cur word_list
    word_list=" -n --dry-run -s --stats --list --filter --json --no-cache-sync --stdin-name --stdin-user --stdin-group --stdin-mode --content-from-command --paths-from-stdin --paths-from-command --paths-delimiter -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from --exclude-caches --exclude-if-present --keep-exclude-tags --exclude-nodump -x --one-file-system --numeric-owner --numeric-ids --noatime --atime --noctime --nobirthtime --nobsdflags --noflags --noacls --noxattrs --sparse --files-cache --read-special --comment --timestamp -c --checkpoint-interval --chunker-params -C --compression" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_debug ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          debug)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          info) _borg_info
            return
            ;;

          dump-archive-items) _borg_dumparchiveitems
            return
            ;;

          dump-archive) _borg_dumparchive
            return
            ;;

          dump-manifest) _borg_dumpmanifest
            return
            ;;

          dump-repo-objs) _borg_dumprepoobjs
            return
            ;;

          search-repo-objs) _borg_searchrepoobjs
            return
            ;;

          get-obj) _borg_getobj
            return
            ;;

          put-obj) _borg_putobj
            return
            ;;

          delete-obj) _borg_deleteobj
            return
            ;;

          refcount-obj) _borg_refcountobj
            return
            ;;

          dump-hints) _borg_dumphints
            return
            ;;

          convert-profile) _borg_convertprofile
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" info dump-archive-items dump-archive dump-manifest dump-repo-objs search-repo-objs get-obj put-obj delete-obj refcount-obj dump-hints convert-profile -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_info ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_dumparchiveitems ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_dumparchive ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_dumpmanifest ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_dumprepoobjs ()
{
    local cur word_list
    word_list=" --ghost --segment --offset -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_searchrepoobjs ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_getobj ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_putobj ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_deleteobj ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_refcountobj ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_dumphints ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_debug_convertprofile ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_delete ()
{
    local cur word_list
    word_list=" -n --dry-run --list -s --stats --cache-only --force --keep-security-info --save-space -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_diff ()
{
    local cur word_list
    word_list=" --numeric-owner --numeric-ids --same-chunker-params --sort --json-lines -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_exporttar ()
{
    local cur word_list
    word_list=" --tar-filter --list -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from --strip-components" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_extract ()
{
    local cur word_list
    word_list=" --list -n --dry-run --numeric-owner --numeric-ids --nobsdflags --noflags --noacls --noxattrs --stdout --sparse -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from --strip-components" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_info ()
{
    local cur word_list
    word_list=" --json -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_init ()
{
    local cur word_list
    word_list=" -e --encryption --append-only --storage-quota --make-parent-dirs -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_key ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          key)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          export) _borg_export
            return
            ;;

          import) _borg_import
            return
            ;;

          change-passphrase) _borg_changepassphrase
            return
            ;;

          migrate-to-repokey) _borg_migratetorepokey
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" export import change-passphrase migrate-to-repokey -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_key_export ()
{
    local cur word_list
    word_list=" --paper --qr-html -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_key_import ()
{
    local cur word_list
    word_list=" --paper -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_key_changepassphrase ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_key_migratetorepokey ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_list ()
{
    local cur word_list
    word_list=" --consider-checkpoints --short --format --json --json-lines -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last -e --exclude --exclude-from --pattern --patterns-from" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_mount ()
{
    local cur word_list
    word_list=" --consider-checkpoints -f --foreground -o --numeric-owner --numeric-ids -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives --sort-by --first --last -e --exclude --exclude-from --pattern --patterns-from --strip-components" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_prune ()
{
    local cur word_list
    word_list=" -n --dry-run --force -s --stats --list --keep-within --keep-last --keep-secondly --keep-minutely -H --keep-hourly -d --keep-daily -w --keep-weekly -m --keep-monthly -y --keep-yearly --save-space -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -P --prefix -a --glob-archives" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_recreate ()
{
    local cur word_list
    word_list=" --list --filter -n --dry-run -s --stats -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh -e --exclude --exclude-from --pattern --patterns-from --exclude-caches --exclude-if-present --keep-exclude-tags --target -c --checkpoint-interval --comment --timestamp -C --compression --recompress --chunker-params" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_rename ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_serve ()
{
    local cur word_list
    word_list=" --restrict-to-path --restrict-to-repository --append-only --storage-quota -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_umount ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_upgrade ()
{
    local cur word_list
    word_list=" -n --dry-run --inplace --force --tam --disable-tam -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_withlock ()
{
    local cur word_list
    word_list=" -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_borg_importtar ()
{
    local cur word_list
    word_list=" --tar-filter -s --stats --list --filter --json -h --help --critical --error --warning --info -v --verbose --debug --debug-topic -p --progress --iec --log-json --lock-wait --bypass-lock --show-version --show-rc --umask --remote-path --remote-ratelimit --upload-ratelimit --remote-buffer --upload-buffer --consider-part-files --debug-profile --rsh --comment --timestamp -c --checkpoint-interval --chunker-params -C --compression" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _borg borg
