# Auto-generated with h2o

_brew()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          install) _brew_install
            return
            ;;

          uninstall) _brew_uninstall
            return
            ;;

          list) _brew_list
            return
            ;;

          search) _brew_search
            return
            ;;

          analytics) _brew_analytics
            return
            ;;

          autoremove) _brew_autoremove
            return
            ;;

          cask) _brew_cask
            return
            ;;

          cleanup) _brew_cleanup
            return
            ;;

          commands) _brew_commands
            return
            ;;

          completions) _brew_completions
            return
            ;;

          config) _brew_config
            return
            ;;

          deps) _brew_deps
            return
            ;;

          desc) _brew_desc
            return
            ;;

          doctor) _brew_doctor
            return
            ;;

          fetch) _brew_fetch
            return
            ;;

          formulae) _brew_formulae
            return
            ;;

          gist-logs) _brew_gist-logs
            return
            ;;

          homepage) _brew_homepage
            return
            ;;

          info) _brew_info
            return
            ;;

          leaves) _brew_leaves
            return
            ;;

          link) _brew_link
            return
            ;;

          log) _brew_log
            return
            ;;

          migrate) _brew_migrate
            return
            ;;

          missing) _brew_missing
            return
            ;;

          options) _brew_options
            return
            ;;

          outdated) _brew_outdated
            return
            ;;

          pin) _brew_pin
            return
            ;;

          pin) _brew_pin
            return
            ;;

          readall) _brew_readall
            return
            ;;

          reinstall) _brew_reinstall
            return
            ;;

          shellenv) _brew_shellenv
            return
            ;;

          tap-info) _brew_tap-info
            return
            ;;

          tap) _brew_tap
            return
            ;;

          unlink) _brew_unlink
            return
            ;;

          unpin) _brew_unpin
            return
            ;;

          untap) _brew_untap
            return
            ;;

          update-reset) _brew_update-reset
            return
            ;;

          update) _brew_update
            return
            ;;

          upgrade) _brew_upgrade
            return
            ;;

          uses) _brew_uses
            return
            ;;

      *)
          word_list=" install uninstall list search analytics autoremove cask cleanup commands completions config deps desc doctor fetch formulae gist-logs homepage info leaves link log migrate missing options outdated pin pin readall reinstall shellenv tap-info tap unlink unpin untap update-reset update upgrade uses --cache --caskroom --cellar --env" 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_brew_install ()
{
    local cur word_list
    word_list=" -d --debug -f --force -v --verbose --formula --env --ignore-dependencies --only-dependencies --cc -s --build-from-source --force-bottle --include-test --HEAD --fetch-HEAD --keep-tmp --build-bottle --bottle-arch --display-times -i --interactive -g --git --cask --binaries --no-binaries --require-sha --quarantine --no-quarantine --skip-cask-deps" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_uninstall ()
{
    local cur word_list
    word_list=" -f --force --zap --ignore-dependencies --formula --cask" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_list ()
{
    local cur word_list
    word_list=" --formula --cask --full-name --versions --multiple --pinned -1 -l -r -t" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_search ()
{
    local cur word_list
    word_list=" --formula --cask --desc --pull-request --open --closed --macports --fink --opensuse --fedora --debian --ubuntu" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_autoremove ()
{
    local cur word_list
    word_list=" -n --dry-run" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_cleanup ()
{
    local cur word_list
    word_list=" --prune -n --dry-run -s --prune-prefix" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_commands ()
{
    local cur word_list
    word_list=" -q --quiet --include-aliases" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_deps ()
{
    local cur word_list
    word_list=" -n --1 --union --full-name --include-build --include-optional --include-test --skip-recommended --include-requirements --tree --annotate --installed --all --for-each --formula --cask" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_desc ()
{
    local cur word_list
    word_list=" -s --search -n --name -d --description" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_doctor ()
{
    local cur word_list
    word_list=" --list-checks -D --audit-debug" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_fetch ()
{
    local cur word_list
    word_list=" --HEAD -f --force -v --verbose --retry --deps -s --build-from-source --build-bottle --force-bottle --quarantine --no-quarantine --formula --cask" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_gist-logs ()
{
    local cur word_list
    word_list=" --with-hostname -n --new-issue -p --private" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_homepage ()
{
    local cur word_list
    word_list=" --formula --cask" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_info ()
{
    local cur word_list
    word_list=" --analytics --days --category --github --json --installed --all -v --verbose --formula --cask" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_leaves ()
{
    local cur word_list
    word_list=" -r --installed-on-request -p --installed-as-dependency" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_link ()
{
    local cur word_list
    word_list=" --overwrite -n --dry-run -f --force --HEAD" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_log ()
{
    local cur word_list
    word_list=" -p --patch --stat --oneline -1 -n --max-count" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_migrate ()
{
    local cur word_list
    word_list=" -f --force" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_missing ()
{
    local cur word_list
    word_list=" --hide" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_options ()
{
    local cur word_list
    word_list=" --compact --installed --all --command" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_outdated ()
{
    local cur word_list
    word_list=" -q --quiet -v --verbose --formula --cask --json --fetch-HEAD --greedy" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_readall ()
{
    local cur word_list
    word_list=" --aliases --syntax" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_reinstall ()
{
    local cur word_list
    word_list=" -d --debug -f --force -v --verbose --formula -s --build-from-source -i --interactive --force-bottle --keep-tmp --display-times -g --git --cask --binaries --no-binaries --require-sha --quarantine --no-quarantine --skip-cask-deps" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_tap-info ()
{
    local cur word_list
    word_list=" --installed --json" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_tap ()
{
    local cur word_list
    word_list=" --full --shallow --force-auto-update --repair --list-pinned" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_unlink ()
{
    local cur word_list
    word_list=" -n --dry-run" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_untap ()
{
    local cur word_list
    word_list=" -f --force" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_update ()
{
    local cur word_list
    word_list=" --merge --preinstall -f --force" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_upgrade ()
{
    local cur word_list
    word_list=" -d --debug -f --force -v --verbose -n --dry-run --formula -s --build-from-source -i --interactive --force-bottle --fetch-HEAD --ignore-pinned --keep-tmp --display-times --cask --binaries --no-binaries --require-sha --quarantine --no-quarantine --skip-cask-deps --greedy" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_brew_uses ()
{
    local cur word_list
    word_list=" --recursive --installed --include-build --include-test --include-optional --skip-recommended --formula --cask" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _brew brew
