# Auto-generated with h2o

_buildah()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          add) _buildah_add
            return
            ;;

          bud) _buildah_bud
            return
            ;;

          commit) _buildah_commit
            return
            ;;

          config) _buildah_config
            return
            ;;

          containers) _buildah_containers
            return
            ;;

          copy) _buildah_copy
            return
            ;;

          from) _buildah_from
            return
            ;;

          images) _buildah_images
            return
            ;;

          info) _buildah_info
            return
            ;;

          inspect) _buildah_inspect
            return
            ;;

          login) _buildah_login
            return
            ;;

          logout) _buildah_logout
            return
            ;;

          manifest) _buildah_manifest
            return
            ;;

          mount) _buildah_mount
            return
            ;;

          pull) _buildah_pull
            return
            ;;

          push) _buildah_push
            return
            ;;

          rename) _buildah_rename
            return
            ;;

          rm) _buildah_rm
            return
            ;;

          rmi) _buildah_rmi
            return
            ;;

          run) _buildah_run
            return
            ;;

          tag) _buildah_tag
            return
            ;;

          umount) _buildah_umount
            return
            ;;

          unshare) _buildah_unshare
            return
            ;;

          version) _buildah_version
            return
            ;;

      *)
          word_list=" add bud commit config containers copy from images info inspect login logout manifest mount pull push rename rm rmi run tag umount unshare version -h --help --log-level --registries-conf --registries-conf-dir --root --runroot --storage-driver --storage-opt --userns-gid-map --userns-uid-map -v --version" 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_buildah_add ()
{
    local cur word_list
    word_list=" --add-history --chmod --chown --contextdir --from -h --help --ignorefile -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_bud ()
{
    local cur word_list
    word_list=" --add-host --annotation --arch --authfile --build-arg --cache-from --cap-add --cap-drop --cert-dir --cgroup-parent --cni-config-dir --cni-plugin-path --compress --cpu-period --cpu-quota -c --cpu-shares --cpuset-cpus --cpuset-mems --creds --decryption-key --device -D --disable-compression --disable-content-trust --dns-option --dns-search -f --file --force-rm --format --from -h --help --http-proxy --ignorefile --iidfile --ipc --isolation --jobs --label --layers --logfile --manifest -m --memory --memory-swap --network --no-cache --os --pid --platform --pull --pull-always --pull-never -q --quiet --rm --runtime --runtime-flag --secret --security-opt --shm-size --sign-by --squash --stdin -t --tag --target --timestamp --tls-verify --ulimit --userns --userns-gid-map-group --userns-uid-map-user --uts --variant -v --volume" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_commit ()
{
    local cur word_list
    word_list=" --authfile --cert-dir --creds -D --disable-compression --encrypt-layer --encryption-key -f --format -h --help --iidfile --manifest -q --quiet --rm --sign-by --squash --timestamp --tls-verify" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_config ()
{
    local cur word_list
    word_list=" --add-history -a --annotation --arch --author --cmd --comment --created-by --domainname --entrypoint -e --env --healthcheck --healthcheck-interval --healthcheck-retries --healthcheck-start-period --healthcheck-timeout -h --help --history-comment --hostname -l --label --onbuild --os -p --port --shell --stop-signal -u --user -v --volume --workingdir" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_containers ()
{
    local cur word_list
    word_list=" -a --all -f --filter --format -h --help --json -n --noheading --notruncate -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_copy ()
{
    local cur word_list
    word_list=" --add-history --chmod --chown --contextdir --from -h --help --ignorefile -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_from ()
{
    local cur word_list
    word_list=" --add-host --arch --authfile --cap-add --cap-drop --cert-dir --cgroup-parent --cidfile --cni-config-dir --cni-plugin-path --cpu-period --cpu-quota -c --cpu-shares --cpuset-cpus --cpuset-mems --creds --decryption-key --device --dns-option --dns-search -f --format -h --help --http-proxy --ipc --isolation -m --memory --memory-swap --name --network --os --pid --pull --pull-always --pull-never -q --quiet --security-opt --shm-size --tls-verify --ulimit --userns --userns-gid-map-group --userns-uid-map-user --uts --variant -v --volume" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_images ()
{
    local cur word_list
    word_list=" -a --all --digests -f --filter --format -h --help --history --json --no-trunc -n --noheading -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_info ()
{
    local cur word_list
    word_list=" --format -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_inspect ()
{
    local cur word_list
    word_list=" -f --format -h --help -t --type" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_login ()
{
    local cur word_list
    word_list=" --authfile --cert-dir --get-login -h --help -p --password --password-stdin --tls-verify -u --username" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_logout ()
{
    local cur word_list
    word_list=" -a --all --authfile -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_manifest ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_mount ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_pull ()
{
    local cur word_list
    word_list=" -a --all-tags --arch --authfile --cert-dir --creds --decryption-key -h --help --os --policy -q --quiet --remove-signatures --tls-verify --variant" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_push ()
{
    local cur word_list
    word_list=" --all --authfile --cert-dir --creds --digestfile -D --disable-compression --encrypt-layer --encryption-key -f --format -h --help -q --quiet --remove-signatures --rm --sign-by --tls-verify" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_rename ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_rm ()
{
    local cur word_list
    word_list=" -a --all -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_rmi ()
{
    local cur word_list
    word_list=" -a --all -f --force -h --help -p --prune" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_run ()
{
    local cur word_list
    word_list=" --add-history --cap-add --cap-drop --cni-config-dir --cni-plugin-path -h --help --hostname --ipc --isolation --mount --network --no-pivot --pid --runtime --runtime-flag -t --terminal --user --uts -v --volume" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_tag ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_umount ()
{
    local cur word_list
    word_list=" -a --all -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_unshare ()
{
    local cur word_list
    word_list=" -h --help --mount" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_buildah_version ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _buildah buildah
