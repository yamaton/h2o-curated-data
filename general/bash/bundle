# Auto-generated with h2o

_bundle()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          install) _bundle_install
            return
            ;;

          update) _bundle_update
            return
            ;;

          package) _bundle_package
            return
            ;;

          exec) _bundle_exec
            return
            ;;

          config) _bundle_config
            return
            ;;

          add) _bundle_add
            return
            ;;

          binstubs) _bundle_binstubs
            return
            ;;

          check) _bundle_check
            return
            ;;

          show) _bundle_show
            return
            ;;

          outdated) _bundle_outdated
            return
            ;;

          console) _bundle_console
            return
            ;;

          open) _bundle_open
            return
            ;;

          lock) _bundle_lock
            return
            ;;

          viz) _bundle_viz
            return
            ;;

          init) _bundle_init
            return
            ;;

          gem) _bundle_gem
            return
            ;;

          platform) _bundle_platform
            return
            ;;

          clean) _bundle_clean
            return
            ;;

          doctor) _bundle_doctor
            return
            ;;

          remove) _bundle_remove
            return
            ;;

      *)
          word_list=" install update package exec config add binstubs check show outdated console open lock viz init gem platform clean doctor remove --no-color --retry -r --verbose -V"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_bundle_install ()
{
    local cur word_list
    word_list=" --binstubs --clean --deployment --redownload --frozen --full-index --gemfile --jobs -j --local --no-cache --no-prune --path --quiet --retry --shebang --standalone --system --trust-policy --with --without" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_update ()
{
    local cur word_list
    word_list=" --all --group -g --source --local --ruby --bundler --full-index --jobs -j --retry --quiet --redownload --patch --minor --major --strict --conservative" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_package ()
{
    local cur word_list
    word_list=" -r --retry" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_exec ()
{
    local cur word_list
    word_list=" --keep-file-descriptors" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_add ()
{
    local cur word_list
    word_list=" --version -v --group -g --git --github --branch --ref --skip-install --optimistic --strict" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_binstubs ()
{
    local cur word_list
    word_list=" --force --path --standalone --shebang --all" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_check ()
{
    local cur word_list
    word_list=" --dry-run --gemfile --path" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_show ()
{
    local cur word_list
    word_list=" --paths" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_outdated ()
{
    local cur word_list
    word_list=" --local --pre --source --strict --parseable --porcelain --group --groups --minor --major --patch --filter-major --filter-minor --filter-patch --only-explicit" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_console ()
{
    local cur word_list
    word_list=" -r --retry" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_lock ()
{
    local cur word_list
    word_list=" --update --local --print --lockfile --full-index --add-platform --remove-platform --patch --minor --major --strict --conservative" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_viz ()
{
    local cur word_list
    word_list=" --file -f --format -F --requirements -R --version -v --without -W" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_init ()
{
    local cur word_list
    word_list=" --gemspec" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_gem ()
{
    local cur word_list
    word_list=" --exe -b --bin --no-exe --coc --no-coc --ext --no-ext --mit --no-mit -t --test --ci --linter -e --edit" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_clean ()
{
    local cur word_list
    word_list=" --dry-run --force" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_doctor ()
{
    local cur word_list
    word_list=" --quiet --gemfile" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_bundle_remove ()
{
    local cur word_list
    word_list=" --install" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _bundle bundle
