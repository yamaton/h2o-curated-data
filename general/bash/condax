# Auto-generated with h2o

_condax()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          ensure-path) _condax_ensurepath
            return
            ;;

          export) _condax_export
            return
            ;;

          import) _condax_import
            return
            ;;

          inject) _condax_inject
            return
            ;;

          install) _condax_install
            return
            ;;

          list) _condax_list
            return
            ;;

          remove) _condax_remove
            return
            ;;

          repair) _condax_repair
            return
            ;;

          uninject) _condax_uninject
            return
            ;;

          uninstall) _condax_uninstall
            return
            ;;

          update) _condax_update
            return
            ;;

      *)
          word_list=" ensure-path export import inject install list remove repair uninject uninstall update --version -h --help"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_condax_ensurepath ()
{
    local cur word_list
    word_list=" -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_export ()
{
    local cur word_list
    word_list=" --dir -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_import ()
{
    local cur word_list
    word_list=" -f --force -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_inject ()
{
    local cur word_list
    word_list=" -c --channel -n --name -f --force --include-apps -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_install ()
{
    local cur word_list
    word_list=" -c --channel -f --force --file -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_list ()
{
    local cur word_list
    word_list=" -s --short --include-injected -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_remove ()
{
    local cur word_list
    word_list=" -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_repair ()
{
    local cur word_list
    word_list=" --migrate -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_uninject ()
{
    local cur word_list
    word_list=" -n --name -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_uninstall ()
{
    local cur word_list
    word_list=" -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_condax_update ()
{
    local cur word_list
    word_list=" --all --update-specs -h --help -v --verbose -q --quiet --config" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _condax condax
