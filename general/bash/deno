# Auto-generated with h2o

_deno()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          bench) _deno_bench
            return
            ;;

          bundle) _deno_bundle
            return
            ;;

          cache) _deno_cache
            return
            ;;

          check) _deno_check
            return
            ;;

          compile) _deno_compile
            return
            ;;

          completions) _deno_completions
            return
            ;;

          coverage) _deno_coverage
            return
            ;;

          doc) _deno_doc
            return
            ;;

          eval) _deno_eval
            return
            ;;

          fmt) _deno_fmt
            return
            ;;

          info) _deno_info
            return
            ;;

          install) _deno_install
            return
            ;;

          lint) _deno_lint
            return
            ;;

          lsp) _deno_lsp
            return
            ;;

          repl) _deno_repl
            return
            ;;

          run) _deno_run
            return
            ;;

          task) _deno_task
            return
            ;;

          test) _deno_test
            return
            ;;

          types) _deno_types
            return
            ;;

          uninstall) _deno_uninstall
            return
            ;;

          upgrade) _deno_upgrade
            return
            ;;

          vendor) _deno_vendor
            return
            ;;

      *)
          word_list=" bench bundle cache check compile completions coverage doc eval fmt info install lint lsp repl run task test types uninstall upgrade vendor -h --help -q --quiet --unstable -V --version"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_deno_bench ()
{
    local cur word_list
    word_list=" -A --allow-all --allow-env --allow-ffi --allow-hrtime --allow-net --allow-read --allow-run --allow-write -c --config --cached-only --cert --check --compat --filter -h --help --ignore --import-map --location --lock --lock-write --no-check --no-clear-screen --no-config --no-prompt --no-remote -q --quiet -r --reload --seed --unsafely-ignore-certificate-errors --unstable --v8-flags --watch" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_bundle ()
{
    local cur word_list
    word_list=" -c --config --cert --check -h --help --import-map --lock --lock-write --no-check --no-clear-screen --no-config --no-remote -q --quiet -r --reload --unstable --watch" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_cache ()
{
    local cur word_list
    word_list=" -c --config --cert --check -h --help --import-map --lock --lock-write --no-check --no-config --no-remote -q --quiet -r --reload --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_check ()
{
    local cur word_list
    word_list=" -c --config --cert -h --help --import-map --lock --lock-write --no-config --no-remote -q --quiet -r --reload --remote --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_compile ()
{
    local cur word_list
    word_list=" -A --allow-all --allow-env --allow-ffi --allow-hrtime --allow-net --allow-read --allow-run --allow-write -c --config --cached-only --cert --check --compat -h --help --import-map --location --lock --lock-write --no-check --no-config --no-prompt --no-remote -o --output -q --quiet -r --reload --seed --target --unsafely-ignore-certificate-errors --unstable --v8-flags" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_completions ()
{
    local cur word_list
    word_list=" -h --help -q --quiet --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_coverage ()
{
    local cur word_list
    word_list=" --exclude -h --help --ignore --include --lcov --output -q --quiet --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_doc ()
{
    local cur word_list
    word_list=" -h --help --import-map --json --private -q --quiet -r --reload --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_eval ()
{
    local cur word_list
    word_list=" -c --config --cached-only --cert --check --compat --ext -h --help --import-map --inspect --inspect-brk --location --lock --lock-write --no-check --no-config --no-remote -p --print -q --quiet -r --reload --seed --unstable --v8-flags" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_fmt ()
{
    local cur word_list
    word_list=" -c --config --check --ext -h --help --ignore --no-clear-screen --no-config --options-indent-width --options-line-width --options-prose-wrap --options-single-quote --options-use-tabs -q --quiet --unstable --watch" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_info ()
{
    local cur word_list
    word_list=" --cert -h --help --import-map --json --location -q --quiet -r --reload --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_install ()
{
    local cur word_list
    word_list=" - - -A --allow-all --allow-env --allow-ffi --allow-hrtime --allow-net --allow-read --allow-run --allow-write -c --config --cached-only --cert --check --compat -f --force -h --help --import-map --inspect --inspect-brk --location --lock --lock-write -n --name --no-check --no-config --no-prompt --no-remote -q --quiet -r --reload --root --seed --unsafely-ignore-certificate-errors --unstable --v8-flags" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_lint ()
{
    local cur word_list
    word_list=" -c --config -h --help --ignore --json --no-clear-screen --no-config -q --quiet --rules --rules-exclude --rules-include --rules-tags --unstable --watch" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_lsp ()
{
    local cur word_list
    word_list=" -h --help -q --quiet --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_repl ()
{
    local cur word_list
    word_list=" -c --config --cached-only --cert --check --compat --eval --eval-file -h --help --import-map --inspect --inspect-brk --location --lock --lock-write --no-check --no-config --no-remote -q --quiet -r --reload --seed --unsafely-ignore-certificate-errors --unstable --v8-flags" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_run ()
{
    local cur word_list
    word_list=" -A --allow-all --allow-env --allow-ffi --allow-hrtime --allow-net --allow-read --allow-run --allow-write -c --config --cached-only --cert --check --compat -h --help --import-map --inspect --inspect-brk --location --lock --lock-write --no-check --no-clear-screen --no-config --no-prompt --no-remote -q --quiet -r --reload --seed --unsafely-ignore-certificate-errors --unstable --v8-flags --watch" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_task ()
{
    local cur word_list
    word_list=" -c --config -h --help --no-config -q --quiet --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_test ()
{
    local cur word_list
    word_list=" -A --allow-all --allow-env --allow-ffi --allow-hrtime --allow-net --allow-none --allow-read --allow-run --allow-write -c --config --cached-only --cert --check --compat --coverage --doc --fail-fast --filter -h --help --ignore --import-map --inspect --inspect-brk -j --jobs --location --lock --lock-write --no-check --no-clear-screen --no-config --no-prompt --no-remote --no-run -q --quiet -r --reload --seed --shuffle --trace-ops --unsafely-ignore-certificate-errors --unstable --v8-flags --watch" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_types ()
{
    local cur word_list
    word_list=" -h --help -q --quiet --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_uninstall ()
{
    local cur word_list
    word_list=" -h --help -q --quiet --root --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_upgrade ()
{
    local cur word_list
    word_list=" --canary --cert --dry-run -f --force -h --help --output -q --quiet --unstable --version" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_deno_vendor ()
{
    local cur word_list
    word_list=" -c --config --cert -f --force -h --help --import-map --lock --no-config --output -q --quiet -r --reload --unstable" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _deno deno
