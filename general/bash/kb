# Auto-generated with h2o

_kb()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          add) _kb_add
            return
            ;;

          edit) _kb_edit
            return
            ;;

          list) _kb_list
            return
            ;;

          view) _kb_view
            return
            ;;

          grep) _kb_grep
            return
            ;;

          update) _kb_update
            return
            ;;

          delete) _kb_delete
            return
            ;;

          template) _kb_template
            return
            ;;

          import) _kb_import
            return
            ;;

          export) _kb_export
            return
            ;;

          erase) _kb_erase
            return
            ;;

          sync) _kb_sync
            return
            ;;

          help) _kb_help
            return
            ;;

      *)
          word_list=" add edit list view grep update delete template import export erase sync help -h --help --version"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_kb_add ()
{
    local cur word_list
    word_list=" -h --help -t --title -c --category -g --tags -a --author -s --status --template -b --body" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_edit ()
{
    local cur word_list
    word_list=" -h --help -i --id -t --title -c --category -g --tags -a --author -s --status" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_list ()
{
    local cur word_list
    word_list=" -h --help -c --category -g --tags -a --author -s --status -v --verbose -f --full-identifier -n --no-color" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_view ()
{
    local cur word_list
    word_list=" -h --help -i --id -t --title -c --category -e --open-editor -n --no-color" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_grep ()
{
    local cur word_list
    word_list=" -h --help -c --category -g --tags -a --author -s --status -m --show-matches -i --case-insensitive -v --verbose -n --no-color" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_update ()
{
    local cur word_list
    word_list=" -h --help -i --id -t --title -c --category -g --tags -a --author -s --status --template -e --edit-content -b --body" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_delete ()
{
    local cur word_list
    word_list=" -h --help -i --id -t --title -c --category" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_template ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          template)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          add) _kb_add
            return
            ;;

          edit) _kb_edit
            return
            ;;

          list) _kb_list
            return
            ;;

          new) _kb_new
            return
            ;;

          delete) _kb_delete
            return
            ;;

          apply) _kb_apply
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" add edit list new delete apply -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_template_add ()
{
    local cur word_list
    word_list=" -h --help -t --title" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_template_edit ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_template_list ()
{
    local cur word_list
    word_list=" -h --help -n --no-color" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_template_new ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_template_delete ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_template_apply ()
{
    local cur word_list
    word_list=" -h --help -t --title -c --category -g --tags -a --author -s --status -m --extended-match" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_import ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_export ()
{
    local cur word_list
    word_list=" -h --help -f --file -d --only-data" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_erase ()
{
    local cur word_list
    word_list=" -h --help --db" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kb_sync ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _kb kb
