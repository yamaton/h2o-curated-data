# Auto-generated with h2o

_kubectl()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          create) _kubectl_create
            return
            ;;

          expose) _kubectl_expose
            return
            ;;

          run) _kubectl_run
            return
            ;;

          set) _kubectl_set
            return
            ;;

          explain) _kubectl_explain
            return
            ;;

          get) _kubectl_get
            return
            ;;

          edit) _kubectl_edit
            return
            ;;

          delete) _kubectl_delete
            return
            ;;

          rollout) _kubectl_rollout
            return
            ;;

          scale) _kubectl_scale
            return
            ;;

          autoscale) _kubectl_autoscale
            return
            ;;

          top) _kubectl_top
            return
            ;;

          cordon) _kubectl_cordon
            return
            ;;

          uncordon) _kubectl_uncordon
            return
            ;;

          drain) _kubectl_drain
            return
            ;;

          taint) _kubectl_taint
            return
            ;;

          describe) _kubectl_describe
            return
            ;;

          logs) _kubectl_logs
            return
            ;;

          attach) _kubectl_attach
            return
            ;;

          exec) _kubectl_exec
            return
            ;;

          proxy) _kubectl_proxy
            return
            ;;

          cp) _kubectl_cp
            return
            ;;

          debug) _kubectl_debug
            return
            ;;

          diff) _kubectl_diff
            return
            ;;

          apply) _kubectl_apply
            return
            ;;

          patch) _kubectl_patch
            return
            ;;

          replace) _kubectl_replace
            return
            ;;

          wait) _kubectl_wait
            return
            ;;

          kustomize) _kubectl_kustomize
            return
            ;;

          label) _kubectl_label
            return
            ;;

          annotate) _kubectl_annotate
            return
            ;;

          completion) _kubectl_completion
            return
            ;;

          config) _kubectl_config
            return
            ;;

          version) _kubectl_version
            return
            ;;

      *)
          word_list=" create expose run set explain get edit delete rollout scale autoscale top cordon uncordon drain taint describe logs attach exec proxy cp debug diff apply patch replace wait kustomize label annotate completion config version " 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_kubectl_create ()
{
    local cur word_list
    word_list=" --allow-missing-template-keys --dry-run --edit --field-manager -k --kustomize -o --output --raw -R --recursive --save-config -l --selector --show-managed-fields --template --validate --windows-line-endings" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_expose ()
{
    local cur word_list
    word_list=" --allow-missing-template-keys --cluster-ip --dry-run --external-ip --field-manager --generator -k --kustomize -l --labels --load-balancer-ip --name -o --output --overrides --port --protocol -R --recursive --save-config --selector --session-affinity --show-managed-fields --target-port --template --type" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_run ()
{
    local cur word_list
    word_list=" --allow-missing-template-keys --attach --cascade --command --dry-run --expose --field-manager --force --grace-period --image --image-pull-policy -k --kustomize -l --labels --leave-stdin-open -o --output --overrides --pod-running-timeout --port --privileged -q --quiet -R --recursive --restart --rm --save-config --show-managed-fields -i --stdin --template --timeout -t --tty --wait" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_explain ()
{
    local cur word_list
    word_list=" --api-version --recursive" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_get ()
{
    local cur word_list
    word_list=" -A --all-namespaces --allow-missing-template-keys --chunk-size --field-selector --ignore-not-found -k --kustomize --no-headers -o --output --output-watch-events --raw -R --recursive -l --selector --server-print --show-kind --show-labels --show-managed-fields --sort-by --template -w --watch --watch-only" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_edit ()
{
    local cur word_list
    word_list=" --allow-missing-template-keys --field-manager -k --kustomize -o --output --output-patch -R --recursive --save-config --show-managed-fields --template --validate --windows-line-endings" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_delete ()
{
    local cur word_list
    word_list=" --all -A --all-namespaces --cascade --dry-run --field-selector --force --grace-period --ignore-not-found -k --kustomize --now -o --output --raw -R --recursive -l --selector --timeout --wait" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_scale ()
{
    local cur word_list
    word_list=" --all --allow-missing-template-keys --current-replicas --dry-run -k --kustomize -o --output -R --recursive --replicas --resource-version -l --selector --show-managed-fields --template --timeout" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_autoscale ()
{
    local cur word_list
    word_list=" --allow-missing-template-keys --cpu-percent --dry-run --field-manager -k --kustomize --max --min --name -o --output -R --recursive --save-config --show-managed-fields --template" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_cordon ()
{
    local cur word_list
    word_list=" --dry-run -l --selector" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_uncordon ()
{
    local cur word_list
    word_list=" --dry-run -l --selector" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_drain ()
{
    local cur word_list
    word_list=" --chunk-size --delete-emptydir-data --disable-eviction --dry-run --force --grace-period --ignore-daemonsets --ignore-errors --pod-selector -l --selector --skip-wait-for-delete-timeout --timeout" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_taint ()
{
    local cur word_list
    word_list=" --all --allow-missing-template-keys --dry-run --field-manager -o --output --overwrite -l --selector --show-managed-fields --template --validate" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_describe ()
{
    local cur word_list
    word_list=" -A --all-namespaces --chunk-size -k --kustomize -R --recursive -l --selector --show-events" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_logs ()
{
    local cur word_list
    word_list=" --all-containers -c --container -f --follow --ignore-errors --insecure-skip-tls-verify-backend --limit-bytes --max-log-requests --pod-running-timeout --prefix -p --previous -l --selector --since --since-time --tail --timestamps" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_attach ()
{
    local cur word_list
    word_list=" -c --container --pod-running-timeout -q --quiet -i --stdin -t --tty" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_exec ()
{
    local cur word_list
    word_list=" -c --container --pod-running-timeout -q --quiet -i --stdin -t --tty" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_proxy ()
{
    local cur word_list
    word_list=" --accept-hosts --accept-hosts --accept-paths --address --api-prefix --disable-filter --keepalive -p --port --reject-methods --reject-paths -u --unix-socket -w --www -P --www-prefix" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_cp ()
{
    local cur word_list
    word_list=" -c --container --no-preserve" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_debug ()
{
    local cur word_list
    word_list=" --arguments-only --attach -c --container --copy-to --image --image-pull-policy -q --quiet --replace --same-node --share-processes -i --stdin --target -t --tty" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_diff ()
{
    local cur word_list
    word_list=" --field-manager --force-conflicts -k --kustomize -R --recursive -l --selector --server-side" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_apply ()
{
    local cur word_list
    word_list=" --all --allow-missing-template-keys --cascade --dry-run --field-manager --force --force-conflicts --grace-period -k --kustomize --openapi-patch -o --output --overwrite --prune -R --recursive -l --selector --server-side --show-managed-fields --template --timeout --validate --wait" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_patch ()
{
    local cur word_list
    word_list=" --allow-missing-template-keys --dry-run --field-manager -k --kustomize --local -o --output -p --patch --patch-file -R --recursive --show-managed-fields --template --type" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_replace ()
{
    local cur word_list
    word_list=" --allow-missing-template-keys --cascade --dry-run --field-manager --force --grace-period -k --kustomize -o --output --raw -R --recursive --save-config --show-managed-fields --template --timeout --validate --wait" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_wait ()
{
    local cur word_list
    word_list=" --all -A --all-namespaces --allow-missing-template-keys --field-selector --for --local -o --output -R --recursive -l --selector --show-managed-fields --template --timeout" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_kustomize ()
{
    local cur word_list
    word_list=" --as-current-user --enable-alpha-plugins --enable-helm --enable-managedby-label --helm-command --load-restrictor --network --network-name -o --output --reorder" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_label ()
{
    local cur word_list
    word_list=" --all -A --all-namespaces --allow-missing-template-keys --dry-run --field-manager --field-selector -k --kustomize --list --local -o --output --overwrite -R --recursive --resource-version -l --selector --show-managed-fields --template" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_annotate ()
{
    local cur word_list
    word_list=" --all -A --all-namespaces --allow-missing-template-keys --dry-run --field-manager --field-selector -k --kustomize --list --local -o --output --overwrite -R --recursive --resource-version -l --selector --show-managed-fields --template" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_kubectl_version ()
{
    local cur word_list
    word_list=" --client -o --output --short" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _kubectl kubectl
