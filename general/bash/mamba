# Auto-generated with h2o

_mamba()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          activate) _mamba_activate
            return
            ;;

          deactivate) _mamba_deactivate
            return
            ;;

          clean) _mamba_clean
            return
            ;;

          compare) _mamba_compare
            return
            ;;

          config) _mamba_config
            return
            ;;

          create) _mamba_create
            return
            ;;

          info) _mamba_info
            return
            ;;

          init) _mamba_init
            return
            ;;

          install) _mamba_install
            return
            ;;

          list) _mamba_list
            return
            ;;

          package) _mamba_package
            return
            ;;

          remove) _mamba_remove
            return
            ;;

          uninstall) _mamba_uninstall
            return
            ;;

          run) _mamba_run
            return
            ;;

          search) _mamba_search
            return
            ;;

          update) _mamba_update
            return
            ;;

          upgrade) _mamba_upgrade
            return
            ;;

          repoquery) _mamba_repoquery
            return
            ;;

          env) _mamba_env
            return
            ;;

      *)
          word_list=" activate deactivate clean compare config create info init install list package remove uninstall run search update upgrade repoquery env -h --help -V --version"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_mamba_clean ()
{
    local cur word_list
    word_list=" -h --help -a --all -i --index-cache -p --packages -t --tarballs -f --force-pkgs-dirs -c --tempfiles -l --logfiles --locks -d --dry-run --json -q --quiet -v --verbose -y --yes" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_compare ()
{
    local cur word_list
    word_list=" -h --help --json -v --verbose -q --quiet -n --name -p --prefix" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_config ()
{
    local cur word_list
    word_list=" -h --help --json -v --verbose -q --quiet --system --env --file --show --show-sources --validate --describe --write-default --get --append --prepend --add --set --remove --remove-key --stdin" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_create ()
{
    local cur word_list
    word_list=" -h --help --clone --file --dev -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --strict-channel-priority --no-channel-priority --no-deps --only-deps --no-pin --no-default-packages --experimental-solver --copy -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes --download-only --show-channel-urls" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_info ()
{
    local cur word_list
    word_list=" -h --help -a --all --base -e --envs -s --system --unsafe-channels --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_init ()
{
    local cur word_list
    word_list=" -h --help --all -d --dry-run --reverse --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_install ()
{
    local cur word_list
    word_list=" -h --help --revision --file --dev -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --strict-channel-priority --no-channel-priority --no-deps --only-deps --no-pin --experimental-solver --force-reinstall --freeze-installed --no-update-deps --update-deps -S --satisfied-skip-solve --update-all --all --update-specs --copy -m --mkdir --clobber -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes --download-only --show-channel-urls" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_list ()
{
    local cur word_list
    word_list=" -h --help --show-channel-urls -c --canonical -f --full-name --explicit --md5 -e --export -r --revisions --no-pip -n --name -p --prefix --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_package ()
{
    local cur word_list
    word_list=" -h --help -w --which -r --reset -u --untracked --pkg-name --pkg-version --pkg-build -n --name -p --prefix" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_remove ()
{
    local cur word_list
    word_list=" -h --help --dev -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --all --features --force-remove --force --no-pin --experimental-solver -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_uninstall ()
{
    local cur word_list
    word_list=" -h --help --dev -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --all --features --force-remove --force --no-pin --experimental-solver -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_run ()
{
    local cur word_list
    word_list=" -h --help -v --verbose --dev --debug-wrapper-scripts --cwd --no-capture-output --live-stream -n --name -p --prefix" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_search ()
{
    local cur word_list
    word_list=" -h --help --envs -i --info --subdir --platform -c --channel --use-local --override-channels --repodata-fn -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_update ()
{
    local cur word_list
    word_list=" -h --help --file -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --strict-channel-priority --no-channel-priority --no-deps --only-deps --no-pin --experimental-solver --force-reinstall --freeze-installed --no-update-deps --update-deps -S --satisfied-skip-solve --update-all --all --update-specs --copy --clobber -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes --download-only --show-channel-urls" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_upgrade ()
{
    local cur word_list
    word_list=" -h --help --file -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --strict-channel-priority --no-channel-priority --no-deps --only-deps --no-pin --experimental-solver --force-reinstall --freeze-installed --no-update-deps --update-deps -S --satisfied-skip-solve --update-all --all --update-specs --copy --clobber -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes --download-only --show-channel-urls" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_repoquery ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          repoquery)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          whoneeds) _mamba_whoneeds
            return
            ;;

          depends) _mamba_depends
            return
            ;;

          search) _mamba_search
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" whoneeds depends search -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_repoquery_whoneeds ()
{
    local cur word_list
    word_list=" -p --platform --pretty -t --tree -c --channel --use-local --override-channels --repodata-fn -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_repoquery_depends ()
{
    local cur word_list
    word_list=" -p --platform --pretty -t --tree -c --channel --use-local --override-channels --repodata-fn -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_repoquery_search ()
{
    local cur word_list
    word_list=" -p --platform --pretty -h --help -c --channel --use-local --override-channels --repodata-fn -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_mamba_env ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          env)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          create) _mamba_create
            return
            ;;

          export) _mamba_export
            return
            ;;

          list) _mamba_list
            return
            ;;

          remove) _mamba_remove
            return
            ;;

          update) _mamba_update
            return
            ;;

          config) _mamba_config
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" create export list remove update config -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_env_create ()
{
    local cur word_list
    word_list=" -h --help -f --file --force -d --dry-run --no-default-packages --experimental-solver -n --name -p --prefix -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_env_export ()
{
    local cur word_list
    word_list=" -h --help -c --channel --override-channels -f --file --no-builds --ignore-channels --from-history -n --name -p --prefix --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_env_list ()
{
    local cur word_list
    word_list=" -h --help --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_env_remove ()
{
    local cur word_list
    word_list=" -h --help --experimental-solver -n --name -p --prefix -d --dry-run --json -q --quiet -v --verbose -y --yes" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_env_update ()
{
    local cur word_list
    word_list=" -h --help -f --file --prune --experimental-solver -n --name -p --prefix --json -v --verbose -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_env_config ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _mamba mamba
