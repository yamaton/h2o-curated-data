# Auto-generated with h2o

_mamba()
{
    local cur prev words cword
    _init_completion -s || return

    local cmd i subcommands
    local subcommands=" activate deactivate clean compare config create info init install list package remove rename run search update notices repoquery doctor env"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        activate) _mamba_activate
            return
            ;;

        deactivate) _mamba_deactivate
            return
            ;;

        clean) _mamba_clean
            return
            ;;

        compare) _mamba_compare
            return
            ;;

        config) _mamba_config
            return
            ;;

        create) _mamba_create
            return
            ;;

        info) _mamba_info
            return
            ;;

        init) _mamba_init
            return
            ;;

        install) _mamba_install
            return
            ;;

        list) _mamba_list
            return
            ;;

        package) _mamba_package
            return
            ;;

        remove) _mamba_remove
            return
            ;;

        rename) _mamba_rename
            return
            ;;

        run) _mamba_run
            return
            ;;

        search) _mamba_search
            return
            ;;

        update) _mamba_update
            return
            ;;

        notices) _mamba_notices
            return
            ;;

        repoquery) _mamba_repoquery
            return
            ;;

        doctor) _mamba_doctor
            return
            ;;

        env) _mamba_env
            return
            ;;

    esac

    local word_list=" activate deactivate clean compare config create info init install list package remove rename run search update notices repoquery doctor env -h --help -V --version"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_activate()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_deactivate()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_clean()
{
    local word_list="  -h --help -a --all -i --index-cache -p --packages -t --tarballs -f --force-pkgs-dirs -c --tempfiles -l --logfiles --locks -d --dry-run --json -q --quiet -v --verbose -y --yes"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_compare()
{
    local word_list="  -h --help --json -v --verbose -q --quiet -n --name -p --prefix"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_config()
{
    local word_list="  -h --help --json -v --verbose -q --quiet --system --env --file --show --show-sources --validate --describe --write-default --get --append --prepend --add --set --remove --remove-key --stdin"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_create()
{
    local word_list="  -h --help --clone --file --dev -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --experimental --strict-channel-priority --no-channel-priority --no-deps --only-deps --no-pin --no-default-packages --solver --experimental-solver --copy -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes --download-only --show-channel-urls"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_info()
{
    local word_list="  -h --help -a --all --base -e --envs -s --system --unsafe-channels --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_init()
{
    local word_list="  -h --help --all -d --dry-run --user --no-user --system --reverse --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_install()
{
    local word_list="  -h --help --revision --file --dev -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --experimental --strict-channel-priority --no-channel-priority --no-deps --only-deps --no-pin --solver --experimental-solver --force-reinstall --freeze-installed --no-update-deps --update-deps -S --satisfied-skip-solve --update-all --all --update-specs --copy -m --mkdir --clobber -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes --download-only --show-channel-urls"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_list()
{
    local word_list="  -h --help --show-channel-urls --reverse -c --canonical -f --full-name --explicit --md5 -e --export -r --revisions --no-pip -n --name -p --prefix --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_package()
{
    local word_list="  -h --help -w --which -r --reset -u --untracked --pkg-name --pkg-version --pkg-build -n --name -p --prefix"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_remove()
{
    local word_list="  -h --help --dev -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --experimental --all --features --force-remove --force --no-pin --solver --experimental-solver -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_rename()
{
    local word_list="  -h --help --force -d --dry-run -n --name -p --prefix"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_run()
{
    local word_list="  -h --help -v --verbose --dev --debug-wrapper-scripts --cwd --no-capture-output --live-stream -n --name -p --prefix"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_search()
{
    local word_list="  -h --help --envs -i --info --subdir --platform -c --channel --use-local --override-channels --repodata-fn --experimental -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_update()
{
    local word_list="  -h --help --file -n --name -p --prefix -c --channel --use-local --override-channels --repodata-fn --experimental --strict-channel-priority --no-channel-priority --no-deps --only-deps --no-pin --solver --experimental-solver --force-reinstall --freeze-installed --no-update-deps --update-deps -S --satisfied-skip-solve --update-all --all --update-specs --copy --clobber -C --use-index-cache -k --insecure --offline -d --dry-run --json -q --quiet -v --verbose -y --yes --download-only --show-channel-urls"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_notices()
{
    local word_list="  -h --help -c --channel --use-local --override-channels --repodata-fn --experimental"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_repoquery()
{
    local cmd i subcommands
    local subcommands=" whoneeds depends search"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        whoneeds) _mamba_repoquery_whoneeds
            return
            ;;

        depends) _mamba_repoquery_depends
            return
            ;;

        search) _mamba_repoquery_search
            return
            ;;

    esac

    local word_list=" whoneeds depends search -h --help"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_repoquery_whoneeds()
{
    local word_list="  -p --platform --pretty -t --tree -h --help -c --channel --use-local --override-channels --repodata-fn --experimental -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_repoquery_depends()
{
    local word_list="  -p --platform --pretty -t --tree -h --help -c --channel --use-local --override-channels --repodata-fn --experimental -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_repoquery_search()
{
    local word_list="  -p --platform --pretty -h --help -c --channel --use-local --override-channels --repodata-fn --experimental -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_doctor()
{
    local cmd i subcommands
    local subcommands=" gram"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        gram) _mamba_doctor_gram
            return
            ;;

    esac

    local word_list=" gram "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_doctor_gram()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env()
{
    local cmd i subcommands
    local subcommands=" create export list remove update config"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        create) _mamba_env_create
            return
            ;;

        export) _mamba_env_export
            return
            ;;

        list) _mamba_env_list
            return
            ;;

        remove) _mamba_env_remove
            return
            ;;

        update) _mamba_env_update
            return
            ;;

        config) _mamba_env_config
            return
            ;;

    esac

    local word_list=" create export list remove update config -h --help"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_create()
{
    local word_list="  -h --help -f --file --force -d --dry-run --no-default-packages --solver --experimental-solver -n --name -p --prefix -C --use-index-cache -k --insecure --offline --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_export()
{
    local word_list="  -h --help -c --channel --override-channels -f --file --no-builds --ignore-channels --from-history -n --name -p --prefix --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_list()
{
    local word_list="  -h --help --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_remove()
{
    local word_list="  -h --help --solver --experimental-solver -n --name -p --prefix -d --dry-run --json -q --quiet -v --verbose -y --yes"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_update()
{
    local word_list="  -h --help -f --file --prune --solver --experimental-solver -n --name -p --prefix --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_config()
{
    local cmd i subcommands
    local subcommands=" vars"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        vars) _mamba_env_config_vars
            return
            ;;

    esac

    local word_list=" vars -h --help"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_config_vars()
{
    local cmd i subcommands
    local subcommands=" list set unset"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        list) _mamba_env_config_vars_list
            return
            ;;

        set) _mamba_env_config_vars_set
            return
            ;;

        unset) _mamba_env_config_vars_unset
            return
            ;;

    esac

    local word_list=" list set unset -h --help"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_config_vars_list()
{
    local word_list="  -h --help -n --name -p --prefix --json -v --verbose -q --quiet"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_config_vars_set()
{
    local word_list="  -h --help -n --name -p --prefix"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_mamba_env_config_vars_unset()
{
    local word_list="  -h --help -n --name -p --prefix"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _mamba mamba
