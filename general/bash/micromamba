# Auto-generated with h2o

_micromamba()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          shell) _micromamba_shell
            return
            ;;

          create) _micromamba_create
            return
            ;;

          install) _micromamba_install
            return
            ;;

          update) _micromamba_update
            return
            ;;

          repoquery) _micromamba_repoquery
            return
            ;;

          remove) _micromamba_remove
            return
            ;;

          list) _micromamba_list
            return
            ;;

          package) _micromamba_package
            return
            ;;

          clean) _micromamba_clean
            return
            ;;

          config) _micromamba_config
            return
            ;;

          info) _micromamba_info
            return
            ;;

          constructor) _micromamba_constructor
            return
            ;;

          env) _micromamba_env
            return
            ;;

          activate) _micromamba_activate
            return
            ;;

          run) _micromamba_run
            return
            ;;

          ps) _micromamba_ps
            return
            ;;

          auth) _micromamba_auth
            return
            ;;

          search) _micromamba_search
            return
            ;;

      *)
          word_list=" shell create install update repoquery remove list package clean config info constructor env activate run ps auth search -h --help --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_micromamba_shell ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          shell)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          reactivate) _micromamba_reactivate
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" reactivate -h --help -s --shell --stack -p -n --prefix --name --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_create ()
{
    local cur word_list
    word_list=" -h --help -c --channel --override-channels --channel-priority --channel-alias --strict-channel-priority --no-channel-priority -f --file --no-pin --pin --no-py-pin --py-pin --pyc --no-pyc --allow-uninstall --no-allow-uninstall --allow-downgrade --no-allow-downgrade --allow-softlinks --no-allow-softlinks --always-softlink --no-always-softlink --always-copy --no-always-copy --extra-safety-checks --no-extra-safety-checks --lock-timeout --shortcuts --no-shortcuts --safety-checks --verify-artifacts --platform --no-deps --only-deps --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name --ssl-verify --ssl-no-revoke --cacert-path --repodata-ttl --retry-clean-cache" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_install ()
{
    local cur word_list
    word_list=" -h --help -c --channel --override-channels --channel-priority --channel-alias --strict-channel-priority --no-channel-priority -f --file --no-pin --pin --no-py-pin --py-pin --pyc --no-pyc --allow-uninstall --no-allow-uninstall --allow-downgrade --no-allow-downgrade --allow-softlinks --no-allow-softlinks --always-softlink --no-always-softlink --always-copy --no-always-copy --extra-safety-checks --no-extra-safety-checks --lock-timeout --shortcuts --no-shortcuts --safety-checks --verify-artifacts --platform --no-deps --only-deps --freeze-installed --force-reinstall --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name --ssl-verify --ssl-no-revoke --cacert-path --repodata-ttl --retry-clean-cache" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_update ()
{
    local cur word_list
    word_list=" -h --help -c --channel --override-channels --channel-priority --channel-alias --strict-channel-priority --no-channel-priority -f --file --no-pin --pin --no-py-pin --py-pin --pyc --no-pyc --allow-uninstall --no-allow-uninstall --allow-downgrade --no-allow-downgrade --allow-softlinks --no-allow-softlinks --always-softlink --no-always-softlink --always-copy --no-always-copy --extra-safety-checks --no-extra-safety-checks --lock-timeout --shortcuts --no-shortcuts --safety-checks --verify-artifacts --platform --no-deps --only-deps --prune --no-prune -a --all --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name --ssl-verify --ssl-no-revoke --cacert-path --repodata-ttl --retry-clean-cache" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_repoquery ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          repoquery)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          search) _micromamba_search
            return
            ;;

          depends) _micromamba_depends
            return
            ;;

          whoneeds) _micromamba_whoneeds
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" search depends whoneeds -h --help -c --channel --override-channels --channel-priority --channel-alias --strict-channel-priority --no-channel-priority -t --tree --pretty --local --remote --platform --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name --ssl-verify --ssl-no-revoke --cacert-path --repodata-ttl --retry-clean-cache" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_remove ()
{
    local cur word_list
    word_list=" -h --help -a --all -f --force --prune --no-prune --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_list ()
{
    local cur word_list
    word_list=" -h --help --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_package ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_clean ()
{
    local cur word_list
    word_list=" -h --help -a --all -i --index-cache -p --packages -t --tarballs -l --locks --trash -f --force-pkgs-dirs --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_config ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          config)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          list) _micromamba_list
            return
            ;;

          sources) _micromamba_sources
            return
            ;;

          describe) _micromamba_describe
            return
            ;;

          prepend) _micromamba_prepend
            return
            ;;

          append) _micromamba_append
            return
            ;;

          remove-key) _micromamba_removekey
            return
            ;;

          remove) _micromamba_remove
            return
            ;;

          set) _micromamba_set
            return
            ;;

          get) _micromamba_get
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" list sources describe prepend append remove-key remove set get -h --help --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_list ()
{
    local cur word_list
    word_list=" -h --help -l --long-descriptions -g --groups -s --sources -a --all -d --descriptions --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_sources ()
{
    local cur word_list
    word_list=" -h --help --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_describe ()
{
    local cur word_list
    word_list=" -h --help -l --long-descriptions -g --groups" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_prepend ()
{
    local cur word_list
    word_list=" -h --help --system --env --file --env --system --file" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_append ()
{
    local cur word_list
    word_list=" -h --help --system --env --file --env --system --file" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_removekey ()
{
    local cur word_list
    word_list=" -h --help --system --env --file --env --system --file" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_remove ()
{
    local cur word_list
    word_list=" -h --help --system --env --file --env --system --file" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_set ()
{
    local cur word_list
    word_list=" -h --help --system --env --file --env --system --file" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_config_get ()
{
    local cur word_list
    word_list=" -h --help --system --env --file --env --system --file" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_info ()
{
    local cur word_list
    word_list=" -h --help --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_constructor ()
{
    local cur word_list
    word_list=" -h --help -p --prefix --extract-conda-pkgs --extract-tarball" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_env ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          env)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          list) _micromamba_list
            return
            ;;

          export) _micromamba_export
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" list export -h --help --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_env_list ()
{
    local cur word_list
    word_list=" -h --help --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_env_export ()
{
    local cur word_list
    word_list=" -h --help -e --explicit --no-md5 --md5 --no-build --build --from-history --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_activate ()
{
    local cur word_list
    word_list=" -h --help --stack" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_run ()
{
    local cur word_list
    word_list=" -h --help -a --attach --cwd -d --detach --clean-env -e --env --label -r --root-prefix -p --prefix -n --name" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_ps ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_auth ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          auth)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          login) _micromamba_login
            return
            ;;

          logout) _micromamba_logout
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" login logout -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_auth_login ()
{
    local cur word_list
    word_list=" -h --help -p --password -u --username -t --token --password-stdin --token-stdin" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_auth_logout ()
{
    local cur word_list
    word_list=" -h --help --all" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_micromamba_search ()
{
    local cur word_list
    word_list=" -h --help -c --channel --override-channels --channel-priority --channel-alias --strict-channel-priority --no-channel-priority -t --tree --pretty --local --remote --platform --rc-file --no-rc --no-env -v --verbose -q --quiet -y --yes --json --offline --dry-run --experimental -r --root-prefix -p --prefix -n --name --ssl-verify --ssl-no-revoke --cacert-path --repodata-ttl --retry-clean-cache" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _micromamba micromamba
