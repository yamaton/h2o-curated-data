# Auto-generated with h2o

_openssl()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          asn1parse) _openssl_asn1parse
            return
            ;;

          ca) _openssl_ca
            return
            ;;

          ciphers) _openssl_ciphers
            return
            ;;

          cms) _openssl_cms
            return
            ;;

          crl) _openssl_crl
            return
            ;;

          crl2pkcs7) _openssl_crl2pkcs7
            return
            ;;

          dgst) _openssl_dgst
            return
            ;;

          dhparam) _openssl_dhparam
            return
            ;;

          dsa) _openssl_dsa
            return
            ;;

          dsaparam) _openssl_dsaparam
            return
            ;;

          ec) _openssl_ec
            return
            ;;

          ecparam) _openssl_ecparam
            return
            ;;

          enc) _openssl_enc
            return
            ;;

          engine) _openssl_engine
            return
            ;;

          errstr) _openssl_errstr
            return
            ;;

          gendsa) _openssl_gendsa
            return
            ;;

          genpkey) _openssl_genpkey
            return
            ;;

          genrsa) _openssl_genrsa
            return
            ;;

          help) _openssl_help
            return
            ;;

          list) _openssl_list
            return
            ;;

          nseq) _openssl_nseq
            return
            ;;

          ocsp) _openssl_ocsp
            return
            ;;

          passwd) _openssl_passwd
            return
            ;;

          pkcs12) _openssl_pkcs12
            return
            ;;

          pkcs7) _openssl_pkcs7
            return
            ;;

          pkcs8) _openssl_pkcs8
            return
            ;;

          pkey) _openssl_pkey
            return
            ;;

          pkeyparam) _openssl_pkeyparam
            return
            ;;

          pkeyutl) _openssl_pkeyutl
            return
            ;;

          prime) _openssl_prime
            return
            ;;

          rand) _openssl_rand
            return
            ;;

          rehash) _openssl_rehash
            return
            ;;

          req) _openssl_req
            return
            ;;

          rsa) _openssl_rsa
            return
            ;;

          rsautl) _openssl_rsautl
            return
            ;;

          s_client) _openssl_sclient
            return
            ;;

          s_server) _openssl_sserver
            return
            ;;

          s_time) _openssl_stime
            return
            ;;

          sess_id) _openssl_sessid
            return
            ;;

          smime) _openssl_smime
            return
            ;;

          speed) _openssl_speed
            return
            ;;

          spkac) _openssl_spkac
            return
            ;;

          srp) _openssl_srp
            return
            ;;

          storeutl) _openssl_storeutl
            return
            ;;

          ts) _openssl_ts
            return
            ;;

          version) _openssl_version
            return
            ;;

          x509) _openssl_x509
            return
            ;;

          blake2b512) _openssl_blake2b512
            return
            ;;

          blake2s256) _openssl_blake2s256
            return
            ;;

          md4) _openssl_md4
            return
            ;;

          md5) _openssl_md5
            return
            ;;

          mdc2) _openssl_mdc2
            return
            ;;

          rmd160) _openssl_rmd160
            return
            ;;

          sha1) _openssl_sha1
            return
            ;;

          sha224) _openssl_sha224
            return
            ;;

          sha256) _openssl_sha256
            return
            ;;

          sha384) _openssl_sha384
            return
            ;;

          sha512) _openssl_sha512
            return
            ;;

          sha3-224) _openssl_sha3224
            return
            ;;

          sha3-256) _openssl_sha3256
            return
            ;;

          sha3-384) _openssl_sha3384
            return
            ;;

          sha3-512) _openssl_sha3512
            return
            ;;

          shake128) _openssl_shake128
            return
            ;;

          shake256) _openssl_shake256
            return
            ;;

          sm3) _openssl_sm3
            return
            ;;

          aes128) _openssl_aes128
            return
            ;;

          aes-128-cbc) _openssl_aes128cbc
            return
            ;;

          aes-128-cfb) _openssl_aes128cfb
            return
            ;;

          aes-128-ctr) _openssl_aes128ctr
            return
            ;;

          aes-128-ecb) _openssl_aes128ecb
            return
            ;;

          aes-128-ofb) _openssl_aes128ofb
            return
            ;;

          aes192) _openssl_aes192
            return
            ;;

          aes-192-cbc) _openssl_aes192cbc
            return
            ;;

          aes-192-cfb) _openssl_aes192cfb
            return
            ;;

          aes-192-ctr) _openssl_aes192ctr
            return
            ;;

          aes-192-ecb) _openssl_aes192ecb
            return
            ;;

          aes-192-ofb) _openssl_aes192ofb
            return
            ;;

          aes256) _openssl_aes256
            return
            ;;

          aes-256-cbc) _openssl_aes256cbc
            return
            ;;

          aes-256-cfb) _openssl_aes256cfb
            return
            ;;

          aes-256-ctr) _openssl_aes256ctr
            return
            ;;

          aes-256-ecb) _openssl_aes256ecb
            return
            ;;

          aes-256-ofb) _openssl_aes256ofb
            return
            ;;

          aria128) _openssl_aria128
            return
            ;;

          aria-128-cbc) _openssl_aria128cbc
            return
            ;;

          aria-128-cfb) _openssl_aria128cfb
            return
            ;;

          aria-128-ctr) _openssl_aria128ctr
            return
            ;;

          aria-128-ecb) _openssl_aria128ecb
            return
            ;;

          aria-128-ofb) _openssl_aria128ofb
            return
            ;;

          aria192) _openssl_aria192
            return
            ;;

          aria-192-cbc) _openssl_aria192cbc
            return
            ;;

          aria-192-cfb) _openssl_aria192cfb
            return
            ;;

          aria-192-ctr) _openssl_aria192ctr
            return
            ;;

          aria-192-ecb) _openssl_aria192ecb
            return
            ;;

          aria-192-ofb) _openssl_aria192ofb
            return
            ;;

          aria256) _openssl_aria256
            return
            ;;

          aria-256-cbc) _openssl_aria256cbc
            return
            ;;

          aria-256-cfb) _openssl_aria256cfb
            return
            ;;

          aria-256-ctr) _openssl_aria256ctr
            return
            ;;

          aria-256-ecb) _openssl_aria256ecb
            return
            ;;

          aria-256-ofb) _openssl_aria256ofb
            return
            ;;

          base64) _openssl_base64
            return
            ;;

          bf) _openssl_bf
            return
            ;;

          bf-cbc) _openssl_bfcbc
            return
            ;;

          bf-cfb) _openssl_bfcfb
            return
            ;;

          bf-ecb) _openssl_bfecb
            return
            ;;

          bf-ofb) _openssl_bfofb
            return
            ;;

          camellia128) _openssl_camellia128
            return
            ;;

          camellia-128-cbc) _openssl_camellia128cbc
            return
            ;;

          camellia-128-cfb) _openssl_camellia128cfb
            return
            ;;

          camellia-128-ctr) _openssl_camellia128ctr
            return
            ;;

          camellia-128-ecb) _openssl_camellia128ecb
            return
            ;;

          camellia-128-ofb) _openssl_camellia128ofb
            return
            ;;

          camellia192) _openssl_camellia192
            return
            ;;

          camellia-192-cbc) _openssl_camellia192cbc
            return
            ;;

          camellia-192-cfb) _openssl_camellia192cfb
            return
            ;;

          camellia-192-ctr) _openssl_camellia192ctr
            return
            ;;

          camellia-192-ecb) _openssl_camellia192ecb
            return
            ;;

          camellia-192-ofb) _openssl_camellia192ofb
            return
            ;;

          camellia256) _openssl_camellia256
            return
            ;;

          camellia-256-cbc) _openssl_camellia256cbc
            return
            ;;

          camellia-256-cfb) _openssl_camellia256cfb
            return
            ;;

          camellia-256-ctr) _openssl_camellia256ctr
            return
            ;;

          camellia-256-ecb) _openssl_camellia256ecb
            return
            ;;

          camellia-256-ofb) _openssl_camellia256ofb
            return
            ;;

          cast) _openssl_cast
            return
            ;;

          cast-cbc) _openssl_castcbc
            return
            ;;

          cast5-cbc) _openssl_cast5cbc
            return
            ;;

          cast5-cfb) _openssl_cast5cfb
            return
            ;;

          cast5-ecb) _openssl_cast5ecb
            return
            ;;

          cast5-ofb) _openssl_cast5ofb
            return
            ;;

          chacha20) _openssl_chacha20
            return
            ;;

          des) _openssl_des
            return
            ;;

          des-cbc) _openssl_descbc
            return
            ;;

          des-cfb) _openssl_descfb
            return
            ;;

          des-ecb) _openssl_desecb
            return
            ;;

          des-ede) _openssl_desede
            return
            ;;

          des-ede-cbc) _openssl_desedecbc
            return
            ;;

          des-ede-cfb) _openssl_desedecfb
            return
            ;;

          des-ede-ofb) _openssl_desedeofb
            return
            ;;

          des-ofb) _openssl_desofb
            return
            ;;

          des3) _openssl_des3
            return
            ;;

          desx) _openssl_desx
            return
            ;;

          des-ede3) _openssl_desede3
            return
            ;;

          des-ede3-cbc) _openssl_desede3cbc
            return
            ;;

          des-ede3-cfb) _openssl_desede3cfb
            return
            ;;

          des-ede3-ofb) _openssl_desede3ofb
            return
            ;;

          idea) _openssl_idea
            return
            ;;

          idea-cbc) _openssl_ideacbc
            return
            ;;

          idea-cfb) _openssl_ideacfb
            return
            ;;

          idea-ecb) _openssl_ideaecb
            return
            ;;

          idea-ofb) _openssl_ideaofb
            return
            ;;

          rc2) _openssl_rc2
            return
            ;;

          rc2-cbc) _openssl_rc2cbc
            return
            ;;

          rc2-cfb) _openssl_rc2cfb
            return
            ;;

          rc2-ecb) _openssl_rc2ecb
            return
            ;;

          rc2-ofb) _openssl_rc2ofb
            return
            ;;

          rc4) _openssl_rc4
            return
            ;;

          seed) _openssl_seed
            return
            ;;

          seed-cbc) _openssl_seedcbc
            return
            ;;

          seed-cfb) _openssl_seedcfb
            return
            ;;

          seed-ecb) _openssl_seedecb
            return
            ;;

          seed-ofb) _openssl_seedofb
            return
            ;;

          sm4) _openssl_sm4
            return
            ;;

          sm4-cbc) _openssl_sm4cbc
            return
            ;;

          sm4-cfb) _openssl_sm4cfb
            return
            ;;

          sm4-ctr) _openssl_sm4ctr
            return
            ;;

          sm4-ecb) _openssl_sm4ecb
            return
            ;;

          sm4-ofb) _openssl_sm4ofb
            return
            ;;

      *)
          word_list=" asn1parse ca ciphers cms crl crl2pkcs7 dgst dhparam dsa dsaparam ec ecparam enc engine errstr gendsa genpkey genrsa help list nseq ocsp passwd pkcs12 pkcs7 pkcs8 pkey pkeyparam pkeyutl prime rand rehash req rsa rsautl s_client s_server s_time sess_id smime speed spkac srp storeutl ts version x509 blake2b512 blake2s256 md4 md5 mdc2 rmd160 sha1 sha224 sha256 sha384 sha512 sha3-224 sha3-256 sha3-384 sha3-512 shake128 shake256 sm3 aes128 aes-128-cbc aes-128-cfb aes-128-ctr aes-128-ecb aes-128-ofb aes192 aes-192-cbc aes-192-cfb aes-192-ctr aes-192-ecb aes-192-ofb aes256 aes-256-cbc aes-256-cfb aes-256-ctr aes-256-ecb aes-256-ofb aria128 aria-128-cbc aria-128-cfb aria-128-ctr aria-128-ecb aria-128-ofb aria192 aria-192-cbc aria-192-cfb aria-192-ctr aria-192-ecb aria-192-ofb aria256 aria-256-cbc aria-256-cfb aria-256-ctr aria-256-ecb aria-256-ofb base64 bf bf-cbc bf-cfb bf-ecb bf-ofb camellia128 camellia-128-cbc camellia-128-cfb camellia-128-ctr camellia-128-ecb camellia-128-ofb camellia192 camellia-192-cbc camellia-192-cfb camellia-192-ctr camellia-192-ecb camellia-192-ofb camellia256 camellia-256-cbc camellia-256-cfb camellia-256-ctr camellia-256-ecb camellia-256-ofb cast cast-cbc cast5-cbc cast5-cfb cast5-ecb cast5-ofb chacha20 des des-cbc des-cfb des-ecb des-ede des-ede-cbc des-ede-cfb des-ede-ofb des-ofb des3 desx des-ede3 des-ede3-cbc des-ede3-cfb des-ede3-ofb idea idea-cbc idea-cfb idea-ecb idea-ofb rc2 rc2-cbc rc2-cfb rc2-ecb rc2-ofb rc4 seed seed-cbc seed-cfb seed-ecb seed-ofb sm4 sm4-cbc sm4-cfb sm4-ctr sm4-ecb sm4-ofb -help -- -rand -writerand -ssl3 -tls1 -tls1_1 -tls1_2 -tls1_3 -no_ssl3 -no_tls1 -no_tls1_1 -no_tls1_2 -no_tls1_3 -dtls -dtls1 -dtls1_2 -engine -provider -provider-path -propquery"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_openssl_asn1parse ()
{
    local cur word_list
    word_list=" -help -inform -in -out -i -noout -oid -dump -genstr -genconf -strictpem -item" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ca ()
{
    local cur word_list
    word_list=" -help -verbose -config -name -subj -utf8 -create_serial -rand_serial -multivalue-rdn -startdate -enddate -md -policy -keyfile -keyform -passin -key -cert -selfsign -in -out -outdir -sigopt -notext -batch -preserveDN -noemailDN -gencrl -msie_hack -infiles -ss_cert -spkac -revoke -valid -extensions -extfile -status -updatedb -crlexts -crl_reason -crl_hold -crl_compromise -crl_CA_compromise -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ciphers ()
{
    local cur word_list
    word_list=" -help -v -V -s -tls1 -tls1_1 -tls1_2 -tls1_3 -stdname -psk -srp -convert -ciphersuites" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_cms ()
{
    local cur word_list
    word_list=" -help -inform -outform -in -out -encrypt -decrypt -sign -sign_receipt -resign -verify -verify_retcode -verify_receipt -cmsout -data_out -data_create -digest_verify -digest_create -compress -uncompress -EncryptedData_decrypt -EncryptedData_encrypt -debug_decrypt -text -asciicrlf -nointern -noverify -nocerts -noattr -nodetach -nosmimecap -binary -keyid -nosigs -no_content_verify -no_attr_verify -stream -indef -noindef -crlfeol -noout -receipt_request_print -receipt_request_all -receipt_request_first -rctform -certfile -CAfile -CApath -no-CAfile -no-CApath -content -print -secretkey -secretkeyid -pwri_password -econtent_type -passin -to -from -subject -signer -recip -certsout -md -inkey -keyform -keyopt -receipt_request_from -receipt_request_to -rand -writerand -policy -purpose -verify_name -verify_depth -auth_level -attime -verify_hostname -verify_email -verify_ip -ignore_critical -issuer_checks -crl_check -crl_check_all -policy_check -explicit_policy -inhibit_any -inhibit_map -x509_strict -extended_crl -use_deltas -policy_print -check_ss_sig -trusted_first -suiteB_128_only -suiteB_128 -suiteB_192 -partial_chain -no_alt_chains -no_check_time -allow_proxy_certs -aes128-wrap -aes192-wrap -aes256-wrap -des3-wrap -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_crl ()
{
    local cur word_list
    word_list=" -help -inform -in -outform -out -keyform -key -issuer -lastupdate -nextupdate -noout -fingerprint -crlnumber -badsig -gendelta -CApath -CAfile -no-CAfile -no-CApath -verify -text -hash -nameopt -hash_old" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_crl2pkcs7 ()
{
    local cur word_list
    word_list=" -help -inform -outform -in -out -nocrl -certfile" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_dgst ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_dhparam ()
{
    local cur word_list
    word_list=" -help -in -inform -outform -out -check -text -noout -rand -writerand -C -2 -5 -dsaparam -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_dsa ()
{
    local cur word_list
    word_list=" -help -inform -outform -in -out -noout -text -modulus -pubin -pubout -passin -passout -pvk-strong -pvk-weak -pvk-none -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_dsaparam ()
{
    local cur word_list
    word_list=" -help -inform -in -outform -out -text -C -noout -genkey -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ec ()
{
    local cur word_list
    word_list=" -help -in -inform -out -outform -noout -text -param_out -pubin -pubout -no_public -check -passin -passout -param_enc -conv_form -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ecparam ()
{
    local cur word_list
    word_list=" -help -inform -outform -in -out -text -C -check -list_curves -no_seed -noout -name -conv_form -param_enc -genkey -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_enc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_engine ()
{
    local cur word_list
    word_list=" -help -v -vv -vvv -vvvv -c -t -tt -pre -post" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_errstr ()
{
    local cur word_list
    word_list=" -help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_gendsa ()
{
    local cur word_list
    word_list=" -help -out -passout -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_genpkey ()
{
    local cur word_list
    word_list=" -help -out -outform -pass -paramfile -algorithm -pkeyopt -genparam -text -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_genrsa ()
{
    local cur word_list
    word_list=" -help -3 -F4 -f4 -out -rand -writerand -passout -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_help ()
{
    local cur word_list
    word_list=" -help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_list ()
{
    local cur word_list
    word_list=" -help -1 -commands -digest-commands -digest-algorithms -cipher-commands -cipher-algorithms -public-key-algorithms -public-key-methods -disabled -missing-help -options" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_nseq ()
{
    local cur word_list
    word_list=" -help -toseq -in -out" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ocsp ()
{
    local cur word_list
    word_list=" -help -out -url -host -ignore_err -noverify -nonce -no_nonce -resp_no_certs -resp_key_id -no_certs -no_signature_verify -no_cert_verify -no_chain -no_cert_checks -no_explicit -trust_other -no_intern -badsig -text -req_text -resp_text -reqin -respin -signer -VAfile -sign_other -verify_other -CAfile -CApath -no-CAfile -no-CApath -validity_period -signkey -reqout -respout -path -issuer -cert -serial -index -CA -rsigner -rkey -rother -rmd -rsigopt -header -policy -purpose -verify_name -verify_depth -auth_level -attime -verify_hostname -verify_email -verify_ip -ignore_critical -issuer_checks -crl_check -crl_check_all -policy_check -explicit_policy -inhibit_any -inhibit_map -x509_strict -extended_crl -use_deltas -policy_print -check_ss_sig -trusted_first -suiteB_128_only -suiteB_128 -suiteB_192 -partial_chain -no_alt_chains -no_check_time -allow_proxy_certs" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_passwd ()
{
    local cur word_list
    word_list=" -help -in -noverify -quiet -table -reverse -salt -stdin -6 -5 -apr1 -1 -aixmd5 -crypt -rand -writerand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_pkcs12 ()
{
    local cur word_list
    word_list=" -help -nokeys -keyex -keysig -nocerts -clcerts -cacerts -noout -info -chain -twopass -nomacver -descert -certpbe -export -noiter -maciter -nomaciter -nomac -LMK -nodes -macalg -keypbe -rand -writerand -inkey -certfile -name -CSP -caname -in -out -passin -passout -password -CApath -CAfile -no-CAfile -no-CApath -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_pkcs7 ()
{
    local cur word_list
    word_list=" -help -inform -in -outform -out -noout -text -print -print_certs -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_pkcs8 ()
{
    local cur word_list
    word_list=" -help -inform -outform -in -out -topk8 -noiter -nocrypt -rand -writerand -v2 -v1 -v2prf -passin -passout -traditional -engine -scrypt -scrypt_N -scrypt_r -scrypt_p" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_pkey ()
{
    local cur word_list
    word_list=" -help -inform -outform -passin -passout -in -out -pubin -pubout -text_pub -text -noout -traditional -engine -check -pubcheck" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_pkeyparam ()
{
    local cur word_list
    word_list=" -help -in -out -text -noout -engine -check" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_pkeyutl ()
{
    local cur word_list
    word_list=" -help -in -out -pubin -certin -asn1parse -hexdump -sign -verify -verifyrecover -rev -encrypt -decrypt -derive -kdf -sigfile -inkey -peerkey -passin -peerform -keyform -pkeyopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_prime ()
{
    local cur word_list
    word_list=" -help -hex -generate -safe" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rand ()
{
    local cur word_list
    word_list=" -help -out -rand -writerand -base64 -hex -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rehash ()
{
    local cur word_list
    word_list=" -help -h -compat -old -n -v" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_req ()
{
    local cur word_list
    word_list=" -help -inform -outform -in -out -key -keyform -pubkey -new -config -keyout -passin -passout -rand -writerand -newkey -pkeyopt -sigopt -batch -newhdr -modulus -verify -nodes -noout -verbose -utf8 -nameopt -reqopt -text -x509 -subj -subject -multivalue-rdn -set_serial -addext -extensions -reqexts -precert -engine -keygen_engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rsa ()
{
    local cur word_list
    word_list=" -help -inform -outform -in -out -pubin -pubout -passout -passin -RSAPublicKey_in -RSAPublicKey_out -noout -text -modulus -check -pvk-strong -pvk-weak -pvk-none -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rsautl ()
{
    local cur word_list
    word_list=" -help -in -out -inkey -keyform -pubin -certin -ssl -raw -pkcs -oaep -sign -verify -asn1parse -hexdump -x931 -rev -encrypt -decrypt -passin -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sclient ()
{
    local cur word_list
    word_list=" -help -host -connect -bind -proxy -unix -4 -6 -cert -certform -nameopt -key -keyform -pass -CApath -CAfile -no-CAfile -no-CApath -requestCAfile -dane_tlsa_domain -dane_tlsa_rrdata -dane_ee_no_namechecks -reconnect -showcerts -debug -msg -msgfile -nbio_test -state -crlf -quiet -ign_eof -no_ign_eof -starttls -xmpphost -rand -writerand -sess_out -sess_in -use_srtp -keymatexport -fallback_scsv -name -CRL -crl_download -CRLform -verify_return_error -verify_quiet -brief -prexit -security_debug -security_debug_verbose -cert_chain -chainCApath -verifyCApath -build_chain -chainCAfile -verifyCAfile -nocommands -servername -noservername -tlsextdebug -status -serverinfo -alpn -async -ssl_config -no_ssl3 -no_tls1 -no_tls1_1 -no_tls1_2 -no_tls1_3 -bugs -no_comp -comp -no_ticket -serverpref -legacy_renegotiation -no_renegotiation -legacy_server_connect -no_resumption_on_reneg -no_legacy_server_connect -allow_no_dhe_kex -prioritize_chacha -strict -sigalgs -client_sigalgs -groups -curves -named_curve -cipher -ciphersuites -min_protocol -max_protocol -record_padding -debug_broken_protocol -no_middlebox -policy -purpose -verify_name -verify_depth -auth_level -attime -verify_hostname -verify_email -verify_ip -ignore_critical -issuer_checks -crl_check -crl_check_all -policy_check -explicit_policy -inhibit_any -inhibit_map -x509_strict -extended_crl -use_deltas -policy_print -check_ss_sig -trusted_first -suiteB_128_only -suiteB_128 -suiteB_192 -partial_chain -no_alt_chains -no_check_time -allow_proxy_certs -xkey -xcert -xchain -xchain_build -xcertform -xkeyform -tls1 -tls1_1 -tls1_2 -tls1_3 -dtls -timeout -dtls1 -dtls1_2 -nbio -psk_identity -psk -psk_session -srpuser -srppass -srp_lateuser -srp_moregroups -nextprotoneg -engine -ssl_client_engine -ct -noct -ctlogfile -keylogfile -early_data -enable_pha" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sserver ()
{
    local cur word_list
    word_list=" -help -accept -unix -4 -6 -unlink -context -verify -Verify -cert -nameopt -serverinfo -certform -key -keyform -pass -dcert -dhparam -dcertform -dkey -dkeyform -dpass -nbio_test -crlf -debug -msg -msgfile -state -CAfile -CApath -no-CAfile -no-CApath -nocert -quiet -no_resume_ephemeral -www -WWW -servername -servername_fatal -cert2 -key2 -tlsextdebug -HTTP -id_prefix -rand -writerand -keymatexport -CRL -crl_download -cert_chain -dcert_chain -chainCApath -verifyCApath -no_cache -ext_cache -CRLform -verify_return_error -verify_quiet -build_chain -chainCAfile -verifyCAfile -ign_eof -no_ign_eof -status -status_verbose -status_timeout -status_url -status_file -security_debug -security_debug_verbose -brief -rev -async -ssl_config -no_ssl3 -no_tls1 -no_tls1_1 -no_tls1_2 -no_tls1_3 -bugs -no_comp -comp -no_ticket -serverpref -legacy_renegotiation -no_renegotiation -legacy_server_connect -no_resumption_on_reneg -no_legacy_server_connect -allow_no_dhe_kex -prioritize_chacha -strict -sigalgs -client_sigalgs -groups -curves -named_curve -cipher -ciphersuites -min_protocol -max_protocol -record_padding -debug_broken_protocol -no_middlebox -policy -purpose -verify_name -verify_depth -auth_level -attime -verify_hostname -verify_email -verify_ip -ignore_critical -issuer_checks -crl_check -crl_check_all -policy_check -explicit_policy -inhibit_any -inhibit_map -x509_strict -extended_crl -use_deltas -policy_print -check_ss_sig -trusted_first -suiteB_128_only -suiteB_128 -suiteB_192 -partial_chain -no_alt_chains -no_check_time -allow_proxy_certs -xkey -xcert -xchain -xchain_build -xcertform -xkeyform -nbio -psk_identity -psk_hint -psk -psk_session -srpvfile -srpuserseed -tls1 -tls1_1 -tls1_2 -tls1_3 -dtls -timeout -listen -stateless -dtls1 -dtls1_2 -no_dhe -nextprotoneg -use_srtp -alpn -engine -keylogfile -max_early_data -recv_max_early_data -early_data -num_tickets -anti_replay -no_anti_replay" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_stime ()
{
    local cur word_list
    word_list=" -help -connect -cipher -ciphersuites -cert -nameopt -key -CApath -cafile -CAfile -no-CAfile -no-CApath -new -reuse -bugs -www" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sessid ()
{
    local cur word_list
    word_list=" -help -inform -outform -in -out -text -cert -noout -context" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_smime ()
{
    local cur word_list
    word_list=" -help -encrypt -decrypt -sign -verify -pk7out -nointern -nosigs -noverify -nocerts -nodetach -noattr -binary -certfile -signer -recip -in -inform -inkey -keyform -out -outform -content -to -from -subject -text -CApath -CAfile -no-CAfile -no-CApath -resign -nochain -nosmimecap -stream -indef -noindef -crlfeol -rand -writerand -passin -md -policy -purpose -verify_name -verify_depth -auth_level -attime -verify_hostname -verify_email -verify_ip -ignore_critical -issuer_checks -crl_check -crl_check_all -policy_check -explicit_policy -inhibit_any -inhibit_map -x509_strict -extended_crl -use_deltas -policy_print -check_ss_sig -trusted_first -suiteB_128_only -suiteB_128 -suiteB_192 -partial_chain -no_alt_chains -no_check_time -allow_proxy_certs -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_speed ()
{
    local cur word_list
    word_list=" -help -evp -decrypt -aead -mb -mr -rand -writerand -engine -elapsed" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_spkac ()
{
    local cur word_list
    word_list=" -help -in -out -key -keyform -passin -challenge -spkac -noout -pubkey -verify -spksect -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_srp ()
{
    local cur word_list
    word_list=" -help -verbose -config -name -srpvfile -add -modify -delete -list -gn -userinfo -passin -passout -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_storeutl ()
{
    local cur word_list
    word_list=" -help -out -passin -text -noout -certs -keys -crls -subject -issuer -serial -fingerprint -alias -engine -r" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ts ()
{
    local cur word_list
    word_list=" -help -config -section -query -data -digest -rand -writerand -tspolicy -no_nonce -cert -in -token_in -out -token_out -text -reply -queryfile -passin -inkey -signer -chain -verify -CApath -CAfile -untrusted -engine -policy -purpose -verify_name -verify_depth -auth_level -attime -verify_hostname -verify_email -verify_ip -ignore_critical -issuer_checks -crl_check -crl_check_all -policy_check -explicit_policy -inhibit_any -inhibit_map -x509_strict -extended_crl -use_deltas -policy_print -check_ss_sig -trusted_first -suiteB_128_only -suiteB_128 -suiteB_192 -partial_chain -no_alt_chains -no_check_time -allow_proxy_certs" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_version ()
{
    local cur word_list
    word_list=" -help -a -b -d -e -f -o -p -r -v" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_x509 ()
{
    local cur word_list
    word_list=" -help -inform -in -outform -out -keyform -passin -serial -subject_hash -issuer_hash -hash -subject -issuer -email -startdate -enddate -purpose -dates -modulus -pubkey -fingerprint -alias -noout -nocert -ocspid -ocsp_uri -trustout -clrtrust -clrext -addtrust -addreject -setalias -days -checkend -signkey -x509toreq -req -CA -CAkey -CAcreateserial -CAserial -set_serial -text -ext -C -extfile -rand -writerand -extensions -nameopt -certopt -checkhost -checkemail -checkip -CAform -CAkeyform -sigopt -force_pubkey -next_serial -clrreject -badsig -subject_hash_old -issuer_hash_old -engine -preserve_dates" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_blake2b512 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_blake2s256 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_md4 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_md5 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_mdc2 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rmd160 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha1 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha224 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha256 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha384 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha512 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha3224 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha3256 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha3384 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sha3512 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_shake128 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_shake256 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sm3 ()
{
    local cur word_list
    word_list=" -help -list -c -r -out -passin -sign -verify -prverify -signature -keyform -hex -binary -d -debug -fips-fingerprint -hmac -mac -sigopt -macopt -rand -writerand -engine -engine_impl" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes128 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes128cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes128cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes128ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes128ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes128ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes192 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes192cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes192cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes192ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes192ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes192ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes256 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes256cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes256cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes256ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes256ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aes256ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria128 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria128cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria128cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria128ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria128ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria128ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria192 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria192cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria192cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria192ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria192ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria192ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria256 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria256cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria256cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria256ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria256ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_aria256ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_base64 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_bf ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_bfcbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_bfcfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_bfecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_bfofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia128 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia128cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia128cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia128ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia128ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia128ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia192 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia192cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia192cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia192ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia192ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia192ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia256 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia256cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia256cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia256ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia256ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_camellia256ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_cast ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_castcbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_cast5cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_cast5cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_cast5ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_cast5ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_chacha20 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_des ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_descbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_descfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desede ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desedecbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desedecfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desedeofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_des3 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desx ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desede3 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desede3cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desede3cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_desede3ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_idea ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ideacbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ideacfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ideaecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_ideaofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rc2 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rc2cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rc2cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rc2ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rc2ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_rc4 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_seed ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_seedcbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_seedcfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_seedecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_seedofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sm4 ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sm4cbc ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sm4cfb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sm4ctr ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sm4ecb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_openssl_sm4ofb ()
{
    local cur word_list
    word_list=" -help -list -ciphers -in -out -pass -e -d -p -P -v -nopad -salt -nosalt -debug -a -base64 -A -bufsize -k -kfile -K -S -iv -md -pbkdf2 -none -rand -writerand -engine" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _openssl openssl
