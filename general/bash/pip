# Auto-generated with h2o

_pip()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          install) _pip_install
            return
            ;;

          download) _pip_download
            return
            ;;

          uninstall) _pip_uninstall
            return
            ;;

          freeze) _pip_freeze
            return
            ;;

          inspect) _pip_inspect
            return
            ;;

          list) _pip_list
            return
            ;;

          show) _pip_show
            return
            ;;

          check) _pip_check
            return
            ;;

          config) _pip_config
            return
            ;;

          search) _pip_search
            return
            ;;

          cache) _pip_cache
            return
            ;;

          index) _pip_index
            return
            ;;

          wheel) _pip_wheel
            return
            ;;

          hash) _pip_hash
            return
            ;;

          completion) _pip_completion
            return
            ;;

          debug) _pip_debug
            return
            ;;

          help) _pip_help
            return
            ;;

      *)
          word_list=" install download uninstall freeze inspect list show check config search cache index wheel hash completion debug help -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_pip_install ()
{
    local cur word_list
    word_list=" -r --requirement -c --constraint --no-deps --pre -e --editable --dry-run -t --target --platform --python-version --implementation --abi --user --root --prefix --src -U --upgrade --upgrade-strategy --force-reinstall -I --ignore-installed --ignore-requires-python --no-build-isolation --use-pep517 --check-build-dependencies --config-settings --install-option --global-option --compile --no-compile --no-warn-script-location --no-warn-conflicts --no-binary --only-binary --prefer-binary --require-hashes --progress-bar --root-user-action --report --no-clean -i --index-url --extra-index-url --no-index -f --find-links -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_download ()
{
    local cur word_list
    word_list=" -c --constraint -r --requirement --no-deps --global-option --no-binary --only-binary --prefer-binary --src --pre --require-hashes --progress-bar --no-build-isolation --use-pep517 --check-build-dependencies --ignore-requires-python -d --dest --platform --python-version --implementation --abi --no-clean -i --index-url --extra-index-url --no-index -f --find-links -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_uninstall ()
{
    local cur word_list
    word_list=" - - -r --requirement -y --yes --root-user-action -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_freeze ()
{
    local cur word_list
    local i=1 subcommand_index

    # take the last word that's NOT starting with -
    while [[ ( $i < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          freeze)
            subcommand_index=$i
            break
            ;;
        esac
        (( i++ ))
    done

    while [[ ( $subcommand_index < $COMP_CWORD ) ]]; do
        local s="${COMP_WORDS[subcommand_index}"
        case "$s" in
          packages) _pip_packages
            return
            ;;

          *)  ;; 
        esac
        (( subcommand_index++ ))
    done

    word_list=" packages -r --requirement -l --local --user --path --all --exclude-editable --exclude -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_freeze_packages ()
{
    local cur word_list
    word_list=" -r --requirement -l --local --user --path --all --exclude-editable --exclude -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_inspect ()
{
    local cur word_list
    word_list=" --local --user --path -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_list ()
{
    local cur word_list
    word_list=" -o --outdated -u --uptodate -e --editable -l --local --user --path --pre --format --not-required --exclude-editable --include-editable --exclude -i --index-url --extra-index-url --no-index -f --find-links -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_show ()
{
    local cur word_list
    word_list=" -f --files -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_check ()
{
    local cur word_list
    word_list=" -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_config ()
{
    local cur word_list
    word_list=" --editor --global --user --site -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_search ()
{
    local cur word_list
    word_list=" -i --index -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_cache ()
{
    local cur word_list
    word_list=" --format -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_index ()
{
    local cur word_list
    word_list=" --platform --python-version --implementation --abi --ignore-requires-python --pre --no-binary --only-binary -i --index-url --extra-index-url --no-index -f --find-links -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_wheel ()
{
    local cur word_list
    word_list=" -w --wheel-dir --no-binary --only-binary --prefer-binary --no-build-isolation --use-pep517 --check-build-dependencies -c --constraint -e --editable -r --requirement --src --ignore-requires-python --no-deps --progress-bar --no-verify --config-settings --build-option --global-option --pre --require-hashes --no-clean -i --index-url --extra-index-url --no-index -f --find-links -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_hash ()
{
    local cur word_list
    word_list=" -a --algorithm -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_completion ()
{
    local cur word_list
    word_list=" -b --bash -z --zsh -f --fish -p --powershell -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_debug ()
{
    local cur word_list
    word_list=" --platform --python-version --implementation --abi -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pip_help ()
{
    local cur word_list
    word_list=" -h --help --debug --isolated --require-virtualenv --python -v --verbose -V --version -q --quiet --log --no-input --proxy --retries --timeout --exists-action --trusted-host --cert --client-cert --cache-dir --no-cache-dir --disable-pip-version-check --no-color --no-python-version-warning --use-feature --use-deprecated" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _pip pip
