# Auto-generated with h2o

_pipx()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          install) _pipx_install
            return
            ;;

          inject) _pipx_inject
            return
            ;;

          upgrade) _pipx_upgrade
            return
            ;;

          upgrade-all) _pipx_upgradeall
            return
            ;;

          uninstall) _pipx_uninstall
            return
            ;;

          uninstall-all) _pipx_uninstallall
            return
            ;;

          reinstall) _pipx_reinstall
            return
            ;;

          reinstall-all) _pipx_reinstallall
            return
            ;;

          list) _pipx_list
            return
            ;;

          run) _pipx_run
            return
            ;;

          runpip) _pipx_runpip
            return
            ;;

          ensurepath) _pipx_ensurepath
            return
            ;;

          environment) _pipx_environment
            return
            ;;

          completions) _pipx_completions
            return
            ;;

      *)
          word_list=" install inject upgrade upgrade-all uninstall uninstall-all reinstall reinstall-all list run runpip ensurepath environment completions -h --help --version"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_pipx_install ()
{
    local cur word_list
    word_list=" -h --help --include-deps --verbose --force -f --suffix --python --system-site-packages --index-url -i --editable -e --pip-args" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_inject ()
{
    local cur word_list
    word_list=" -h --help --include-apps --include-deps --system-site-packages --index-url -i --editable -e --pip-args --force -f" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_upgrade ()
{
    local cur word_list
    word_list=" -h --help --include-injected --force -f --system-site-packages --index-url -i --editable -e --pip-args" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_upgradeall ()
{
    local cur word_list
    word_list=" -h --help --include-injected --skip --force -f" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_uninstall ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_uninstallall ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_reinstall ()
{
    local cur word_list
    word_list=" -h --help --python" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_reinstallall ()
{
    local cur word_list
    word_list=" -h --help --python --skip" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_list ()
{
    local cur word_list
    word_list=" -h --help --include-injected --json --short" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_run ()
{
    local cur word_list
    word_list=" -h --help --no-cache --pypackages --spec --verbose --python --system-site-packages --index-url -i --editable -e --pip-args" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_runpip ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_ensurepath ()
{
    local cur word_list
    word_list=" -h --help --force -f" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_environment ()
{
    local cur word_list
    word_list=" -h --help --value -v" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pipx_completions ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _pipx pipx
