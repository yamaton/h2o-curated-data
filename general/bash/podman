# Auto-generated with h2o

_podman()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          attach) _podman_attach
            return
            ;;

          auto-update) _podman_auto-update
            return
            ;;

          build) _podman_build
            return
            ;;

          commit) _podman_commit
            return
            ;;

          container) _podman_container
            return
            ;;

          cp) _podman_cp
            return
            ;;

          create) _podman_create
            return
            ;;

          diff) _podman_diff
            return
            ;;

          events) _podman_events
            return
            ;;

          exec) _podman_exec
            return
            ;;

          export) _podman_export
            return
            ;;

          history) _podman_history
            return
            ;;

          image) _podman_image
            return
            ;;

          images) _podman_images
            return
            ;;

          import) _podman_import
            return
            ;;

          info) _podman_info
            return
            ;;

          init) _podman_init
            return
            ;;

          inspect) _podman_inspect
            return
            ;;

          kill) _podman_kill
            return
            ;;

          load) _podman_load
            return
            ;;

          login) _podman_login
            return
            ;;

          logout) _podman_logout
            return
            ;;

          logs) _podman_logs
            return
            ;;

          machine) _podman_machine
            return
            ;;

          manifest) _podman_manifest
            return
            ;;

          mount) _podman_mount
            return
            ;;

          network) _podman_network
            return
            ;;

          pause) _podman_pause
            return
            ;;

          pod) _podman_pod
            return
            ;;

          port) _podman_port
            return
            ;;

          ps) _podman_ps
            return
            ;;

          pull) _podman_pull
            return
            ;;

          push) _podman_push
            return
            ;;

          restart) _podman_restart
            return
            ;;

          rm) _podman_rm
            return
            ;;

          rmi) _podman_rmi
            return
            ;;

          run) _podman_run
            return
            ;;

          save) _podman_save
            return
            ;;

          search) _podman_search
            return
            ;;

          secret) _podman_secret
            return
            ;;

          start) _podman_start
            return
            ;;

          stats) _podman_stats
            return
            ;;

          stop) _podman_stop
            return
            ;;

          system) _podman_system
            return
            ;;

          tag) _podman_tag
            return
            ;;

          top) _podman_top
            return
            ;;

          unmount) _podman_unmount
            return
            ;;

          unpause) _podman_unpause
            return
            ;;

          unshare) _podman_unshare
            return
            ;;

          untag) _podman_untag
            return
            ;;

          volume) _podman_volume
            return
            ;;

          wait) _podman_wait
            return
            ;;

      *)
          word_list=" attach auto-update build commit container cp create diff events exec export history image images import info init inspect kill load login logout logs machine manifest mount network pause pod port ps pull push restart rm rmi run save search secret start stats stop system tag top unmount unpause unshare untag volume wait --cgroup-manager --cni-config-dir --conmon -c --connection --events-backend --help --hooks-dir --identity --log-level --namespace --network-cmd-path -r --remote --root --runroot --runtime --runtime-flag --storage-driver --storage-opt --syslog --tmpdir --url -v --version" 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_podman_attach ()
{
    local cur word_list
    word_list=" --detach-keys -l --latest --no-stdin --sig-proxy" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_auto-update ()
{
    local cur word_list
    word_list=" --authfile --dry-run --format" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_build ()
{
    local cur word_list
    word_list=" --add-host --annotation --arch --authfile --build-arg --cache-from --cap-add --cap-drop --cert-dir --cgroup-parent --cni-plugin-path --compress --cpu-period --cpu-quota -c --cpu-shares --cpuset-cpus --cpuset-mems --creds --decryption-key --device -D --disable-compression --disable-content-trust --dns-option --dns-search -f --file --force-rm --format --from --http-proxy --ignorefile --iidfile --ipc --isolation --jobs --label --layers --logfile --manifest -m --memory --memory-swap --network --no-cache --os --pid --platform --pull --pull-always --pull-never -q --quiet --rm --secret --security-opt --shm-size --sign-by --squash --squash-all --stdin -t --tag --target --timestamp --tls-verify --ulimit --userns --userns-gid-map --userns-gid-map-group --userns-uid-map --userns-uid-map-user --uts --variant -v --volume" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_commit ()
{
    local cur word_list
    word_list=" -a --author -c --change -f --format --iidfile --include-volumes -m --message -p --pause -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_cp ()
{
    local cur word_list
    word_list=" -a --archive" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_create ()
{
    local cur word_list
    word_list=" --add-host --annotation --arch -a --attach --authfile --blkio-weight --blkio-weight-device --cap-add --cap-drop --cgroup-conf --cgroup-parent --cgroupns --cgroups --cidfile --conmon-pidfile --cpu-period --cpu-quota --cpu-rt-period --cpu-rt-runtime --cpu-shares --cpus --cpuset-cpus --cpuset-mems --device --device-cgroup-rule --device-read-bps --device-read-iops --device-write-bps --device-write-iops --disable-content-trust --dns --dns-opt --dns-search --entrypoint -e --env --env-file --env-host --expose --gidmap --group-add --health-cmd --health-interval --health-retries --health-start-period --health-timeout -h --hostname --http-proxy --image-volume --init --init-path -i --interactive --ip --ipc --kernel-memory -l --label --label-file --log-driver --log-opt --mac-address -m --memory --memory-reservation --memory-swap --memory-swappiness --mount --name --network --network-alias --no-healthcheck --no-hosts --oom-kill-disable --oom-score-adj --os --pid --pidfile --pids-limit --platform --pod --pod-id-file --privileged -p --publish -P --publish-all --pull -q --quiet --read-only --read-only-tmpfs --replace --requires --restart --rm --rootfs --sdnotify --seccomp-policy --secret --security-opt --shm-size --stop-signal --stop-timeout --subgidname --subuidname --sysctl --systemd --timeout --tmpfs -t --tty --tz --uidmap --ulimit --umask -u --user --userns --uts --variant -v --volume --volumes-from -w --workdir" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_diff ()
{
    local cur word_list
    word_list=" --format -l --latest" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_events ()
{
    local cur word_list
    word_list=" --filter --format --since --until" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_exec ()
{
    local cur word_list
    word_list=" -d --detach --detach-keys -e --env --env-file -i --interactive -l --latest --preserve-fds --privileged -t --tty -u --user -w --workdir" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_export ()
{
    local cur word_list
    word_list=" -o --output" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_history ()
{
    local cur word_list
    word_list=" --format -H --human --no-trunc --notruncate -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_images ()
{
    local cur word_list
    word_list=" -a --all --digests -f --filter --format --history --no-trunc -n --noheading -q --quiet --sort" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_import ()
{
    local cur word_list
    word_list=" -c --change -m --message -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_info ()
{
    local cur word_list
    word_list=" -D --debug -f --format" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_init ()
{
    local cur word_list
    word_list=" -a --all -l --latest" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_inspect ()
{
    local cur word_list
    word_list=" -f --format -l --latest -s --size -t --type" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_kill ()
{
    local cur word_list
    word_list=" -a --all --cidfile -l --latest -s --signal" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_load ()
{
    local cur word_list
    word_list=" -i --input -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_login ()
{
    local cur word_list
    word_list=" --authfile --cert-dir --get-login -p --password --password-stdin --tls-verify -u --username -v --verbose" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_logout ()
{
    local cur word_list
    word_list=" -a --all --authfile" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_logs ()
{
    local cur word_list
    word_list=" -f --follow -l --latest -n --names --since --tail -t --timestamps --until" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_mount ()
{
    local cur word_list
    word_list=" -a --all --format -l --latest --notruncate" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_pause ()
{
    local cur word_list
    word_list=" -a --all" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_port ()
{
    local cur word_list
    word_list=" -a --all -l --latest" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_ps ()
{
    local cur word_list
    word_list=" -a --all --external -f --filter --format -n --last -l --latest --no-trunc --noheading --ns -p --pod -q --quiet -s --size --sort --sync -w --watch" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_pull ()
{
    local cur word_list
    word_list=" --all-tags --arch --authfile --cert-dir --creds --disable-content-trust --os --platform -q --quiet --tls-verify --variant" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_push ()
{
    local cur word_list
    word_list=" --authfile --cert-dir --compress --creds --digestfile --disable-content-trust -f --format -q --quiet --remove-signatures --sign-by --tls-verify" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_restart ()
{
    local cur word_list
    word_list=" -a --all -l --latest --running -t --time" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_rm ()
{
    local cur word_list
    word_list=" -a --all --cidfile -f --force -i --ignore -l --latest -v --volumes" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_rmi ()
{
    local cur word_list
    word_list=" -a --all -f --force" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_run ()
{
    local cur word_list
    word_list=" --add-host --annotation --arch -a --attach --authfile --blkio-weight --blkio-weight-device --cap-add --cap-drop --cgroup-conf --cgroup-parent --cgroupns --cgroups --cidfile --conmon-pidfile --cpu-period --cpu-quota --cpu-rt-period --cpu-rt-runtime --cpu-shares --cpus --cpuset-cpus --cpuset-mems -d --detach --detach-keys --device --device-cgroup-rule --device-read-bps --device-read-iops --device-write-bps --device-write-iops --disable-content-trust --dns --dns-opt --dns-search --entrypoint -e --env --env-file --env-host --expose --gidmap --group-add --health-cmd --health-interval --health-retries --health-start-period --health-timeout -h --hostname --http-proxy --image-volume --init --init-path -i --interactive --ip --ipc --kernel-memory -l --label --label-file --log-driver --log-opt --mac-address -m --memory --memory-reservation --memory-swap --memory-swappiness --mount --name --network --network-alias --no-healthcheck --no-hosts --oom-kill-disable --oom-score-adj --os --pid --pidfile --pids-limit --platform --pod --pod-id-file --preserve-fds --privileged -p --publish -P --publish-all --pull -q --quiet --read-only --read-only-tmpfs --replace --requires --restart --rm --rmi --rootfs --sdnotify --seccomp-policy --secret --security-opt --shm-size --sig-proxy --stop-signal --stop-timeout --subgidname --subuidname --sysctl --systemd --timeout --tmpfs -t --tty --tz --uidmap --ulimit --umask -u --user --userns --uts --variant -v --volume --volumes-from -w --workdir" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_save ()
{
    local cur word_list
    word_list=" --compress --format -m --multi-image-archive -o --output -q --quiet" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_search ()
{
    local cur word_list
    word_list=" --authfile -f --filter --format --limit --list-tags --no-trunc --tls-verify" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_start ()
{
    local cur word_list
    word_list=" --all -a --attach --detach-keys -f --filter -i --interactive -l --latest --sig-proxy" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_stats ()
{
    local cur word_list
    word_list=" -a --all --format -l --latest --no-reset --no-stream" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_stop ()
{
    local cur word_list
    word_list=" -a --all --cidfile -i --ignore -l --latest -t --time" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_top ()
{
    local cur word_list
    word_list=" -l --latest" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_unmount ()
{
    local cur word_list
    word_list=" -a --all -f --force -l --latest" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_unpause ()
{
    local cur word_list
    word_list=" -a --all" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_unshare ()
{
    local cur word_list
    word_list=" --rootless-cni" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_podman_wait ()
{
    local cur word_list
    word_list=" --condition -i --interval -l --latest" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _podman podman
