# Auto-generated with h2o

_pytest()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
      *)
          word_list="  -k -m --markers -x --exitfirst --fixtures --funcargs --fixtures-per-test --pdb --pdbcls --trace --capture -s --runxfail --lf --last-failed --ff --failed-first --nf --new-first --cache-show --cache-clear --lfnf --last-failed-no-failures --sw --stepwise --sw-skip --stepwise-skip --durations --durations-min -v --verbose --no-header --no-summary -q --quiet --verbosity -r --disable-warnings --disable-pytest-warnings -l --showlocals --tb --show-capture --full-trace --color --code-highlight --pastebin --junit-xml --junit-prefix -W --pythonwarnings --maxfail --strict-config --strict-markers --strict -c --continue-on-collection-errors --rootdir --collect-only --co --pyargs --ignore --ignore-glob --deselect --confcutdir --noconftest --keep-duplicates --collect-in-virtualenv --import-mode --doctest-modules --doctest-report --doctest-glob --doctest-ignore-import-errors --doctest-continue-on-failure --basetemp -V --version -h --help -p --trace-config --debug -o --override-ini --assert --setup-only --setup-show --setup-plan --log-level --log-format --log-date-format --log-cli-level --log-cli-format --log-cli-date-format --log-file --log-file-level --log-file-format --log-file-date-format --log-auto-indent"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _pytest pytest
