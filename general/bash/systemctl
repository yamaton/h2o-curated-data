# Auto-generated with h2o

_systemctl()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          list-units) _systemctl_listunits
            return
            ;;

          list-sockets) _systemctl_listsockets
            return
            ;;

          list-timers) _systemctl_listtimers
            return
            ;;

          start) _systemctl_start
            return
            ;;

          stop) _systemctl_stop
            return
            ;;

          reload) _systemctl_reload
            return
            ;;

          restart) _systemctl_restart
            return
            ;;

          try-restart) _systemctl_tryrestart
            return
            ;;

          reload-or-restart) _systemctl_reloadorrestart
            return
            ;;

          try-reload-or-restart) _systemctl_tryreloadorrestart
            return
            ;;

          isolate) _systemctl_isolate
            return
            ;;

          kill) _systemctl_kill
            return
            ;;

          clean) _systemctl_clean
            return
            ;;

          is-active) _systemctl_isactive
            return
            ;;

          is-failed) _systemctl_isfailed
            return
            ;;

          status) _systemctl_status
            return
            ;;

          show) _systemctl_show
            return
            ;;

          cat) _systemctl_cat
            return
            ;;

          set-property) _systemctl_setproperty
            return
            ;;

          reset-failed) _systemctl_resetfailed
            return
            ;;

          list-dependencies) _systemctl_listdependencies
            return
            ;;

          list-unit-files) _systemctl_listunitfiles
            return
            ;;

          enable) _systemctl_enable
            return
            ;;

          disable) _systemctl_disable
            return
            ;;

          reenable) _systemctl_reenable
            return
            ;;

          preset) _systemctl_preset
            return
            ;;

          preset-all) _systemctl_presetall
            return
            ;;

          is-enabled) _systemctl_isenabled
            return
            ;;

          mask) _systemctl_mask
            return
            ;;

          unmask) _systemctl_unmask
            return
            ;;

          revert) _systemctl_revert
            return
            ;;

          add-wants) _systemctl_addwants
            return
            ;;

          add-requires) _systemctl_addrequires
            return
            ;;

          edit) _systemctl_edit
            return
            ;;

          get-default) _systemctl_getdefault
            return
            ;;

          set-default) _systemctl_setdefault
            return
            ;;

          list-machines) _systemctl_listmachines
            return
            ;;

          list-jobs) _systemctl_listjobs
            return
            ;;

          cancel) _systemctl_cancel
            return
            ;;

          show-environment) _systemctl_showenvironment
            return
            ;;

          set-environment) _systemctl_setenvironment
            return
            ;;

          unset-environment) _systemctl_unsetenvironment
            return
            ;;

          import-environment) _systemctl_importenvironment
            return
            ;;

          daemon-reload) _systemctl_daemonreload
            return
            ;;

          daemon-reexec) _systemctl_daemonreexec
            return
            ;;

          log-level) _systemctl_loglevel
            return
            ;;

          log-target) _systemctl_logtarget
            return
            ;;

          service-watchdogs) _systemctl_servicewatchdogs
            return
            ;;

          is-system-running) _systemctl_issystemrunning
            return
            ;;

          default) _systemctl_default
            return
            ;;

          rescue) _systemctl_rescue
            return
            ;;

          emergency) _systemctl_emergency
            return
            ;;

          halt) _systemctl_halt
            return
            ;;

          poweroff) _systemctl_poweroff
            return
            ;;

          reboot) _systemctl_reboot
            return
            ;;

          kexec) _systemctl_kexec
            return
            ;;

          exit) _systemctl_exit
            return
            ;;

          switch-root) _systemctl_switchroot
            return
            ;;

          suspend) _systemctl_suspend
            return
            ;;

          hibernate) _systemctl_hibernate
            return
            ;;

          hybrid-sleep) _systemctl_hybridsleep
            return
            ;;

          suspend-then-hibernate) _systemctl_suspendthenhibernate
            return
            ;;

      *)
          word_list=" list-units list-sockets list-timers start stop reload restart try-restart reload-or-restart try-reload-or-restart isolate kill clean is-active is-failed status show cat set-property reset-failed list-dependencies list-unit-files enable disable reenable preset preset-all is-enabled mask unmask revert add-wants add-requires edit get-default set-default list-machines list-jobs cancel show-environment set-environment unset-environment import-environment daemon-reload daemon-reexec log-level log-target service-watchdogs is-system-running default rescue emergency halt poweroff reboot kexec exit switch-root suspend hibernate hybrid-sleep suspend-then-hibernate "
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _systemctl systemctl
