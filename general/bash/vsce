# Auto-generated with h2o

_vsce()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          ls) _vsce_ls
            return
            ;;

          package) _vsce_package
            return
            ;;

          publish) _vsce_publish
            return
            ;;

          unpublish) _vsce_unpublish
            return
            ;;

          ls-publishers) _vsce_lspublishers
            return
            ;;

          delete-publisher) _vsce_deletepublisher
            return
            ;;

          login) _vsce_login
            return
            ;;

          logout) _vsce_logout
            return
            ;;

          verify-pat) _vsce_verifypat
            return
            ;;

          show) _vsce_show
            return
            ;;

          search) _vsce_search
            return
            ;;

          help) _vsce_help
            return
            ;;

      *)
          word_list=" ls package publish unpublish ls-publishers delete-publisher login logout verify-pat show search help -V --version -h --help"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_vsce_ls ()
{
    local cur word_list
    word_list=" --yarn --no-yarn --packagedDependencies --ignoreFile --dependencies --no-dependencies -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_package ()
{
    local cur word_list
    word_list=" -o --out -t --target -m --message --no-git-tag-version --no-update-package-json --githubBranch --gitlabBranch --no-rewrite-relative-links --baseContentUrl --baseImagesUrl --yarn --no-yarn --ignoreFile --no-gitHubIssueLinking --no-gitLabIssueLinking --dependencies --no-dependencies --pre-release --allow-star-activation --allow-missing-repository -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_publish ()
{
    local cur word_list
    word_list=" -p --pat -t --target -m --message --no-git-tag-version --no-update-package-json -i --packagePath --githubBranch --gitlabBranch --baseContentUrl --baseImagesUrl --yarn --no-yarn --noVerify --ignoreFile --dependencies --no-dependencies --pre-release --allow-star-activation --allow-missing-repository --skip-duplicate -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_unpublish ()
{
    local cur word_list
    word_list=" -p --pat -f --force -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_lspublishers ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_deletepublisher ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_login ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_logout ()
{
    local cur word_list
    word_list=" -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_verifypat ()
{
    local cur word_list
    word_list=" -p --pat -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_show ()
{
    local cur word_list
    word_list=" --json -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_search ()
{
    local cur word_list
    word_list=" --json --stats -p --pagesize -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_vsce_help ()
{
    local cur word_list
    word_list=" -V --version -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _vsce vsce
