# Auto-generated with h2o

_yarn()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          access) _yarn_access
            return
            ;;

          add) _yarn_add
            return
            ;;

          audit) _yarn_audit
            return
            ;;

          autoclean) _yarn_autoclean
            return
            ;;

          bin) _yarn_bin
            return
            ;;

          cache) _yarn_cache
            return
            ;;

          check) _yarn_check
            return
            ;;

          config) _yarn_config
            return
            ;;

          create) _yarn_create
            return
            ;;

          exec) _yarn_exec
            return
            ;;

          generate-lock-entry) _yarn_generatelockentry
            return
            ;;

          global) _yarn_global
            return
            ;;

          help) _yarn_help
            return
            ;;

          import) _yarn_import
            return
            ;;

          info) _yarn_info
            return
            ;;

          init) _yarn_init
            return
            ;;

          install) _yarn_install
            return
            ;;

          licenses) _yarn_licenses
            return
            ;;

          link) _yarn_link
            return
            ;;

          list) _yarn_list
            return
            ;;

          login) _yarn_login
            return
            ;;

          logout) _yarn_logout
            return
            ;;

          node) _yarn_node
            return
            ;;

          outdated) _yarn_outdated
            return
            ;;

          owner) _yarn_owner
            return
            ;;

          pack) _yarn_pack
            return
            ;;

          policies) _yarn_policies
            return
            ;;

          publish) _yarn_publish
            return
            ;;

          remove) _yarn_remove
            return
            ;;

          run) _yarn_run
            return
            ;;

          tag) _yarn_tag
            return
            ;;

          team) _yarn_team
            return
            ;;

          unlink) _yarn_unlink
            return
            ;;

          unplug) _yarn_unplug
            return
            ;;

          upgrade) _yarn_upgrade
            return
            ;;

          upgrade-interactive) _yarn_upgradeinteractive
            return
            ;;

          version) _yarn_version
            return
            ;;

          versions) _yarn_versions
            return
            ;;

          why) _yarn_why
            return
            ;;

          workspace) _yarn_workspace
            return
            ;;

          workspaces) _yarn_workspaces
            return
            ;;

      *)
          word_list=" access add audit autoclean bin cache check config create exec generate-lock-entry global help import info init install licenses link list login logout node outdated owner pack policies publish remove run tag team unlink unplug upgrade upgrade-interactive version versions why workspace workspaces --cache-folder --check-files --cwd --disable-pnp --emoji --enable-pnp --pnp --flat --focus --force --frozen-lockfile --global-folder --har --https-proxy --ignore-engines --ignore-optional --ignore-platform --ignore-scripts --json --link-duplicates --link-folder --modules-folder --mutex --network-concurrency --network-timeout --no-bin-links --no-default-rc --no-lockfile --non-interactive --no-node-version-check --no-progress --offline --otp --prefer-offline --preferred-cache-folder --prod --production --proxy --pure-lockfile --registry -s --silent --scripts-prepend-node-path --skip-integrity-check --strict-semver --update-checksums --use-yarnrc -v --version --verbose -h --help"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_yarn_add ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -W --ignore-workspace-root-check -D --dev -P --peer -O --optional -E --exact -T --tilde -A --audit -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_audit ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --summary --groups --level -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_autoclean ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -I --init -F --force -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_bin ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_cache ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --pattern -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_check ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --integrity --verify-tree -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_config ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_create ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_exec ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_generatelockentry ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --use-manifest --resolved --registry -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_global ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --prefix --latest -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_help ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_import ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_info ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_init ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -y --yes -p --private -i --install -2 -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_install ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -A --audit -g --global -S --save -D --save-dev -P --save-peer -O --save-optional -E --save-exact -T --save-tilde -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_licenses ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_link ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_list ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --depth --pattern -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_login ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_logout ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_node ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --into -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_outdated ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_owner ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_pack ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -f --filename -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_policies ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_publish ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --new-version --major --minor --patch --premajor --preminor --prepatch --prerelease --preid --message --no-git-tag-version --no-commit-hooks --access --tag -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_remove ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -W --ignore-workspace-root-check -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_run ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_tag ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_team ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_unlink ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_unplug ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --clear --clear-all -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_upgrade ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -S --scope -L --latest -E --exact -P --pattern -T --tilde -C --caret -A --audit -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_upgradeinteractive ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -S --scope --latest -E --exact -T --tilde -C --caret -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_version ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp --new-version --major --minor --patch --premajor --preminor --prepatch --prerelease --preid --message --no-git-tag-version --no-commit-hooks -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_versions ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_why ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_workspace ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yarn_workspaces ()
{
    local cur word_list
    word_list=" -v --version --no-default-rc --use-yarnrc --verbose --offline --prefer-offline --enable-pnp --pnp --disable-pnp --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --skip-integrity-check --check-files --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --frozen-lockfile --update-checksums --link-duplicates --link-folder --global-folder --modules-folder --preferred-cache-folder --cache-folder --mutex --emoji -s --silent --cwd --proxy --https-proxy --registry --no-progress --network-concurrency --network-timeout --non-interactive --scripts-prepend-node-path --no-node-version-check --focus --otp -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _yarn yarn
