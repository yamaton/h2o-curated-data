# Auto-generated with h2o

_yq()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          eval) _yq_eval
            return
            ;;

          eval-all) _yq_evalall
            return
            ;;

          shell-completion) _yq_shellcompletion
            return
            ;;

      *)
          word_list=" eval eval-all shell-completion -C --colors -e --exit-status --expression --from-file -f --front-matter --header-preprocess -h --help -I --indent -i --inplace -p --input-format -M --no-colors -N --no-doc -n --null-input -o --output-format -P --prettyPrint -s --split-exp --split-exp-file -r --unwrapScalar -v --verbose -V --version --xml-attribute-prefix --xml-content-name --xml-directive-name --xml-keep-namespace --xml-proc-inst-prefix --xml-raw-token --xml-skip-directives --xml-skip-proc-inst --xml-strict-mode"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_yq_eval ()
{
    local cur word_list
    word_list=" -h --help -C --colors -e --exit-status --expression --from-file -f --front-matter --header-preprocess -I --indent -i --inplace -p --input-format -M --no-colors -N --no-doc -n --null-input -o --output-format -P --prettyPrint -s --split-exp --split-exp-file -r --unwrapScalar -v --verbose --xml-attribute-prefix --xml-content-name --xml-directive-name --xml-keep-namespace --xml-proc-inst-prefix --xml-raw-token --xml-skip-directives --xml-skip-proc-inst --xml-strict-mode" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yq_evalall ()
{
    local cur word_list
    word_list=" -h --help -C --colors -e --exit-status --expression --from-file -f --front-matter --header-preprocess -I --indent -i --inplace -p --input-format -M --no-colors -N --no-doc -n --null-input -o --output-format -P --prettyPrint -s --split-exp --split-exp-file -r --unwrapScalar -v --verbose --xml-attribute-prefix --xml-content-name --xml-directive-name --xml-keep-namespace --xml-proc-inst-prefix --xml-raw-token --xml-skip-directives --xml-skip-proc-inst --xml-strict-mode" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_yq_shellcompletion ()
{
    local cur word_list
    word_list=" -h --help -C --colors -e --exit-status --expression --from-file -f --front-matter --header-preprocess -I --indent -i --inplace -p --input-format -M --no-colors -N --no-doc -n --null-input -o --output-format -P --prettyPrint -s --split-exp --split-exp-file -r --unwrapScalar -v --verbose --xml-attribute-prefix --xml-content-name --xml-directive-name --xml-keep-namespace --xml-proc-inst-prefix --xml-raw-token --xml-skip-directives --xml-skip-proc-inst --xml-strict-mode" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _yq yq
