# Auto-generated with h2o

complete -k -c systemctl -n __fish_use_subcommand -x -a suspend-then-hibernate -d "Suspend the system, wake after a period of"
complete -k -c systemctl -n __fish_use_subcommand -x -a hybrid-sleep -d "Hibernate and suspend the system"
complete -k -c systemctl -n __fish_use_subcommand -x -a hibernate -d "Hibernate the system"
complete -k -c systemctl -n __fish_use_subcommand -x -a suspend -d "Suspend the system"
complete -k -c systemctl -n __fish_use_subcommand -x -a switch-root -d "Change to a different root file system"
complete -k -c systemctl -n __fish_use_subcommand -x -a exit -d "Request user instance or container exit"
complete -k -c systemctl -n __fish_use_subcommand -x -a kexec -d "Shut down and reboot the system with kexec"
complete -k -c systemctl -n __fish_use_subcommand -x -a reboot -d "Shut down and reboot the system"
complete -k -c systemctl -n __fish_use_subcommand -x -a poweroff -d "Shut down and power-off the system"
complete -k -c systemctl -n __fish_use_subcommand -x -a halt -d "Shut down and halt the system"
complete -k -c systemctl -n __fish_use_subcommand -x -a emergency -d "Enter system emergency mode"
complete -k -c systemctl -n __fish_use_subcommand -x -a rescue -d "Enter system rescue mode"
complete -k -c systemctl -n __fish_use_subcommand -x -a default -d "Enter system default mode"
complete -k -c systemctl -n __fish_use_subcommand -x -a is-system-running -d "Check whether system is fully running"
complete -k -c systemctl -n __fish_use_subcommand -x -a service-watchdogs -d "Get/set service watchdog state"
complete -k -c systemctl -n __fish_use_subcommand -x -a log-target -d "Get/set logging target for manager"
complete -k -c systemctl -n __fish_use_subcommand -x -a log-level -d "Get/set logging threshold for manager"
complete -k -c systemctl -n __fish_use_subcommand -x -a daemon-reexec -d "Reexecute systemd manager"
complete -k -c systemctl -n __fish_use_subcommand -x -a daemon-reload -d "Reload systemd manager configuration"
complete -k -c systemctl -n __fish_use_subcommand -x -a import-environment -d "Import all or some environment variables"
complete -k -c systemctl -n __fish_use_subcommand -x -a unset-environment -d "Unset one or more environment variables"
complete -k -c systemctl -n __fish_use_subcommand -x -a set-environment -d "Set one or more environment variables"
complete -k -c systemctl -n __fish_use_subcommand -x -a show-environment -d "Dump environment"
complete -k -c systemctl -n __fish_use_subcommand -x -a cancel -d "Cancel all, one, or more jobs"
complete -k -c systemctl -n __fish_use_subcommand -x -a list-jobs -d "List jobs"
complete -k -c systemctl -n __fish_use_subcommand -x -a list-machines -d "List local containers and host"
complete -k -c systemctl -n __fish_use_subcommand -x -a set-default -d "Set the default target"
complete -k -c systemctl -n __fish_use_subcommand -x -a get-default -d "Get the name of the default target"
complete -k -c systemctl -n __fish_use_subcommand -x -a edit -d "Edit one or more unit files"
complete -k -c systemctl -n __fish_use_subcommand -x -a add-requires -d "Add 'Requires' dependency for the target on specified one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a add-wants -d "Add 'Wants' dependency for the target on specified one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a revert -d "Revert one or more unit files to vendor version"
complete -k -c systemctl -n __fish_use_subcommand -x -a unmask -d "Unmask one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a mask -d "Mask one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a is-enabled -d "Check whether unit files are enabled"
complete -k -c systemctl -n __fish_use_subcommand -x -a preset-all -d "Enable/disable all unit files based on preset configuration"
complete -k -c systemctl -n __fish_use_subcommand -x -a preset -d "Enable/disable one or more unit files based on preset configuration"
complete -k -c systemctl -n __fish_use_subcommand -x -a reenable -d "Reenable one or more unit files"
complete -k -c systemctl -n __fish_use_subcommand -x -a disable -d "Disable one or more unit files"
complete -k -c systemctl -n __fish_use_subcommand -x -a enable -d "Enable one or more unit files"
complete -k -c systemctl -n __fish_use_subcommand -x -a list-unit-files -d "List installed unit files"
complete -k -c systemctl -n __fish_use_subcommand -x -a list-dependencies -d "Recursively show units which are required or wanted by the units or by which those units are required or wanted"
complete -k -c systemctl -n __fish_use_subcommand -x -a reset-failed -d "Reset failed state for all, one, or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a set-property -d "Sets one or more properties of a unit"
complete -k -c systemctl -n __fish_use_subcommand -x -a cat -d "Show files and drop-ins of specified units"
complete -k -c systemctl -n __fish_use_subcommand -x -a show -d "Show properties of one or more units/jobs or the manager"
complete -k -c systemctl -n __fish_use_subcommand -x -a status -d "Show runtime status of one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a is-failed -d "Check whether units are failed"
complete -k -c systemctl -n __fish_use_subcommand -x -a is-active -d "Check whether units are active"
complete -k -c systemctl -n __fish_use_subcommand -x -a clean -d "Clean runtime, cache, state, logs or configuration of unit"
complete -k -c systemctl -n __fish_use_subcommand -x -a kill -d "Send signal to processes of a unit"
complete -k -c systemctl -n __fish_use_subcommand -x -a isolate -d "Start one unit and stop all others"
complete -k -c systemctl -n __fish_use_subcommand -x -a try-reload-or-restart -d "If active, reload one or more units, if supported, otherwise restart"
complete -k -c systemctl -n __fish_use_subcommand -x -a reload-or-restart -d "Reload one or more units if possible, otherwise start or restart"
complete -k -c systemctl -n __fish_use_subcommand -x -a try-restart -d "Restart one or more units if active"
complete -k -c systemctl -n __fish_use_subcommand -x -a restart -d "Start or restart one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a reload -d "Reload one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a stop -d "Stop (deactivate) one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a start -d "Start (activate) one or more units"
complete -k -c systemctl -n __fish_use_subcommand -x -a list-timers -d "List timer units currently in memory, ordered by next elapse"
complete -k -c systemctl -n __fish_use_subcommand -x -a list-sockets -d "List socket units currently in memory, ordered by address"
complete -k -c systemctl -n __fish_use_subcommand -x -a list-units -d "List units currently in memory"
