{"name":"ansible","description":"Define and run a single task 'playbook' against a set of hosts","positionalArguments":[{"name":"pattern","description":"host pattern"}],"options":[{"names":["--ask-vault-password","--ask-vault-pass"],"argument":"","description":"ask for vault password"},{"names":["--become-method"],"argument":"'BECOME_METHOD'","description":"privilege escalation method to use (default=sudo), use ansible-doc -t become -l to list valid choices."},{"names":["--become-password-file","--become-pass-file"],"argument":"'BECOME_PASSWORD_FILE'","description":"Become password file"},{"names":["--become-user"],"argument":"'BECOME_USER'","description":"run operations as this user (default=root)"},{"names":["--connection-password-file","--conn-pass-file"],"argument":"'CONNECTION_PASSWORD_FILE'","description":"Connection password file"},{"names":["--list-hosts"],"argument":"","description":"outputs a list of matching hosts; does not execute anything else"},{"names":["--playbook-dir"],"argument":"'BASEDIR'","description":"Since this tool does not use playbooks, use this as a substitute playbook directory.This sets the relative path for many features including roles/ group_vars/ etc."},{"names":["--private-key","--key-file"],"argument":"'PRIVATE_KEY_FILE'","description":"use this file to authenticate the connection"},{"names":["--scp-extra-args"],"argument":"'SCP_EXTRA_ARGS'","description":"specify extra arguments to pass to scp only (e.g. -l)"},{"names":["--sftp-extra-args"],"argument":"'SFTP_EXTRA_ARGS'","description":"specify extra arguments to pass to sftp only (e.g. -f, -l)"},{"names":["--ssh-common-args"],"argument":"'SSH_COMMON_ARGS'","description":"specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)"},{"names":["--ssh-extra-args"],"argument":"'SSH_EXTRA_ARGS'","description":"specify extra arguments to pass to ssh only (e.g. -R)"},{"names":["--syntax-check"],"argument":"","description":"perform a syntax check on the playbook, but do not execute it"},{"names":["--task-timeout"],"argument":"'TASK_TIMEOUT'","description":"set task timeout limit in seconds, must be positive integer."},{"names":["--vault-id"],"argument":"","description":"the vault identity to use"},{"names":["--vault-password-file","--vault-pass-file"],"argument":"","description":"vault password file"},{"names":["--version"],"argument":"","description":"show program's version number, config file location, configured module search path, module location, executable location and exit"},{"names":["-B","--background"],"argument":"'SECONDS'","description":"run asynchronously, failing after X seconds (default=N/A)"},{"names":["-C","--check"],"argument":"","description":"don't make any changes; instead, try to predict some of the changes that may occur"},{"names":["-D","--diff"],"argument":"","description":"when changing (small) files and templates, show the differences in those files; works great with --check"},{"names":["-K","--ask-become-pass"],"argument":"","description":"ask for privilege escalation password"},{"names":["-M","--module-path"],"argument":"","description":"prepend colon-separated path(s) to module library (default=~/.ansible/plugins/modules:/usr/share/ansible/plugins/modules)"},{"names":["-P","--poll"],"argument":"'POLL_INTERVAL'","description":"set the poll interval if using -B (default=15)"},{"names":["-T","--timeout"],"argument":"'TIMEOUT'","description":"override the connection timeout in seconds (default=10)"},{"names":["-a","--args"],"argument":"'MODULE_ARGS'","description":"The action's options in space separated k=v format: -a 'opt1=val1 opt2=val2'"},{"names":["-b","--become"],"argument":"","description":"run operations with become (does not imply password prompting)"},{"names":["-c","--connection"],"argument":"'CONNECTION'","description":"connection type to use (default=smart)"},{"names":["-e","--extra-vars"],"argument":"","description":"set additional variables as key=value or YAML/JSON, if filename prepend with @"},{"names":["-f","--forks"],"argument":"'FORKS'","description":"specify number of parallel processes to use (default=5)"},{"names":["-h","--help"],"argument":"","description":"show this help message and exit"},{"names":["-i","--inventory","--inventory-file"],"argument":"","description":"specify inventory host path or comma separated host list. --inventory-file is deprecated"},{"names":["-k","--ask-pass"],"argument":"","description":"ask for connection password"},{"names":["-l","--limit"],"argument":"'SUBSET'","description":"further limit selected hosts to an additional pattern"},{"names":["-m","--module-name"],"argument":"'MODULE_NAME'","description":"Name of the action to execute (default=command)"},{"names":["-o","--one-line"],"argument":"","description":"condense output"},{"names":["-t","--tree"],"argument":"'TREE'","description":"log output to this directory"},{"names":["-u","--user"],"argument":"'REMOTE_USER'","description":"connect as this user (default=None)"},{"names":["-v","--verbose"],"argument":"","description":"verbose mode (-vvv for more, -vvvv to enable connection debugging)"}],"version":"ansible [core 2.12.2]","tldr":"# ansible\n\n> Manage groups of computers remotely over SSH. (use the `/etc/ansible/hosts` file to add new groups/hosts).\n> Some subcommands such as `ansible galaxy` have their own usage documentation.\n> More information: <https://www.ansible.com/>.\n\n- List hosts belonging to a group:\n\n`ansible {{group}} --list-hosts`\n\n- Ping a group of hosts by invoking the ping module:\n\n`ansible {{group}} -m ping`\n\n- Display facts about a group of hosts by invoking the setup module:\n\n`ansible {{group}} -m setup`\n\n- Execute a command on a group of hosts by invoking command module with arguments:\n\n`ansible {{group}} -m command -a '{{my_command}}'`\n\n- Execute a command with administrative privileges:\n\n`ansible {{group}} --become --ask-become-pass -m command -a '{{my_command}}'`\n\n- Execute a command using a custom inventory file:\n\n`ansible {{group}} -i {{inventory_file}} -m command -a '{{my_command}}'`\n\n- List the groups in an inventory:\n\n`ansible localhost -m debug -a '{{var=groups.keys()}}'`\n"}
