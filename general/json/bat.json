{"name":"bat","description":"bat","options":[{"names":["-A","--show-all"],"argument":"","description":"Show non-printable characters like space, tab or newline. Use '--tabs' to control the width of the tab-placeholders."},{"names":["-p","--plain"],"argument":"","description":"Only show plain style, no decorations. This is an alias for '--style=plain'. When '-p' is used twice ('-pp'), it also disables automatic paging (alias for '--style=plain --pager=never')."},{"names":["-l","--language"],"argument":"<language>","description":"Explicitly set the language for syntax highlighting. The language can be specified as a name (like 'C++' or 'LaTeX') or possible file extension (like 'cpp', 'hpp' or 'md'). Use '--list-languages' to show all supported language names and file extensions."},{"names":["-H","--highlight-line"],"argument":"<N:M>...","description":"Highlight the specified line ranges with a different background color."},{"names":["--file-name"],"argument":"<name>...","description":"Specify the name to display for a file. Useful when piping data to bat from STDIN when bat does not otherwise know the filename. Note that the provided file name is also used for syntax detection."},{"names":["-d","--diff"],"argument":"","description":"Only show lines that have been added/removed/modified with respect to the Git index. Use '--diff-context=N' to control how much context you want to see."},{"names":["--diff-context"],"argument":"<N>...","description":"Include N lines of context around added/removed/modified lines when using '--diff'."},{"names":["--tabs"],"argument":"<T>","description":"Set the tab width to T spaces. Use a width of 0 to pass tabs through directly"},{"names":["--wrap"],"argument":"<mode>","description":"Specify the text-wrapping mode (*auto*, never, character). The '--terminal-width' option can be used in addition to control the output width."},{"names":["--terminal-width"],"argument":"<width>","description":"Explicitly set the width of the terminal instead of determining it automatically. If prefixed with '+' or '-', the value will be treated as an offset to the actual terminal width. See also: '--wrap'."},{"names":["-n","--number"],"argument":"","description":"Only show line numbers, no other decorations. This is an alias for '--style=numbers'"},{"names":["--color"],"argument":"<when>","description":"Specify when to use colored output. The automatic mode only enables colors if an interactive terminal is detected. Possible values: *auto*, never, always."},{"names":["--italic-text"],"argument":"<when>","description":"Specify when to use ANSI sequences for italic text in the output. Possible values: always, *never*."},{"names":["--decorations"],"argument":"<when>","description":"Specify when to use the decorations that have been specified via '--style'. The automatic mode only enables decorations if an interactive terminal is detected. Possible values: *auto*, never, always."},{"names":["-f","--force-colorization"],"argument":"","description":"Alias for '--decorations=always --color=always'. This is useful if the output of bat is piped to another program, but you want to keep the colorization/decorations."},{"names":["--paging"],"argument":"<when>","description":"Specify when to use the pager. To disable the pager, use '--paging=never' or its alias, -P. To disable the pager permanently, set BAT_PAGER to an empty string. To control which pager is used, see the '--pager' option. Possible values: *auto*, never, always."},{"names":["--pager"],"argument":"<command>","description":"Determine which pager is used. This option will override the PAGER and BAT_PAGER environment variables. The default pager is 'less'. To control when the pager is used, see the '--paging' option. Example: '--pager \"less -RF\"'."},{"names":["-m","--map-syntax"],"argument":"<glob-pattern:syntax-name>...","description":"Map a glob pattern to an existing syntax name. The glob pattern is matched on the full path and the filename. For example, to highlight *.build files with the Python syntax, use -m '*.build:Python'. To highlight files named '.myignore' with the Git Ignore syntax, use -m '.myignore:Git Ignore'. Note that the right-hand side is the *name* of the syntax, not a file extension."},{"names":["--theme"],"argument":"<theme>","description":"Set the theme for syntax highlighting. Use '--list-themes' to see all available themes. To set a default theme, add the '--theme=\"...\"' option to the configuration file or export the BAT_THEME environment variable (e.g.: export BAT_THEME=\"...\")."},{"names":["--list-themes"],"argument":"","description":"Display a list of supported themes for syntax highlighting."},{"names":["--style"],"argument":"<style-components>","description":"Configure which elements (line numbers, file headers, grid borders, Git modifications, ..) to display in addition to the file contents. The argument is a comma-separated list of components to display (e.g. 'numbers,changes,grid') or a pre-defined style ('full'). To set a default style, add the '--style=\"..\"' option to the configuration file or export the BAT_STYLE environment variable (e.g.: export BAT_STYLE=\"..\"). Possible values: *default*, full, auto, plain, changes, header, header-filename, header-filesize, grid, rule, numbers, snip."},{"names":["-r","--line-range"],"argument":"<N:M>...","description":"Only print the specified range of lines for each file."},{"names":["-L","--list-languages"],"argument":"","description":"Display a list of supported languages for syntax highlighting."},{"names":["-u","--unbuffered"],"argument":"","description":"This option exists for POSIX-compliance reasons ('u' is for 'unbuffered'). The output is always unbuffered - this option is simply ignored."},{"names":["-h","--help"],"argument":"","description":"Print this help message."},{"names":["-V","--version"],"argument":"","description":"Show version information."}],"version":"bat 0.21.0 (405e5f7)","tldr":"> Print and concatenate files.\n> A `cat` clone with syntax highlighting and Git integration.\n> More information: <https://github.com/sharkdp/bat>.\n\n- Print the contents of a file to the standard output:\n\n`bat {{file}}`\n\n- Concatenate several files into the target file:\n\n`bat {{file1}} {{file2}} > {{target_file}}`\n\n- Append several files into the target file:\n\n`bat {{file1}} {{file2}} >> {{target_file}}`\n\n- Number all output lines:\n\n`bat -n {{file}}`\n\n- Syntax highlight a JSON file:\n\n`bat --language json {{file.json}}`\n\n- Display all supported languages:\n\n`bat --list-languages`\n"}
