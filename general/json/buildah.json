{"name":"buildah","description":"buildah","options":[{"names":["-h","--help"],"argument":"","description":"help for buildah"},{"names":["--log-level"],"argument":"string","description":"The log level to be used. Either \"trace\", \"debug\", \"info\", \"warn\", \"error\", \"fatal\", or \"panic\". (default \"warn\")"},{"names":["--registries-conf"],"argument":"string","description":"path to registries.conf file (not usually used)"},{"names":["--registries-conf-dir"],"argument":"string","description":"path to registries.conf.d directory (not usually used)"},{"names":["--root"],"argument":"string","description":"storage root dir (default \"/var/lib/containers/storage\")"},{"names":["--runroot"],"argument":"string","description":"storage state dir (default \"/run/containers/storage\")"},{"names":["--storage-driver"],"argument":"string","description":"storage-driver (default \"overlay\")"},{"names":["--storage-opt"],"argument":"strings","description":"storage driver option (default [\"overlay.mountopt=nodev,metacopy=on\"])"},{"names":["--userns-gid-map"],"argument":"ctrID:hostID:length","description":"default ctrID:hostID:length GID mapping to use"},{"names":["--userns-uid-map"],"argument":"ctrID:hostID:length","description":"default ctrID:hostID:length UID mapping to use"},{"names":["-v","--version"],"argument":"","description":"version for buildah"}],"subcommands":[{"name":"add","description":"Add content to the container","options":[{"names":["--add-history"],"argument":"","description":"add an entry for this operation to the image's history. Use BUILDAH_HISTORY environment variable to override. (default false)"},{"names":["--chmod"],"argument":"string","description":"set the access permissions of the destination content"},{"names":["--chown"],"argument":"string","description":"set the user and group ownership of the destination content"},{"names":["--contextdir"],"argument":"string","description":"context directory path"},{"names":["--from"],"argument":"string","description":"use the specified container's or image's root directory as the source root directory"},{"names":["-h","--help"],"argument":"","description":"help for add"},{"names":["--ignorefile"],"argument":"string","description":"path to .dockerignore file"},{"names":["-q","--quiet"],"argument":"","description":"don't output a digest of the newly-added/copied content"}]},{"name":"bud","description":"Build an image using instructions in a Dockerfile","options":[{"names":["--add-host"],"argument":"host:ip","description":"add a custom host-to-IP mapping (host:ip) (default [])"},{"names":["--annotation"],"argument":"stringArray","description":"Set metadata for an image (default [])"},{"names":["--arch"],"argument":"string","description":"set the ARCH of the image to the provided value instead of the architecture of the host (default \"amd64\")"},{"names":["--authfile"],"argument":"string","description":"path of the authentication file."},{"names":["--build-arg"],"argument":"argument=value","description":"argument=value to supply to the builder"},{"names":["--cache-from"],"argument":"string","description":"Images to utilise as potential cache sources. The build process does not currently support caching so this is a NOOP."},{"names":["--cap-add"],"argument":"strings","description":"add the specified capability when running (default [])"},{"names":["--cap-drop"],"argument":"strings","description":"drop the specified capability when running (default [])"},{"names":["--cert-dir"],"argument":"string","description":"use certificates at the specified path to access the registry"},{"names":["--cgroup-parent"],"argument":"string","description":"optional parent cgroup for the container"},{"names":["--cni-config-dir"],"argument":"directory","description":"directory of CNI configuration files (default \"/etc/cni/net.d\")"},{"names":["--cni-plugin-path"],"argument":"path","description":"path of CNI network plugins (default \"/usr/libexec/cni:/opt/cni/bin\")"},{"names":["--compress"],"argument":"","description":"This is legacy option, which has no effect on the image"},{"names":["--cpu-period"],"argument":"uint","description":"limit the CPU CFS (Completely Fair Scheduler) period"},{"names":["--cpu-quota"],"argument":"int","description":"limit the CPU CFS (Completely Fair Scheduler) quota"},{"names":["-c","--cpu-shares"],"argument":"uint","description":"CPU shares (relative weight)"},{"names":["--cpuset-cpus"],"argument":"string","description":"CPUs in which to allow execution (0-3, 0,1)"},{"names":["--cpuset-mems"],"argument":"string","description":"memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems."},{"names":["--creds"],"argument":"[username[:password]]","description":"use [username[:password]] for accessing the registry"},{"names":["--decryption-key"],"argument":"strings","description":"key needed to decrypt the image"},{"names":["--device"],"argument":"stringArray","description":"Additional devices to be used within containers (default [])"},{"names":["-D","--disable-compression"],"argument":"","description":"don't compress layers by default (default true)"},{"names":["--disable-content-trust"],"argument":"","description":"This is a Docker specific option and is a NOOP"},{"names":["--dns-option"],"argument":"strings","description":"Set custom DNS options"},{"names":["--dns-search"],"argument":"strings","description":"Set custom DNS search domains"},{"names":["-f","--file"],"argument":"pathname or URL","description":"pathname or URL of a Dockerfile"},{"names":["--force-rm"],"argument":"","description":"Always remove intermediate containers after a build, even if the build is unsuccessful."},{"names":["--format"],"argument":"format","description":"format of the built image's manifest and metadata. Use BUILDAH_FORMAT environment variable to override. (default \"oci\")"},{"names":["--from"],"argument":"string","description":"image name used to replace the value in the first FROM instruction in the Containerfile"},{"names":["-h","--help"],"argument":"","description":"help for bud"},{"names":["--http-proxy"],"argument":"","description":"pass through HTTP Proxy environment variables (default true)"},{"names":["--ignorefile"],"argument":"string","description":"path to an alternate .dockerignore file"},{"names":["--iidfile"],"argument":"file","description":"file to write the image ID to"},{"names":["--ipc"],"argument":"path","description":"'private', path of IPC namespace to join, or 'host'"},{"names":["--isolation"],"argument":"type","description":"type of process isolation to use. Use BUILDAH_ISOLATION environment variable to override. (default \"rootless\")"},{"names":["--jobs"],"argument":"int","description":"how many stages to run in parallel (default 1)"},{"names":["--label"],"argument":"stringArray","description":"Set metadata for an image (default [])"},{"names":["--layers"],"argument":"","description":"cache intermediate layers during build. Use BUILDAH_LAYERS environment variable to override."},{"names":["--logfile"],"argument":"file","description":"log to file instead of stdout/stderr"},{"names":["--manifest"],"argument":"string","description":"add the image to the specified manifest list. Creates manifest if it does not exist"},{"names":["-m","--memory"],"argument":"string","description":"memory limit (format: <number>[<unit>], where unit = b, k, m or g)"},{"names":["--memory-swap"],"argument":"string","description":"swap limit equal to memory plus swap: '-1' to enable unlimited swap"},{"names":["--network"],"argument":"string","description":"'private', 'none', 'ns:path' of network namespace to join, or 'host'"},{"names":["--no-cache"],"argument":"","description":"Do not use existing cached images for the container build. Build from the start with a new set of cached layers."},{"names":["--os"],"argument":"string","description":"set the OS to the provided value instead of the current operating system of the host (default \"linux\")"},{"names":["--pid"],"argument":"path","description":"private, path of PID namespace to join, or 'host'"},{"names":["--platform"],"argument":"linux/arm","description":"set the OS/ARCH to the provided value instead of the current operating system and architecture of the host (for example linux/arm) (default \"linux/amd64\")"},{"names":["--pull"],"argument":"","description":"pull the image from the registry if newer or not present in store, if false, only pull the image if not present (default true)"},{"names":["--pull-always"],"argument":"","description":"pull the image even if the named image is present in store"},{"names":["--pull-never"],"argument":"","description":"do not pull the image, use the image present in store if available"},{"names":["-q","--quiet"],"argument":"","description":"refrain from announcing build instructions and image read/write progress"},{"names":["--rm"],"argument":"","description":"Remove intermediate containers after a successful build (default true)"},{"names":["--runtime"],"argument":"path","description":"path to an alternate runtime. Use BUILDAH_RUNTIME environment variable to override. (default \"crun\")"},{"names":["--runtime-flag"],"argument":"strings","description":"add global flags for the container runtime"},{"names":["--secret"],"argument":"stringArray","description":"secret file to expose to the build"},{"names":["--security-opt"],"argument":"stringArray","description":"security options (default [])"},{"names":["--shm-size"],"argument":"<number><unit>","description":"size of '/dev/shm'. The format is <number><unit>. (default \"65536k\")"},{"names":["--sign-by"],"argument":"FINGERPRINT","description":"sign the image using a GPG key with the specified FINGERPRINT"},{"names":["--squash"],"argument":"","description":"squash newly built layers into a single new layer"},{"names":["--stdin"],"argument":"","description":"pass stdin into containers"},{"names":["-t","--tag"],"argument":"name","description":"tagged name to apply to the built image"},{"names":["--target"],"argument":"string","description":"set the target build stage to build"},{"names":["--timestamp"],"argument":"int","description":"set created timestamp to the specified epoch seconds to allow for deterministic builds, defaults to current time"},{"names":["--tls-verify"],"argument":"","description":"require HTTPS and verify certificates when accessing the registry (default true)"},{"names":["--ulimit"],"argument":"strings","description":"ulimit options (default [nproc=32768:32768])"},{"names":["--userns"],"argument":"path","description":"'container', path of user namespace to join, or 'host'"},{"names":["--userns-gid-map-group"],"argument":"name","description":"name of entries from /etc/subgid to use to set user namespace GID mapping"},{"names":["--userns-uid-map-user"],"argument":"name","description":"name of entries from /etc/subuid to use to set user namespace UID mapping"},{"names":["--uts"],"argument":"path","description":"private, :path of UTS namespace to join, or 'host'"},{"names":["--variant"],"argument":"variant","description":"override the variant of the specified image"},{"names":["-v","--volume"],"argument":"stringArray","description":"bind mount a volume into the container"}]},{"name":"commit","description":"Create an image from a working container","options":[{"names":["--authfile"],"argument":"string","description":"path of the authentication file. Use REGISTRY_AUTH_FILE environment variable to override"},{"names":["--cert-dir"],"argument":"string","description":"use certificates at the specified path to access the registry"},{"names":["--creds"],"argument":"[username[:password]]","description":"use [username[:password]] for accessing the registry"},{"names":["-D","--disable-compression"],"argument":"","description":"don't compress layers (default true)"},{"names":["--encrypt-layer"],"argument":"ints","description":"layers to encrypt, 0-indexed layer indices with support for negative indexing (e.g. 0 is the first layer, -1 is the last layer). If not defined, will encrypt all layers if encryption-key flag is specified"},{"names":["--encryption-key"],"argument":"strings","description":"key with the encryption protocol to use needed to encrypt the image (e.g. jwe:/path/to/key.pem)"},{"names":["-f","--format"],"argument":"format","description":"format of the image manifest and metadata (default \"oci\")"},{"names":["-h","--help"],"argument":"","description":"help for commit"},{"names":["--iidfile"],"argument":"string","description":"Write the image ID to the file"},{"names":["--manifest"],"argument":"string","description":"create image with as part of the specified manifest list. Creates manifest if it does not exist"},{"names":["-q","--quiet"],"argument":"","description":"don't output progress information when writing images"},{"names":["--rm"],"argument":"","description":"remove the container and its content after committing it to an image. Default leaves the container and its content in place."},{"names":["--sign-by"],"argument":"FINGERPRINT","description":"sign the image using a GPG key with the specified FINGERPRINT"},{"names":["--squash"],"argument":"","description":"produce an image with only one layer"},{"names":["--timestamp"],"argument":"int","description":"set created timestamp to epoch seconds to allow for deterministic builds, defaults to current time"},{"names":["--tls-verify"],"argument":"","description":"Require HTTPS and verify certificates when accessing the registry. TLS verification cannot be used when talking to an insecure registry. (default true)"}]},{"name":"config","description":"Update image configuration settings","options":[{"names":["--add-history"],"argument":"","description":"add an entry for this operation to the image's history. Use BUILDAH_HISTORY environment variable to override. (default false)"},{"names":["-a","--annotation"],"argument":"annotation","description":"add annotation e.g. annotation=value, for the target image (default [])"},{"names":["--arch"],"argument":"architecture","description":"set architecture of the target image"},{"names":["--author"],"argument":"information","description":"set image author contact information"},{"names":["--cmd"],"argument":"command","description":"set the default command to run for containers based on the image"},{"names":["--comment"],"argument":"comment","description":"set a comment in the target image"},{"names":["--created-by"],"argument":"description","description":"set description of how the image was created"},{"names":["--domainname"],"argument":"name","description":"set a domain name for containers based on image"},{"names":["--entrypoint"],"argument":"entry point","description":"set entry point for containers based on image"},{"names":["-e","--env"],"argument":"environment variable","description":"add environment variable to be set when running containers based on image (default [])"},{"names":["--healthcheck"],"argument":"healthcheck","description":"set a healthcheck command for the target image"},{"names":["--healthcheck-interval"],"argument":"interval","description":"set the interval between runs of the `healthcheck` command for the target image"},{"names":["--healthcheck-retries"],"argument":"number","description":"set the number of times the `healthcheck` command has to fail"},{"names":["--healthcheck-start-period"],"argument":"time","description":"set the amount of time to wait after starting a container before a failed `healthcheck` command will count as a failure"},{"names":["--healthcheck-timeout"],"argument":"time","description":"set the maximum amount of time to wait for a `healthcheck` command for the target image"},{"names":["-h","--help"],"argument":"","description":"help for config"},{"names":["--history-comment"],"argument":"comment","description":"set a comment for the history of the target image"},{"names":["--hostname"],"argument":"name","description":"set a hostname for containers based on image"},{"names":["-l","--label"],"argument":"label","description":"add image configuration label e.g. label=value"},{"names":["--onbuild"],"argument":"strings","description":"add onbuild command to be run on images based on this image. Only supported on 'docker' formatted images"},{"names":["--os"],"argument":"operating system","description":"set operating system of the target image"},{"names":["-p","--port"],"argument":"port","description":"add port to expose when running containers based on image (default [])"},{"names":["--shell"],"argument":"shell","description":"add shell to run in containers"},{"names":["--stop-signal"],"argument":"stop signal","description":"set stop signal for containers based on image"},{"names":["-u","--user"],"argument":"user","description":"set default user to run inside containers based on image"},{"names":["-v","--volume"],"argument":"volume","description":"add default volume path to be created for containers based on image (default [])"},{"names":["--workingdir"],"argument":"directory","description":"set working directory for containers based on image"}]},{"name":"containers","description":"List working containers and their base images","options":[{"names":["-a","--all"],"argument":"","description":"also list non-buildah containers"},{"names":["-f","--filter"],"argument":"string","description":"filter output based on conditions provided"},{"names":["--format"],"argument":"string","description":"pretty-print containers using a Go template"},{"names":["-h","--help"],"argument":"","description":"help for containers"},{"names":["--json"],"argument":"","description":"output in JSON format"},{"names":["-n","--noheading"],"argument":"","description":"do not print column headings"},{"names":["--notruncate"],"argument":"","description":"do not truncate output"},{"names":["-q","--quiet"],"argument":"","description":"display only container IDs"}]},{"name":"copy","description":"Copy content into the container","options":[{"names":["--add-history"],"argument":"","description":"add an entry for this operation to the image's history. Use BUILDAH_HISTORY environment variable to override. (default false)"},{"names":["--chmod"],"argument":"string","description":"set the access permissions of the destination content"},{"names":["--chown"],"argument":"string","description":"set the user and group ownership of the destination content"},{"names":["--contextdir"],"argument":"string","description":"context directory path"},{"names":["--from"],"argument":"string","description":"use the specified container's or image's root directory as the source root directory"},{"names":["-h","--help"],"argument":"","description":"help for copy"},{"names":["--ignorefile"],"argument":"string","description":"path to .dockerignore file"},{"names":["-q","--quiet"],"argument":"","description":"don't output a digest of the newly-added/copied content"}]},{"name":"from","description":"Create a working container based on an image","options":[{"names":["--add-host"],"argument":"host:ip","description":"add a custom host-to-IP mapping (host:ip) (default [])"},{"names":["--arch"],"argument":"string","description":"set the ARCH of the image to the provided value instead of the architecture of the host (default \"amd64\")"},{"names":["--authfile"],"argument":"string","description":"path of the authentication file. Use REGISTRY_AUTH_FILE environment variable to override"},{"names":["--cap-add"],"argument":"strings","description":"add the specified capability when running (default [])"},{"names":["--cap-drop"],"argument":"strings","description":"drop the specified capability when running (default [])"},{"names":["--cert-dir"],"argument":"string","description":"use certificates at the specified path to access the registry"},{"names":["--cgroup-parent"],"argument":"string","description":"optional parent cgroup for the container"},{"names":["--cidfile"],"argument":"string","description":"write the container ID to the file"},{"names":["--cni-config-dir"],"argument":"directory","description":"directory of CNI configuration files (default \"/etc/cni/net.d\")"},{"names":["--cni-plugin-path"],"argument":"path","description":"path of CNI network plugins (default \"/usr/libexec/cni:/opt/cni/bin\")"},{"names":["--cpu-period"],"argument":"uint","description":"limit the CPU CFS (Completely Fair Scheduler) period"},{"names":["--cpu-quota"],"argument":"int","description":"limit the CPU CFS (Completely Fair Scheduler) quota"},{"names":["-c","--cpu-shares"],"argument":"uint","description":"CPU shares (relative weight)"},{"names":["--cpuset-cpus"],"argument":"string","description":"CPUs in which to allow execution (0-3, 0,1)"},{"names":["--cpuset-mems"],"argument":"string","description":"memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems."},{"names":["--creds"],"argument":"[username[:password]]","description":"use [username[:password]] for accessing the registry"},{"names":["--decryption-key"],"argument":"strings","description":"key needed to decrypt the image"},{"names":["--device"],"argument":"stringArray","description":"Additional devices to be used within containers (default [])"},{"names":["--dns-option"],"argument":"strings","description":"Set custom DNS options"},{"names":["--dns-search"],"argument":"strings","description":"Set custom DNS search domains"},{"names":["-f","--format"],"argument":"format","description":"format of the image manifest and metadata (default \"oci\")"},{"names":["-h","--help"],"argument":"","description":"help for from"},{"names":["--http-proxy"],"argument":"","description":"pass through HTTP Proxy environment variables (default true)"},{"names":["--ipc"],"argument":"path","description":"'private', path of IPC namespace to join, or 'host'"},{"names":["--isolation"],"argument":"type","description":"type of process isolation to use. Use BUILDAH_ISOLATION environment variable to override. (default \"rootless\")"},{"names":["-m","--memory"],"argument":"string","description":"memory limit (format: <number>[<unit>], where unit = b, k, m or g)"},{"names":["--memory-swap"],"argument":"string","description":"swap limit equal to memory plus swap: '-1' to enable unlimited swap"},{"names":["--name"],"argument":"name","description":"name for the working container"},{"names":["--network"],"argument":"string","description":"'private', 'none', 'ns:path' of network namespace to join, or 'host'"},{"names":["--os"],"argument":"OS","description":"prefer OS instead of the running OS when pulling images (default \"linux\")"},{"names":["--pid"],"argument":"path","description":"private, path of PID namespace to join, or 'host'"},{"names":["--pull"],"argument":"","description":"pull the image from the registry if newer or not present in store, if false, only pull the image if not present (default true)"},{"names":["--pull-always"],"argument":"","description":"pull the image even if the named image is present in store"},{"names":["--pull-never"],"argument":"","description":"do not pull the image, use the image present in store if available"},{"names":["-q","--quiet"],"argument":"","description":"don't output progress information when pulling images"},{"names":["--security-opt"],"argument":"stringArray","description":"security options (default [])"},{"names":["--shm-size"],"argument":"<number><unit>","description":"size of '/dev/shm'. The format is <number><unit>. (default \"65536k\")"},{"names":["--tls-verify"],"argument":"","description":"require HTTPS and verify certificates when accessing the registry. TLS verification cannot be used when talking to an insecure registry. (default true)"},{"names":["--ulimit"],"argument":"strings","description":"ulimit options (default [nproc=32768:32768])"},{"names":["--userns"],"argument":"path","description":"'container', path of user namespace to join, or 'host'"},{"names":["--userns-gid-map-group"],"argument":"name","description":"name of entries from /etc/subgid to use to set user namespace GID mapping"},{"names":["--userns-uid-map-user"],"argument":"name","description":"name of entries from /etc/subuid to use to set user namespace UID mapping"},{"names":["--uts"],"argument":"path","description":"private, :path of UTS namespace to join, or 'host'"},{"names":["--variant"],"argument":"variant","description":"override the variant of the specified image"},{"names":["-v","--volume"],"argument":"stringArray","description":"bind mount a volume into the container"}]},{"name":"images","description":"List images in local storage","options":[{"names":["-a","--all"],"argument":"","description":"show all images, including intermediate images from a build"},{"names":["--digests"],"argument":"","description":"show digests"},{"names":["-f","--filter"],"argument":"string","description":"filter output based on conditions provided"},{"names":["--format"],"argument":"string","description":"pretty-print images using a Go template"},{"names":["-h","--help"],"argument":"","description":"help for images"},{"names":["--history"],"argument":"","description":"display the image name history"},{"names":["--json"],"argument":"","description":"output in JSON format"},{"names":["--no-trunc"],"argument":"","description":"do not truncate output"},{"names":["-n","--noheading"],"argument":"","description":"do not print column headings"},{"names":["-q","--quiet"],"argument":"","description":"display only image IDs"}]},{"name":"info","description":"Display Buildah system information","options":[{"names":["--format"],"argument":"format","description":"use format as a Go template to format the output"},{"names":["-h","--help"],"argument":"","description":"help for info"}]},{"name":"inspect","description":"Inspect the configuration of a container or image","options":[{"names":["-f","--format"],"argument":"format","description":"use format as a Go template to format the output"},{"names":["-h","--help"],"argument":"","description":"help for inspect"},{"names":["-t","--type"],"argument":"type","description":"look at the item of the specified type (container or image) and name (default \"container\")"}]},{"name":"login","description":"Login to a container registry","options":[{"names":["--authfile"],"argument":"string","description":"path of the authentication file. Use REGISTRY_AUTH_FILE environment variable to override"},{"names":["--cert-dir"],"argument":"string","description":"use certificates at the specified path to access the registry"},{"names":["--get-login"],"argument":"","description":"Return the current login user for the registry (default true)"},{"names":["-h","--help"],"argument":"","description":"help for login"},{"names":["-p","--password"],"argument":"string","description":"Password for registry"},{"names":["--password-stdin"],"argument":"","description":"Take the password from stdin"},{"names":["--tls-verify"],"argument":"","description":"require HTTPS and verify certificates when accessing the registry. TLS verification cannot be used when talking to an insecure registry. (default true)"},{"names":["-u","--username"],"argument":"string","description":"Username for registry"}]},{"name":"logout","description":"Logout of a container registry","options":[{"names":["-a","--all"],"argument":"","description":"Remove the cached credentials for all registries in the auth file"},{"names":["--authfile"],"argument":"string","description":"path of the authentication file. Use REGISTRY_AUTH_FILE environment variable to override"},{"names":["-h","--help"],"argument":"","description":"help for logout"}]},{"name":"manifest","description":"Manipulate manifest lists and image indexes","options":[{"names":["-h","--help"],"argument":"","description":"help for manifest"}]},{"name":"mount","description":"Mount a working container's root filesystem","options":[{"names":["-h","--help"],"argument":"","description":"help for mount"}]},{"name":"pull","description":"Pull an image from the specified location","options":[{"names":["-a","--all-tags"],"argument":"","description":"download all tagged images in the repository"},{"names":["--arch"],"argument":"ARCH","description":"prefer ARCH instead of the architecture of the machine for choosing images (default \"amd64\")"},{"names":["--authfile"],"argument":"string","description":"path of the authentication file. Use REGISTRY_AUTH_FILE environment variable to override"},{"names":["--cert-dir"],"argument":"string","description":"use certificates at the specified path to access the registry"},{"names":["--creds"],"argument":"[username[:password]]","description":"use [username[:password]] for accessing the registry"},{"names":["--decryption-key"],"argument":"strings","description":"key needed to decrypt the image"},{"names":["-h","--help"],"argument":"","description":"help for pull"},{"names":["--os"],"argument":"OS","description":"prefer OS instead of the running OS for choosing images (default \"linux\")"},{"names":["--policy"],"argument":"string","description":"missing, always, or never. (default \"missing\")"},{"names":["-q","--quiet"],"argument":"","description":"don't output progress information when pulling images"},{"names":["--remove-signatures"],"argument":"","description":"don't copy signatures when pulling image"},{"names":["--tls-verify"],"argument":"","description":"require HTTPS and verify certificates when accessing the registry. TLS verification cannot be used when talking to an insecure registry. (default true)"},{"names":["--variant"],"argument":"variant","description":"override the variant of the specified image"}]},{"name":"push","description":"Push an image to a specified destination","options":[{"names":["--all"],"argument":"","description":"push all of the images referenced by the manifest list"},{"names":["--authfile"],"argument":"string","description":"path of the authentication file. Use REGISTRY_AUTH_FILE environment variable to override"},{"names":["--cert-dir"],"argument":"string","description":"use certificates at the specified path to access the registry"},{"names":["--creds"],"argument":"[username[:password]]","description":"use [username[:password]] for accessing the registry"},{"names":["--digestfile"],"argument":"string","description":"after copying the image, write the digest of the resulting image to the file"},{"names":["-D","--disable-compression"],"argument":"","description":"don't compress layers"},{"names":["--encrypt-layer"],"argument":"ints","description":"layers to encrypt, 0-indexed layer indices with support for negative indexing (e.g. 0 is the first layer, -1 is the last layer). If not defined, will encrypt all layers if encryption-key flag is specified"},{"names":["--encryption-key"],"argument":"strings","description":"key with the encryption protocol to use needed to encrypt the image (e.g. jwe:/path/to/key.pem)"},{"names":["-f","--format"],"argument":"string","description":"manifest type (oci, v2s1, or v2s2) to use when saving image using the 'dir:' transport (default is manifest type of source)"},{"names":["-h","--help"],"argument":"","description":"help for push"},{"names":["-q","--quiet"],"argument":"","description":"don't output progress information when pushing images"},{"names":["--remove-signatures"],"argument":"","description":"don't copy signatures when pushing image"},{"names":["--rm"],"argument":"","description":"remove the manifest list if push succeeds"},{"names":["--sign-by"],"argument":"FINGERPRINT","description":"sign the image using a GPG key with the specified FINGERPRINT"},{"names":["--tls-verify"],"argument":"","description":"require HTTPS and verify certificates when accessing the registry. TLS verification cannot be used when talking to an insecure registry. (default true)"}]},{"name":"rename","description":"Rename a container","options":[{"names":["-h","--help"],"argument":"","description":"help for rename"}]},{"name":"rm","description":"Remove one or more working containers","options":[{"names":["-a","--all"],"argument":"","description":"remove all containers"},{"names":["-h","--help"],"argument":"","description":"help for rm"}]},{"name":"rmi","description":"Remove one or more images from local storage","options":[{"names":["-a","--all"],"argument":"","description":"remove all images"},{"names":["-f","--force"],"argument":"","description":"force removal of the image and any containers using the image"},{"names":["-h","--help"],"argument":"","description":"help for rmi"},{"names":["-p","--prune"],"argument":"","description":"prune dangling images"}]},{"name":"run","description":"Run a command inside of the container","options":[{"names":["--add-history"],"argument":"","description":"add an entry for this operation to the image's history. Use BUILDAH_HISTORY environment variable to override. (default false)"},{"names":["--cap-add"],"argument":"strings","description":"add the specified capability (default [])"},{"names":["--cap-drop"],"argument":"strings","description":"drop the specified capability (default [])"},{"names":["--cni-config-dir"],"argument":"directory","description":"directory of CNI configuration files (default \"/etc/cni/net.d\")"},{"names":["--cni-plugin-path"],"argument":"path","description":"path of CNI network plugins (default \"/usr/libexec/cni:/opt/cni/bin\")"},{"names":["-h","--help"],"argument":"","description":"help for run"},{"names":["--hostname"],"argument":"string","description":"set the hostname inside of the container"},{"names":["--ipc"],"argument":"path","description":"'private', path of IPC namespace to join, or 'host'"},{"names":["--isolation"],"argument":"type","description":"type of process isolation to use. Use BUILDAH_ISOLATION environment variable to override."},{"names":["--mount"],"argument":"stringArray","description":"Attach a filesystem mount to the container (default [])"},{"names":["--network"],"argument":"string","description":"'private', 'none', 'ns:path' of network namespace to join, or 'host'"},{"names":["--no-pivot"],"argument":"","description":"do not use pivot root to jail process inside rootfs"},{"names":["--pid"],"argument":"path","description":"private, path of PID namespace to join, or 'host'"},{"names":["--runtime"],"argument":"path","description":"path to an alternate OCI runtime (default \"crun\")"},{"names":["--runtime-flag"],"argument":"strings","description":"add global flags for the container runtime"},{"names":["-t","--terminal"],"argument":"","description":"allocate a pseudo-TTY in the container"},{"names":["--user"],"argument":"user[:group]","description":"user[:group] to run the command as"},{"names":["--uts"],"argument":"path","description":"private, :path of UTS namespace to join, or 'host'"},{"names":["-v","--volume"],"argument":"stringArray","description":"bind mount a host location into the container while running the command"}]},{"name":"tag","description":"Add an additional name to a local image","options":[{"names":["-h","--help"],"argument":"","description":"help for tag"}]},{"name":"umount","description":"Unmount the root file system of the specified working containers","options":[{"names":["-a","--all"],"argument":"","description":"umount all of the currently mounted containers"},{"names":["-h","--help"],"argument":"","description":"help for umount"}]},{"name":"unshare","description":"Run a command in a modified user namespace","options":[{"names":["-h","--help"],"argument":"","description":"help for unshare"},{"names":["--mount"],"argument":"strings","description":"mount the specified containers (default [])"}]},{"name":"version","description":"Display the Buildah version information","options":[{"names":["-h","--help"],"argument":"","description":"help for version"}]}]}
