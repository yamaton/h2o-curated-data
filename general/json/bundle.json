{"name":"bundle","description":"bundle","options":[{"names":["--no-color"],"argument":"","description":"Print all output without color"},{"names":["--retry","-r"],"argument":"","description":"Specify the number of times you wish to attempt network commands"},{"names":["--verbose","-V"],"argument":"","description":"Print out additional logging information"}],"subcommands":[{"name":"install","description":"Install the gems specified by the Gemfile or Gemfile.lock","options":[{"names":["--binstubs"],"argument":"[=<directory>]","description":"Binstubs are scripts that wrap around executables. Bundler creates a small Ruby file (a binstub) that loads Bundler, runs the command, and puts it in bin/. This lets you link the binstub inside of an application to the exact gem version the application needs."},{"names":["--clean"],"argument":"","description":"On finishing the installation Bundler is going to remove any gems not present in the current Gemfile(5). Don´t worry, gems currently in use will not be removed."},{"names":["--deployment"],"argument":"","description":"In deployment mode, Bundler will ´roll-out´ the bundle for production or CI use. Please check carefully if you want to have this option enabled in your development environment."},{"names":["--redownload"],"argument":"","description":"Force download every gem, even if the required versions are already available locally."},{"names":["--frozen"],"argument":"","description":"Do not allow the Gemfile.lock to be updated after this install. Exits non-zero if there are going to be changes to the Gemfile.lock."},{"names":["--full-index"],"argument":"","description":"Bundler will not call Rubygems´ API endpoint (default) but download and cache a (currently big) index file of all gems. Performance can be improved for large bundles that seldom change by enabling this option."},{"names":["--gemfile"],"argument":"<gemfile>","description":"The location of the Gemfile(5) which Bundler should use. This defaults to a Gemfile(5) in the current working directory. In general, Bundler will assume that the location of the Gemfile(5) is also the project´s root and will try to find Gemfile.lock and vendor/cache relative to this location."},{"names":["--jobs","-j"],"argument":"[<number>]","description":"The maximum number of parallel download and install jobs. The default is the number of available processors."},{"names":["--local"],"argument":"","description":"Do not attempt to connect to rubygems.org. Instead, Bundler will use the gems already present in Rubygems´ cache or in vendor/cache. Note that if an appropriate platform-specific gem exists on rubygems.org it will not be found."},{"names":["--no-cache"],"argument":"","description":"Do not update the cache in vendor/cache with the newly bundled gems. This does not remove any gems in the cache but keeps the newly bundled gems from being cached during the install."},{"names":["--no-prune"],"argument":"","description":"Don´t remove stale gems from the cache when the installation finishes."},{"names":["--path"],"argument":"<path>","description":"The location to install the specified gems to. This defaults to Rubygems´ setting. Bundler shares this location with Rubygems, gem install ... will have gem installed there, too. Therefore, gems installed without a --path ... setting will show up by calling gem list. Accordingly, gems installed to other locations will not get listed."},{"names":["--quiet"],"argument":"","description":"Do not print progress information to the standard output. Instead, Bundler will exit using a status code ($?)."},{"names":["--retry"],"argument":"[<number>]","description":"Retry failed network or git requests for number times."},{"names":["--shebang"],"argument":"<ruby-executable>","description":"Uses the specified ruby executable (usually ruby) to execute the scripts created with --binstubs. In addition, if you use --binstubs together with --shebang jruby these executables will be changed to execute jruby instead."},{"names":["--standalone"],"argument":"[=<list>]","description":"Makes a bundle that can work without depending on Rubygems or Bundler at runtime. A space separated list of groups to install has to be specified. Bundler creates a directory named bundle and installs the bundle there. It also generates a bundle/bundler/setup.rb file to replace Bundler´s own setup in the manner required. Using this option implicitly sets path, which is a [remembered option][REMEMBERED OPTIONS]."},{"names":["--system"],"argument":"","description":"Installs the gems specified in the bundle to the system´s Rubygems location. This overrides any previous configuration of --path."},{"names":["--trust-policy"],"argument":"[<policy>]","description":"Apply the Rubygems security policy policy, where policy is one of HighSecurity, MediumSecurity, LowSecurity, AlmostNoSecurity, or NoSecurity. For more details, please see the Rubygems signing documentation linked below in SEE ALSO."},{"names":["--with"],"argument":"<list>","description":"A space-separated list of groups referencing gems to install. If an optional group is given it is installed. If a group is given that is in the remembered list of groups given to --without, it is removed from that list."},{"names":["--without"],"argument":"<list>","description":"A space-separated list of groups referencing gems to skip during installation. If a group is given that is in the remembered list of groups given to --with, it is removed from that list."}]},{"name":"update","description":"Update dependencies to their latest versions","options":[{"names":["--all"],"argument":"","description":"Update all gems specified in Gemfile."},{"names":["--group","-g"],"argument":"<name>","description":"Only update the gems in the specified group. For instance, you can update all gems in the development group with bundle update --group development. You can also call bundle update rails --group test to update the rails gem and all gems in the test group, for example."},{"names":["--source"],"argument":"<name>","description":"The name of a :git or :path source used in the Gemfile(5). For instance, with a :git source of http://github.com/rails/rails.git, you would call bundle update --source rails"},{"names":["--local"],"argument":"","description":"Do not attempt to fetch gems remotely and use the gem cache instead."},{"names":["--ruby"],"argument":"","description":"Update the locked version of Ruby to the current version of Ruby."},{"names":["--bundler"],"argument":"","description":"Update the locked version of bundler to the invoked bundler version."},{"names":["--full-index"],"argument":"","description":"Fall back to using the single-file index of all gems."},{"names":["--jobs","-j"],"argument":"[<number>]","description":"Specify the number of jobs to run in parallel. The default is the number of available processors."},{"names":["--retry"],"argument":"[<number>]","description":"Retry failed network or git requests for number times."},{"names":["--quiet"],"argument":"","description":"Only output warnings and errors."},{"names":["--redownload"],"argument":"","description":"Force downloading every gem."},{"names":["--patch"],"argument":"","description":"Prefer updating only to next patch version."},{"names":["--minor"],"argument":"","description":"Prefer updating only to next minor version."},{"names":["--major"],"argument":"","description":"Prefer updating to next major version (default)."},{"names":["--strict"],"argument":"","description":"Do not allow any gem to be updated past latest --patch | --minor | --major."},{"names":["--conservative"],"argument":"","description":"Use bundle install conservative update behavior and do not allow indirect dependencies to be updated."}]},{"name":"package","description":"Package the .gem files required by your application into the vendor/cache directory","options":[{"names":["-r","--retry"],"argument":"NUM","description":"# Specify the number of times you wish to attempt network commands"}]},{"name":"exec","description":"Execute a script in the current bundle","options":[{"names":["--keep-file-descriptors"],"argument":"","description":"Exec in Ruby 2.0 began discarding non-standard file descriptors. When this flag is passed, exec will revert to the 1.9 behaviour of passing all file descriptors to the new process."}]},{"name":"config","description":"Specify and read configuration options for Bundler","options":[]},{"name":"add","description":"Add the named gem to the Gemfile and run bundle install","options":[{"names":["--version","-v"],"argument":"","description":"Specify version requirements(s) for the added gem."},{"names":["--group","-g"],"argument":"","description":"Specify the group(s) for the added gem. Multiple groups should be separated by commas."},{"names":["--git"],"argument":"","description":"Specify the git source for the added gem."},{"names":["--github"],"argument":"","description":"Specify the github source for the added gem."},{"names":["--branch"],"argument":"","description":"Specify the git branch for the added gem."},{"names":["--ref"],"argument":"","description":"Specify the git ref for the added gem."},{"names":["--skip-install"],"argument":"","description":"Adds the gem to the Gemfile but does not install it."},{"names":["--optimistic"],"argument":"","description":"Adds optimistic declaration of version"},{"names":["--strict"],"argument":"","description":"Adds strict declaration of version"}]},{"name":"binstubs","description":"Generate binstubs for executables in a gem","options":[{"names":["--force"],"argument":"","description":"Overwrite existing binstubs if they exist."},{"names":["--path"],"argument":"","description":"The location to install the specified binstubs to. This defaults to bin."},{"names":["--standalone"],"argument":"","description":"Makes binstubs that can work without depending on Rubygems or Bundler at runtime."},{"names":["--shebang"],"argument":"","description":"Specify a different shebang executable name than the default (default ´ruby´)"},{"names":["--all"],"argument":"","description":"Create binstubs for all gems in the bundle."}]},{"name":"check","description":"Determine whether the requirements for your application are installed and available to Bundler","options":[{"names":["--dry-run"],"argument":"","description":"Locks the [Gemfile(5)][Gemfile(5)] before running the command."},{"names":["--gemfile"],"argument":"","description":"Use the specified gemfile instead of the [Gemfile(5)][Gemfile(5)]."},{"names":["--path"],"argument":"","description":"Specify a different path than the system default ($BUNDLE_PATH or $GEM_HOME). Bundler will remember this value for future installs on this machine."}]},{"name":"show","description":"Show the source location of a particular gem in the bundle","options":[{"names":["--paths"],"argument":"","description":"List the paths of all gems that are required by your [Gemfile(5)][Gemfile(5)], sorted by gem name."}]},{"name":"outdated","description":"Show all of the outdated gems in the current bundle","options":[{"names":["--local"],"argument":"","description":"Do not attempt to fetch gems remotely and use the gem cache instead."},{"names":["--pre"],"argument":"","description":"Check for newer pre-release gems."},{"names":["--source"],"argument":"","description":"Check against a specific source."},{"names":["--strict"],"argument":"","description":"Only list newer versions allowed by your Gemfile requirements, also respecting conservative update flags (--patch, --minor, --major)."},{"names":["--parseable","--porcelain"],"argument":"","description":"Use minimal formatting for more parseable output."},{"names":["--group"],"argument":"","description":"List gems from a specific group."},{"names":["--groups"],"argument":"","description":"List gems organized by groups."},{"names":["--minor"],"argument":"","description":"Prefer updating only to next minor version."},{"names":["--major"],"argument":"","description":"Prefer updating to next major version (default)."},{"names":["--patch"],"argument":"","description":"Prefer updating only to next patch version."},{"names":["--filter-major"],"argument":"","description":"Only list major newer versions."},{"names":["--filter-minor"],"argument":"","description":"Only list minor newer versions."},{"names":["--filter-patch"],"argument":"","description":"Only list patch newer versions."},{"names":["--only-explicit"],"argument":"","description":"Only list gems specified in your Gemfile, not their dependencies."}]},{"name":"console","description":"Start an IRB session in the current bundle","options":[{"names":["-r","--retry"],"argument":"NUM","description":"# Specify the number of times you wish to attempt network commands"}]},{"name":"open","description":"Open an installed gem in the editor","options":[]},{"name":"lock","description":"Generate a lockfile for your dependencies","options":[{"names":["--update"],"argument":"<*gems>","description":"Ignores the existing lockfile. Resolve then updates lockfile. Taking a list of gems or updating all gems if no list is given."},{"names":["--local"],"argument":"","description":"Do not attempt to connect to rubygems.org. Instead, Bundler will use the gems already present in Rubygems´ cache or in vendor/cache. Note that if a appropriate platform-specific gem exists on rubygems.org it will not be found."},{"names":["--print"],"argument":"","description":"Prints the lockfile to STDOUT instead of writing to the file system."},{"names":["--lockfile"],"argument":"<path>","description":"The path where the lockfile should be written to."},{"names":["--full-index"],"argument":"","description":"Fall back to using the single-file index of all gems."},{"names":["--add-platform"],"argument":"","description":"Add a new platform to the lockfile, re-resolving for the addition of that platform."},{"names":["--remove-platform"],"argument":"","description":"Remove a platform from the lockfile."},{"names":["--patch"],"argument":"","description":"If updating, prefer updating only to next patch version."},{"names":["--minor"],"argument":"","description":"If updating, prefer updating only to next minor version."},{"names":["--major"],"argument":"","description":"If updating, prefer updating to next major version (default)."},{"names":["--strict"],"argument":"","description":"If updating, do not allow any gem to be updated past latest --patch | --minor | --major."},{"names":["--conservative"],"argument":"","description":"If updating, use bundle install conservative update behavior and do not allow shared dependencies to be updated."}]},{"name":"viz","description":"Generate a visual representation of your dependencies","options":[{"names":["--file","-f"],"argument":"","description":"The name to use for the generated file. See --format option"},{"names":["--format","-F"],"argument":"","description":"This is output format option. Supported format is png, jpg, svg, dot ..."},{"names":["--requirements","-R"],"argument":"","description":"Set to show the version of each required dependency."},{"names":["--version","-v"],"argument":"","description":"Set to show each gem version."},{"names":["--without","-W"],"argument":"","description":"Exclude gems that are part of the specified named group."}]},{"name":"init","description":"Generate a simple Gemfile, placed in the current directory","options":[{"names":["--gemspec"],"argument":"","description":"Use the specified .gemspec to create the [Gemfile(5)][Gemfile(5)]"}]},{"name":"gem","description":"Create a simple gem, suitable for development with Bundler","options":[{"names":["--exe","-b","--bin"],"argument":"","description":"Specify that Bundler should create a binary executable (as exe/GEM_NAME) in the generated rubygem project. This binary will also be added to the GEM_NAME.gemspec manifest. This behavior is disabled by default."},{"names":["--no-exe"],"argument":"","description":"Do not create a binary (overrides --exe specified in the global config)."},{"names":["--coc"],"argument":"","description":"Add a CODE_OF_CONDUCT.md file to the root of the generated project. If this option is unspecified, an interactive prompt will be displayed and the answer will be saved in Bundler´s global config for future bundle gem use."},{"names":["--no-coc"],"argument":"","description":"Do not create a CODE_OF_CONDUCT.md (overrides --coc specified in the global config)."},{"names":["--ext"],"argument":"","description":"Add boilerplate for C extension code to the generated project. This behavior is disabled by default."},{"names":["--no-ext"],"argument":"","description":"Do not add C extension code (overrides --ext specified in the global config)."},{"names":["--mit"],"argument":"","description":"Add an MIT license to a LICENSE.txt file in the root of the generated project. Your name from the global git config is used for the copyright statement. If this option is unspecified, an interactive prompt will be displayed and the answer will be saved in Bundler´s global config for future bundle gem use."},{"names":["--no-mit"],"argument":"","description":"Do not create a LICENSE.txt (overrides --mit specified in the global config)."},{"names":["-t","--test"],"argument":"minitest","description":"Specify the test framework that Bundler should use when generating the project. Acceptable values are minitest, rspec and test-unit. The GEM_NAME.gemspec will be configured and a skeleton test/spec directory will be created based on this option. Given no option is specified:"},{"names":["--ci"],"argument":"github","description":"Specify the continuous integration service that Bundler should use when generating the project. Acceptable values are github, travis, gitlab and circle. A configuration file will be generated in the project directory. Given no option is specified:"},{"names":["--linter"],"argument":"rubocop","description":"Specify the linter and code formatter that Bundler should add to the project´s development dependencies. Acceptable values are rubocop and standard. A configuration file will be generated in the project directory. Given no option is specified:"},{"names":["-e","--edit"],"argument":"[=EDITOR]","description":"Open the resulting GEM_NAME.gemspec in EDITOR, or the default editor if not specified. The default is $BUNDLER_EDITOR, $VISUAL, or $EDITOR."}]},{"name":"platform","description":"Display platform compatibility information","options":[]},{"name":"clean","description":"Clean up unused gems in your Bundler directory","options":[{"names":["--dry-run"],"argument":"","description":"Print the changes, but do not clean the unused gems."},{"names":["--force"],"argument":"","description":"Force a clean even if --path is not set."}]},{"name":"doctor","description":"Display warnings about common problems","options":[{"names":["--quiet"],"argument":"","description":"Only output warnings and errors."},{"names":["--gemfile"],"argument":"<gemfile>","description":"The location of the Gemfile(5) which Bundler should use. This defaults to a Gemfile(5) in the current working directory. In general, Bundler will assume that the location of the Gemfile(5) is also the project´s root and will try to find Gemfile.lock and vendor/cache relative to this location."}]},{"name":"remove","description":"Removes gems from the Gemfile","options":[{"names":["--install"],"argument":"","description":"Runs bundle install after the given gems have been removed from the Gemfile, which ensures that both the lockfile and the installed gems on disk are also updated to remove the given gem(s)."}]}],"tldr":"> Dependency manager for the Ruby programming language.\n> More information: <https://bundler.io/man/bundle.1.html>.\n\n- Install all gems defined in the `Gemfile` expected in the working directory:\n\n`bundle install`\n\n- Execute a command in the context of the current bundle:\n\n`bundle exec {{command}} {{arguments}}`\n\n- Update all gems by the rules defined in the `Gemfile` and regenerate `Gemfile.lock`:\n\n`bundle update`\n\n- Update one or more specific gem(s) defined in the `Gemfile`:\n\n`bundle update {{gem_name}} {{gem_name}}`\n\n- Update one or more specific gems(s) defined in the `Gemfile` but only to the next patch version:\n\n`bundle update --patch {{gem_name}} {{gem_name}}`\n\n- Update all gems within the given group in the `Gemfile`:\n\n`bundle update --group {{development}}`\n\n- List installed gems in the `Gemfile` with newer versions available:\n\n`bundle outdated`\n\n- Create a new gem skeleton:\n\n`bundle gem {{gem_name}}`\n"}
