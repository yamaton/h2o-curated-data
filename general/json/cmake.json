{"name":"cmake","description":"cmake","options":[{"names":["-S"],"argument":"<path-to-source>","description":"Path to root directory of the CMake project to build."},{"names":["-B"],"argument":"<path-to-build>","description":"Path to directory which CMake will use as the root of build directory."},{"names":["-C"],"argument":"<initial-cache>","description":"Pre-load a script to populate the cache."},{"names":["-D"],"argument":"<var>:<type>=<value>","description":"Create or update a CMake CACHE entry."},{"names":["-U"],"argument":"<globbing_expr>","description":"Remove matching entries from CMake CACHE."},{"names":["-G"],"argument":"<generator-name>","description":"Specify a build system generator."},{"names":["-T"],"argument":"<toolset-spec>","description":"Toolset specification for the generator, if supported."},{"names":["-A"],"argument":"<platform-name>","description":"Specify platform name if supported by generator."},{"names":["-Wno-dev"],"argument":"","description":"Suppress developer warnings."},{"names":["-Wdev"],"argument":"","description":"Enable developer warnings."},{"names":["-Werror"],"argument":"dev","description":"Make developer warnings errors."},{"names":["-Wno-error"],"argument":"dev","description":"Make developer warnings not errors."},{"names":["-Wdeprecated"],"argument":"","description":"Enable deprecated functionality warnings."},{"names":["-Wno-deprecated"],"argument":"","description":"Suppress deprecated functionality warnings."},{"names":["-Werror"],"argument":"deprecated","description":"Make deprecated macro and function warnings errors."},{"names":["-Wno-error"],"argument":"deprecated","description":"Make deprecated macro and function warnings not errors."},{"names":["-L"],"argument":"[A][H]","description":"List non-advanced cached variables."},{"names":["-N"],"argument":"","description":"View mode only."},{"names":["--graphviz"],"argument":"[file]","description":"Generate graphviz of dependencies, see CMakeGraphVizOptions for more."},{"names":["--system-information"],"argument":"[file]","description":"Dump information about this system."},{"names":["--log-level"],"argument":"<ERROR|WARNING|NOTICE|STATUS|VERBOSE|DEBUG|TRACE>","description":"Set the log level."},{"names":["--debug-trycompile"],"argument":"","description":"Do not delete the try_compile() build tree. Only useful on one try_compile() at a time."},{"names":["--debug-output"],"argument":"","description":"Put cmake in a debug mode."},{"names":["--trace"],"argument":"","description":"Put cmake in trace mode."},{"names":["--trace-expand"],"argument":"","description":"Put cmake in trace mode."},{"names":["--trace-source"],"argument":"<file>","description":"Put cmake in trace mode, but output only lines of a specified file."},{"names":["--trace-redirect"],"argument":"<file>","description":"Put cmake in trace mode and redirect trace output to a file instead of stderr."},{"names":["--warn-uninitialized"],"argument":"","description":"Warn about uninitialized values."},{"names":["--warn-unused-vars"],"argument":"","description":"Warn about unused variables."},{"names":["--no-warn-unused-cli"],"argument":"","description":"Don’t warn about command line options."},{"names":["--check-system-vars"],"argument":"","description":"Find problems with variable usage in system files."},{"names":["--build"],"argument":"<dir>","description":"Project binary directory to be built. This is required and must be first."},{"names":["--parallel","-j"],"argument":"[<jobs>]","description":"The maximum number of concurrent processes to use when building. If <jobs> is omitted the native build tool’s default number is used."},{"names":["--target","-t"],"argument":"<tgt>...","description":"Build <tgt> instead of the default target. Multiple targets may be given, separated by spaces."},{"names":["--config"],"argument":"<cfg>","description":"For multi-configuration tools, choose configuration <cfg>."},{"names":["--clean-first"],"argument":"","description":"Build target clean first, then build. (To clean only, use --target clean.)"},{"names":["--use-stderr"],"argument":"","description":"Ignored. Behavior is default in CMake >= 3.0."},{"names":["--verbose","-v"],"argument":"","description":"Enable verbose output - if supported - including the build commands to be executed."},{"names":["--"],"argument":"","description":"Pass remaining options to the native tool."},{"names":["--install"],"argument":"<dir>","description":"Project binary directory to install. This is required and must be first."},{"names":["--config"],"argument":"<cfg>","description":"For multi-configuration generators, choose configuration <cfg>."},{"names":["--component"],"argument":"<comp>","description":"Component-based install. Only install component <comp>."},{"names":["--prefix"],"argument":"<prefix>","description":"Override the installation prefix, CMAKE_INSTALL_PREFIX."},{"names":["--strip"],"argument":"","description":"Strip before installing."},{"names":["-v","--verbose"],"argument":"","description":"Enable verbose output."},{"names":["--zstd"],"argument":"","description":"Compress the resulting archive with Zstandard."},{"names":["--files-from"],"argument":"<file>","description":"Read file names from the given file, one per line. Blank lines are ignored. Lines may not start in - except for --add-file=<name> to add files whose names start in -."},{"names":["--format"],"argument":"<format>","description":"Specify the format of the archive to be created. Supported formats are: 7zip, gnutar, pax, paxr (restricted pax, default), and zip."},{"names":["--mtime"],"argument":"<date>","description":"Specify modification time recorded in tarball entries."},{"names":["--help-full"],"argument":"[<f>]","description":"Print all help manuals and exit."},{"names":["--help-manual"],"argument":"<man> [<f>]","description":"Print one help manual and exit."},{"names":["--help-manual-list"],"argument":"[<f>]","description":"List help manuals available and exit."},{"names":["--help-command"],"argument":"<cmd> [<f>]","description":"Print help for one command and exit."},{"names":["--help-command-list"],"argument":"[<f>]","description":"List commands with help available and exit."},{"names":["--help-commands"],"argument":"[<f>]","description":"Print cmake-commands manual and exit."},{"names":["--help-module"],"argument":"<mod> [<f>]","description":"Print help for one module and exit."},{"names":["--help-module-list"],"argument":"[<f>]","description":"List modules with help available and exit."},{"names":["--help-modules"],"argument":"[<f>]","description":"Print cmake-modules manual and exit."},{"names":["--help-policy"],"argument":"<cmp> [<f>]","description":"Print help for one policy and exit."},{"names":["--help-policy-list"],"argument":"[<f>]","description":"List policies with help available and exit."},{"names":["--help-policies"],"argument":"[<f>]","description":"Print cmake-policies manual and exit."},{"names":["--help-property"],"argument":"<prop> [<f>]","description":"Print help for one property and exit."},{"names":["--help-property-list"],"argument":"[<f>]","description":"List properties with help available and exit."},{"names":["--help-properties"],"argument":"[<f>]","description":"Print cmake-properties manual and exit."},{"names":["--help-variable"],"argument":"<var> [<f>]","description":"Print help for one variable and exit."},{"names":["--help-variable-list"],"argument":"[<f>]","description":"List variables with help available and exit."},{"names":["--help-variables"],"argument":"[<f>]","description":"Print cmake-variables manual and exit."}],"version":"cmake version 3.16.3","tldr":"# cmake\n\n> Cross-platform build automation system, that generates recipes for native build systems.\n> More information: <https://cmake.org/cmake/help/latest/manual/cmake.1.html>.\n\n- Generate a build recipe in the current directory with `CMakeLists.txt` from a project directory:\n\n`cmake {{path/to/project_directory}}`\n\n- Generate a build recipe, with build type set to `Release` with CMake variable:\n\n`cmake {{path/to/project_directory}} -D {{CMAKE_BUILD_TYPE=Release}}`\n\n- Use a generated recipe in a given directory to build artifacts:\n\n`cmake --build {{path/to/build_directory}}`\n\n- Install the build artifacts into `/usr/local/` and strip debugging symbols:\n\n`cmake --install {{path/to/build_directory}} --strip`\n\n- Install the build artifacts using the custom prefix for paths:\n\n`cmake --install {{path/to/build_directory}} --strip --prefix {{path/to/directory}}`\n\n- Run a custom build target:\n\n`cmake --build {{path/to/build_directory}} --target {{target_name}}`\n"}
