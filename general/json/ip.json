{"name":"ip","description":"ip","usage":"ip [ OPTIONS ] OBJECT { COMMAND | help }\n\nip [ -force ] -batch filename\n\nOBJECT := { link | address | addrlabel | route | rule | neigh | ntable | tunnel | tuntap | maddress\n        | mroute | mrule | monitor | xfrm | netns | l2tp | tcp_metrics | token | macsec | vrf |\n        mptcp | ioam }\n\nOPTIONS := { -V[ersion] | -h[uman-readable] | -s[tatistics] | -d[etails] | -r[esolve] | -iec |\n        -f[amily] { inet | inet6 | link } | -4 | -6 | -B | -0 | -l[oops] { maximum-addr-flush-at‐\n        tempts } | -o[neline] | -rc[vbuf] [size] | -t[imestamp] | -ts[hort] | -n[etns] name |\n        -N[umeric] | -a[ll] | -c[olor] | -br[ief] | -j[son] | -p[retty] }","options":[{"names":["-f"],"argument":"","description":"{ inet | inet6 | link } | -4 | -6 | -B | -0 | -l[oops] { maximum-addr-flush-at‐"},{"names":["-family"],"argument":"","description":"{ inet | inet6 | link } | -4 | -6 | -B | -0 | -l[oops] { maximum-addr-flush-at‐"},{"names":["-f"],"argument":"{ inet | inet6 | link }","description":"| -4 | -6 | -B | -0 | -l[oops] { maximum-addr-flush-at‐"},{"names":["-family"],"argument":"{ inet | inet6 | link }","description":"| -4 | -6 | -B | -0 | -l[oops] { maximum-addr-flush-at‐"},{"names":["-N"],"argument":"","description":"| -a[ll] | -c[olor] | -br[ief] | -j[son] | -p[retty] }"},{"names":["-Numeric"],"argument":"","description":"| -a[ll] | -c[olor] | -br[ief] | -j[son] | -p[retty] }"},{"names":["-V","-Version"],"argument":"","description":"Print the version of the ip utility and exit."},{"names":["-h","-human","-human-readable"],"argument":"","description":"output statistics with human readable values followed by suffix."},{"names":["-b","-batch"],"argument":"<FILENAME>","description":"Read commands from provided file or standard input and invoke them. First failure will cause termination of ip."},{"names":["-force"],"argument":"","description":"Don't terminate ip on errors in batch mode. If there were any errors during execution of the commands, the application return code will be non zero."},{"names":["-s","-stats","-statistics"],"argument":"","description":"Output more information. If the option appears twice or more, the amount of information increases. As a rule, the information is statistics or some time values."},{"names":["-d","-details"],"argument":"","description":"Output more detailed information."},{"names":["-l","-loops"],"argument":"<COUNT>","description":"Specify maximum number of loops the 'ip address flush' logic will attempt before giving up. The default is 10. Zero (0) means loop until all addresses are removed."},{"names":["-f","-family"],"argument":"<FAMILY>","description":"Specifies the protocol family to use. The protocol family identifier can be one of inet, inet6, bridge, mpls or link. If this option is not present, the protocol family is guessed from other arguments. If the rest of the command line does not give enough information to guess the family, ip falls back to the default one, usually inet or any. link is a special family identifier meaning that no networking protocol is involved."},{"names":["-4"],"argument":"","description":"shortcut for -family inet."},{"names":["-6"],"argument":"","description":"shortcut for -family inet6."},{"names":["-B"],"argument":"","description":"shortcut for -family bridge."},{"names":["-M"],"argument":"","description":"shortcut for -family mpls."},{"names":["-0"],"argument":"","description":"shortcut for -family link."},{"names":["-o","-oneline"],"argument":"","description":"output each record on a single line, replacing line feeds with the '\\' character. This is convenient when you want to count records with wc(1) or to grep(1) the output."},{"names":["-r","-resolve"],"argument":"","description":"use the system's name resolver to print DNS names instead of host addresses."},{"names":["-n","-netns"],"argument":"<NETNS>","description":"switches ip to the specified network namespace NETNS. Actually it just simplifies executing of:"},{"names":["-a","-all"],"argument":"","description":"executes specified command over all objects, it depends if command supports this option."},{"names":["-t","-timestamp"],"argument":"","description":"display current time when using monitor option."},{"names":["-ts","-tshort"],"argument":"","description":"Like -timestamp, but use shorter format."},{"names":["-rc","-rcvbuf"],"argument":"<SIZE>","description":"Set the netlink socket receive buffer size, defaults to 1MB."},{"names":["-iec"],"argument":"","description":"print human readable rates in IEC units (e.g. 1Ki = 1024)."},{"names":["-br","-brief"],"argument":"","description":"Print only basic information in a tabular format for better readability. This option is currently only supported by ip addr show , ip link show & ip neigh show commands."},{"names":["-j","-json"],"argument":"","description":"Output results in JavaScript Object Notation (JSON)."},{"names":["-p","-pretty"],"argument":"","description":"The default JSON format is compact and more efficient to parse but hard for most users to read. This flag adds indentation for readability."}],"subcommands":[{"name":"address","aliases":["addr","a"],"description":"protocol (IP or IPv6) address on a device.","usage":"ip [ OPTIONS ] address  { COMMAND | help }\n\nip address { add | change | replace } IFADDR dev IFNAME [ LIFETIME ] [ CONFFLAG-LIST ]\n\nip address del IFADDR dev IFNAME [ mngtmpaddr ]\n\nip address { save | flush } [ dev IFNAME ] [ scope SCOPE-ID ] [ metric METRIC ] [ to PREFIX ] [ FLAG-LIST ] [ label PATTERN ] [ up ]\n\nip address [ show [ dev IFNAME ] [ scope SCOPE-ID ] [ to PREFIX ] [ FLAG-LIST ] [ label PATTERN ] [ master DEVICE ] [ type TYPE ] [ vrf NAME ] [ up ] ]\n\nip address { showdump | restore }\n\nIFADDR := PREFIX | ADDR peer PREFIX [ broadcast ADDR ] [ anycast ADDR ] [ label LABEL ] [ scope SCOPE-ID ]\n\nSCOPE-ID := [ host | link | global | NUMBER ]\n\nFLAG-LIST := [ FLAG-LIST ] FLAG\n\nFLAG := [ [-]permanent | [-]dynamic | [-]secondary | [-]primary | [-]tentative | [-]deprecated | [-]dadfailed | [-]temporary | CONFFLAG-LIST ]\n\nCONFFLAG-LIST := [ CONFFLAG-LIST ] CONFFLAG\n\nCONFFLAG := [ home | mngtmpaddr | nodad | optimstic | noprefixroute | autojoin ]\n\nLIFETIME := [ valid_lft LFT ] [ preferred_lft LFT ]\n\nLFT := [ forever | SECONDS ]\n\nTYPE := [ bridge | bridge_slave | bond | bond_slave | can | dummy | hsr | ifb | ipoib | macvlan | macvtap | vcan | veth | vlan | vxlan | ip6tnl | ipip | sit | gre | gretap | erspan | ip6gre | ip6gretap | ip6erspan | vti | vrf | nlmon | ipvlan | lowpan | geneve | macsec ]","options":[{"names":["-tentative"],"argument":"","description":"(IPv6 only) only list addresses which are not in the process of duplicate address detection currently."},{"names":["-deprecated"],"argument":"","description":"(IPv6 only) only list addresses not being deprecated."},{"names":["-dadfailed"],"argument":"","description":"(IPv6 only) only list addresses which have not failed duplicate address detection."},{"names":["-temporary","-secondary"],"argument":"","description":"These flags are aliases for primary."},{"names":["-temporary"],"argument":"or -secondary","description":"These flags are aliases for primary."},{"names":["-primary"],"argument":"","description":"This is an alias for temporary or secondary."}],"subcommands":[{"name":"add","description":"add object","options":[]},{"name":"del","description":"delete object","options":[]},{"name":"show","aliases":["list"],"description":"show object","options":[]}]},{"name":"addrlabel","description":"label configuration for protocol address selection.","usage":"ip addrlabel  { COMMAND | help }\n\nip addrlabel { add | del } prefix PREFIX [ dev DEV ] [ label NUMBER ]\n\nip addrlabel { list | flush }","options":[],"subcommands":[{"name":"add","description":"add object","options":[]},{"name":"del","description":"delete object","options":[]},{"name":"show","aliases":["list"],"description":"show object","options":[]}]},{"name":"ioam","description":"manage IOAM namespaces and IOAM schemas.","usage":"ip ioam  { COMMAND | help }\n\nip ioam namespace show\n\nip ioam namespace add ID  [ data DATA32 ]  [ wide DATA64 ]\n\nip ioam namespace del ID\n\nip ioam schema show\n\nip ioam schema add ID DATA\n\nip ioam schema del ID\n\nip ioam namespace set ID schema  { ID | none }","options":[],"subcommands":[{"name":"namespace","description":"namespace","options":[],"subcommands":[{"name":"add","description":"add object","options":[]},{"name":"del","description":"delete object","options":[]},{"name":"show","aliases":["list"],"description":"show object","options":[]}]},{"name":"schema","description":"schema","options":[],"subcommands":[{"name":"add","description":"add object","options":[]},{"name":"del","description":"delete object","options":[]},{"name":"show","aliases":["list"],"description":"show object","options":[]}]}]},{"name":"l2tp","description":"tunnel ethernet over IP (L2TPv3).","usage":"ip [ OPTIONS ] l2tp  { COMMAND | help }\n\nip l2tp add tunnel\n        remote ADDR local ADDR\n        tunnel_id ID peer_tunnel_id ID\n        [ encap { ip | udp } ]\n        [ udp_sport PORT  ] [ udp_dport PORT  ]\n        [ udp_csum { on | off } ]\n        [ udp6_csum_tx { on | off } ]\n        [ udp6_csum_rx { on | off } ]\nip l2tp add session [ name NAME  ]\n        tunnel_id ID session_id ID peer_session_id ID\n        [ cookie HEXSTR  ] [ peer_cookie HEXSTR  ]\n        [ l2spec_type { none | default } ]\n        [ seq { none | send | recv | both } ]\nip l2tp del tunnel tunnel_id ID\nip l2tp del session tunnel_id ID session_id ID\nip l2tp show tunnel [ tunnel_id ID ]\nip l2tp show session [ tunnel_id ID.B ] [ session_id ID ]\nNAME := STRING\nADDR := { IP_ADDRESS | any }\nPORT := { NUMBER }\nID := { NUMBER }\nHEXSTR := { 8 or 16 hex digits (4 / 8 bytes) }","options":[],"subcommands":[{"name":"add","description":"add object","options":[]},{"name":"del","description":"delete object","options":[]},{"name":"show","aliases":["list"],"description":"show object","options":[]}]},{"name":"link","description":"network device.","usage":"ip link  { COMMAND | help }\n\nip link add [ link DEVICE ] [ name ] NAME\n        [ txqueuelen PACKETS ]\n        [ address LLADDR ] [ broadcast LLADDR ]\n        [ mtu MTU ] [ index IDX ]\n        [ numtxqueues QUEUE_COUNT ] [ numrxqueues QUEUE_COUNT ]\n        [ gso_max_size BYTES ] [ gso_max_segs SEGMENTS ]\n        type TYPE [ ARGS ]\n\nip link delete { DEVICE | group GROUP } type TYPE [ ARGS ]\n\nip link set { DEVICE | group GROUP }\n        [ { up | down } ]\n        [ type ETYPE TYPE_ARGS ]\n        [ arp { on | off } ]\n        [ dynamic { on | off } ]\n        [ multicast { on | off } ]\n        [ allmulticast { on | off } ]\n        [ promisc { on | off } ]\n        [ protodown { on | off } ]\n        [ protodown_reason PREASON { on | off } ]\n        [ trailers { on | off } ]\n        [ txqueuelen PACKETS ]\n        [ name NEWNAME ]\n        [ address LLADDR ]\n        [ broadcast LLADDR ]\n        [ mtu MTU ]\n        [ netns { PID | NETNSNAME } ]\n        [ link-netnsid ID ]\n        [ alias NAME ]\n        [ vf NUM [ mac LLADDR ]\n                 [ VFVLAN-LIST ]\n                 [ rate TXRATE ]\n                 [ max_tx_rate TXRATE ]\n                 [ min_tx_rate TXRATE ]\n                 [ spoofchk { on | off } ]\n                 [ query_rss { on | off } ]\n                 [ state { auto | enable | disable } ]\n                 [ trust { on | off } ]\n                 [ node_guid eui64 ]\n                 [ port_guid eui64 ] ]\n        [ { xdp | xdpgeneric | xdpdrv | xdpoffload } { off |\n                object FILE [ section NAME ] [ verbose ] |\n                pinned FILE } ]\n        [ master DEVICE ]\n        [ nomaster ]\n        [ vrf NAME ]\n        [ addrgenmode { eui64 | none | stable_secret | random } ]\n        [ macaddr [ MACADDR ]\n                  [ { flush | add | del } MACADDR ]\n                  [ set MACADDR ] ]\n\n          ip link show [ DEVICE | group GROUP ] [ up ] [ master DEVICE ] [ type ETYPE ] [ vrf NAME ]\n\n          ip link xstats type TYPE [ ARGS ]\n\n          ip link afstats [ dev DEVICE ]\n\n          ip link help [ TYPE ]\n\n          TYPE := [ bridge | bond | can | dummy | hsr | ifb | ipoib | macvlan | macvtap | vcan | vxcan | veth | vlan | vxlan | ip6tnl | ipip | sit | gre | gretap | erspan | ip6gre | ip6gretap | ip6erspan | vti | nlmon | ipvlan | ipvtap | lowpan | geneve | bareudp | vrf | macsec | netdevsim | rmnet | xfrm ]\n\n          ETYPE := [ TYPE | bridge_slave | bond_slave ]\n\n          VFVLAN-LIST := [ VFVLAN-LIST ] VFVLAN\n\n          VFVLAN := [ vlan VLANID [ qos VLAN-QOS ] [ proto VLAN-PROTO ] ]\n\n  ip link property add dev DEVICE [ altname NAME .. ]\n\n  ip link property del dev DEVICE [ altname NAME .. ]","options":[]},{"name":"maddress","description":"multicast address.","usage":"ip [ OPTIONS ] maddress  { COMMAND | help }\n\nip maddress [ add | del ] MULTIADDR dev NAME\n\nip maddress show [ dev NAME ]","options":[]},{"name":"monitor","description":"watch for netlink messages.","usage":"ip monitor [ all | OBJECT-LIST ] [ file FILENAME ] [ label ] [ all-nsid ] [ dev DEVICE ]","options":[{"names":["-t","-timestamp"],"argument":"","description":"Prints timestamp before the event message on the separated line in format:"},{"names":["-ts","-tshort"],"argument":"","description":"Prints short timestamp before the event message on the same line in format:"}]},{"name":"mptcp","description":"manage MPTCP path manager.","usage":"ip [ OPTIONS ] mptcp { endpoint  | limits  | help  }\n\nip mptcp endpoint add IFADDR [ port PORT ] [ dev IFNAME ] [ id ID ] [ FLAG-LIST ]\n\nip mptcp endpoint del id ID\n\nip mptcp endpoint show [ id ID ]\n\nip mptcp endpoint flush\n\nFLAG-LIST := [ FLAG-LIST ] FLAG\n\nFLAG := [ signal | subflow | backup ]\n\nip mptcp limits set [ subflow SUBFLOW_NR ] [ add_addr_accepted ADD_ADDR_ACCEPTED_NR ]\n\nip mptcp limits show\n\nip mptcp monitor","options":[]},{"name":"mroute","description":"multicast routing cache entry.","usage":"ip mroute show [ [  to  ] PREFIX ] [ from PREFIX ] [ iif DEVICE ] [ table TABLE_ID ]","options":[]},{"name":"neighbour","description":"manage ARP or NDISC cache entries.","usage":"ip [ OPTIONS ] neigh  { COMMAND | help }\n\nip neigh { add | del | change | replace } { ADDR [ lladdr LLADDR ] [ nud STATE ] | proxy ADDR } [ dev DEV ] [ router ] [ extern_learn ]\n\nip neigh { show | flush } [ proxy ] [ to PREFIX ] [ dev DEV ] [ nud STATE ] [ vrf NAME ]\n\nip neigh get ADDR dev DEV\n\nSTATE := { permanent | noarp | stale | reachable | none | incomplete | delay | probe | failed }","options":[]},{"name":"netns","description":"manage network namespaces.","usage":"ip [ OPTIONS ] netns  { COMMAND | help }\n\nip netns [ list ]\n\nip netns add NETNSNAME\n\nip netns attach NETNSNAME PID\n\nip [-all] netns del [ NETNSNAME ]\n\nip netns set NETNSNAME NETNSID\n\nNETNSID := auto | POSITIVE-INT\n\nip netns identify [ PID ]\n\nip netns pids NETNSNAME\n\nip [-all] netns exec [ NETNSNAME ] command...\n\nip netns monitor\n\nip netns list-id [ target-nsid POSITIVE-INT ] [ nsid POSITIVE-INT ]","options":[]},{"name":"ntable","description":"manage the neighbor cache's operation.","usage":"ip [ OPTIONS ] ntable  { COMMAND | help }\n\nip ntable change name NAME [ dev DEV ] [ thresh1 VAL ] [ thresh2 VAL ] [ thresh3 VAL ] [ gc_int MSEC ] [ base_reachable MSEC ] [ retrans MSEC ] [ gc_stale MSEC ] [ delay_probe MSEC ] [ queue LEN ] [ app_probs VAL ] [ ucast_probes VAL ] [ mcast_probes VAL ] [ anycast_delay MSEC ] [ proxy_delay MSEC ] [ proxy_queue LEN ] [ locktime MSEC ]\n\nip ntable show [ dev DEV ] [ name NAME ]","options":[]},{"name":"route","description":"routing table entry.","usage":"ip [ ip-OPTIONS ] route  { COMMAND | help }\n\nip route { show | flush } SELECTOR\n\nip route save SELECTOR\n\nip route restore\n\nip route get ROUTE_GET_FLAGS ADDRESS [ from ADDRESS iif STRING  ] [ oif STRING ] [ mark MARK ] [ tos TOS ] [ vrf NAME ] [ ipproto PROTOCOL ] [ sport NUMBER ] [ dport NUMBER ]\n\nip route { add | del | change | append | replace } ROUTE\n\nSELECTOR := [ root PREFIX ] [ match PREFIX ] [ exact PREFIX ] [ table TABLE_ID ] [ vrf NAME ] [ proto RTPROTO ] [ type TYPE ] [ scope SCOPE ]\n\nROUTE := NODE_SPEC [ INFO_SPEC ]\n\nNODE_SPEC := [ TYPE ] PREFIX [ tos TOS ] [ table TABLE_ID ] [ proto RTPROTO ] [ scope SCOPE ] [ metric METRIC ] [ ttl-propagate { enabled | disabled } ]\n\nINFO_SPEC := { NH | nhid ID } OPTIONS FLAGS [ nexthop NH ] ...\n\nNH := [ encap ENCAP ] [ via [ FAMILY ] ADDRESS ] [ dev STRING ] [ weight NUMBER ] NHFLAGS\n\nFAMILY := [ inet | inet6 | mpls | bridge | link ]\n\nOPTIONS := FLAGS [ mtu NUMBER ] [ advmss NUMBER ] [ as [ to ] ADDRESS ] rtt TIME ] [ rttvar TIME ] [ reordering NUMBER ] [ window NUMBER ] [ cwnd NUMBER ] [ ssthresh NUMBER ] [ realms REALM ] [ rto_min TIME ] [ initcwnd NUMBER ] [ initrwnd NUMBER ] [ features FEATURES ] [ quickack BOOL ] [ congctl NAME ] [ pref PREF ] [ expires TIME ] [ fastopen_no_cookie BOOL ]\n\nTYPE := [ unicast | local | broadcast | multicast | throw | unreachable | prohibit | blackhole | nat ]\n\nTABLE_ID := [ local| main | default | all | NUMBER ]\n\nSCOPE := [ host | link | global | NUMBER ]\n\nNHFLAGS := [ onlink | pervasive ]\n\nRTPROTO := [ kernel | boot | static | NUMBER ]\n\nFEATURES := [ ecn | ]\n\nPREF := [ low | medium | high ]\n\nENCAP := [ ENCAP_MPLS | ENCAP_IP | ENCAP_BPF | ENCAP_SEG6 | ENCAP_SEG6LOCAL | ENCAP_IOAM6 ]\n\nENCAP_MPLS := mpls [ LABEL ] [ ttl TTL ]\n\nENCAP_IP := ip id TUNNEL_ID dst REMOTE_IP [ src SRC ] [ tos TOS ] [ ttl TTL ]\n\nENCAP_BPF := bpf [ in PROG ] [ out PROG ] [ xmit PROG ] [ headroom SIZE ]\n\nENCAP_SEG6 := seg6 mode [ encap | inline | l2encap ] segs SEGMENTS [ hmac KEYID ]\n\nENCAP_SEG6LOCAL := seg6local action SEG6_ACTION [ SEG6_ACTION_PARAM ] [ count ]\n\nENCAP_IOAM6 := ioam6 trace prealloc type IOAM6_TRACE_TYPE ns IOAM6_NAMESPACE size IOAM6_TRACE_SIZE\n\nROUTE_GET_FLAGS :=  [ fibmatch  ]","options":[]},{"name":"rule","description":"rule in routing policy database.","usage":"ip [ OPTIONS ] rule { COMMAND | help }\n\nip rule [ list [ SELECTOR ]]\n\nip rule { add | del } SELECTOR ACTION\n\nip rule { flush | save | restore }\n\nSELECTOR := [ not ] [ from PREFIX ] [ to PREFIX ] [ tos TOS ] [ fwmark FWMARK[/MASK] ] [ iif STRING ] [ oif STRING ] [ pref NUMBER ] [ l3mdev ] [ uidrange NUMBER-NUMBER ] [ ipproto PROTOCOL ] [ sport [ NUMBER | NUMBER-NUMBER ] ] [ dport [ NUMBER | NUMBER-NUMBER ] ] [ tun_id TUN_ID ]\n\nACTION := [ table TABLE_ID ] [ protocol PROTO ] [ nat ADDRESS ] [ realms [SRCREALM/]DSTREALM ] [ goto NUMBER ] SUPPRESSOR\n\nSUPPRESSOR := [ suppress_prefixlength NUMBER ] [ suppress_ifgroup GROUP ]\n\nTABLE_ID := [ local | main | default | NUMBER ]","options":[]},{"name":"tcp_metrics","aliases":["tcpmetrics"],"description":"manage TCP Metrics","usage":"ip [ OPTIONS ] tcp_metrics { COMMAND | help }\n\nip tcp_metrics { show | flush } SELECTOR\n\nip tcp_metrics delete [ address ] ADDRESS\n\nSELECTOR := [ [ address ] PREFIX ]","options":[]},{"name":"token","description":"manage tokenized interface identifiers.","usage":"ip token { COMMAND | help }\n\nip token set TOKEN dev DEV\n\nip token del dev DEV\n\nip token get [ dev DEV ]\n\nip token [ list ]","options":[]},{"name":"tunnel","description":"tunnel over IP.","usage":"ip [ OPTIONS ] tunnel { add | change | del | show | prl | 6rd } [ NAME ]\n        [ mode MODE ] [ remote ADDR ] [ local ADDR ]\n        [ [i|o]seq ] [ [i|o]key KEY ] [ [i|o]csum ] ]\n        [ encaplimit ELIM ] [ ttl|hoplimit TTL ]\n        [ tos TOS ] [ flowlabel FLOWLABEL ]\n        [ prl-default ADDR ] [ prl-nodefault ADDR ] [ prl-delete ADDR ]\n        [ 6rd-prefix ADDR ] [ 6rd-relay_prefix ADDR ] [ 6rd-reset ]\n        [ [no]pmtudisc ] [ [no]ignore-df ] [ [no]allow-localremote ]\n        [ dev PHYS_DEV ]\n\nMODE :=  { ipip | gre | sit | isatap | vti | ip6ip6 | ipip6 | ip6gre | vti6 | any }\n\nADDR := { IP_ADDRESS | any }\n\nTOS := { STRING | 00..ff | inherit | inherit/STRING | inherit/00..ff }\n\nELIM := { none | 0..255 }\n\nTTL := { 1..255 | inherit }\n\nKEY := { DOTTED_QUAD | NUMBER }","options":[]},{"name":"vrf","description":"manage virtual routing and forwarding devices.","usage":"ip vrf  { COMMAND | help }\n\nip vrf show [ NAME ]\n\nip vrf identify [ PID ]\n\nip vrf pids NAME\n\nip vrf exec [ NAME ] command...","options":[]},{"name":"xfrm","description":"manage IPSec policies.","usage":"ip [ OPTIONS ] xfrm  { COMMAND | help }\n\nip xfrm XFRM-OBJECT { COMMAND | help }\n\nXFRM-OBJECT := state | policy | monitor\n\nip xfrm state { add | update } ID [ ALGO-LIST ] [ mode MODE ] [ mark MARK [ mask MASK ] ] [ reqid REQID ] [ seq SEQ ] [ replay-window SIZE ] [ replay-seq SEQ ] [ replay-oseq SEQ ] [ replay-seq-hi SEQ ] [ replay-oseq-hi SEQ ] [ flag FLAG-LIST ] [ sel SELECTOR ] [ LIMIT-LIST ] [ encap ENCAP ] [ coa ADDR[/PLEN] ] [ ctx CTX ] [ extra-flag EXTRA-FLAG-LIST ] [ output-mark OUTPUT-MARK [ mask MASK ] ] [ if_id IF-ID ] [ tfcpad LENGTH ]\n\nip xfrm state allocspi ID [ mode MODE ] [ mark MARK [ mask MASK ] ] [ reqid REQID ] [ seq SEQ ] [ min SPI max SPI ]\n\nip xfrm state { delete | get } ID [ mark MARK [ mask MASK ] ]\n\nip [ -4 | -6 ] xfrm state deleteall [ ID ] [ mode MODE ] [ reqid REQID ] [ flag FLAG-LIST ]\n\nip [ -4 | -6 ] xfrm state list [ ID ] [ nokeys ] [ mode MODE ] [ reqid REQID ] [ flag FLAG-LIST ]\n\nip xfrm state flush [ proto XFRM-PROTO ]\n\nip xfrm state count\n\nID := [ src ADDR ] [ dst ADDR ] [ proto XFRM-PROTO ] [ spi SPI ]\n\nXFRM-PROTO := esp | ah | comp | route2 | hao\n\nALGO-LIST := [ ALGO-LIST ] ALGO\n\nALGO := { enc | auth } ALGO-NAME ALGO-KEYMAT |\n        auth-trunc ALGO-NAME ALGO-KEYMAT ALGO-TRUNC-LEN |\n        aead ALGO-NAME ALGO-KEYMAT ALGO-ICV-LEN |\n        comp ALGO-NAME\n\nMODE := transport | tunnel | beet | ro | in_trigger\n\nFLAG-LIST := [ FLAG-LIST ] FLAG\n\nFLAG := noecn | decap-dscp | nopmtudisc | wildrecv | icmp | af-unspec | align4 | esn\n\nSELECTOR := [ src ADDR[/PLEN] ] [ dst ADDR[/PLEN] ] [ dev DEV ]\n        [ UPSPEC ]\n\nUPSPEC := proto { PROTO |\n        { tcp | udp | sctp | dccp } [ sport PORT ] [ dport PORT ] |\n        { icmp | ipv6-icmp | mobility-header } [ type NUMBER ] [ code NUMBER ] |\n        gre [ key { DOTTED-QUAD | NUMBER } ] }\n\nLIMIT-LIST := [ LIMIT-LIST ] limit LIMIT\n\nLIMIT := { time-soft | time-hard | time-use-soft | time-use-hard } SECONDS |\n        { byte-soft | byte-hard } SIZE |\n        { packet-soft | packet-hard } COUNT\n\nENCAP := { espinudp | espinudp-nonike | espintcp } SPORT DPORT OADDR\n\nEXTRA-FLAG-LIST := [ EXTRA-FLAG-LIST ] EXTRA-FLAG\n\nEXTRA-FLAG := dont-encap-dscp | oseq-may-wrap\n\nip xfrm policy { add | update } SELECTOR dir DIR [ ctx CTX ] [ mark MARK [ mask MASK ] ] [ index INDEX ] [ ptype PTYPE ] [ action ACTION ] [ priority PRIORITY ] [ flag FLAG-LIST ] [ if_id IF-ID ] [ LIMIT-LIST ] [ TMPL-LIST ]\n\nip xfrm policy { delete | get } { SELECTOR | index INDEX } dir DIR [ ctx CTX ] [ mark MARK [ mask MASK ] ] [ ptype PTYPE ] [ if_id IF-ID ]\n\nip [ -4 | -6 ] xfrm policy { deleteall | list } [ nosock ] [ SELECTOR ] [ dir DIR ] [ index INDEX ] [ ptype PTYPE ] [ action ACTION ] [ priority PRIORITY ] [ flag FLAG-LIST]\n\nip xfrm policy flush [ ptype PTYPE ]\n\nip xfrm policy count\n\nip xfrm policy set [ hthresh4 LBITS RBITS ] [ hthresh6 LBITS RBITS ]\n\nSELECTOR := [ src ADDR[/PLEN] ] [ dst ADDR[/PLEN] ] [ dev DEV ] [ UPSPEC ]\n\nUPSPEC := proto { PROTO |\n        { tcp | udp | sctp | dccp } [ sport PORT ] [ dport PORT ] |\n        { icmp | ipv6-icmp | mobility-header } [ type NUMBER ] [ code NUMBER ] |\n        gre [ key { DOTTED-QUAD | NUMBER } ] }\n\nDIR := in | out | fwd\n\nPTYPE := main | sub\n\nACTION := allow | block\n\nFLAG-LIST := [ FLAG-LIST ] FLAG\n\nFLAG := localok | icmp\n\nLIMIT-LIST := [ LIMIT-LIST ] limit LIMIT\n\nLIMIT := { time-soft | time-hard | time-use-soft | time-use-hard } SECONDS |\n        { byte-soft | byte-hard } SIZE |\n        { packet-soft | packet-hard } COUNT\n\nTMPL-LIST := [ TMPL-LIST ] tmpl TMPL\n\nTMPL := ID [ mode MODE ] [ reqid REQID ] [ level LEVEL ]\n\nID := [ src ADDR ] [ dst ADDR ] [ proto XFRM-PROTO ] [ spi SPI ]\n\nXFRM-PROTO := esp | ah | comp | route2 | hao\n\nMODE := transport | tunnel | beet | ro | in_trigger\n\nLEVEL := required | use\n\nip xfrm monitor [ all-nsid ] [ nokeys ] [ all\n         | LISTofXFRM-OBJECTS ]\n\nLISTofXFRM-OBJECTS := [ LISTofXFRM-OBJECTS ] XFRM-OBJECT\n\nXFRM-OBJECT := acquire | expire | SA | policy | aevent | report","options":[]}],"tldr":"> Show / manipulate routing, devices, policy routing and tunnels.\n> Some subcommands such as `ip address` have their own usage documentation.\n> More information: <https://www.man7.org/linux/man-pages/man8/ip.8.html>.\n\n- List interfaces with detailed info:\n\n`ip address`\n\n- List interfaces with brief network layer info:\n\n`ip -brief address`\n\n- List interfaces with brief link layer info:\n\n`ip -brief link`\n\n- Display the routing table:\n\n`ip route`\n\n- Show neighbors (ARP table):\n\n`ip neighbour`\n\n- Make an interface up/down:\n\n`ip link set {{interface}} up/down`\n\n- Add/Delete an IP address to an interface:\n\n`ip addr add/del {{ip}}/{{mask}} dev {{interface}}`\n\n- Add a default route:\n\n`ip route add default via {{ip}} dev {{interface}}`\n"}
