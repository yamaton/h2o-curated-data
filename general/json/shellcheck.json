{"name":"shellcheck","description":"Static analysis and lint tool, for (ba)sh scripts","usage":"shellcheck [OPTIONS...] FILES...","options":[{"names":["-a","--check-sourced"],"argument":"","description":"Include warnings from sourced files"},{"names":["-C","--color"],"argument":"[WHEN]","description":"Use color (auto, always, never)"},{"names":["-i","--include"],"argument":"CODE1,CODE2..","description":"Consider only given types of warnings"},{"names":["-e","--exclude"],"argument":"CODE1,CODE2..","description":"Exclude types of warnings"},{"names":["-f","--format"],"argument":"FORMAT","description":"Output format (checkstyle, diff, gcc, json, json1, quiet, tty)"},{"names":["--list-optional"],"argument":"","description":"List checks disabled by default"},{"names":["--norc"],"argument":"","description":"Don't look for .shellcheckrc files"},{"names":["-o","--enable"],"argument":"check1,check2..","description":"List of optional checks to enable (or 'all')"},{"names":["-P","--source-path"],"argument":"SOURCEPATHS","description":"Specify path when looking for sourced files (\"SCRIPTDIR\" for script's dir)"},{"names":["-s","--shell"],"argument":"SHELLNAME","description":"Specify dialect (sh, bash, dash, ksh)"},{"names":["-S","--severity"],"argument":"SEVERITY","description":"Minimum severity of errors to consider (error, warning, info, style)"},{"names":["-V","--version"],"argument":"","description":"Print version information"},{"names":["-W","--wiki-link-count"],"argument":"NUM","description":"The number of wiki links to show, when applicable"},{"names":["-x","--external-sources"],"argument":"","description":"Allow 'source' outside of FILES"},{"names":["--help"],"argument":"","description":"Show this usage summary and exit"}],"version":"0.8.0","tldr":"> Shell script static analysis tool.\n> Check shell scripts for errors, usage of deprecated/insecure features, and bad practices.\n> More information: <https://www.shellcheck.net>.\n\n- Check a shell script:\n\n`shellcheck {{path/to/script.sh}}`\n\n- Check a shell script interpreting it as the specified shell dialect (overrides the shebang at the top of the script):\n\n`shellcheck --shell {{sh|bash|dash|ksh}} {{path/to/script.sh}}`\n\n- Ignore one or more error types:\n\n`shellcheck --exclude {{SC1009,SC1073}} {{path/to/script.sh}}`\n\n- Also check any sourced shell scripts:\n\n`shellcheck --checked-sourced {{path/to/script.sh}}`\n\n- Display output in the specified format (defaults to `tty`):\n\n`shellcheck --format {{tty|checkstyle|diff|gcc|json|json1|quiet}} {{path/to/script.sh}}`\n\n- Enable one or more optional checks:\n\n`shellcheck --enable={{add-default-case|avoid-nullary-conditions}}`\n\n- List all available optional checks that are disabled by default:\n\n`shellcheck --list-optional`\n"}
