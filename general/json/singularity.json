{"name":"singularity","description":"singularity","usage":"singularity [global options...]","options":[{"names":["-c","--config"],"argument":"string","description":"specify a configuration file (for root or unprivileged installation only) (default \"~/.local/share/condax/envs/singularity/etc/singularity/singularity.conf\")"},{"names":["-d","--debug"],"argument":"","description":"print debugging information (highest verbosity)"},{"names":["-h","--help"],"argument":"","description":"help for singularity"},{"names":["--nocolor"],"argument":"","description":"print without color output (default False)"},{"names":["-q","--quiet"],"argument":"","description":"suppress normal output"},{"names":["-s","--silent"],"argument":"","description":"only print errors"},{"names":["-v","--verbose"],"argument":"","description":"print additional information"},{"names":["--version"],"argument":"","description":"version for singularity"}],"subcommands":[{"name":"build","description":"Build a Singularity image","usage":"singularity build [local options...] <IMAGE PATH> <BUILD SPEC>","options":[{"names":["--arch"],"argument":"string","description":"architecture for remote build (default \"amd64\")"},{"names":["-B","--bind"],"argument":"strings","description":"a user-bind path specification. spec has the format src[:dest[:opts]],where src and dest are outside and inside paths. If dest is not given,it is set equal to src. Mount options ('opts') may be specified as 'ro'(read-only) or 'rw' (read/write, which is the default).Multiple bind paths can be given by a comma separated list. (not supported with remote build)"},{"names":["--builder"],"argument":"string","description":"remote Build Service URL, setting this implies --remote"},{"names":["-d","--detached"],"argument":"","description":"submit build job and print build ID (no real-time logs and requires --remote)"},{"names":["--disable-cache"],"argument":"","description":"do not use cache or create cache"},{"names":["--docker-login"],"argument":"","description":"login to a Docker Repository interactively"},{"names":["-e","--encrypt"],"argument":"","description":"build an image with an encrypted file system"},{"names":["-f","--fakeroot"],"argument":"","description":"build using user namespace to fake root user (requires a privileged installation)"},{"names":["--fix-perms"],"argument":"","description":"ensure owner has rwX permissions on all container content for oci/docker sources"},{"names":["-F","--force"],"argument":"","description":"overwrite an image file if it exists"},{"names":["-h","--help"],"argument":"","description":"help for build"},{"names":["--json"],"argument":"","description":"interpret build definition as JSON"},{"names":["--library"],"argument":"string","description":"container Library URL"},{"names":["--no-cleanup"],"argument":"","description":"do NOT clean up bundle after failed build, can be helpful for debugging"},{"names":["--nohttps"],"argument":"","description":"do NOT use HTTPS with the docker:// transport (useful for local docker registries without a certificate)"},{"names":["-T","--notest"],"argument":"","description":"build without running tests in %test section"},{"names":["--nv"],"argument":"","description":"inject host Nvidia libraries during build for post and test sections (not supported with remote build)"},{"names":["--passphrase"],"argument":"","description":"prompt for an encryption passphrase"},{"names":["--pem-path"],"argument":"string","description":"enter an path to a PEM formated RSA key for an encrypted container"},{"names":["-r","--remote"],"argument":"","description":"build image remotely (does not require root)"},{"names":["--rocm"],"argument":"","description":"inject host Rocm libraries during build for post and test sections (not supported with remote build)"},{"names":["-s","--sandbox"],"argument":"","description":"build image as sandbox format (chroot directory structure)"},{"names":["--section"],"argument":"strings","description":"only run specific section(s) of deffile (setup, post, files, environment, test, labels, none) (default [all])"},{"names":["-u","--update"],"argument":"","description":"run definition over existing container (skips header)"}]},{"name":"cache","description":"Manage the local cache","usage":"singularity cache","options":[{"names":["-h","--help"],"argument":"","description":"help for cache"}],"subcommands":[{"name":"clean","description":"Clean your local Singularity cache","usage":"singularity cache clean [clean options...]","options":[{"names":["-D","--days"],"argument":"int","description":"remove all cache entries older than specified number of days"},{"names":["-n","--dry-run"],"argument":"","description":"operate in dry run mode and do not actually clean the cache"},{"names":["-f","--force"],"argument":"","description":"suppress any prompts and clean the cache"},{"names":["-h","--help"],"argument":"","description":"help for clean"},{"names":["-T","--type"],"argument":"strings","description":"a list of cache types to clean (possible values: library, oci, shub, blob, net, oras, all) (default [all])"}]},{"name":"list","description":"List your local Singularity cache","usage":"singularity cache list [list options...]","options":[{"names":["-h","--help"],"argument":"","description":"help for list"},{"names":["-T","--type"],"argument":"strings","description":"a list of cache types to display, possible entries: library, oci, shub, blob(s), all (default [all])"},{"names":["-v","--verbose"],"argument":"","description":"include cache entries in the output"}]}]},{"name":"capability","description":"Manage Linux capabilities for users and groups","usage":"singularity capability","options":[{"names":["-h","--help"],"argument":"","description":"help for capability"}],"subcommands":[{"name":"add","description":"Add capabilities to a user or group (requires root)","usage":"singularity capability add [add options...] <capabilities>","options":[{"names":["-g","--group"],"argument":"string","description":"manage capabilities for a group"},{"names":["-h","--help"],"argument":"","description":"help for add"},{"names":["-u","--user"],"argument":"string","description":"manage capabilities for a user"}]},{"name":"avail","description":"Show description for available capabilities","usage":"singularity capability avail [capabilities]","options":[{"names":["-h","--help"],"argument":"","description":"help for avail"}]},{"name":"drop","description":"Remove capabilities from a user or group (requires root)","usage":"singularity capability drop [drop options...] <capabilities>","options":[{"names":["-g","--group"],"argument":"string","description":"manage capabilities for a group"},{"names":["-h","--help"],"argument":"","description":"help for drop"},{"names":["-u","--user"],"argument":"string","description":"manage capabilities for a user"}]},{"name":"list","description":"Show capabilities for a given user or group","usage":"singularity capability list [user/group]","options":[{"names":["-h","--help"],"argument":"","description":"help for list"}]}]},{"name":"completion","description":"generate the autocompletion script for the specified shell","usage":"singularity completion [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for completion"}],"subcommands":[{"name":"bash","description":"generate the autocompletion script for bash","usage":"singularity completion bash","options":[{"names":["-h","--help"],"argument":"","description":"help for bash"},{"names":["--no-descriptions"],"argument":"","description":"disable completion descriptions"}]},{"name":"fish","description":"generate the autocompletion script for fish","usage":"singularity completion fish [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for fish"},{"names":["--no-descriptions"],"argument":"","description":"disable completion descriptions"}]},{"name":"powershell","description":"generate the autocompletion script for powershell","usage":"singularity completion powershell [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for powershell"},{"names":["--no-descriptions"],"argument":"","description":"disable completion descriptions"}]},{"name":"zsh","description":"generate the autocompletion script for zsh","usage":"singularity completion zsh [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for zsh"},{"names":["--no-descriptions"],"argument":"","description":"disable completion descriptions"}]}]},{"name":"config","description":"Manage various singularity configuration (root user only)","usage":"singularity config","options":[{"names":["-h","--help"],"argument":"","description":"help for config"}],"subcommands":[{"name":"fakeroot","description":"Manage fakeroot user mappings entries (root user only)","usage":"singularity config fakeroot <option> <user>","options":[{"names":["-a","--add"],"argument":"","description":"add a fakeroot mapping entry for a user allowing him to use the fakeroot feature"},{"names":["-d","--disable"],"argument":"","description":"disable a user fakeroot mapping entry preventing him to use the fakeroot feature (the user mapping must be present)"},{"names":["-e","--enable"],"argument":"","description":"enable a user fakeroot mapping entry allowing him to use the fakeroot feature (the user mapping must be present)"},{"names":["-h","--help"],"argument":"","description":"help for fakeroot"},{"names":["-r","--remove"],"argument":"","description":"remove the user fakeroot mapping entry preventing him to use the fakeroot feature"}]},{"name":"global","description":"Edit singularity.conf from command line (root user only or unprivileged installation)","usage":"singularity config global <option> <directive> [value,...]","options":[{"names":["-d","--dry-run"],"argument":"","description":"dump resulting configuration on stdout but doesn't write it to singularity.conf"},{"names":["-g","--get"],"argument":"","description":"get value of the configuration directive"},{"names":["-h","--help"],"argument":"","description":"help for global"},{"names":["-r","--reset"],"argument":"","description":"reset the configuration directive value to its default value"},{"names":["-s","--set"],"argument":"","description":"set value of the configuration directive (for multi-value directives, it will add it)"},{"names":["-u","--unset"],"argument":"","description":"unset value of the configuration directive (for multi-value directives, it will remove matching values)"}]}]},{"name":"delete","description":"Deletes requested image from the library","usage":"singularity delete [arch] <imageRef> [flags]","options":[{"names":["-A","--arch"],"argument":"string","description":"specify requested image arch (default \"amd64\")"},{"names":["-F","--force"],"argument":"","description":"delete image without confirmation"},{"names":["-h","--help"],"argument":"","description":"help for delete"},{"names":["--library"],"argument":"string","description":"delete images from the provided library"}]},{"name":"exec","description":"Run a command within a container","usage":"singularity exec [exec options...] <container> <command>","options":[{"names":["--add-caps"],"argument":"string","description":"a comma separated capability list to add"},{"names":["--allow-setuid"],"argument":"","description":"allow setuid binaries in container (root only)"},{"names":["--app"],"argument":"string","description":"set an application to run inside a container"},{"names":["--apply-cgroups"],"argument":"string","description":"apply cgroups from file for container processes (root only)"},{"names":["-B","--bind"],"argument":"stringArray","description":"a user-bind path specification. spec has the format src[:dest[:opts]], where src and dest are outside and inside paths. If dest is not given, it is set equal to src. Mount options ('opts') may be specified as 'ro' (read-only) or 'rw' (read/write, which is the default). Multiple bind paths can be given by a comma separated list."},{"names":["-e","--cleanenv"],"argument":"","description":"clean environment before running container"},{"names":["-c","--contain"],"argument":"","description":"use minimal /dev and empty other directories (e.g. /tmp and $HOME) instead of sharing filesystems from your host"},{"names":["-C","--containall"],"argument":"","description":"contain not only file systems, but also PID, IPC, and environment"},{"names":["--disable-cache"],"argument":"","description":"dont use cache, and dont create cache"},{"names":["--dns"],"argument":"string","description":"list of DNS server separated by commas to add in resolv.conf"},{"names":["--docker-login"],"argument":"","description":"login to a Docker Repository interactively"},{"names":["--drop-caps"],"argument":"string","description":"a comma separated capability list to drop"},{"names":["--env"],"argument":"strings","description":"pass environment variable to contained process"},{"names":["--env-file"],"argument":"string","description":"pass environment variables from file to contained process"},{"names":["-f","--fakeroot"],"argument":"","description":"run container in new user namespace as uid 0"},{"names":["--fusemount"],"argument":"strings","description":"A FUSE filesystem mount specification of the form '<type>:<fuse command> <mountpoint>' - where <type> is 'container' or 'host', specifying where the mount will be performed ('container-daemon' or 'host-daemon' will run the FUSE process detached). <fuse command> is the path to the FUSE executable, plus options for the mount. <mountpoint> is the location in the container to which the FUSE mount will be attached. E.g. 'container:sshfs 10.0.0.1:/ /sshfs'. Implies --pid."},{"names":["-h","--help"],"argument":"","description":"help for exec"},{"names":["-H","--home"],"argument":"string","description":"a home directory specification. spec can either be a src path or src:dest pair. src is the source path of the home directory outside the container and dest overrides the home directory within the container. (default \"~\")"},{"names":["--hostname"],"argument":"string","description":"set container hostname"},{"names":["-i","--ipc"],"argument":"","description":"run container in a new IPC namespace"},{"names":["--keep-privs"],"argument":"","description":"let root user keep privileges in container (root only)"},{"names":["-n","--net"],"argument":"","description":"run container in a new network namespace (sets up a bridge network interface by default)"},{"names":["--network"],"argument":"string","description":"specify desired network type separated by commas, each network will bring up a dedicated interface inside container (default \"bridge\")"},{"names":["--network-args"],"argument":"strings","description":"specify network arguments to pass to CNI plugins"},{"names":["--no-home"],"argument":"","description":"do NOT mount users home directory if /home is not the current working directory"},{"names":["--no-init"],"argument":"","description":"do NOT start shim process with --pid"},{"names":["--no-mount"],"argument":"strings","description":"disable one or more mount xxx options set in singularity.conf"},{"names":["--no-privs"],"argument":"","description":"drop all privileges from root user in container)"},{"names":["--no-umask"],"argument":"","description":"do not propagate umask to the container, set default 0022 umask"},{"names":["--nohttps"],"argument":"","description":"do NOT use HTTPS with the docker:// transport (useful for local docker registries without a certificate)"},{"names":["--nonet"],"argument":"","description":"disable VM network handling"},{"names":["--nv"],"argument":"","description":"enable experimental Nvidia support"},{"names":["-o","--overlay"],"argument":"strings","description":"use an overlayFS image for persistent data storage or as read-only layer of container"},{"names":["--passphrase"],"argument":"","description":"prompt for an encryption passphrase"},{"names":["--pem-path"],"argument":"string","description":"enter an path to a PEM formated RSA key for an encrypted container"},{"names":["-p","--pid"],"argument":"","description":"run container in a new PID namespace"},{"names":["--pwd"],"argument":"string","description":"initial working directory for payload process inside the container"},{"names":["--rocm"],"argument":"","description":"enable experimental Rocm support"},{"names":["-S","--scratch"],"argument":"strings","description":"include a scratch directory within the container that is linked to a temporary dir (use -W to force location)"},{"names":["--security"],"argument":"strings","description":"enable security features (SELinux, Apparmor, Seccomp)"},{"names":["-u","--userns"],"argument":"","description":"run container in a new user namespace, allowing Singularity to run completely unprivileged on recent kernels. This disables some features of Singularity, for example it only works with sandbox images."},{"names":["--uts"],"argument":"","description":"run container in a new UTS namespace"},{"names":["--vm"],"argument":"","description":"enable VM support"},{"names":["--vm-cpu"],"argument":"string","description":"number of CPU cores to allocate to Virtual Machine (implies --vm) (default \"1\")"},{"names":["--vm-err"],"argument":"","description":"enable attaching stderr from VM"},{"names":["--vm-ip"],"argument":"string","description":"IP Address to assign for container usage. Defaults to DHCP within bridge network. (default \"dhcp\")"},{"names":["--vm-ram"],"argument":"string","description":"amount of RAM in MiB to allocate to Virtual Machine (implies --vm) (default \"1024\")"},{"names":["-W","--workdir"],"argument":"string","description":"working directory to be used for /tmp, /var/tmp and $HOME (if -c/--contain was also used)"},{"names":["-w","--writable"],"argument":"","description":"by default all Singularity containers are available as read only. This option makes the file system accessible as read/write."},{"names":["--writable-tmpfs"],"argument":"","description":"makes the file system accessible as read-write with non persistent data (with overlay support only)"}]},{"name":"help","description":"Help about any command","usage":"singularity help [command] [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for help"}]},{"name":"inspect","description":"Show metadata for an image","usage":"singularity inspect [inspect options...] <image path>","options":[{"names":["--all"],"argument":"","description":"show all available data (imply --json option)"},{"names":["--app"],"argument":"string","description":"inspect a specific app"},{"names":["-d","--deffile"],"argument":"","description":"show the Singularity recipe file that was used to generate the image"},{"names":["-e","--environment"],"argument":"","description":"show the environment settings for the image"},{"names":["-h","--help"],"argument":"","description":"help for inspect"},{"names":["-H","--helpfile"],"argument":"","description":"inspect the runscript helpfile, if it exists"},{"names":["-j","--json"],"argument":"","description":"print structured json instead of sections"},{"names":["-l","--labels"],"argument":"","description":"show the labels for the image (default)"},{"names":["--list-apps"],"argument":"","description":"list all apps in a container"},{"names":["-r","--runscript"],"argument":"","description":"show the runscript for the image"},{"names":["-s","--startscript"],"argument":"","description":"show the startscript for the image"},{"names":["-t","--test"],"argument":"","description":"show the test script for the image"}]},{"name":"instance","description":"Manage containers running as services","usage":"singularity instance","options":[{"names":["-h","--help"],"argument":"","description":"help for instance"}],"subcommands":[{"name":"list","description":"List all running and named Singularity instances","usage":"singularity instance list [list options...] [<instance name glob>]","options":[{"names":["-h","--help"],"argument":"","description":"help for list"},{"names":["-j","--json"],"argument":"","description":"print structured json instead of list"},{"names":["-l","--logs"],"argument":"","description":"display location of stdout and sterr log files for instances"},{"names":["-u","--user"],"argument":"string","description":"if running as root, list instances from \"<username>\""}]},{"name":"start","description":"Start a named instance of the given container image","usage":"singularity instance start [start options...] <container path> <instance name> [startscript args...]","options":[{"names":["--add-caps"],"argument":"string","description":"a comma separated capability list to add"},{"names":["--allow-setuid"],"argument":"","description":"allow setuid binaries in container (root only)"},{"names":["--apply-cgroups"],"argument":"string","description":"apply cgroups from file for container processes (root only)"},{"names":["-B","--bind"],"argument":"stringArray","description":"a user-bind path specification. spec has the format src[:dest[:opts]], where src and dest are outside and inside paths. If dest is not given, it is set equal to src. Mount options ('opts') may be specified as 'ro' (read-only) or 'rw' (read/write, which is the default). Multiple bind paths can be given by a comma separated list."},{"names":["--boot"],"argument":"","description":"execute /sbin/init to boot container (root only)"},{"names":["-e","--cleanenv"],"argument":"","description":"clean environment before running container"},{"names":["-c","--contain"],"argument":"","description":"use minimal /dev and empty other directories (e.g. /tmp and $HOME) instead of sharing filesystems from your host"},{"names":["-C","--containall"],"argument":"","description":"contain not only file systems, but also PID, IPC, and environment"},{"names":["--disable-cache"],"argument":"","description":"dont use cache, and dont create cache"},{"names":["--dns"],"argument":"string","description":"list of DNS server separated by commas to add in resolv.conf"},{"names":["--docker-login"],"argument":"","description":"login to a Docker Repository interactively"},{"names":["--drop-caps"],"argument":"string","description":"a comma separated capability list to drop"},{"names":["--env"],"argument":"strings","description":"pass environment variable to contained process"},{"names":["--env-file"],"argument":"string","description":"pass environment variables from file to contained process"},{"names":["-f","--fakeroot"],"argument":"","description":"run container in new user namespace as uid 0"},{"names":["--fusemount"],"argument":"strings","description":"A FUSE filesystem mount specification of the form '<type>:<fuse command> <mountpoint>' - where <type> is 'container' or 'host', specifying where the mount will be performed ('container-daemon' or 'host-daemon' will run the FUSE process detached). <fuse command> is the path to the FUSE executable, plus options for the mount. <mountpoint> is the location in the container to which the FUSE mount will be attached. E.g. 'container:sshfs 10.0.0.1:/ /sshfs'. Implies --pid."},{"names":["-h","--help"],"argument":"","description":"help for start"},{"names":["-H","--home"],"argument":"string","description":"a home directory specification. spec can either be a src path or src:dest pair. src is the source path of the home directory outside the container and dest overrides the home directory within the container. (default \"~\")"},{"names":["--hostname"],"argument":"string","description":"set container hostname"},{"names":["--keep-privs"],"argument":"","description":"let root user keep privileges in container (root only)"},{"names":["-n","--net"],"argument":"","description":"run container in a new network namespace (sets up a bridge network interface by default)"},{"names":["--network"],"argument":"string","description":"specify desired network type separated by commas, each network will bring up a dedicated interface inside container (default \"bridge\")"},{"names":["--network-args"],"argument":"strings","description":"specify network arguments to pass to CNI plugins"},{"names":["--no-home"],"argument":"","description":"do NOT mount users home directory if /home is not the current working directory"},{"names":["--no-init"],"argument":"","description":"do NOT start shim process with --pid"},{"names":["--no-mount"],"argument":"strings","description":"disable one or more mount xxx options set in singularity.conf"},{"names":["--no-privs"],"argument":"","description":"drop all privileges from root user in container)"},{"names":["--no-umask"],"argument":"","description":"do not propagate umask to the container, set default 0022 umask"},{"names":["--nohttps"],"argument":"","description":"do NOT use HTTPS with the docker:// transport (useful for local docker registries without a certificate)"},{"names":["--nv"],"argument":"","description":"enable experimental Nvidia support"},{"names":["-o","--overlay"],"argument":"strings","description":"use an overlayFS image for persistent data storage or as read-only layer of container"},{"names":["--passphrase"],"argument":"","description":"prompt for an encryption passphrase"},{"names":["--pem-path"],"argument":"string","description":"enter an path to a PEM formated RSA key for an encrypted container"},{"names":["--pid-file"],"argument":"string","description":"write instance PID to the file with the given name"},{"names":["--rocm"],"argument":"","description":"enable experimental Rocm support"},{"names":["-S","--scratch"],"argument":"strings","description":"include a scratch directory within the container that is linked to a temporary dir (use -W to force location)"},{"names":["--security"],"argument":"strings","description":"enable security features (SELinux, Apparmor, Seccomp)"},{"names":["-u","--userns"],"argument":"","description":"run container in a new user namespace, allowing Singularity to run completely unprivileged on recent kernels. This disables some features of Singularity, for example it only works with sandbox images."},{"names":["--uts"],"argument":"","description":"run container in a new UTS namespace"},{"names":["-W","--workdir"],"argument":"string","description":"working directory to be used for /tmp, /var/tmp and $HOME (if -c/--contain was also used)"},{"names":["-w","--writable"],"argument":"","description":"by default all Singularity containers are available as read only. This option makes the file system accessible as read/write."},{"names":["--writable-tmpfs"],"argument":"","description":"makes the file system accessible as read-write with non persistent data (with overlay support only)"}]},{"name":"stop","description":"Stop a named instance of a given container image","usage":"singularity instance stop [stop options...] [instance]","options":[{"names":["-a","--all"],"argument":"","description":"stop all user's instances"},{"names":["-F","--force"],"argument":"","description":"force kill instance"},{"names":["-h","--help"],"argument":"","description":"help for stop"},{"names":["-s","--signal"],"argument":"string","description":"signal sent to the instance"},{"names":["-t","--timeout"],"argument":"int","description":"force kill non stopped instances after X seconds (default 10)"},{"names":["-u","--user"],"argument":"string","description":"if running as root, stop instances belonging to user"}]}]},{"name":"key","description":"Manage OpenPGP keys","usage":"singularity key [key options...]","options":[{"names":["-h","--help"],"argument":"","description":"help for key"}],"subcommands":[{"name":"export","description":"Export a public or private key into a specific file","usage":"singularity key export [export options...] <output-file>","options":[{"names":["-a","--armor"],"argument":"","description":"ascii armored format"},{"names":["-g","--global"],"argument":"","description":"manage global public keys (import/pull/remove are restricted to root user or unprivileged installation only)"},{"names":["-h","--help"],"argument":"","description":"help for export"},{"names":["-s","--secret"],"argument":"","description":"export a secret key"}]},{"name":"import","description":"Import a local key into the local or global keyring","usage":"singularity key import [import options...] <input-key>","options":[{"names":["-g","--global"],"argument":"","description":"manage global public keys (import/pull/remove are restricted to root user or unprivileged installation only)"},{"names":["-h","--help"],"argument":"","description":"help for import"},{"names":["--new-password"],"argument":"","description":"set a new password to the private key"}]},{"name":"list","description":"List keys in your local or in the global keyring","usage":"singularity key list","options":[{"names":["-g","--global"],"argument":"","description":"manage global public keys (import/pull/remove are restricted to root user or unprivileged installation only)"},{"names":["-h","--help"],"argument":"","description":"help for list"},{"names":["-s","--secret"],"argument":"","description":"list private keys instead of the default which displays public ones"}]},{"name":"newpair","description":"Create a new key pair","usage":"singularity key newpair","options":[{"names":["-b","--bit-length"],"argument":"int","description":"specify key bit length (default 4096)"},{"names":["-C","--comment"],"argument":"string","description":"key comment"},{"names":["-E","--email"],"argument":"string","description":"key owner email"},{"names":["-h","--help"],"argument":"","description":"help for newpair"},{"names":["-N","--name"],"argument":"string","description":"key owner name"},{"names":["-P","--password"],"argument":"string","description":"key password"},{"names":["-U","--push"],"argument":"","description":"specify to push the public key to the remote keystore (default true)"}]},{"name":"pull","description":"Download a public key from a key server","usage":"singularity key pull [pull options...] <fingerprint>","options":[{"names":["-g","--global"],"argument":"","description":"manage global public keys (import/pull/remove are restricted to root user or unprivileged installation only)"},{"names":["-h","--help"],"argument":"","description":"help for pull"},{"names":["-u","--url"],"argument":"string","description":"specify the key server URL"}]},{"name":"push","description":"Upload a public key to a key server","usage":"singularity key push [push options...] <fingerprint>","options":[{"names":["-g","--global"],"argument":"","description":"manage global public keys (import/pull/remove are restricted to root user or unprivileged installation only)"},{"names":["-h","--help"],"argument":"","description":"help for push"},{"names":["-u","--url"],"argument":"string","description":"specify the key server URL"}]},{"name":"remove","description":"Remove a local public key from your local or the global keyring","usage":"singularity key remove <fingerprint>","options":[{"names":["-g","--global"],"argument":"","description":"manage global public keys (import/pull/remove are restricted to root user or unprivileged installation only)"},{"names":["-h","--help"],"argument":"","description":"help for remove"}]},{"name":"search","description":"Search for keys on a key server","usage":"singularity key search [search options...] <search_string>","options":[{"names":["-h","--help"],"argument":"","description":"help for search"},{"names":["-l","--long-list"],"argument":"","description":"output long list when searching for keys"},{"names":["-u","--url"],"argument":"string","description":"specify the key server URL"}]}]},{"name":"oci","description":"Manage OCI containers","usage":"singularity oci","options":[{"names":["-h","--help"],"argument":"","description":"help for oci"}],"subcommands":[{"name":"attach","description":"Attach console to a running container process (root user only)","usage":"singularity oci attach <container_ID>","options":[{"names":["-h","--help"],"argument":"","description":"help for attach"}]},{"name":"create","description":"Create a container from a bundle directory (root user only)","usage":"singularity oci create -b <bundle_path> [create options...] <container_ID>","options":[{"names":["-b","--bundle"],"argument":"string","description":"specify the OCI bundle path (required)"},{"names":["--empty-process"],"argument":"","description":"run container without executing container process (eg: for POD container)"},{"names":["-h","--help"],"argument":"","description":"help for create"},{"names":["--log-format"],"argument":"string","description":"specify the log file format. Available formats are basic, kubernetes and json (default \"kubernetes\")"},{"names":["-l","--log-path"],"argument":"string","description":"specify the log file path"},{"names":["--pid-file"],"argument":"string","description":"specify the pid file"},{"names":["-s","--sync-socket"],"argument":"string","description":"specify the path to unix socket for state synchronization"}]},{"name":"delete","description":"Delete container (root user only)","usage":"singularity oci delete <container_ID>","options":[{"names":["-h","--help"],"argument":"","description":"help for delete"}]},{"name":"exec","description":"Execute a command within container (root user only)","usage":"singularity oci exec <container_ID> <command> <args>","options":[{"names":["-h","--help"],"argument":"","description":"help for exec"}]},{"name":"kill","description":"Kill a container (root user only)","usage":"singularity oci kill [kill options...] <container_ID>","options":[{"names":["-f","--force"],"argument":"","description":"kill container process with SIGKILL"},{"names":["-h","--help"],"argument":"","description":"help for kill"},{"names":["-s","--signal"],"argument":"string","description":"signal sent to the container (default \"SIGTERM\")"},{"names":["-t","--timeout"],"argument":"uint32","description":"timeout in second before killing container"}]},{"name":"mount","description":"Mount create an OCI bundle from SIF image (root user only)","usage":"singularity oci mount <sif_image> <bundle_path>","options":[{"names":["-h","--help"],"argument":"","description":"help for mount"}]},{"name":"pause","description":"Suspends all processes inside the container (root user only)","usage":"singularity oci pause <container_ID>","options":[{"names":["-h","--help"],"argument":"","description":"help for pause"}]},{"name":"resume","description":"Resumes all processes previously paused inside the container (root user only)","usage":"singularity oci resume <container_ID>","options":[{"names":["-h","--help"],"argument":"","description":"help for resume"}]},{"name":"run","description":"Create/start/attach/delete a container from a bundle directory (root user only)","usage":"singularity oci run -b <bundle_path> [run options...] <container_ID>","options":[{"names":["-b","--bundle"],"argument":"string","description":"specify the OCI bundle path (required)"},{"names":["-h","--help"],"argument":"","description":"help for run"},{"names":["--log-format"],"argument":"string","description":"specify the log file format. Available formats are basic, kubernetes and json (default \"kubernetes\")"},{"names":["-l","--log-path"],"argument":"string","description":"specify the log file path"},{"names":["--pid-file"],"argument":"string","description":"specify the pid file"},{"names":["-s","--sync-socket"],"argument":"string","description":"specify the path to unix socket for state synchronization"}]},{"name":"start","description":"Start container process (root user only)","usage":"singularity oci start <container_ID>","options":[{"names":["-h","--help"],"argument":"","description":"help for start"}]},{"name":"state","description":"Query state of a container (root user only)","usage":"singularity oci state <container_ID>","options":[{"names":["-h","--help"],"argument":"","description":"help for state"},{"names":["-s","--sync-socket"],"argument":"string","description":"specify the path to unix socket for state synchronization"}]},{"name":"umount","description":"Umount delete bundle (root user only)","usage":"singularity oci umount <bundle_path>","options":[{"names":["-h","--help"],"argument":"","description":"help for umount"}]},{"name":"update","description":"Update container cgroups resources (root user only)","usage":"singularity oci update [update options...] <container_ID>","options":[{"names":["-f","--from-file"],"argument":"string","description":"specify path to OCI JSON cgroups resource file ('-' to read from STDIN)"},{"names":["-h","--help"],"argument":"","description":"help for update"}]}]},{"name":"overlay","description":"Manage an EXT3 writable overlay image","usage":"singularity overlay","options":[{"names":["-h","--help"],"argument":"","description":"help for overlay"}],"subcommands":[{"name":"create","description":"Create EXT3 writable overlay image","usage":"singularity overlay create <options> image","options":[{"names":["--create-dir"],"argument":"strings","description":"directory to create as part of the overlay layout"},{"names":["-h","--help"],"argument":"","description":"help for create"},{"names":["-s","--size"],"argument":"int","description":"size of the EXT3 writable overlay in MiB (default 64)"}]}]},{"name":"plugin","description":"Manage Singularity plugins","usage":"singularity plugin [plugin options...]","options":[{"names":["-h","--help"],"argument":"","description":"help for plugin"}],"subcommands":[{"name":"compile","description":"Compile a Singularity plugin","usage":"singularity plugin compile [compile options...] <host_path>","options":[{"names":["--disable-minor-check"],"argument":"","description":"disable minor package version check"},{"names":["-h","--help"],"argument":"","description":"help for compile"},{"names":["-o","--out"],"argument":"string","description":"path of the SIF output file"}]},{"name":"create","description":"Create a plugin skeleton directory","usage":"singularity plugin create <host_path> <name>","options":[{"names":["-h","--help"],"argument":"","description":"help for create"}]},{"name":"disable","description":"disable an installed Singularity plugin","usage":"singularity plugin disable <name>","options":[{"names":["-h","--help"],"argument":"","description":"help for disable"}]},{"name":"enable","description":"Enable an installed Singularity plugin","usage":"singularity plugin enable <name>","options":[{"names":["-h","--help"],"argument":"","description":"help for enable"}]},{"name":"inspect","description":"Inspect a singularity plugin (either an installed one or an image)","usage":"singularity plugin inspect (<name>|<image>)","options":[{"names":["-h","--help"],"argument":"","description":"help for inspect"}]},{"name":"install","description":"Install a compiled Singularity plugin","usage":"singularity plugin install <plugin_path>","options":[{"names":["-h","--help"],"argument":"","description":"help for install"}]},{"name":"list","description":"List installed Singularity plugins","usage":"singularity plugin list [list options...]","options":[{"names":["-h","--help"],"argument":"","description":"help for list"}]},{"name":"uninstall","description":"Uninstall removes the named plugin from the system","usage":"singularity plugin uninstall <name>","options":[{"names":["-h","--help"],"argument":"","description":"help for uninstall"}]}]},{"name":"pull","description":"Pull an image from a URI","usage":"singularity pull [pull options...] [output file] <URI>","options":[{"names":["--arch"],"argument":"string","description":"architecture to pull from library (default \"amd64\")"},{"names":["--dir"],"argument":"string","description":"download images to the specific directory"},{"names":["--disable-cache"],"argument":"","description":"dont use cached images/blobs and dont create them"},{"names":["--docker-login"],"argument":"","description":"login to a Docker Repository interactively"},{"names":["-F","--force"],"argument":"","description":"overwrite an image file if it exists"},{"names":["-h","--help"],"argument":"","description":"help for pull"},{"names":["--library"],"argument":"string","description":"download images from the provided library"},{"names":["--no-cleanup"],"argument":"","description":"do NOT clean up bundle after failed build, can be helpful for debugging"},{"names":["--nohttps"],"argument":"","description":"do NOT use HTTPS with the docker:// transport (useful for local docker registries without a certificate)"}]},{"name":"push","description":"Upload image to the provided URI","usage":"singularity push [push options...] <image> <URI>","options":[{"names":["-U","--allow-unsigned"],"argument":"","description":"do not require a signed container image"},{"names":["-D","--description"],"argument":"string","description":"description for container image (library:// only)"},{"names":["-h","--help"],"argument":"","description":"help for push"},{"names":["--library"],"argument":"string","description":"the library to push to"}]},{"name":"remote","description":"Manage singularity remote endpoints, keyservers and OCI/Docker registry credentials","usage":"singularity remote [remote options...]","options":[{"names":["-c","--config"],"argument":"string","description":"path to the file holding remote endpoint configurations (default \"~/.singularity/remote.yaml\")"},{"names":["-h","--help"],"argument":"","description":"help for remote"}],"subcommands":[{"name":"add","description":"Add a new singularity remote endpoint","usage":"singularity remote add [add options...] <remote_name> <remote_URI>","options":[{"names":["-g","--global"],"argument":"","description":"edit the list of globally configured remote endpoints"},{"names":["-h","--help"],"argument":"","description":"help for add"},{"names":["--no-login"],"argument":"","description":"skip automatic login step"},{"names":["--tokenfile"],"argument":"string","description":"path to the file holding auth token for login (remote endpoints only)"}],"subcommands":[{"name":"singularity","description":"remote add [add options...] <remote_name> <remote_URI>","usage":"","options":[]}]},{"name":"add-keyserver","description":"Add a keyserver (root user only)","usage":"singularity remote add-keyserver [options] [remoteName] <keyserver_url>","options":[{"names":["-h","--help"],"argument":"","description":"help for add-keyserver"},{"names":["-i","--insecure"],"argument":"","description":"allow insecure connection to keyserver"},{"names":["-o","--order"],"argument":"uint32","description":"define the keyserver order"}]},{"name":"list","description":"List all singularity remote endpoints, keyservers, and OCI credentials that are configured","usage":"singularity remote list","options":[{"names":["-h","--help"],"argument":"","description":"help for list"}]},{"name":"login","description":"Login to a singularity remote endpoint, an OCI/Docker registry or a keyserver using credentials","usage":"singularity remote login [login options...] <remote_name|registry_uri>","options":[{"names":["-h","--help"],"argument":"","description":"help for login"},{"names":["-i","--insecure"],"argument":"","description":"allow insecure login"},{"names":["-p","--password"],"argument":"string","description":"password / token to authenticate with"},{"names":["--password-stdin"],"argument":"","description":"take password from standard input"},{"names":["--tokenfile"],"argument":"string","description":"path to the file holding auth token for login (remote endpoints only)"},{"names":["-u","--username"],"argument":"string","description":"username to authenticate with (required for Docker/OCI registry login)"}]},{"name":"logout","description":"Log out from a singularity remote endpoint, an OCI/Docker registry or a keyserver","usage":"singularity remote logout <remote_name|registry_uri>","options":[{"names":["-h","--help"],"argument":"","description":"help for logout"}]},{"name":"remove","description":"Remove an existing singularity remote endpoint","usage":"singularity remote remove [remove options...] <remote_name>","options":[{"names":["-g","--global"],"argument":"","description":"edit the list of globally configured remote endpoints"},{"names":["-h","--help"],"argument":"","description":"help for remove"}]},{"name":"remove-keyserver","description":"Remove a keyserver (root user only)","usage":"singularity remote remove-keyserver [remoteName] <keyserver_url>","options":[{"names":["-h","--help"],"argument":"","description":"help for remove-keyserver"}]},{"name":"status","description":"Check the status of the singularity services at an endpoint, and your authentication token","usage":"singularity remote status [remote_name]","options":[{"names":["-h","--help"],"argument":"","description":"help for status"}]},{"name":"use","description":"Set a singularity remote endpoint to be actively used","usage":"singularity remote use [use options...] <remote_name>","options":[{"names":["-e","--exclusive"],"argument":"","description":"set the endpoint as exclusive (root user only, imply"},{"names":["-h","--help"],"argument":"","description":"help for use"}]}]},{"name":"run","description":"Run the user-defined default command within a container","usage":"singularity run [run options...] <container>","options":[{"names":["--add-caps"],"argument":"string","description":"a comma separated capability list to add"},{"names":["--allow-setuid"],"argument":"","description":"allow setuid binaries in container (root only)"},{"names":["--app"],"argument":"string","description":"set an application to run inside a container"},{"names":["--apply-cgroups"],"argument":"string","description":"apply cgroups from file for container processes (root only)"},{"names":["-B","--bind"],"argument":"stringArray","description":"a user-bind path specification. spec has the format src[:dest[:opts]], where src and dest are outside and inside paths. If dest is not given, it is set equal to src. Mount options ('opts') may be specified as 'ro' (read-only) or 'rw' (read/write, which is the default). Multiple bind paths can be given by a comma separated list."},{"names":["-e","--cleanenv"],"argument":"","description":"clean environment before running container"},{"names":["-c","--contain"],"argument":"","description":"use minimal /dev and empty other directories (e.g. /tmp and $HOME) instead of sharing filesystems from your host"},{"names":["-C","--containall"],"argument":"","description":"contain not only file systems, but also PID, IPC, and environment"},{"names":["--disable-cache"],"argument":"","description":"dont use cache, and dont create cache"},{"names":["--dns"],"argument":"string","description":"list of DNS server separated by commas to add in resolv.conf"},{"names":["--docker-login"],"argument":"","description":"login to a Docker Repository interactively"},{"names":["--drop-caps"],"argument":"string","description":"a comma separated capability list to drop"},{"names":["--env"],"argument":"strings","description":"pass environment variable to contained process"},{"names":["--env-file"],"argument":"string","description":"pass environment variables from file to contained process"},{"names":["-f","--fakeroot"],"argument":"","description":"run container in new user namespace as uid 0"},{"names":["--fusemount"],"argument":"strings","description":"A FUSE filesystem mount specification of the form '<type>:<fuse command> <mountpoint>' - where <type> is 'container' or 'host', specifying where the mount will be performed ('container-daemon' or 'host-daemon' will run the FUSE process detached). <fuse command> is the path to the FUSE executable, plus options for the mount. <mountpoint> is the location in the container to which the FUSE mount will be attached. E.g. 'container:sshfs 10.0.0.1:/ /sshfs'. Implies --pid."},{"names":["-h","--help"],"argument":"","description":"help for run"},{"names":["-H","--home"],"argument":"string","description":"a home directory specification. spec can either be a src path or src:dest pair. src is the source path of the home directory outside the container and dest overrides the home directory within the container. (default \"~\")"},{"names":["--hostname"],"argument":"string","description":"set container hostname"},{"names":["-i","--ipc"],"argument":"","description":"run container in a new IPC namespace"},{"names":["--keep-privs"],"argument":"","description":"let root user keep privileges in container (root only)"},{"names":["-n","--net"],"argument":"","description":"run container in a new network namespace (sets up a bridge network interface by default)"},{"names":["--network"],"argument":"string","description":"specify desired network type separated by commas, each network will bring up a dedicated interface inside container (default \"bridge\")"},{"names":["--network-args"],"argument":"strings","description":"specify network arguments to pass to CNI plugins"},{"names":["--no-home"],"argument":"","description":"do NOT mount users home directory if /home is not the current working directory"},{"names":["--no-init"],"argument":"","description":"do NOT start shim process with --pid"},{"names":["--no-mount"],"argument":"strings","description":"disable one or more mount xxx options set in singularity.conf"},{"names":["--no-privs"],"argument":"","description":"drop all privileges from root user in container)"},{"names":["--no-umask"],"argument":"","description":"do not propagate umask to the container, set default 0022 umask"},{"names":["--nohttps"],"argument":"","description":"do NOT use HTTPS with the docker:// transport (useful for local docker registries without a certificate)"},{"names":["--nonet"],"argument":"","description":"disable VM network handling"},{"names":["--nv"],"argument":"","description":"enable experimental Nvidia support"},{"names":["-o","--overlay"],"argument":"strings","description":"use an overlayFS image for persistent data storage or as read-only layer of container"},{"names":["--passphrase"],"argument":"","description":"prompt for an encryption passphrase"},{"names":["--pem-path"],"argument":"string","description":"enter an path to a PEM formated RSA key for an encrypted container"},{"names":["-p","--pid"],"argument":"","description":"run container in a new PID namespace"},{"names":["--pwd"],"argument":"string","description":"initial working directory for payload process inside the container"},{"names":["--rocm"],"argument":"","description":"enable experimental Rocm support"},{"names":["-S","--scratch"],"argument":"strings","description":"include a scratch directory within the container that is linked to a temporary dir (use -W to force location)"},{"names":["--security"],"argument":"strings","description":"enable security features (SELinux, Apparmor, Seccomp)"},{"names":["-u","--userns"],"argument":"","description":"run container in a new user namespace, allowing Singularity to run completely unprivileged on recent kernels. This disables some features of Singularity, for example it only works with sandbox images."},{"names":["--uts"],"argument":"","description":"run container in a new UTS namespace"},{"names":["--vm"],"argument":"","description":"enable VM support"},{"names":["--vm-cpu"],"argument":"string","description":"number of CPU cores to allocate to Virtual Machine (implies --vm) (default \"1\")"},{"names":["--vm-err"],"argument":"","description":"enable attaching stderr from VM"},{"names":["--vm-ip"],"argument":"string","description":"IP Address to assign for container usage. Defaults to DHCP within bridge network. (default \"dhcp\")"},{"names":["--vm-ram"],"argument":"string","description":"amount of RAM in MiB to allocate to Virtual Machine (implies --vm) (default \"1024\")"},{"names":["-W","--workdir"],"argument":"string","description":"working directory to be used for /tmp, /var/tmp and $HOME (if -c/--contain was also used)"},{"names":["-w","--writable"],"argument":"","description":"by default all Singularity containers are available as read only. This option makes the file system accessible as read/write."},{"names":["--writable-tmpfs"],"argument":"","description":"makes the file system accessible as read-write with non persistent data (with overlay support only)"}]},{"name":"run-help","description":"Show the user-defined help for an image","usage":"singularity run-help <image path>","options":[{"names":["--app"],"argument":"string","description":"show the help for an app"},{"names":["-h","--help"],"argument":"","description":"help for run-help"}]},{"name":"search","description":"Search a Container Library for images","usage":"singularity search [search options...] <search_query>","options":[{"names":["--arch"],"argument":"string","description":"architecture to search for (default \"amd64\")"},{"names":["-h","--help"],"argument":"","description":"help for search"},{"names":["--library"],"argument":"string","description":"URI for library to search"},{"names":["--signed"],"argument":"","description":"architecture to search for"}]},{"name":"shell","description":"Run a shell within a container","usage":"singularity shell [shell options...] <container>","options":[{"names":["--add-caps"],"argument":"string","description":"a comma separated capability list to add"},{"names":["--allow-setuid"],"argument":"","description":"allow setuid binaries in container (root only)"},{"names":["--app"],"argument":"string","description":"set an application to run inside a container"},{"names":["--apply-cgroups"],"argument":"string","description":"apply cgroups from file for container processes (root only)"},{"names":["-B","--bind"],"argument":"stringArray","description":"a user-bind path specification. spec has the format src[:dest[:opts]], where src and dest are outside and inside paths. If dest is not given, it is set equal to src. Mount options ('opts') may be specified as 'ro' (read-only) or 'rw' (read/write, which is the default). Multiple bind paths can be given by a comma separated list."},{"names":["-e","--cleanenv"],"argument":"","description":"clean environment before running container"},{"names":["-c","--contain"],"argument":"","description":"use minimal /dev and empty other directories (e.g. /tmp and $HOME) instead of sharing filesystems from your host"},{"names":["-C","--containall"],"argument":"","description":"contain not only file systems, but also PID, IPC, and environment"},{"names":["--disable-cache"],"argument":"","description":"dont use cache, and dont create cache"},{"names":["--dns"],"argument":"string","description":"list of DNS server separated by commas to add in resolv.conf"},{"names":["--docker-login"],"argument":"","description":"login to a Docker Repository interactively"},{"names":["--drop-caps"],"argument":"string","description":"a comma separated capability list to drop"},{"names":["--env"],"argument":"strings","description":"pass environment variable to contained process"},{"names":["--env-file"],"argument":"string","description":"pass environment variables from file to contained process"},{"names":["-f","--fakeroot"],"argument":"","description":"run container in new user namespace as uid 0"},{"names":["--fusemount"],"argument":"strings","description":"A FUSE filesystem mount specification of the form '<type>:<fuse command> <mountpoint>' - where <type> is 'container' or 'host', specifying where the mount will be performed ('container-daemon' or 'host-daemon' will run the FUSE process detached). <fuse command> is the path to the FUSE executable, plus options for the mount. <mountpoint> is the location in the container to which the FUSE mount will be attached. E.g. 'container:sshfs 10.0.0.1:/ /sshfs'. Implies --pid."},{"names":["-h","--help"],"argument":"","description":"help for shell"},{"names":["-H","--home"],"argument":"string","description":"a home directory specification. spec can either be a src path or src:dest pair. src is the source path of the home directory outside the container and dest overrides the home directory within the container. (default \"~\")"},{"names":["--hostname"],"argument":"string","description":"set container hostname"},{"names":["-i","--ipc"],"argument":"","description":"run container in a new IPC namespace"},{"names":["--keep-privs"],"argument":"","description":"let root user keep privileges in container (root only)"},{"names":["-n","--net"],"argument":"","description":"run container in a new network namespace (sets up a bridge network interface by default)"},{"names":["--network"],"argument":"string","description":"specify desired network type separated by commas, each network will bring up a dedicated interface inside container (default \"bridge\")"},{"names":["--network-args"],"argument":"strings","description":"specify network arguments to pass to CNI plugins"},{"names":["--no-home"],"argument":"","description":"do NOT mount users home directory if /home is not the current working directory"},{"names":["--no-init"],"argument":"","description":"do NOT start shim process with --pid"},{"names":["--no-mount"],"argument":"strings","description":"disable one or more mount xxx options set in singularity.conf"},{"names":["--no-privs"],"argument":"","description":"drop all privileges from root user in container)"},{"names":["--no-umask"],"argument":"","description":"do not propagate umask to the container, set default 0022 umask"},{"names":["--nohttps"],"argument":"","description":"do NOT use HTTPS with the docker:// transport (useful for local docker registries without a certificate)"},{"names":["--nonet"],"argument":"","description":"disable VM network handling"},{"names":["--nv"],"argument":"","description":"enable experimental Nvidia support"},{"names":["-o","--overlay"],"argument":"strings","description":"use an overlayFS image for persistent data storage or as read-only layer of container"},{"names":["--passphrase"],"argument":"","description":"prompt for an encryption passphrase"},{"names":["--pem-path"],"argument":"string","description":"enter an path to a PEM formated RSA key for an encrypted container"},{"names":["-p","--pid"],"argument":"","description":"run container in a new PID namespace"},{"names":["--pwd"],"argument":"string","description":"initial working directory for payload process inside the container"},{"names":["--rocm"],"argument":"","description":"enable experimental Rocm support"},{"names":["-S","--scratch"],"argument":"strings","description":"include a scratch directory within the container that is linked to a temporary dir (use -W to force location)"},{"names":["--security"],"argument":"strings","description":"enable security features (SELinux, Apparmor, Seccomp)"},{"names":["-s","--shell"],"argument":"string","description":"path to program to use for interactive shell"},{"names":["--syos"],"argument":"","description":"execute SyOS shell"},{"names":["-u","--userns"],"argument":"","description":"run container in a new user namespace, allowing Singularity to run completely unprivileged on recent kernels. This disables some features of Singularity, for example it only works with sandbox images."},{"names":["--uts"],"argument":"","description":"run container in a new UTS namespace"},{"names":["--vm"],"argument":"","description":"enable VM support"},{"names":["--vm-cpu"],"argument":"string","description":"number of CPU cores to allocate to Virtual Machine (implies --vm) (default \"1\")"},{"names":["--vm-err"],"argument":"","description":"enable attaching stderr from VM"},{"names":["--vm-ip"],"argument":"string","description":"IP Address to assign for container usage. Defaults to DHCP within bridge network. (default \"dhcp\")"},{"names":["--vm-ram"],"argument":"string","description":"amount of RAM in MiB to allocate to Virtual Machine (implies --vm) (default \"1024\")"},{"names":["-W","--workdir"],"argument":"string","description":"working directory to be used for /tmp, /var/tmp and $HOME (if -c/--contain was also used)"},{"names":["-w","--writable"],"argument":"","description":"by default all Singularity containers are available as read only. This option makes the file system accessible as read/write."},{"names":["--writable-tmpfs"],"argument":"","description":"makes the file system accessible as read-write with non persistent data (with overlay support only)"}]},{"name":"sif","description":"siftool is a program for Singularity Image Format (SIF) file manipulation","usage":"singularity sif","options":[{"names":["-h","--help"],"argument":"","description":"help for sif"}],"subcommands":[{"name":"add","description":"Add a data object to a SIF file","usage":"singularity sif add <containerfile> <dataobjectfile> [flags]","options":[{"names":["--alignment"],"argument":"int","description":"set alignment constraint [default: aligned on page size]"},{"names":["--datatype"],"argument":"int","description":"the type of data to add [NEEDED, no default]:"},{"names":["--filename"],"argument":"string","description":"set logical filename/handle [default: input filename]"},{"names":["--groupid"],"argument":"uint32","description":"set groupid [default: 0]"},{"names":["-h","--help"],"argument":"","description":"help for add"},{"names":["--link"],"argument":"uint32","description":"set link pointer [default: 0]"},{"names":["--partarch"],"argument":"int32","description":"the main architecture used (with -datatype 4-Partition) [NEEDED, no default]:"},{"names":["--partfs"],"argument":"int32","description":"the filesystem used (with -datatype 4-Partition) [NEEDED, no default]:"},{"names":["--parttype"],"argument":"int32","description":"the type of partition (with -datatype 4-Partition) [NEEDED, no default]:"},{"names":["--signentity"],"argument":"string","description":"the entity that signs (with -datatype 5-Signature) [NEEDED, no default]:"},{"names":["--signhash"],"argument":"int32","description":"the signature hash used (with -datatype 5-Signature) [NEEDED, no default]:"}]},{"name":"del","description":"Delete a specified object descriptor and data from SIF file","usage":"singularity sif del <descriptorid> <containerfile> [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for del"}]},{"name":"dump","description":"Extract and output data objects from SIF files","usage":"singularity sif dump <descriptorid> <containerfile>","options":[{"names":["-h","--help"],"argument":"","description":"help for dump"}]},{"name":"header","description":"Display SIF global headers","usage":"singularity sif header <containerfile>","options":[{"names":["-h","--help"],"argument":"","description":"help for header"}]},{"name":"info","description":"Display detailed information of object descriptors","usage":"singularity sif info <descriptorid> <containerfile>","options":[{"names":["-h","--help"],"argument":"","description":"help for info"}]},{"name":"list","description":"List object descriptors from SIF files","usage":"singularity sif list <containerfile>","options":[{"names":["-h","--help"],"argument":"","description":"help for list"}]},{"name":"new","description":"Create a new empty SIF image file","usage":"singularity sif new <containerfile>","options":[{"names":["-h","--help"],"argument":"","description":"help for new"}]},{"name":"setprim","description":"Set primary system partition","usage":"singularity sif setprim <descriptorid> <containerfile> [flags]","options":[{"names":["-h","--help"],"argument":"","description":"help for setprim"}]}]},{"name":"sign","description":"Attach digital signature(s) to an image","usage":"singularity sign [sign options...] <image path>","options":[{"names":["-g","--group-id"],"argument":"uint32","description":"sign objects with the specified group ID"},{"names":["-h","--help"],"argument":"","description":"help for sign"},{"names":["-k","--keyidx"],"argument":"int","description":"private key to use (index from 'key list')"},{"names":["-i","--sif-id"],"argument":"uint32","description":"sign object with the specified ID"}]},{"name":"test","description":"Run the user-defined tests within a container","usage":"singularity test [exec options...] <image path>","options":[{"names":["--add-caps"],"argument":"string","description":"a comma separated capability list to add"},{"names":["--allow-setuid"],"argument":"","description":"allow setuid binaries in container (root only)"},{"names":["--app"],"argument":"string","description":"set an application to run inside a container"},{"names":["--apply-cgroups"],"argument":"string","description":"apply cgroups from file for container processes (root only)"},{"names":["-B","--bind"],"argument":"stringArray","description":"a user-bind path specification. spec has the format src[:dest[:opts]], where src and dest are outside and inside paths. If dest is not given, it is set equal to src. Mount options ('opts') may be specified as 'ro' (read-only) or 'rw' (read/write, which is the default). Multiple bind paths can be given by a comma separated list."},{"names":["-e","--cleanenv"],"argument":"","description":"clean environment before running container"},{"names":["-c","--contain"],"argument":"","description":"use minimal /dev and empty other directories (e.g. /tmp and $HOME) instead of sharing filesystems from your host"},{"names":["-C","--containall"],"argument":"","description":"contain not only file systems, but also PID, IPC, and environment"},{"names":["--disable-cache"],"argument":"","description":"dont use cache, and dont create cache"},{"names":["--dns"],"argument":"string","description":"list of DNS server separated by commas to add in resolv.conf"},{"names":["--docker-login"],"argument":"","description":"login to a Docker Repository interactively"},{"names":["--drop-caps"],"argument":"string","description":"a comma separated capability list to drop"},{"names":["--env"],"argument":"strings","description":"pass environment variable to contained process"},{"names":["--env-file"],"argument":"string","description":"pass environment variables from file to contained process"},{"names":["-f","--fakeroot"],"argument":"","description":"run container in new user namespace as uid 0"},{"names":["--fusemount"],"argument":"strings","description":"A FUSE filesystem mount specification of the form '<type>:<fuse command> <mountpoint>' - where <type> is 'container' or 'host', specifying where the mount will be performed ('container-daemon' or 'host-daemon' will run the FUSE process detached). <fuse command> is the path to the FUSE executable, plus options for the mount. <mountpoint> is the location in the container to which the FUSE mount will be attached. E.g. 'container:sshfs 10.0.0.1:/ /sshfs'. Implies --pid."},{"names":["-h","--help"],"argument":"","description":"help for test"},{"names":["-H","--home"],"argument":"string","description":"a home directory specification. spec can either be a src path or src:dest pair. src is the source path of the home directory outside the container and dest overrides the home directory within the container. (default \"~\")"},{"names":["--hostname"],"argument":"string","description":"set container hostname"},{"names":["-i","--ipc"],"argument":"","description":"run container in a new IPC namespace"},{"names":["--keep-privs"],"argument":"","description":"let root user keep privileges in container (root only)"},{"names":["-n","--net"],"argument":"","description":"run container in a new network namespace (sets up a bridge network interface by default)"},{"names":["--network"],"argument":"string","description":"specify desired network type separated by commas, each network will bring up a dedicated interface inside container (default \"bridge\")"},{"names":["--network-args"],"argument":"strings","description":"specify network arguments to pass to CNI plugins"},{"names":["--no-home"],"argument":"","description":"do NOT mount users home directory if /home is not the current working directory"},{"names":["--no-init"],"argument":"","description":"do NOT start shim process with --pid"},{"names":["--no-mount"],"argument":"strings","description":"disable one or more mount xxx options set in singularity.conf"},{"names":["--no-privs"],"argument":"","description":"drop all privileges from root user in container)"},{"names":["--no-umask"],"argument":"","description":"do not propagate umask to the container, set default 0022 umask"},{"names":["--nohttps"],"argument":"","description":"do NOT use HTTPS with the docker:// transport (useful for local docker registries without a certificate)"},{"names":["--nonet"],"argument":"","description":"disable VM network handling"},{"names":["--nv"],"argument":"","description":"enable experimental Nvidia support"},{"names":["-o","--overlay"],"argument":"strings","description":"use an overlayFS image for persistent data storage or as read-only layer of container"},{"names":["--passphrase"],"argument":"","description":"prompt for an encryption passphrase"},{"names":["--pem-path"],"argument":"string","description":"enter an path to a PEM formated RSA key for an encrypted container"},{"names":["-p","--pid"],"argument":"","description":"run container in a new PID namespace"},{"names":["--pwd"],"argument":"string","description":"initial working directory for payload process inside the container"},{"names":["--rocm"],"argument":"","description":"enable experimental Rocm support"},{"names":["-S","--scratch"],"argument":"strings","description":"include a scratch directory within the container that is linked to a temporary dir (use -W to force location)"},{"names":["--security"],"argument":"strings","description":"enable security features (SELinux, Apparmor, Seccomp)"},{"names":["-u","--userns"],"argument":"","description":"run container in a new user namespace, allowing Singularity to run completely unprivileged on recent kernels. This disables some features of Singularity, for example it only works with sandbox images."},{"names":["--uts"],"argument":"","description":"run container in a new UTS namespace"},{"names":["--vm"],"argument":"","description":"enable VM support"},{"names":["--vm-cpu"],"argument":"string","description":"number of CPU cores to allocate to Virtual Machine (implies --vm) (default \"1\")"},{"names":["--vm-err"],"argument":"","description":"enable attaching stderr from VM"},{"names":["--vm-ip"],"argument":"string","description":"IP Address to assign for container usage. Defaults to DHCP within bridge network. (default \"dhcp\")"},{"names":["--vm-ram"],"argument":"string","description":"amount of RAM in MiB to allocate to Virtual Machine (implies --vm) (default \"1024\")"},{"names":["-W","--workdir"],"argument":"string","description":"working directory to be used for /tmp, /var/tmp and $HOME (if -c/--contain was also used)"},{"names":["-w","--writable"],"argument":"","description":"by default all Singularity containers are available as read only. This option makes the file system accessible as read/write."},{"names":["--writable-tmpfs"],"argument":"","description":"makes the file system accessible as read-write with non persistent data (with overlay support only)"}]},{"name":"verify","description":"Verify cryptographic signatures attached to an image","usage":"singularity verify [verify options...] <image path>","options":[{"names":["-a","--all"],"argument":"","description":"verify all objects"},{"names":["-g","--group-id"],"argument":"uint32","description":"verify objects with the specified group ID"},{"names":["-h","--help"],"argument":"","description":"help for verify"},{"names":["-j","--json"],"argument":"","description":"output json"},{"names":["--legacy-insecure"],"argument":"","description":"enable verification of (insecure) legacy signatures"},{"names":["-l","--local"],"argument":"","description":"only verify with local key(s) in keyring"},{"names":["-i","--sif-id"],"argument":"uint32","description":"verify object with the specified ID"},{"names":["-u","--url"],"argument":"string","description":"specify a URL for a key server"}]},{"name":"version","description":"Show the version for Singularity","usage":"singularity version","options":[{"names":["-h","--help"],"argument":"","description":"help for version"}]}],"version":"singularity version 3.8.6","tldr":"> Manage Singularity containers and images.\n> More information: <https://singularity-docs.readthedocs.io/en/latest/#commands>.\n\n- Download a remote image from Sylabs Cloud:\n\n`singularity pull --name {{image.sif}} {{library://godlovedc/funny/lolcow:latest}}`\n\n- Rebuild a remote image using the latest Singularity image format:\n\n`singularity build {{image.sif}} {{docker://godlovedc/lolcow}}`\n\n- Start a container from an image and get a shell inside it:\n\n`singularity shell {{image.sif}}`\n\n- Start a container from an image and run a command:\n\n`singularity exec {{image.sif}} {{command}}`\n\n- Start a container from an image and execute the internal runscript:\n\n`singularity run {{image.sif}}`\n\n- Build a singularity image from a recipe file:\n\n`sudo singularity build {{image.sif}} {{recipe}}`\n"}
