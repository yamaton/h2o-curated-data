{"name":"sqlite-utils","description":"Python CLI utility and library for manipulating SQLite databases","usage":"sqlite-utils [OPTIONS] COMMAND [ARGS]...","options":[{"names":["--version"],"argument":"","description":"Show the version and exit."},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}],"subcommands":[{"name":"query","description":"Execute SQL query and return the results as JSON","usage":"sqlite-utils query [OPTIONS] PATH SQL","options":[{"names":["--attach"],"argument":"<TEXT FILE>...","description":"Additional databases to attach - specify alias and filepath"},{"names":["--nl"],"argument":"","description":"Output newline-delimited JSON"},{"names":["--arrays"],"argument":"","description":"Output rows as arrays instead of objects"},{"names":["--csv"],"argument":"","description":"Output CSV"},{"names":["--tsv"],"argument":"","description":"Output TSV"},{"names":["--no-headers"],"argument":"","description":"Omit CSV headers"},{"names":["-t","--table"],"argument":"","description":"Output as a formatted table"},{"names":["--fmt"],"argument":"TEXT","description":"Table format - one of asciidoc, double_grid, double_outline, fancy_grid, fancy_outline, github, grid, heavy_grid, heavy_outline, html, jira, latex, latex_booktabs, latex_longtable, latex_raw, mediawiki, mixed_grid, mixed_outline, moinmoin, orgtbl, outline, pipe, plain, presto, pretty, psql, rounded_grid, rounded_outline, rst, simple, simple_grid, simple_outline, textile, tsv, unsafehtml, youtrack"},{"names":["--json-cols"],"argument":"","description":"Detect JSON cols and output them as JSON, not escaped strings"},{"names":["-r","--raw"],"argument":"","description":"Raw output, first column of first row"},{"names":["--raw-lines"],"argument":"","description":"Raw output, first column of each row"},{"names":["-p","--param"],"argument":"<TEXT TEXT>...","description":"Named :parameters for SQL query"},{"names":["--functions"],"argument":"TEXT","description":"Python code defining one or more custom SQL functions"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"add-column","description":"Add a column to the specified table","usage":"sqlite-utils add-column [OPTIONS] PATH TABLE COL_NAME [[integer|float|b\n                        lob|text|INTEGER|FLOAT|BLOB|TEXT]]","options":[{"names":["--fk"],"argument":"TEXT","description":"Table to reference as a foreign key"},{"names":["--fk-col"],"argument":"TEXT","description":"Referenced column on that foreign key table - if omitted will automatically use the primary key"},{"names":["--not-null-default"],"argument":"TEXT","description":"Add NOT NULL DEFAULT 'TEXT' constraint"},{"names":["--ignore"],"argument":"","description":"If column already exists, do nothing"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"add-foreign-key","description":"Add a new foreign key constraint to an existing...","usage":"sqlite-utils add-foreign-key [OPTIONS] PATH TABLE COLUMN [OTHER_TABLE]\n                             [OTHER_COLUMN]","options":[{"names":["--ignore"],"argument":"","description":"If foreign key already exists, do nothing"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"add-foreign-keys","description":"Add multiple new foreign key constraints to a...","usage":"sqlite-utils add-foreign-keys [OPTIONS] PATH [FOREIGN_KEY]...","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"add-geometry-column","description":"Add a SpatiaLite geometry column to an existing...","usage":"sqlite-utils add-geometry-column [OPTIONS] DB_PATH TABLE COLUMN_NAME","options":[{"names":["-t","--type"],"argument":"[POINT|LINESTRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION|GEOMETRY]","description":"Specify a geometry type for this column. [default: GEOMETRY]"},{"names":["--srid"],"argument":"INTEGER","description":"Spatial Reference ID. See https://spatialreference.org for details on specific projections. [default: 4326]"},{"names":["--dimensions"],"argument":"TEXT","description":"Coordinate dimensions. Use XYZ for threedimensional geometries."},{"names":["--not-null"],"argument":"","description":"Add a NOT NULL constraint."},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"analyze","description":"Run ANALYZE against the whole database, or...","usage":"sqlite-utils analyze [OPTIONS] PATH [NAMES]...","options":[{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"analyze-tables","description":"Analyze the columns in one or more tables","usage":"sqlite-utils analyze-tables [OPTIONS] PATH [TABLES]...","options":[{"names":["-c","--column"],"argument":"TEXT","description":"Specific columns to analyze"},{"names":["--save"],"argument":"","description":"Save results to _analyze_tables table"},{"names":["--common-limit"],"argument":"INTEGER","description":"How many common values"},{"names":["--no-most"],"argument":"","description":"Skip most common values"},{"names":["--no-least"],"argument":"","description":"Skip least common values"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"bulk","description":"Execute parameterized SQL against the provided...","usage":"sqlite-utils bulk [OPTIONS] PATH SQL FILE","options":[{"names":["--batch-size"],"argument":"INTEGER","description":"Commit every X records"},{"names":["--functions"],"argument":"TEXT","description":"Python code defining one or more custom SQL functions"},{"names":["--flatten"],"argument":"","description":"Flatten nested JSON objects, so {\"a\": {\"b\": 1}} becomes {\"a_b\": 1}"},{"names":["--nl"],"argument":"","description":"Expect newline-delimited JSON"},{"names":["-c","--csv"],"argument":"","description":"Expect CSV input"},{"names":["--tsv"],"argument":"","description":"Expect TSV input"},{"names":["--lines"],"argument":"","description":"Treat each line as a single value called 'line'"},{"names":["--text"],"argument":"","description":"Treat input as a single value called 'text'"},{"names":["--convert"],"argument":"TEXT","description":"Python code to convert each item"},{"names":["--import"],"argument":"TEXT","description":"Python modules to import"},{"names":["--delimiter"],"argument":"TEXT","description":"Delimiter to use for CSV files"},{"names":["--quotechar"],"argument":"TEXT","description":"Quote character to use for CSV/TSV"},{"names":["--sniff"],"argument":"","description":"Detect delimiter and quote character"},{"names":["--no-headers"],"argument":"","description":"CSV file has no header row"},{"names":["--encoding"],"argument":"TEXT","description":"Character encoding for input, defaults to utf-8"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"convert","description":"Convert columns using Python code you supply.","usage":"sqlite-utils convert [OPTIONS] DB_PATH TABLE COLUMNS... CODE","options":[{"names":["--import"],"argument":"textwrap","description":"\"value\" is a variable with the column value to be converted."},{"names":["--import"],"argument":"TEXT","description":"Python modules to import"},{"names":["--dry-run"],"argument":"","description":"Show results of running this against first 10 rows"},{"names":["--multi"],"argument":"","description":"Populate columns for keys in returned dictionary"},{"names":["--where"],"argument":"TEXT","description":"Optional where clause"},{"names":["-p","--param"],"argument":"<TEXT TEXT>...","description":"Named :parameters for where clause"},{"names":["--output"],"argument":"TEXT","description":"Optional separate column to populate with the output"},{"names":["--output-type"],"argument":"[integer|float|blob|text]","description":"Column type to use for the output column"},{"names":["--drop"],"argument":"","description":"Drop original column afterwards"},{"names":["--no-skip-false"],"argument":"","description":"Don't skip falsey values"},{"names":["-s","--silent"],"argument":"","description":"Don't show a progress bar"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"create-database","description":"Create a new empty database file","usage":"sqlite-utils create-database [OPTIONS] PATH","options":[{"names":["--enable-wal"],"argument":"","description":"Enable WAL mode on the created database"},{"names":["--init-spatialite"],"argument":"","description":"Enable SpatiaLite on the created database"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"create-index","description":"Add an index to the specified table for the...","usage":"sqlite-utils create-index [OPTIONS] PATH TABLE COLUMN...","options":[{"names":["--name"],"argument":"TEXT","description":"Explicit name for the new index"},{"names":["--unique"],"argument":"","description":"Make this a unique index"},{"names":["--if-not-exists","--ignore"],"argument":"","description":"Ignore if index already exists"},{"names":["--analyze"],"argument":"","description":"Run ANALYZE after creating the index"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"create-spatial-index","description":"Create a spatial index on a SpatiaLite geometry...","usage":"sqlite-utils create-spatial-index [OPTIONS] DB_PATH TABLE COLUMN_NAME","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"create-table","description":"Add a table with the specified columns.","usage":"sqlite-utils create-table [OPTIONS] PATH TABLE COLUMNS...","options":[{"names":["--pk"],"argument":"TEXT","description":"Column to use as primary key"},{"names":["--not-null"],"argument":"TEXT","description":"Columns that should be created as NOT NULL"},{"names":["--default"],"argument":"<TEXT TEXT>...","description":"Default value that should be set for a column"},{"names":["--fk"],"argument":"<TEXT TEXT TEXT>...","description":"Column, other table, other column to set as a foreign key"},{"names":["--ignore"],"argument":"","description":"If table already exists, do nothing"},{"names":["--replace"],"argument":"","description":"If table already exists, replace it"},{"names":["--transform"],"argument":"","description":"If table already exists, try to transform the schema"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"create-view","description":"Create a view for the provided SELECT query","usage":"sqlite-utils create-view [OPTIONS] PATH VIEW SELECT","options":[{"names":["--ignore"],"argument":"","description":"If view already exists, do nothing"},{"names":["--replace"],"argument":"","description":"If view already exists, replace it"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"disable-fts","description":"Disable full-text search for specific table","usage":"sqlite-utils disable-fts [OPTIONS] PATH TABLE","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"disable-wal","description":"Disable WAL for database files","usage":"sqlite-utils disable-wal [OPTIONS] PATH...","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"drop-table","description":"Drop the specified table","usage":"sqlite-utils drop-table [OPTIONS] PATH TABLE","options":[{"names":["--ignore"],"argument":"","description":"If table does not exist, do nothing"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"drop-view","description":"Drop the specified view","usage":"sqlite-utils drop-view [OPTIONS] PATH VIEW","options":[{"names":["--ignore"],"argument":"","description":"If view does not exist, do nothing"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"dump","description":"Output a SQL dump of the schema and full contents...","usage":"sqlite-utils dump [OPTIONS] PATH","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"duplicate","description":"Create a duplicate of this table, copying across...","usage":"sqlite-utils duplicate [OPTIONS] PATH TABLE NEW_TABLE","options":[{"names":["--ignore"],"argument":"","description":"If table does not exist, do nothing"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"enable-counts","description":"Configure triggers to update a _counts table with...","usage":"sqlite-utils enable-counts [OPTIONS] PATH [TABLES]...","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"enable-fts","description":"Enable full-text search for specific table and...","usage":"sqlite-utils enable-fts [OPTIONS] PATH TABLE COLUMN...","options":[{"names":["--fts4"],"argument":"","description":"Use FTS4"},{"names":["--fts5"],"argument":"","description":"Use FTS5"},{"names":["--tokenize"],"argument":"TEXT","description":"Tokenizer to use, e.g. porter"},{"names":["--create-triggers"],"argument":"","description":"Create triggers to update the FTS tables when the parent table changes."},{"names":["--replace"],"argument":"","description":"Replace existing FTS configuration if it exists"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"enable-wal","description":"Enable WAL for database files","usage":"sqlite-utils enable-wal [OPTIONS] PATH...","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"extract","description":"Extract one or more columns into a separate table","usage":"sqlite-utils extract [OPTIONS] PATH TABLE COLUMNS...","options":[{"names":["--table"],"argument":"TEXT","description":"Name of the other table to extract columns to"},{"names":["--fk-column"],"argument":"TEXT","description":"Name of the foreign key column to add to the table"},{"names":["--rename"],"argument":"<TEXT TEXT>...","description":"Rename this column in extracted table"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"index-foreign-keys","description":"Ensure every foreign key column has an index on it","usage":"sqlite-utils index-foreign-keys [OPTIONS] PATH","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"indexes","description":"Show indexes for the whole database or specific...","usage":"sqlite-utils indexes [OPTIONS] PATH [TABLES]...","options":[{"names":["--aux"],"argument":"","description":"Include auxiliary columns"},{"names":["--nl"],"argument":"","description":"Output newline-delimited JSON"},{"names":["--arrays"],"argument":"","description":"Output rows as arrays instead of objects"},{"names":["--csv"],"argument":"","description":"Output CSV"},{"names":["--tsv"],"argument":"","description":"Output TSV"},{"names":["--no-headers"],"argument":"","description":"Omit CSV headers"},{"names":["-t","--table"],"argument":"","description":"Output as a formatted table"},{"names":["--fmt"],"argument":"TEXT","description":"Table format - one of asciidoc, double_grid, double_outline, fancy_grid, fancy_outline, github, grid, heavy_grid, heavy_outline, html, jira, latex, latex_booktabs, latex_longtable, latex_raw, mediawiki, mixed_grid, mixed_outline, moinmoin, orgtbl, outline, pipe, plain, presto, pretty, psql, rounded_grid, rounded_outline, rst, simple, simple_grid, simple_outline, textile, tsv, unsafehtml, youtrack"},{"names":["--json-cols"],"argument":"","description":"Detect JSON cols and output them as JSON, not escaped strings"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"insert","description":"Insert records from FILE into a table, creating...","usage":"sqlite-utils insert [OPTIONS] PATH TABLE FILE","options":[{"names":["--text"],"argument":"a \"text\" variable.","description":"When using --text your function can return an iterator of rows to insert."},{"names":["--pk"],"argument":"TEXT","description":"Columns to use as the primary key, e.g. id"},{"names":["--flatten"],"argument":"","description":"Flatten nested JSON objects, so {\"a\": {\"b\": 1}} becomes {\"a_b\": 1}"},{"names":["--nl"],"argument":"","description":"Expect newline-delimited JSON"},{"names":["-c","--csv"],"argument":"","description":"Expect CSV input"},{"names":["--tsv"],"argument":"","description":"Expect TSV input"},{"names":["--lines"],"argument":"","description":"Treat each line as a single value called 'line'"},{"names":["--text"],"argument":"","description":"Treat input as a single value called 'text'"},{"names":["--convert"],"argument":"TEXT","description":"Python code to convert each item"},{"names":["--import"],"argument":"TEXT","description":"Python modules to import"},{"names":["--delimiter"],"argument":"TEXT","description":"Delimiter to use for CSV files"},{"names":["--quotechar"],"argument":"TEXT","description":"Quote character to use for CSV/TSV"},{"names":["--sniff"],"argument":"","description":"Detect delimiter and quote character"},{"names":["--no-headers"],"argument":"","description":"CSV file has no header row"},{"names":["--encoding"],"argument":"TEXT","description":"Character encoding for input, defaults to utf-8"},{"names":["--batch-size"],"argument":"INTEGER","description":"Commit every X records"},{"names":["--alter"],"argument":"","description":"Alter existing table to add any missing columns"},{"names":["--not-null"],"argument":"TEXT","description":"Columns that should be created as NOT NULL"},{"names":["--default"],"argument":"<TEXT TEXT>...","description":"Default value that should be set for a column"},{"names":["-d","--detect-types"],"argument":"","description":"Detect types for columns in CSV/TSV data"},{"names":["--analyze"],"argument":"","description":"Run ANALYZE at the end of this operation"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["--silent"],"argument":"","description":"Do not show progress bar"},{"names":["--ignore"],"argument":"","description":"Ignore records if pk already exists"},{"names":["--replace"],"argument":"","description":"Replace records if pk already exists"},{"names":["--truncate"],"argument":"","description":"Truncate table before inserting records, if table already exists"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"insert-files","description":"Insert one or more files using BLOB columns in...","usage":"sqlite-utils insert-files [OPTIONS] PATH TABLE FILE_OR_DIR...","options":[{"names":["-c","--column"],"argument":"TEXT","description":"Column definitions for the table"},{"names":["--pk"],"argument":"TEXT","description":"Column to use as primary key"},{"names":["--alter"],"argument":"","description":"Alter table to add missing columns"},{"names":["--replace"],"argument":"","description":"Replace files with matching primary key"},{"names":["--upsert"],"argument":"","description":"Upsert files with matching primary key"},{"names":["--name"],"argument":"TEXT","description":"File name to use"},{"names":["--text"],"argument":"","description":"Store file content as TEXT, not BLOB"},{"names":["--encoding"],"argument":"TEXT","description":"Character encoding for input, defaults to utf-8"},{"names":["-s","--silent"],"argument":"","description":"Don't show a progress bar"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"install","description":"Install packages from PyPI into the same...","usage":"sqlite-utils install [OPTIONS] PACKAGES...","options":[{"names":["-U","--upgrade"],"argument":"","description":"Upgrade packages to latest version"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"memory","description":"Execute SQL query against an in-memory database,...","usage":"sqlite-utils memory [OPTIONS] [PATHS]... SQL","options":[{"names":["--functions"],"argument":"TEXT","description":"Python code defining one or more custom SQL functions"},{"names":["--attach"],"argument":"<TEXT FILE>...","description":"Additional databases to attach - specify alias and filepath"},{"names":["--flatten"],"argument":"","description":"Flatten nested JSON objects, so {\"foo\": {\"bar\": 1}} becomes {\"foo_bar\": 1}"},{"names":["--nl"],"argument":"","description":"Output newline-delimited JSON"},{"names":["--arrays"],"argument":"","description":"Output rows as arrays instead of objects"},{"names":["--csv"],"argument":"","description":"Output CSV"},{"names":["--tsv"],"argument":"","description":"Output TSV"},{"names":["--no-headers"],"argument":"","description":"Omit CSV headers"},{"names":["-t","--table"],"argument":"","description":"Output as a formatted table"},{"names":["--fmt"],"argument":"TEXT","description":"Table format - one of asciidoc, double_grid, double_outline, fancy_grid, fancy_outline, github, grid, heavy_grid, heavy_outline, html, jira, latex, latex_booktabs, latex_longtable, latex_raw, mediawiki, mixed_grid, mixed_outline, moinmoin, orgtbl, outline, pipe, plain, presto, pretty, psql, rounded_grid, rounded_outline, rst, simple, simple_grid, simple_outline, textile, tsv, unsafehtml, youtrack"},{"names":["--json-cols"],"argument":"","description":"Detect JSON cols and output them as JSON, not escaped strings"},{"names":["-r","--raw"],"argument":"","description":"Raw output, first column of first row"},{"names":["--raw-lines"],"argument":"","description":"Raw output, first column of each row"},{"names":["-p","--param"],"argument":"<TEXT TEXT>...","description":"Named :parameters for SQL query"},{"names":["--encoding"],"argument":"TEXT","description":"Character encoding for CSV input, defaults to utf-8"},{"names":["-n","--no-detect-types"],"argument":"","description":"Treat all CSV/TSV columns as TEXT"},{"names":["--schema"],"argument":"","description":"Show SQL schema for in-memory database"},{"names":["--dump"],"argument":"","description":"Dump SQL for in-memory database"},{"names":["--save"],"argument":"FILE","description":"Save in-memory database to this file"},{"names":["--analyze"],"argument":"","description":"Analyze resulting tables and output results"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"optimize","description":"Optimize all full-text search tables and then run...","usage":"sqlite-utils optimize [OPTIONS] PATH [TABLES]...","options":[{"names":["--no-vacuum"],"argument":"","description":"Don't run VACUUM"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"populate-fts","description":"Re-populate full-text search for specific table...","usage":"sqlite-utils populate-fts [OPTIONS] PATH TABLE COLUMN...","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"rebuild-fts","description":"Rebuild all or specific full-text search tables","usage":"sqlite-utils rebuild-fts [OPTIONS] PATH [TABLES]...","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"reset-counts","description":"Reset calculated counts in the _counts table","usage":"sqlite-utils reset-counts [OPTIONS] PATH","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"rows","description":"Output all rows in the specified table","usage":"sqlite-utils rows [OPTIONS] PATH DBTABLE","options":[{"names":["-c","--column"],"argument":"TEXT","description":"Columns to return"},{"names":["--where"],"argument":"TEXT","description":"Optional where clause"},{"names":["-o","--order"],"argument":"TEXT","description":"Order by ('column' or 'column desc')"},{"names":["-p","--param"],"argument":"<TEXT TEXT>...","description":"Named :parameters for where clause"},{"names":["--limit"],"argument":"INTEGER","description":"Number of rows to return - defaults to everything"},{"names":["--offset"],"argument":"INTEGER","description":"SQL offset to use"},{"names":["--nl"],"argument":"","description":"Output newline-delimited JSON"},{"names":["--arrays"],"argument":"","description":"Output rows as arrays instead of objects"},{"names":["--csv"],"argument":"","description":"Output CSV"},{"names":["--tsv"],"argument":"","description":"Output TSV"},{"names":["--no-headers"],"argument":"","description":"Omit CSV headers"},{"names":["-t","--table"],"argument":"","description":"Output as a formatted table"},{"names":["--fmt"],"argument":"TEXT","description":"Table format - one of asciidoc, double_grid, double_outline, fancy_grid, fancy_outline, github, grid, heavy_grid, heavy_outline, html, jira, latex, latex_booktabs, latex_longtable, latex_raw, mediawiki, mixed_grid, mixed_outline, moinmoin, orgtbl, outline, pipe, plain, presto, pretty, psql, rounded_grid, rounded_outline, rst, simple, simple_grid, simple_outline, textile, tsv, unsafehtml, youtrack"},{"names":["--json-cols"],"argument":"","description":"Detect JSON cols and output them as JSON, not escaped strings"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"schema","description":"Show full schema for this database or for...","usage":"sqlite-utils schema [OPTIONS] PATH [TABLES]...","options":[{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"search","description":"Execute a full-text search against this table","usage":"sqlite-utils search [OPTIONS] PATH DBTABLE Q","options":[{"names":["-o","--order"],"argument":"TEXT","description":"Order by ('column' or 'column desc')"},{"names":["-c","--column"],"argument":"TEXT","description":"Columns to return"},{"names":["--limit"],"argument":"INTEGER","description":"Number of rows to return - defaults to everything"},{"names":["--sql"],"argument":"","description":"Show SQL query that would be run"},{"names":["--quote"],"argument":"","description":"Apply FTS quoting rules to search term"},{"names":["--nl"],"argument":"","description":"Output newline-delimited JSON"},{"names":["--arrays"],"argument":"","description":"Output rows as arrays instead of objects"},{"names":["--csv"],"argument":"","description":"Output CSV"},{"names":["--tsv"],"argument":"","description":"Output TSV"},{"names":["--no-headers"],"argument":"","description":"Omit CSV headers"},{"names":["-t","--table"],"argument":"","description":"Output as a formatted table"},{"names":["--fmt"],"argument":"TEXT","description":"Table format - one of asciidoc, double_grid, double_outline, fancy_grid, fancy_outline, github, grid, heavy_grid, heavy_outline, html, jira, latex, latex_booktabs, latex_longtable, latex_raw, mediawiki, mixed_grid, mixed_outline, moinmoin, orgtbl, outline, pipe, plain, presto, pretty, psql, rounded_grid, rounded_outline, rst, simple, simple_grid, simple_outline, textile, tsv, unsafehtml, youtrack"},{"names":["--json-cols"],"argument":"","description":"Detect JSON cols and output them as JSON, not escaped strings"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"tables","description":"List the tables in the database","usage":"sqlite-utils tables [OPTIONS] PATH","options":[{"names":["--fts4"],"argument":"","description":"Just show FTS4 enabled tables"},{"names":["--fts5"],"argument":"","description":"Just show FTS5 enabled tables"},{"names":["--counts"],"argument":"","description":"Include row counts per table"},{"names":["--nl"],"argument":"","description":"Output newline-delimited JSON"},{"names":["--arrays"],"argument":"","description":"Output rows as arrays instead of objects"},{"names":["--csv"],"argument":"","description":"Output CSV"},{"names":["--tsv"],"argument":"","description":"Output TSV"},{"names":["--no-headers"],"argument":"","description":"Omit CSV headers"},{"names":["-t","--table"],"argument":"","description":"Output as a formatted table"},{"names":["--fmt"],"argument":"TEXT","description":"Table format - one of asciidoc, double_grid, double_outline, fancy_grid, fancy_outline, github, grid, heavy_grid, heavy_outline, html, jira, latex, latex_booktabs, latex_longtable, latex_raw, mediawiki, mixed_grid, mixed_outline, moinmoin, orgtbl, outline, pipe, plain, presto, pretty, psql, rounded_grid, rounded_outline, rst, simple, simple_grid, simple_outline, textile, tsv, unsafehtml, youtrack"},{"names":["--json-cols"],"argument":"","description":"Detect JSON cols and output them as JSON, not escaped strings"},{"names":["--columns"],"argument":"","description":"Include list of columns for each table"},{"names":["--schema"],"argument":"","description":"Include schema for each table"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"transform","description":"Transform a table beyond the capabilities of...","usage":"sqlite-utils transform [OPTIONS] PATH TABLE","options":[{"names":["--type"],"argument":"<TEXT CHOICE>...","description":"Change column type to INTEGER, TEXT, FLOAT or BLOB"},{"names":["--drop"],"argument":"TEXT","description":"Drop this column"},{"names":["--rename"],"argument":"<TEXT TEXT>...","description":"Rename this column to X"},{"names":["-o","--column-order"],"argument":"TEXT","description":"Reorder columns"},{"names":["--not-null"],"argument":"TEXT","description":"Set this column to NOT NULL"},{"names":["--not-null-false"],"argument":"TEXT","description":"Remove NOT NULL from this column"},{"names":["--pk"],"argument":"TEXT","description":"Make this column the primary key"},{"names":["--pk-none"],"argument":"","description":"Remove primary key (convert to rowid table)"},{"names":["--default"],"argument":"<TEXT TEXT>...","description":"Set default value for this column"},{"names":["--default-none"],"argument":"TEXT","description":"Remove default from this column"},{"names":["--drop-foreign-key"],"argument":"TEXT","description":"Drop foreign key constraint for this column"},{"names":["--sql"],"argument":"","description":"Output SQL without executing it"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"triggers","description":"Show triggers configured in this database","usage":"sqlite-utils triggers [OPTIONS] PATH [TABLES]...","options":[{"names":["--nl"],"argument":"","description":"Output newline-delimited JSON"},{"names":["--arrays"],"argument":"","description":"Output rows as arrays instead of objects"},{"names":["--csv"],"argument":"","description":"Output CSV"},{"names":["--tsv"],"argument":"","description":"Output TSV"},{"names":["--no-headers"],"argument":"","description":"Omit CSV headers"},{"names":["-t","--table"],"argument":"","description":"Output as a formatted table"},{"names":["--fmt"],"argument":"TEXT","description":"Table format - one of asciidoc, double_grid, double_outline, fancy_grid, fancy_outline, github, grid, heavy_grid, heavy_outline, html, jira, latex, latex_booktabs, latex_longtable, latex_raw, mediawiki, mixed_grid, mixed_outline, moinmoin, orgtbl, outline, pipe, plain, presto, pretty, psql, rounded_grid, rounded_outline, rst, simple, simple_grid, simple_outline, textile, tsv, unsafehtml, youtrack"},{"names":["--json-cols"],"argument":"","description":"Detect JSON cols and output them as JSON, not escaped strings"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"uninstall","description":"Uninstall Python packages from the sqlite-utils...","usage":"sqlite-utils uninstall [OPTIONS] PACKAGES...","options":[{"names":["-y","--yes"],"argument":"","description":"Don't ask for confirmation"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"upsert","description":"Upsert records based on their primary key.","usage":"sqlite-utils upsert [OPTIONS] PATH TABLE FILE","options":[{"names":["--pk"],"argument":"TEXT","description":"Columns to use as the primary key, e.g. id [required]"},{"names":["--flatten"],"argument":"","description":"Flatten nested JSON objects, so {\"a\": {\"b\": 1}} becomes {\"a_b\": 1}"},{"names":["--nl"],"argument":"","description":"Expect newline-delimited JSON"},{"names":["-c","--csv"],"argument":"","description":"Expect CSV input"},{"names":["--tsv"],"argument":"","description":"Expect TSV input"},{"names":["--lines"],"argument":"","description":"Treat each line as a single value called 'line'"},{"names":["--text"],"argument":"","description":"Treat input as a single value called 'text'"},{"names":["--convert"],"argument":"TEXT","description":"Python code to convert each item"},{"names":["--import"],"argument":"TEXT","description":"Python modules to import"},{"names":["--delimiter"],"argument":"TEXT","description":"Delimiter to use for CSV files"},{"names":["--quotechar"],"argument":"TEXT","description":"Quote character to use for CSV/TSV"},{"names":["--sniff"],"argument":"","description":"Detect delimiter and quote character"},{"names":["--no-headers"],"argument":"","description":"CSV file has no header row"},{"names":["--encoding"],"argument":"TEXT","description":"Character encoding for input, defaults to utf-8"},{"names":["--batch-size"],"argument":"INTEGER","description":"Commit every X records"},{"names":["--alter"],"argument":"","description":"Alter existing table to add any missing columns"},{"names":["--not-null"],"argument":"TEXT","description":"Columns that should be created as NOT NULL"},{"names":["--default"],"argument":"<TEXT TEXT>...","description":"Default value that should be set for a column"},{"names":["-d","--detect-types"],"argument":"","description":"Detect types for columns in CSV/TSV data"},{"names":["--analyze"],"argument":"","description":"Run ANALYZE at the end of this operation"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["--silent"],"argument":"","description":"Do not show progress bar"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"vacuum","description":"Run VACUUM against the database","usage":"sqlite-utils vacuum [OPTIONS] PATH","options":[{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]},{"name":"views","description":"List the views in the database","usage":"sqlite-utils views [OPTIONS] PATH","options":[{"names":["--counts"],"argument":"","description":"Include row counts per view"},{"names":["--nl"],"argument":"","description":"Output newline-delimited JSON"},{"names":["--arrays"],"argument":"","description":"Output rows as arrays instead of objects"},{"names":["--csv"],"argument":"","description":"Output CSV"},{"names":["--tsv"],"argument":"","description":"Output TSV"},{"names":["--no-headers"],"argument":"","description":"Omit CSV headers"},{"names":["-t","--table"],"argument":"","description":"Output as a formatted table"},{"names":["--fmt"],"argument":"TEXT","description":"Table format - one of asciidoc, double_grid, double_outline, fancy_grid, fancy_outline, github, grid, heavy_grid, heavy_outline, html, jira, latex, latex_booktabs, latex_longtable, latex_raw, mediawiki, mixed_grid, mixed_outline, moinmoin, orgtbl, outline, pipe, plain, presto, pretty, psql, rounded_grid, rounded_outline, rst, simple, simple_grid, simple_outline, textile, tsv, unsafehtml, youtrack"},{"names":["--json-cols"],"argument":"","description":"Detect JSON cols and output them as JSON, not escaped strings"},{"names":["--columns"],"argument":"","description":"Include list of columns for each view"},{"names":["--schema"],"argument":"","description":"Include schema for each view"},{"names":["--load-extension"],"argument":"TEXT","description":"Path to SQLite extension, with optional :entrypoint"},{"names":["-h","--help"],"argument":"","description":"Show this message and exit."}]}],"version":"sqlite-utils, version 3.32.1","tldr":"> Command-line tool used to manipulate SQLite databases in a number of different ways.\n> More information: <https://sqlite-utils.datasette.io/en/stable/cli.html>.\n\n- Create a database:\n\n`sqlite-utils create-database {{path/to/database.db}}`\n\n- Create a table:\n\n`sqlite-utils create-table {{path/to/database.db}} {{table_name}} {{id integer name text height float photo blob --pk id}}`\n\n- List tables:\n\n`sqlite-utils tables {{path/to/database.db}}`\n\n- Upsert a record:\n\n`{{echo '[ {\"id\": 1, \"name\": \"Linus Torvalds\"}, {\"id\": 2, \"name\": \"Steve Wozniak\"}, {\"id\": 3, \"name\": \"Tony Hoare\"} ]'}} | sqlite-utils upsert {{path/to/database.db}} {{table_name}} - {{--pk id}}`\n\n- Select records:\n\n`sqlite-utils rows {{path/to/database.db}} {{table_name}}`\n\n- Delete a record:\n\n`sqlite-utils query {{path/to/database.db}} \"{{delete from table_name where name = 'Tony Hoare'}}\"`\n\n- Drop a table:\n\n`sqlite-utils drop-table {{path/to/database.db}} {{table_name}}`\n\n- Show help information:\n\n`sqlite-utils -h`\n"}
