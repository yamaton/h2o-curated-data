{
  "name": "stack",
  "description": "stack",
  "options": [
    {
      "names": [
        "--help"
      ],
      "argument": "",
      "description": "Show this help text"
    },
    {
      "names": [
        "--version"
      ],
      "argument": "",
      "description": "Show version"
    },
    {
      "names": [
        "--numeric-version"
      ],
      "argument": "",
      "description": "Show only version number"
    },
    {
      "names": [
        "--hpack-numeric-version"
      ],
      "argument": "",
      "description": "Show only hpack's version number"
    },
    {
      "names": [
        "--docker"
      ],
      "argument": "",
      "description": "Run 'stack --docker-help' for details"
    },
    {
      "names": [
        "--nix"
      ],
      "argument": "",
      "description": "Run 'stack --nix-help' for details"
    },
    {
      "names": [
        "--verbosity"
      ],
      "argument": "VERBOSITY",
      "description": "Verbosity: silent, error, warn, info, debug"
    },
    {
      "names": [
        "-v",
        "--verbose"
      ],
      "argument": "",
      "description": "Enable verbose mode: verbosity level \"debug\""
    },
    {
      "names": [
        "--silent"
      ],
      "argument": "",
      "description": "Enable silent mode: verbosity level \"silent\""
    },
    {
      "names": [
        "--time-in-log"
      ],
      "argument": "",
      "description": "Enable/disable inclusion of timings in logs, for the purposes of using diff with logs (default: enabled)"
    },
    {
      "names": [
        "--no-time-in-log"
      ],
      "argument": "",
      "description": "Enable/disable inclusion of timings in logs, for the purposes of using diff with logs (default: enabled)"
    },
    {
      "names": [
        "--stack-root"
      ],
      "argument": "STACK-ROOT",
      "description": "Absolute path to the global stack root directory (Overrides any STACK_ROOT environment variable)"
    },
    {
      "names": [
        "--work-dir"
      ],
      "argument": "WORK-DIR",
      "description": "Relative path of work directory (Overrides any STACK_WORK environment variable, default is '.stack-work')"
    },
    {
      "names": [
        "--system-ghc"
      ],
      "argument": "",
      "description": "Enable/disable using the system installed GHC (on the PATH) if it is available and its version matches. Disabled by default."
    },
    {
      "names": [
        "--no-system-ghc"
      ],
      "argument": "",
      "description": "Enable/disable using the system installed GHC (on the PATH) if it is available and its version matches. Disabled by default."
    },
    {
      "names": [
        "--install-ghc"
      ],
      "argument": "",
      "description": "Enable/disable downloading and installing GHC if necessary (can be done manually with stack setup) (default: enabled)"
    },
    {
      "names": [
        "--no-install-ghc"
      ],
      "argument": "",
      "description": "Enable/disable downloading and installing GHC if necessary (can be done manually with stack setup) (default: enabled)"
    },
    {
      "names": [
        "--arch"
      ],
      "argument": "ARCH",
      "description": "System architecture, e.g. i386, x86_64"
    },
    {
      "names": [
        "--ghc-variant"
      ],
      "argument": "VARIANT",
      "description": "Specialized GHC variant, e.g. integersimple (incompatible with --system-ghc)"
    },
    {
      "names": [
        "--ghc-build"
      ],
      "argument": "BUILD",
      "description": "Specialized GHC build, e.g. 'gmp4' or 'standard' (usually auto-detected)"
    },
    {
      "names": [
        "-j",
        "--jobs"
      ],
      "argument": "JOBS",
      "description": "Number of concurrent jobs to run"
    },
    {
      "names": [
        "--extra-include-dirs"
      ],
      "argument": "DIR",
      "description": "Extra directories to check for C header files"
    },
    {
      "names": [
        "--extra-lib-dirs"
      ],
      "argument": "DIR",
      "description": "Extra directories to check for libraries"
    },
    {
      "names": [
        "--custom-preprocessor-extensions"
      ],
      "argument": "EXT",
      "description": "Extensions used for custom preprocessors"
    },
    {
      "names": [
        "--with-gcc"
      ],
      "argument": "PATH-TO-GCC",
      "description": "Use gcc found at PATH-TO-GCC"
    },
    {
      "names": [
        "--with-hpack"
      ],
      "argument": "HPACK",
      "description": "Use HPACK executable (overrides bundled Hpack)"
    },
    {
      "names": [
        "--skip-ghc-check"
      ],
      "argument": "",
      "description": "Enable/disable skipping the GHC version and architecture check (default: disabled)"
    },
    {
      "names": [
        "--no-skip-ghc-check"
      ],
      "argument": "",
      "description": "Enable/disable skipping the GHC version and architecture check (default: disabled)"
    },
    {
      "names": [
        "--skip-msys"
      ],
      "argument": "",
      "description": "Enable/disable skipping the local MSYS installation (Windows only) (default: disabled)"
    },
    {
      "names": [
        "--no-skip-msys"
      ],
      "argument": "",
      "description": "Enable/disable skipping the local MSYS installation (Windows only) (default: disabled)"
    },
    {
      "names": [
        "--local-bin-path"
      ],
      "argument": "DIR",
      "description": "Install binaries to DIR"
    },
    {
      "names": [
        "--setup-info-yaml"
      ],
      "argument": "URL",
      "description": "Alternate URL or relative / absolute path for stack dependencies"
    },
    {
      "names": [
        "--modify-code-page"
      ],
      "argument": "",
      "description": "Enable/disable setting the codepage to support UTF-8 (Windows only) (default: enabled)"
    },
    {
      "names": [
        "--no-modify-code-page"
      ],
      "argument": "",
      "description": "Enable/disable setting the codepage to support UTF-8 (Windows only) (default: enabled)"
    },
    {
      "names": [
        "--allow-different-user"
      ],
      "argument": "",
      "description": "Enable/disable permission for users other than the owner of the stack root directory to use a stack installation (POSIX only) (default: true inside Docker, otherwise false)"
    },
    {
      "names": [
        "--no-allow-different-user"
      ],
      "argument": "",
      "description": "Enable/disable permission for users other than the owner of the stack root directory to use a stack installation (POSIX only) (default: true inside Docker, otherwise false)"
    },
    {
      "names": [
        "--dump-logs"
      ],
      "argument": "",
      "description": "Enable/disable dump the build output logs for local packages to the console (default: dump warning logs)"
    },
    {
      "names": [
        "--no-dump-logs"
      ],
      "argument": "",
      "description": "Enable/disable dump the build output logs for local packages to the console (default: dump warning logs)"
    },
    {
      "names": [
        "--color",
        "--colour"
      ],
      "argument": "WHEN",
      "description": "Specify when to use color in output; WHEN is 'always', 'never', or 'auto'. On Windows versions before Windows 10, for terminals that do not support color codes, the default is 'never'; color may work on terminals that support color codes"
    },
    {
      "names": [
        "--snapshot-location-base"
      ],
      "argument": "URL",
      "description": "The base location of LTS/Nightly snapshots"
    },
    {
      "names": [
        "--resolver"
      ],
      "argument": "RESOLVER",
      "description": "Override resolver in project file"
    },
    {
      "names": [
        "--compiler"
      ],
      "argument": "COMPILER",
      "description": "Use the specified compiler"
    },
    {
      "names": [
        "--terminal"
      ],
      "argument": "",
      "description": "Enable/disable overriding terminal detection in the case of running in a false terminal"
    },
    {
      "names": [
        "--no-terminal"
      ],
      "argument": "",
      "description": "Enable/disable overriding terminal detection in the case of running in a false terminal"
    },
    {
      "names": [
        "--stack-colors",
        "--stack-colours"
      ],
      "argument": "STYLES",
      "description": "Specify stack's output styles; STYLES is a colon-delimited sequence of key=value, where 'key' is a style name and 'value' is a semicolon-delimited list of 'ANSI' SGR (Select Graphic Rendition) control codes (in decimal). Use 'stack ls stack-colors --basic' to see the current sequence. In shells where a semicolon is a command separator, enclose STYLES in quotes."
    },
    {
      "names": [
        "--terminal-width"
      ],
      "argument": "INT",
      "description": "Specify the width of the terminal, used for pretty-print messages"
    },
    {
      "names": [
        "--stack-yaml"
      ],
      "argument": "STACK-YAML",
      "description": "Override project stack.yaml file (overrides any STACK_YAML environment variable)"
    },
    {
      "names": [
        "--lock-file"
      ],
      "argument": "ARG",
      "description": "Specify how to interact with lock files. Default: read/write. If resolver is overridden: read-only"
    }
  ],
  "subcommands": [
    {
      "name": "build",
      "description": "Build the package(s) in this directory/configuration",
      "options": [
        {
          "names": [
            "--dry-run"
          ],
          "argument": "",
          "description": "Don't build anything, just prepare to"
        },
        {
          "names": [
            "--pedantic"
          ],
          "argument": "",
          "description": "Turn on -Wall and -Werror"
        },
        {
          "names": [
            "--fast"
          ],
          "argument": "",
          "description": "Turn off optimizations (-O0)"
        },
        {
          "names": [
            "--ghc-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to GHC"
        },
        {
          "names": [
            "--dependencies-only"
          ],
          "argument": "",
          "description": "A synonym for --only-dependencies"
        },
        {
          "names": [
            "--only-snapshot"
          ],
          "argument": "",
          "description": "Only build packages for the snapshot database, not the local database"
        },
        {
          "names": [
            "--only-dependencies"
          ],
          "argument": "",
          "description": "Only build packages that are dependencies of targets on the command line"
        },
        {
          "names": [
            "--only-locals"
          ],
          "argument": "",
          "description": "Only build packages in the local database, fail if the build plan includes the snapshot database"
        },
        {
          "names": [
            "--file-watch"
          ],
          "argument": "",
          "description": "Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file"
        },
        {
          "names": [
            "--file-watch-poll"
          ],
          "argument": "",
          "description": "Like --file-watch, but polling the filesystem instead of using events"
        },
        {
          "names": [
            "--watch-all"
          ],
          "argument": "",
          "description": "Watch all local files not taking targets into account"
        },
        {
          "names": [
            "--exec"
          ],
          "argument": "COMMAND",
          "description": "Command and argument(s) to run after a successful build"
        },
        {
          "names": [
            "--only-configure"
          ],
          "argument": "",
          "description": "Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!"
        },
        {
          "names": [
            "--trace"
          ],
          "argument": "",
          "description": "Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception"
        },
        {
          "names": [
            "--profile"
          ],
          "argument": "",
          "description": "profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks"
        },
        {
          "names": [
            "--no-strip"
          ],
          "argument": "",
          "description": "Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols."
        },
        {
          "names": [
            "--executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--no-executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--no-executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--haddock-arguments"
          ],
          "argument": "HADDOCK_ARGS",
          "description": "Arguments passed to the haddock program"
        },
        {
          "names": [
            "--open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--no-open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--no-haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--no-haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--no-haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--no-prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--no-keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--no-keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--no-force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--no-rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--ta",
            "--test-arguments"
          ],
          "argument": "TEST_ARGS",
          "description": "Arguments passed in to the test suite program"
        },
        {
          "names": [
            "--coverage"
          ],
          "argument": "",
          "description": "Generate a code coverage report"
        },
        {
          "names": [
            "--no-run-tests"
          ],
          "argument": "",
          "description": "Disable running of tests. (Tests will still be built.)"
        },
        {
          "names": [
            "--test-suite-timeout"
          ],
          "argument": "ARG",
          "description": "Maximum test suite run time in seconds."
        },
        {
          "names": [
            "--bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--ba",
            "--benchmark-arguments"
          ],
          "argument": "BENCH_ARGS",
          "description": "Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`"
        },
        {
          "names": [
            "--no-run-benchmarks"
          ],
          "argument": "",
          "description": "Disable running of benchmarks. (Benchmarks will still be built.)"
        },
        {
          "names": [
            "--reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--no-reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--no-cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--no-split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--skip"
          ],
          "argument": "ARG",
          "description": "Skip given component, can be specified multiple times"
        },
        {
          "names": [
            "--interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--no-interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--ddump-dir"
          ],
          "argument": "ARG",
          "description": "Specify output ddump-files"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "install",
      "description": "Shortcut for 'build --copy-bins'",
      "options": [
        {
          "names": [
            "--dry-run"
          ],
          "argument": "",
          "description": "Don't build anything, just prepare to"
        },
        {
          "names": [
            "--pedantic"
          ],
          "argument": "",
          "description": "Turn on -Wall and -Werror"
        },
        {
          "names": [
            "--fast"
          ],
          "argument": "",
          "description": "Turn off optimizations (-O0)"
        },
        {
          "names": [
            "--ghc-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to GHC"
        },
        {
          "names": [
            "--dependencies-only"
          ],
          "argument": "",
          "description": "A synonym for --only-dependencies"
        },
        {
          "names": [
            "--only-snapshot"
          ],
          "argument": "",
          "description": "Only build packages for the snapshot database, not the local database"
        },
        {
          "names": [
            "--only-dependencies"
          ],
          "argument": "",
          "description": "Only build packages that are dependencies of targets on the command line"
        },
        {
          "names": [
            "--only-locals"
          ],
          "argument": "",
          "description": "Only build packages in the local database, fail if the build plan includes the snapshot database"
        },
        {
          "names": [
            "--file-watch"
          ],
          "argument": "",
          "description": "Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file"
        },
        {
          "names": [
            "--file-watch-poll"
          ],
          "argument": "",
          "description": "Like --file-watch, but polling the filesystem instead of using events"
        },
        {
          "names": [
            "--watch-all"
          ],
          "argument": "",
          "description": "Watch all local files not taking targets into account"
        },
        {
          "names": [
            "--exec"
          ],
          "argument": "COMMAND",
          "description": "Command and argument(s) to run after a successful build"
        },
        {
          "names": [
            "--only-configure"
          ],
          "argument": "",
          "description": "Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!"
        },
        {
          "names": [
            "--trace"
          ],
          "argument": "",
          "description": "Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception"
        },
        {
          "names": [
            "--profile"
          ],
          "argument": "",
          "description": "profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks"
        },
        {
          "names": [
            "--no-strip"
          ],
          "argument": "",
          "description": "Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols."
        },
        {
          "names": [
            "--executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--no-executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--no-executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--haddock-arguments"
          ],
          "argument": "HADDOCK_ARGS",
          "description": "Arguments passed to the haddock program"
        },
        {
          "names": [
            "--open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--no-open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--no-haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--no-haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--no-haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--no-prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--no-keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--no-keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--no-force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--no-rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--ta",
            "--test-arguments"
          ],
          "argument": "TEST_ARGS",
          "description": "Arguments passed in to the test suite program"
        },
        {
          "names": [
            "--coverage"
          ],
          "argument": "",
          "description": "Generate a code coverage report"
        },
        {
          "names": [
            "--no-run-tests"
          ],
          "argument": "",
          "description": "Disable running of tests. (Tests will still be built.)"
        },
        {
          "names": [
            "--test-suite-timeout"
          ],
          "argument": "ARG",
          "description": "Maximum test suite run time in seconds."
        },
        {
          "names": [
            "--bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--ba",
            "--benchmark-arguments"
          ],
          "argument": "BENCH_ARGS",
          "description": "Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`"
        },
        {
          "names": [
            "--no-run-benchmarks"
          ],
          "argument": "",
          "description": "Disable running of benchmarks. (Benchmarks will still be built.)"
        },
        {
          "names": [
            "--reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--no-reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--no-cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--no-split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--skip"
          ],
          "argument": "ARG",
          "description": "Skip given component, can be specified multiple times"
        },
        {
          "names": [
            "--interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--no-interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--ddump-dir"
          ],
          "argument": "ARG",
          "description": "Specify output ddump-files"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "uninstall",
      "description": "DEPRECATED: This command performs no actions, and is",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "test",
      "description": "Shortcut for 'build --test'",
      "options": [
        {
          "names": [
            "--dry-run"
          ],
          "argument": "",
          "description": "Don't build anything, just prepare to"
        },
        {
          "names": [
            "--pedantic"
          ],
          "argument": "",
          "description": "Turn on -Wall and -Werror"
        },
        {
          "names": [
            "--fast"
          ],
          "argument": "",
          "description": "Turn off optimizations (-O0)"
        },
        {
          "names": [
            "--ghc-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to GHC"
        },
        {
          "names": [
            "--dependencies-only"
          ],
          "argument": "",
          "description": "A synonym for --only-dependencies"
        },
        {
          "names": [
            "--only-snapshot"
          ],
          "argument": "",
          "description": "Only build packages for the snapshot database, not the local database"
        },
        {
          "names": [
            "--only-dependencies"
          ],
          "argument": "",
          "description": "Only build packages that are dependencies of targets on the command line"
        },
        {
          "names": [
            "--only-locals"
          ],
          "argument": "",
          "description": "Only build packages in the local database, fail if the build plan includes the snapshot database"
        },
        {
          "names": [
            "--file-watch"
          ],
          "argument": "",
          "description": "Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file"
        },
        {
          "names": [
            "--file-watch-poll"
          ],
          "argument": "",
          "description": "Like --file-watch, but polling the filesystem instead of using events"
        },
        {
          "names": [
            "--watch-all"
          ],
          "argument": "",
          "description": "Watch all local files not taking targets into account"
        },
        {
          "names": [
            "--exec"
          ],
          "argument": "COMMAND",
          "description": "Command and argument(s) to run after a successful build"
        },
        {
          "names": [
            "--only-configure"
          ],
          "argument": "",
          "description": "Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!"
        },
        {
          "names": [
            "--trace"
          ],
          "argument": "",
          "description": "Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception"
        },
        {
          "names": [
            "--profile"
          ],
          "argument": "",
          "description": "profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks"
        },
        {
          "names": [
            "--no-strip"
          ],
          "argument": "",
          "description": "Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols."
        },
        {
          "names": [
            "--executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--no-executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--no-executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--haddock-arguments"
          ],
          "argument": "HADDOCK_ARGS",
          "description": "Arguments passed to the haddock program"
        },
        {
          "names": [
            "--open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--no-open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--no-haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--no-haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--no-haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--no-prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--no-keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--no-keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--no-force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--no-rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--ta",
            "--test-arguments"
          ],
          "argument": "TEST_ARGS",
          "description": "Arguments passed in to the test suite program"
        },
        {
          "names": [
            "--coverage"
          ],
          "argument": "",
          "description": "Generate a code coverage report"
        },
        {
          "names": [
            "--no-run-tests"
          ],
          "argument": "",
          "description": "Disable running of tests. (Tests will still be built.)"
        },
        {
          "names": [
            "--test-suite-timeout"
          ],
          "argument": "ARG",
          "description": "Maximum test suite run time in seconds."
        },
        {
          "names": [
            "--bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--ba",
            "--benchmark-arguments"
          ],
          "argument": "BENCH_ARGS",
          "description": "Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`"
        },
        {
          "names": [
            "--no-run-benchmarks"
          ],
          "argument": "",
          "description": "Disable running of benchmarks. (Benchmarks will still be built.)"
        },
        {
          "names": [
            "--reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--no-reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--no-cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--no-split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--skip"
          ],
          "argument": "ARG",
          "description": "Skip given component, can be specified multiple times"
        },
        {
          "names": [
            "--interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--no-interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--ddump-dir"
          ],
          "argument": "ARG",
          "description": "Specify output ddump-files"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "bench",
      "description": "Shortcut for 'build --bench'",
      "options": [
        {
          "names": [
            "--dry-run"
          ],
          "argument": "",
          "description": "Don't build anything, just prepare to"
        },
        {
          "names": [
            "--pedantic"
          ],
          "argument": "",
          "description": "Turn on -Wall and -Werror"
        },
        {
          "names": [
            "--fast"
          ],
          "argument": "",
          "description": "Turn off optimizations (-O0)"
        },
        {
          "names": [
            "--ghc-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to GHC"
        },
        {
          "names": [
            "--dependencies-only"
          ],
          "argument": "",
          "description": "A synonym for --only-dependencies"
        },
        {
          "names": [
            "--only-snapshot"
          ],
          "argument": "",
          "description": "Only build packages for the snapshot database, not the local database"
        },
        {
          "names": [
            "--only-dependencies"
          ],
          "argument": "",
          "description": "Only build packages that are dependencies of targets on the command line"
        },
        {
          "names": [
            "--only-locals"
          ],
          "argument": "",
          "description": "Only build packages in the local database, fail if the build plan includes the snapshot database"
        },
        {
          "names": [
            "--file-watch"
          ],
          "argument": "",
          "description": "Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file"
        },
        {
          "names": [
            "--file-watch-poll"
          ],
          "argument": "",
          "description": "Like --file-watch, but polling the filesystem instead of using events"
        },
        {
          "names": [
            "--watch-all"
          ],
          "argument": "",
          "description": "Watch all local files not taking targets into account"
        },
        {
          "names": [
            "--exec"
          ],
          "argument": "COMMAND",
          "description": "Command and argument(s) to run after a successful build"
        },
        {
          "names": [
            "--only-configure"
          ],
          "argument": "",
          "description": "Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!"
        },
        {
          "names": [
            "--trace"
          ],
          "argument": "",
          "description": "Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception"
        },
        {
          "names": [
            "--profile"
          ],
          "argument": "",
          "description": "profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks"
        },
        {
          "names": [
            "--no-strip"
          ],
          "argument": "",
          "description": "Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols."
        },
        {
          "names": [
            "--executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--no-executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--no-executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--haddock-arguments"
          ],
          "argument": "HADDOCK_ARGS",
          "description": "Arguments passed to the haddock program"
        },
        {
          "names": [
            "--open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--no-open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--no-haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--no-haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--no-haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--no-prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--no-keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--no-keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--no-force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--no-rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--ta",
            "--test-arguments"
          ],
          "argument": "TEST_ARGS",
          "description": "Arguments passed in to the test suite program"
        },
        {
          "names": [
            "--coverage"
          ],
          "argument": "",
          "description": "Generate a code coverage report"
        },
        {
          "names": [
            "--no-run-tests"
          ],
          "argument": "",
          "description": "Disable running of tests. (Tests will still be built.)"
        },
        {
          "names": [
            "--test-suite-timeout"
          ],
          "argument": "ARG",
          "description": "Maximum test suite run time in seconds."
        },
        {
          "names": [
            "--bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--ba",
            "--benchmark-arguments"
          ],
          "argument": "BENCH_ARGS",
          "description": "Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`"
        },
        {
          "names": [
            "--no-run-benchmarks"
          ],
          "argument": "",
          "description": "Disable running of benchmarks. (Benchmarks will still be built.)"
        },
        {
          "names": [
            "--reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--no-reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--no-cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--no-split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--skip"
          ],
          "argument": "ARG",
          "description": "Skip given component, can be specified multiple times"
        },
        {
          "names": [
            "--interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--no-interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--ddump-dir"
          ],
          "argument": "ARG",
          "description": "Specify output ddump-files"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "haddock",
      "description": "Shortcut for 'build --haddock'",
      "options": [
        {
          "names": [
            "--dry-run"
          ],
          "argument": "",
          "description": "Don't build anything, just prepare to"
        },
        {
          "names": [
            "--pedantic"
          ],
          "argument": "",
          "description": "Turn on -Wall and -Werror"
        },
        {
          "names": [
            "--fast"
          ],
          "argument": "",
          "description": "Turn off optimizations (-O0)"
        },
        {
          "names": [
            "--ghc-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to GHC"
        },
        {
          "names": [
            "--dependencies-only"
          ],
          "argument": "",
          "description": "A synonym for --only-dependencies"
        },
        {
          "names": [
            "--only-snapshot"
          ],
          "argument": "",
          "description": "Only build packages for the snapshot database, not the local database"
        },
        {
          "names": [
            "--only-dependencies"
          ],
          "argument": "",
          "description": "Only build packages that are dependencies of targets on the command line"
        },
        {
          "names": [
            "--only-locals"
          ],
          "argument": "",
          "description": "Only build packages in the local database, fail if the build plan includes the snapshot database"
        },
        {
          "names": [
            "--file-watch"
          ],
          "argument": "",
          "description": "Watch for changes in local files and automatically rebuild. Ignores files in VCS boring/ignore file"
        },
        {
          "names": [
            "--file-watch-poll"
          ],
          "argument": "",
          "description": "Like --file-watch, but polling the filesystem instead of using events"
        },
        {
          "names": [
            "--watch-all"
          ],
          "argument": "",
          "description": "Watch all local files not taking targets into account"
        },
        {
          "names": [
            "--exec"
          ],
          "argument": "COMMAND",
          "description": "Command and argument(s) to run after a successful build"
        },
        {
          "names": [
            "--only-configure"
          ],
          "argument": "",
          "description": "Only perform the configure step, not any builds. Intended for tool usage, may break when used on multiple packages at once!"
        },
        {
          "names": [
            "--trace"
          ],
          "argument": "",
          "description": "Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception"
        },
        {
          "names": [
            "--profile"
          ],
          "argument": "",
          "description": "profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks"
        },
        {
          "names": [
            "--no-strip"
          ],
          "argument": "",
          "description": "Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols."
        },
        {
          "names": [
            "--executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--no-executable-profiling"
          ],
          "argument": "",
          "description": "Enable/disable executable profiling for TARGETs and all its dependencies (default: disabled)"
        },
        {
          "names": [
            "--executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--no-executable-stripping"
          ],
          "argument": "",
          "description": "Enable/disable executable stripping for TARGETs and all its dependencies (default: enabled)"
        },
        {
          "names": [
            "--haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-haddock"
          ],
          "argument": "",
          "description": "Enable/disable generating Haddocks the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--haddock-arguments"
          ],
          "argument": "HADDOCK_ARGS",
          "description": "Arguments passed to the haddock program"
        },
        {
          "names": [
            "--open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--no-open"
          ],
          "argument": "",
          "description": "Enable/disable opening the local Haddock documentation in the browser (default: disabled)"
        },
        {
          "names": [
            "--haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--no-haddock-deps"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for dependencies (default: true if building Haddocks, false otherwise)"
        },
        {
          "names": [
            "--haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--no-haddock-internal"
          ],
          "argument": "",
          "description": "Enable/disable building Haddocks for internal modules (like cabal haddock --internal) (default: disabled)"
        },
        {
          "names": [
            "--haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--no-haddock-hyperlink-source"
          ],
          "argument": "",
          "description": "Enable/disable building hyperlinked source for Haddock (like haddock --hyperlinked-source) (default: enabled)"
        },
        {
          "names": [
            "--copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-bins"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries to local-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--no-copy-compiler-tool"
          ],
          "argument": "",
          "description": "Enable/disable copying binaries of targets to compiler-tools-bin (see 'stack path') (default: disabled)"
        },
        {
          "names": [
            "--prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--no-prefetch"
          ],
          "argument": "",
          "description": "Enable/disable Fetch packages necessary for the build immediately, useful with --dry-run (default: disabled)"
        },
        {
          "names": [
            "--keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--no-keep-going"
          ],
          "argument": "",
          "description": "Enable/disable continue running after a step fails (default: false for build, true for test/bench)"
        },
        {
          "names": [
            "--keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--no-keep-tmp-files"
          ],
          "argument": "",
          "description": "Enable/disable keep intermediate files and build directories (default: disabled)"
        },
        {
          "names": [
            "--force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--no-force-dirty"
          ],
          "argument": "",
          "description": "Enable/disable Force treating all local packages as having dirty files (useful for cases where stack can't detect a file change (default: disabled)"
        },
        {
          "names": [
            "--test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--no-rerun-tests"
          ],
          "argument": "",
          "description": "Enable/disable running already successful tests (default: enabled)"
        },
        {
          "names": [
            "--ta",
            "--test-arguments"
          ],
          "argument": "TEST_ARGS",
          "description": "Arguments passed in to the test suite program"
        },
        {
          "names": [
            "--coverage"
          ],
          "argument": "",
          "description": "Generate a code coverage report"
        },
        {
          "names": [
            "--no-run-tests"
          ],
          "argument": "",
          "description": "Disable running of tests. (Tests will still be built.)"
        },
        {
          "names": [
            "--test-suite-timeout"
          ],
          "argument": "ARG",
          "description": "Maximum test suite run time in seconds."
        },
        {
          "names": [
            "--bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--ba",
            "--benchmark-arguments"
          ],
          "argument": "BENCH_ARGS",
          "description": "Forward BENCH_ARGS to the benchmark suite. Supports templates from `cabal bench`"
        },
        {
          "names": [
            "--no-run-benchmarks"
          ],
          "argument": "",
          "description": "Disable running of benchmarks. (Benchmarks will still be built.)"
        },
        {
          "names": [
            "--reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--no-reconfigure"
          ],
          "argument": "",
          "description": "Enable/disable Perform the configure step even if unnecessary. Useful in some corner cases with custom Setup.hs files (default: disabled)"
        },
        {
          "names": [
            "--cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--no-cabal-verbose"
          ],
          "argument": "",
          "description": "Enable/disable Ask Cabal to be verbose in its output (default: disabled)"
        },
        {
          "names": [
            "--split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--no-split-objs"
          ],
          "argument": "",
          "description": "Enable/disable Enable split-objs, to reduce output size (at the cost of build time). Note that this feature is EXPERIMENTAL, and its behavior may be changed and improved. You will need to clean your workdirs before use. If you want to compile all dependencies with split-objs, you will need to delete the snapshot (and all snapshots that could reference that snapshot). (default: disabled)"
        },
        {
          "names": [
            "--skip"
          ],
          "argument": "ARG",
          "description": "Skip given component, can be specified multiple times"
        },
        {
          "names": [
            "--interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--no-interleaved-output"
          ],
          "argument": "",
          "description": "Enable/disable Print concurrent GHC output to the console with a prefix for the package name (default: enabled)"
        },
        {
          "names": [
            "--ddump-dir"
          ],
          "argument": "ARG",
          "description": "Specify output ddump-files"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "new",
      "description": "Create a new project from a template. Run `stack",
      "options": [
        {
          "names": [
            "--bare"
          ],
          "argument": "",
          "description": "Do not create a subdirectory for the project"
        },
        {
          "names": [
            "-p",
            "--param"
          ],
          "argument": "KEY:VALUE",
          "description": "Parameter for the template in the format key:value"
        },
        {
          "names": [
            "--omit-packages"
          ],
          "argument": "",
          "description": "Exclude conflicting or incompatible user packages"
        },
        {
          "names": [
            "--force"
          ],
          "argument": "",
          "description": "Force overwriting an existing stack.yaml"
        },
        {
          "names": [
            "--ignore-subdirs"
          ],
          "argument": "",
          "description": "Do not search for .cabal files in sub directories"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "templates",
      "description": "Show how to find templates available for `stack new'.",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "init",
      "description": "Create stack project config from cabal or hpack",
      "options": [
        {
          "names": [
            "--omit-packages"
          ],
          "argument": "",
          "description": "Exclude conflicting or incompatible user packages"
        },
        {
          "names": [
            "--force"
          ],
          "argument": "",
          "description": "Force overwriting an existing stack.yaml"
        },
        {
          "names": [
            "--ignore-subdirs"
          ],
          "argument": "",
          "description": "Do not search for .cabal files in sub directories"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "setup",
      "description": "Get the appropriate GHC for your project",
      "options": [
        {
          "names": [
            "--reinstall"
          ],
          "argument": "",
          "description": "Enable/disable reinstalling GHC, even if available (incompatible with --system-ghc) (default: disabled)"
        },
        {
          "names": [
            "--no-reinstall"
          ],
          "argument": "",
          "description": "Enable/disable reinstalling GHC, even if available (incompatible with --system-ghc) (default: disabled)"
        },
        {
          "names": [
            "--ghc-bindist"
          ],
          "argument": "URL",
          "description": "Alternate GHC binary distribution (requires custom --ghc-variant)"
        },
        {
          "names": [
            "--ghcjs-boot-options"
          ],
          "argument": "GHCJS_BOOT",
          "description": "Additional ghcjs-boot options"
        },
        {
          "names": [
            "--ghcjs-boot-clean"
          ],
          "argument": "",
          "description": "Enable/disable Control if ghcjs-boot should have --clean option present (default: enabled)"
        },
        {
          "names": [
            "--no-ghcjs-boot-clean"
          ],
          "argument": "",
          "description": "Enable/disable Control if ghcjs-boot should have --clean option present (default: enabled)"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "path",
      "description": "Print out handy path information",
      "options": [
        {
          "names": [
            "--stack-root"
          ],
          "argument": "",
          "description": "Global stack root directory"
        },
        {
          "names": [
            "--project-root"
          ],
          "argument": "",
          "description": "Project root (derived from stack.yaml file)"
        },
        {
          "names": [
            "--config-location"
          ],
          "argument": "",
          "description": "Configuration location (where the stack.yaml file is)"
        },
        {
          "names": [
            "--bin-path"
          ],
          "argument": "",
          "description": "PATH environment variable"
        },
        {
          "names": [
            "--programs"
          ],
          "argument": "",
          "description": "Install location for GHC and other core tools"
        },
        {
          "names": [
            "--compiler-exe"
          ],
          "argument": "",
          "description": "Compiler binary (e.g. ghc)"
        },
        {
          "names": [
            "--compiler-bin"
          ],
          "argument": "",
          "description": "Directory containing the compiler binary (e.g. ghc)"
        },
        {
          "names": [
            "--compiler-tools-bin"
          ],
          "argument": "",
          "description": "Directory containing binaries specific to a particular compiler (e.g. intero)"
        },
        {
          "names": [
            "--local-bin"
          ],
          "argument": "",
          "description": "Local bin dir where stack installs executables (e.g. ~/.local/bin (Unix-like OSs) or %APPDATA%\\local\\bin (Windows))"
        },
        {
          "names": [
            "--extra-include-dirs"
          ],
          "argument": "",
          "description": "Extra include directories"
        },
        {
          "names": [
            "--extra-library-dirs"
          ],
          "argument": "",
          "description": "Extra library directories"
        },
        {
          "names": [
            "--snapshot-pkg-db"
          ],
          "argument": "",
          "description": "Snapshot package database"
        },
        {
          "names": [
            "--local-pkg-db"
          ],
          "argument": "",
          "description": "Local project package database"
        },
        {
          "names": [
            "--global-pkg-db"
          ],
          "argument": "",
          "description": "Global package database"
        },
        {
          "names": [
            "--ghc-package-path"
          ],
          "argument": "",
          "description": "GHC_PACKAGE_PATH environment variable"
        },
        {
          "names": [
            "--snapshot-install-root"
          ],
          "argument": "",
          "description": "Snapshot installation root"
        },
        {
          "names": [
            "--local-install-root"
          ],
          "argument": "",
          "description": "Local project installation root"
        },
        {
          "names": [
            "--snapshot-doc-root"
          ],
          "argument": "",
          "description": "Snapshot documentation root"
        },
        {
          "names": [
            "--local-doc-root"
          ],
          "argument": "",
          "description": "Local project documentation root"
        },
        {
          "names": [
            "--local-hoogle-root"
          ],
          "argument": "",
          "description": "Local project documentation root"
        },
        {
          "names": [
            "--dist-dir"
          ],
          "argument": "",
          "description": "Dist work directory, relative to package directory"
        },
        {
          "names": [
            "--local-hpc-root"
          ],
          "argument": "",
          "description": "Where HPC reports and tix files are stored"
        },
        {
          "names": [
            "--local-bin-path"
          ],
          "argument": "",
          "description": "DEPRECATED: Use '--local-bin' instead"
        },
        {
          "names": [
            "--ghc-paths"
          ],
          "argument": "",
          "description": "DEPRECATED: Use '--programs' instead"
        },
        {
          "names": [
            "--global-stack-root"
          ],
          "argument": "",
          "description": "DEPRECATED: Use '--stack-root' instead"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "ls",
      "description": "List command. (Supports snapshots, dependencies and",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "unpack",
      "description": "Unpack one or more packages locally",
      "options": [
        {
          "names": [
            "--to"
          ],
          "argument": "ARG",
          "description": "Optional path to unpack the package into (will unpack into subdirectory)"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "update",
      "description": "Update the package index",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "upgrade",
      "description": "Upgrade to the latest stack",
      "options": [
        {
          "names": [
            "--source-only"
          ],
          "argument": "",
          "description": "Do not use a binary upgrade path"
        },
        {
          "names": [
            "--binary-platform"
          ],
          "argument": "ARG",
          "description": "Platform type for archive to download"
        },
        {
          "names": [
            "--force-download"
          ],
          "argument": "",
          "description": "Download the latest available stack executable"
        },
        {
          "names": [
            "--binary-version"
          ],
          "argument": "ARG",
          "description": "Download a specific stack version"
        },
        {
          "names": [
            "--github-org"
          ],
          "argument": "ARG",
          "description": "Github organization name"
        },
        {
          "names": [
            "--github-repo"
          ],
          "argument": "ARG",
          "description": "Github repository name"
        },
        {
          "names": [
            "--binary-only"
          ],
          "argument": "",
          "description": "Do not use a source upgrade path"
        },
        {
          "names": [
            "--git"
          ],
          "argument": "",
          "description": "Clone from Git instead of downloading from Hackage (more dangerous)"
        },
        {
          "names": [
            "--git-repo"
          ],
          "argument": "ARG",
          "description": "Clone from specified git repository (default: \"https://github.com/commercialhaskell/stack\")"
        },
        {
          "names": [
            "--git-branch"
          ],
          "argument": "ARG",
          "description": "Clone from this git branch (default: \"master\")"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "upload",
      "description": "Upload a package to Hackage",
      "options": [
        {
          "names": [
            "--pvp-bounds"
          ],
          "argument": "PVP-BOUNDS",
          "description": "How PVP version bounds should be added to .cabal file: none, lower, upper, both"
        },
        {
          "names": [
            "--ignore-check"
          ],
          "argument": "",
          "description": "Do not check package for common mistakes"
        },
        {
          "names": [
            "--test-tarball"
          ],
          "argument": "",
          "description": "Enable/disable building of the resulting tarball (default: disabled)"
        },
        {
          "names": [
            "--no-test-tarball"
          ],
          "argument": "",
          "description": "Enable/disable building of the resulting tarball (default: disabled)"
        },
        {
          "names": [
            "--tar-dir"
          ],
          "argument": "ARG",
          "description": "If specified, copy all the tar to this dir"
        },
        {
          "names": [
            "--candidate"
          ],
          "argument": "",
          "description": "Upload as a package candidate"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "sdist",
      "description": "Create source distribution tarballs",
      "options": [
        {
          "names": [
            "--pvp-bounds"
          ],
          "argument": "PVP-BOUNDS",
          "description": "How PVP version bounds should be added to .cabal file: none, lower, upper, both"
        },
        {
          "names": [
            "--ignore-check"
          ],
          "argument": "",
          "description": "Do not check package for common mistakes"
        },
        {
          "names": [
            "--test-tarball"
          ],
          "argument": "",
          "description": "Enable/disable building of the resulting tarball (default: disabled)"
        },
        {
          "names": [
            "--no-test-tarball"
          ],
          "argument": "",
          "description": "Enable/disable building of the resulting tarball (default: disabled)"
        },
        {
          "names": [
            "--tar-dir"
          ],
          "argument": "ARG",
          "description": "If specified, copy all the tar to this dir"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "dot",
      "description": "Visualize your project's dependency graph using",
      "options": [
        {
          "names": [
            "--external"
          ],
          "argument": "",
          "description": "Enable/disable inclusion of external dependencies (default: disabled)"
        },
        {
          "names": [
            "--no-external"
          ],
          "argument": "",
          "description": "Enable/disable inclusion of external dependencies (default: disabled)"
        },
        {
          "names": [
            "--include-base"
          ],
          "argument": "",
          "description": "Enable/disable inclusion of dependencies on base (default: enabled)"
        },
        {
          "names": [
            "--no-include-base"
          ],
          "argument": "",
          "description": "Enable/disable inclusion of dependencies on base (default: enabled)"
        },
        {
          "names": [
            "--depth"
          ],
          "argument": "DEPTH",
          "description": "Limit the depth of dependency resolution (Default: No limit)"
        },
        {
          "names": [
            "--prune"
          ],
          "argument": "PACKAGES",
          "description": "Prune each package name from the comma separated list of package names PACKAGES"
        },
        {
          "names": [
            "--test"
          ],
          "argument": "",
          "description": "Consider dependencies of test components"
        },
        {
          "names": [
            "--bench"
          ],
          "argument": "",
          "description": "Consider dependencies of benchmark components"
        },
        {
          "names": [
            "--global-hints"
          ],
          "argument": "",
          "description": "Do not require an install GHC; instead, use a hints file for global packages"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "ghc",
      "description": "Run ghc",
      "options": [
        {
          "names": [
            "--ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--no-ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--no-stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--rts-options"
          ],
          "argument": "RTSFLAG",
          "description": "Explicit RTS options to pass to application"
        },
        {
          "names": [
            "--cwd"
          ],
          "argument": "DIR",
          "description": "Sets the working directory before executing"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "hoogle",
      "description": "Run hoogle, the Haskell API search engine. Use the",
      "options": [
        {
          "names": [
            "--setup"
          ],
          "argument": "",
          "description": "Enable/disable If needed: install hoogle, build haddocks and generate a hoogle database (default: enabled)"
        },
        {
          "names": [
            "--no-setup"
          ],
          "argument": "",
          "description": "Enable/disable If needed: install hoogle, build haddocks and generate a hoogle database (default: enabled)"
        },
        {
          "names": [
            "--rebuild"
          ],
          "argument": "",
          "description": "Rebuild the hoogle database"
        },
        {
          "names": [
            "--server"
          ],
          "argument": "",
          "description": "Start local Hoogle server"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "exec",
      "description": "Execute a command. If the command is absent, the",
      "options": [
        {
          "names": [
            "--ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--no-ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--no-stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--rts-options"
          ],
          "argument": "RTSFLAG",
          "description": "Explicit RTS options to pass to application"
        },
        {
          "names": [
            "--cwd"
          ],
          "argument": "DIR",
          "description": "Sets the working directory before executing"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "run",
      "description": "Build and run an executable. Defaults to the first",
      "options": [
        {
          "names": [
            "--ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--no-ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--no-stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--rts-options"
          ],
          "argument": "RTSFLAG",
          "description": "Explicit RTS options to pass to application"
        },
        {
          "names": [
            "--cwd"
          ],
          "argument": "DIR",
          "description": "Sets the working directory before executing"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "ghci",
      "description": "Run ghci in the context of package(s) (experimental)",
      "options": [
        {
          "names": [
            "--pedantic"
          ],
          "argument": "",
          "description": "Turn on -Wall and -Werror"
        },
        {
          "names": [
            "--ghci-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to GHCi"
        },
        {
          "names": [
            "--ghc-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to both GHC and GHCi"
        },
        {
          "names": [
            "--with-ghc"
          ],
          "argument": "GHC",
          "description": "Use this GHC to run GHCi"
        },
        {
          "names": [
            "--load"
          ],
          "argument": "",
          "description": "Enable/disable load modules on start-up (default: enabled)"
        },
        {
          "names": [
            "--no-load"
          ],
          "argument": "",
          "description": "Enable/disable load modules on start-up (default: enabled)"
        },
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--main-is"
          ],
          "argument": "TARGET",
          "description": "Specify which target should contain the main module to load, such as for an executable for test suite or benchmark."
        },
        {
          "names": [
            "--load-local-deps"
          ],
          "argument": "",
          "description": "Load all local dependencies of your targets"
        },
        {
          "names": [
            "--package-hiding"
          ],
          "argument": "",
          "description": "Enable/disable package hiding"
        },
        {
          "names": [
            "--no-package-hiding"
          ],
          "argument": "",
          "description": "Enable/disable package hiding"
        },
        {
          "names": [
            "--only-main"
          ],
          "argument": "",
          "description": "Only load and import the main module. If no main module, no modules will be loaded."
        },
        {
          "names": [
            "--trace"
          ],
          "argument": "",
          "description": "Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception"
        },
        {
          "names": [
            "--profile"
          ],
          "argument": "",
          "description": "profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks"
        },
        {
          "names": [
            "--no-strip"
          ],
          "argument": "",
          "description": "Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols."
        },
        {
          "names": [
            "--test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "repl",
      "description": "Run ghci in the context of package(s) (experimental)",
      "options": [
        {
          "names": [
            "--pedantic"
          ],
          "argument": "",
          "description": "Turn on -Wall and -Werror"
        },
        {
          "names": [
            "--ghci-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to GHCi"
        },
        {
          "names": [
            "--ghc-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to both GHC and GHCi"
        },
        {
          "names": [
            "--with-ghc"
          ],
          "argument": "GHC",
          "description": "Use this GHC to run GHCi"
        },
        {
          "names": [
            "--load"
          ],
          "argument": "",
          "description": "Enable/disable load modules on start-up (default: enabled)"
        },
        {
          "names": [
            "--no-load"
          ],
          "argument": "",
          "description": "Enable/disable load modules on start-up (default: enabled)"
        },
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--main-is"
          ],
          "argument": "TARGET",
          "description": "Specify which target should contain the main module to load, such as for an executable for test suite or benchmark."
        },
        {
          "names": [
            "--load-local-deps"
          ],
          "argument": "",
          "description": "Load all local dependencies of your targets"
        },
        {
          "names": [
            "--package-hiding"
          ],
          "argument": "",
          "description": "Enable/disable package hiding"
        },
        {
          "names": [
            "--no-package-hiding"
          ],
          "argument": "",
          "description": "Enable/disable package hiding"
        },
        {
          "names": [
            "--only-main"
          ],
          "argument": "",
          "description": "Only load and import the main module. If no main module, no modules will be loaded."
        },
        {
          "names": [
            "--trace"
          ],
          "argument": "",
          "description": "Enable profiling in libraries, executables, etc. for all expressions and generate a backtrace on exception"
        },
        {
          "names": [
            "--profile"
          ],
          "argument": "",
          "description": "profiling in libraries, executables, etc. for all expressions and generate a profiling report in tests or benchmarks"
        },
        {
          "names": [
            "--no-strip"
          ],
          "argument": "",
          "description": "Disable DWARF debugging symbol stripping in libraries, executables, etc. for all expressions, producing larger executables but allowing the use of standard debuggers/profiling tools/other utilities that use debugging symbols."
        },
        {
          "names": [
            "--test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-test"
          ],
          "argument": "",
          "description": "Enable/disable testing the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--no-bench"
          ],
          "argument": "",
          "description": "Enable/disable benchmarking the package(s) in this directory/configuration (default: disabled)"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "runghc",
      "description": "Run runghc",
      "options": [
        {
          "names": [
            "--ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--no-ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--no-stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--rts-options"
          ],
          "argument": "RTSFLAG",
          "description": "Explicit RTS options to pass to application"
        },
        {
          "names": [
            "--cwd"
          ],
          "argument": "DIR",
          "description": "Sets the working directory before executing"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "runhaskell",
      "description": "Run runghc (alias for 'runghc')",
      "options": [
        {
          "names": [
            "--ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--no-ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--no-stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--rts-options"
          ],
          "argument": "RTSFLAG",
          "description": "Explicit RTS options to pass to application"
        },
        {
          "names": [
            "--cwd"
          ],
          "argument": "DIR",
          "description": "Sets the working directory before executing"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "script",
      "description": "Run a Stack Script",
      "options": [
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--compile"
          ],
          "argument": "",
          "description": "Compile the script without optimization and run the executable"
        },
        {
          "names": [
            "--optimize"
          ],
          "argument": "",
          "description": "Compile the script with optimization and run the executable"
        },
        {
          "names": [
            "--ghc-options"
          ],
          "argument": "OPTIONS",
          "description": "Additional options passed to GHC"
        },
        {
          "names": [
            "--extra-dep"
          ],
          "argument": "PACKAGE-VERSION",
          "description": "Extra dependencies to be added to the snapshot"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "eval",
      "description": "Evaluate some haskell code inline. Shortcut for",
      "options": [
        {
          "names": [
            "--ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--no-ghc-package-path"
          ],
          "argument": "",
          "description": "Enable/disable setting the GHC_PACKAGE_PATH variable for the subprocess (default: enabled)"
        },
        {
          "names": [
            "--stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--no-stack-exe"
          ],
          "argument": "",
          "description": "Enable/disable setting the STACK_EXE environment variable to the path for the stack executable (default: enabled)"
        },
        {
          "names": [
            "--package"
          ],
          "argument": "PACKAGE",
          "description": "Additional package(s) that must be installed"
        },
        {
          "names": [
            "--rts-options"
          ],
          "argument": "RTSFLAG",
          "description": "Explicit RTS options to pass to application"
        },
        {
          "names": [
            "--cwd"
          ],
          "argument": "DIR",
          "description": "Sets the working directory before executing"
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "clean",
      "description": "Delete build artefacts for the project packages.",
      "options": [
        {
          "names": [
            "--full"
          ],
          "argument": "",
          "description": "Delete the project’s stack working directories (.stack-work by default)."
        },
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "purge",
      "description": "Delete the project stack working directories",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "query",
      "description": "Query general build information (experimental)",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "list",
      "description": "List package id's in snapshot (experimental)",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "ide",
      "description": "IDE-specific commands",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "docker",
      "description": "Subcommands specific to Docker use",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "config",
      "description": "Subcommands for accessing and modifying configuration",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    },
    {
      "name": "hpc",
      "description": "Subcommands specific to Haskell Program Coverage",
      "options": [
        {
          "names": [
            "--setup-info-yaml"
          ],
          "argument": "URL",
          "description": "Alternate URL or relative / absolute path for stack dependencies"
        },
        {
          "names": [
            "--snapshot-location-base"
          ],
          "argument": "URL",
          "description": "The base location of LTS/Nightly snapshots"
        },
        {
          "names": [
            "--help"
          ],
          "argument": "",
          "description": "Show this help text"
        }
      ]
    }
  ]
}
