{"name":"xargs","description":"xargs","options":[{"names":["-0","--null"],"argument":"","description":"items are separated by a null, not whitespace; disables quote and backslash processing and logical EOF processing"},{"names":["-a","--arg-file"],"argument":"FILE","description":"read arguments from FILE, not standard input"},{"names":["-d","--delimiter"],"argument":"CHARACTER","description":"items in input stream are separated by CHARACTER, not by whitespace; disables quote and backslash processing and logical EOF processing"},{"names":["-E"],"argument":"END","description":"set logical EOF string; if END occurs as a line of input, the rest of the input is ignored (ignored if -0 or -d was specified)"},{"names":["-e","--eof"],"argument":"[=END]","description":"equivalent to -E END if END is specified; otherwise, there is no end-of-file string"},{"names":["-I"],"argument":"R","description":"same as --replace=R"},{"names":["-i","--replace"],"argument":"[=R]","description":"replace R in INITIAL-ARGS with names read from standard input; if R is unspecified, assume {}"},{"names":["-L","--max-lines"],"argument":"MAX-LINES","description":"use at most MAX-LINES non-blank input lines per command line"},{"names":["-l"],"argument":"[MAX-LINES]","description":"similar to -L but defaults to at most one nonblank input line if MAX-LINES is not specified"},{"names":["-n","--max-args"],"argument":"MAX-ARGS","description":"use at most MAX-ARGS arguments per command line"},{"names":["-o","--open-tty"],"argument":"","description":"Reopen stdin as /dev/tty in the child process before executing the command; useful to run an interactive application."},{"names":["-P","--max-procs"],"argument":"MAX-PROCS","description":"run at most MAX-PROCS processes at a time"},{"names":["-p","--interactive"],"argument":"","description":"prompt before running commands"},{"names":["--process-slot-var"],"argument":"VAR","description":"set environment variable VAR in child processes"},{"names":["-r","--no-run-if-empty"],"argument":"","description":"if there are no arguments, then do not run COMMAND; if this option is not given, COMMAND will be run at least once"},{"names":["-s","--max-chars"],"argument":"MAX-CHARS","description":"limit length of command line to MAX-CHARS"},{"names":["--show-limits"],"argument":"","description":"show limits on command-line length"},{"names":["-t","--verbose"],"argument":"","description":"print commands before executing them"},{"names":["-x","--exit"],"argument":"","description":"exit if the size (see -s) is exceeded"},{"names":["--help"],"argument":"","description":"display this help and exit"},{"names":["--version"],"argument":"","description":"output version information and exit"}],"tldr":"> Execute a command with piped arguments coming from another command, a file, etc.\n> The input is treated as a single block of text and split into separate pieces on spaces, tabs, newlines and end-of-file.\n> More information: <https://pubs.opengroup.org/onlinepubs/9699919799/utilities/xargs.html>.\n\n- Run a command using the input data as arguments:\n\n`{{arguments_source}} | xargs {{command}}`\n\n- Run multiple chained commands on the input data:\n\n`{{arguments_source}} | xargs sh -c \"{{command1}} && {{command2}} | {{command3}}\"`\n\n- Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter):\n\n`find . -name {{'*.backup'}} -print0 | xargs -0 rm -v`\n\n- Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line:\n\n`{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}`\n\n- Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time:\n\n`{{arguments_source}} | xargs -P {{max-procs}} {{command}}`\n"}
