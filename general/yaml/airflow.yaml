name: airflow
description: A platform to programmatically author, schedule, and monitor workflows
usage: airflow [-h] GROUP_OR_COMMAND ...
options:
  - names:
      - -h
      - --help
    argument: ""
    description: show this help message and exit
subcommands:
  - name: config
    description: View configuration
    usage: airflow config [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
  - name: connections
    description: Manage connections
    usage: airflow connections [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: add
        description: Add a connection
        usage: airflow connections add [-h] [--conn-description CONN_DESCRIPTION] [--conn-extra CONN_EXTRA] [--conn-host CONN_HOST] [--conn-json CONN_JSON] [--conn-login CONN_LOGIN] [--conn-password CONN_PASSWORD] [--conn-port CONN_PORT] [--conn-schema CONN_SCHEMA] [--conn-type CONN_TYPE] [--conn-uri CONN_URI] conn_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --conn-description
            argument: CONN_DESCRIPTION
            description: Connection description, optional when adding a connection
          - names:
              - --conn-extra
            argument: CONN_EXTRA
            description: Connection `Extra` field, optional when adding a connection
          - names:
              - --conn-host
            argument: CONN_HOST
            description: Connection host, optional when adding a connection
          - names:
              - --conn-json
            argument: CONN_JSON
            description: Connection JSON, required to add a connection using JSON representation
          - names:
              - --conn-login
            argument: CONN_LOGIN
            description: Connection login, optional when adding a connection
          - names:
              - --conn-password
            argument: CONN_PASSWORD
            description: Connection password, optional when adding a connection
          - names:
              - --conn-port
            argument: CONN_PORT
            description: Connection port, optional when adding a connection
          - names:
              - --conn-schema
            argument: CONN_SCHEMA
            description: Connection schema, optional when adding a connection
          - names:
              - --conn-type
            argument: CONN_TYPE
            description: Connection type, required to add a connection without conn_uri
          - names:
              - --conn-uri
            argument: CONN_URI
            description: Connection URI, required to add a connection without conn_type
      - name: delete
        description: Delete a connection
        usage: airflow connections delete [-h] [--color {on,off,auto}] conn_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --color
            argument: '{on,off,auto}'
            description: 'Do emit colored output (default: auto)'
        subcommands:
          - name: conn_id
            description: Connection id, required to get/add/delete a connection
            usage: airflow connections delete [-h] [--color {auto,on,off}] conn_id
            options:
              - names:
                  - -h
                  - --help
                argument: ""
                description: show this help message and exit
              - names:
                  - --color
                argument: '{auto,on,off}'
                description: 'Do emit colored output (default: auto)'
      - name: export
        description: Export all connections
        usage: airflow connections export [-h] [--file-format {json,yaml,env}] [--format {json,yaml,env}] [--serialization-format {json,uri}] file
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --file-format
            argument: '{json,yaml,env}'
            description: File format for the export
          - names:
              - --format
            argument: '{json,yaml,env}'
            description: Deprecated -- use `--file-format` instead. File format to use for the export.
          - names:
              - --serialization-format
            argument: '{json,uri}'
            description: When exporting as `.env` format, defines how connections should be serialized. Default is `uri`.
      - name: get
        description: Get a connection
        usage: airflow connections get [-h] [--color {on,off,auto}] [-o table, json, yaml, plain] [-v] conn_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --color
            argument: '{on,off,auto}'
            description: 'Do emit colored output (default: auto)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
        subcommands:
          - name: conn_id
            description: Connection id, required to get/add/delete a connection
            usage: airflow connections get [-h] [--color {off,on,auto}] [-o table, json, yaml, plain] [-v] conn_id
            options:
              - names:
                  - -h
                  - --help
                argument: ""
                description: show this help message and exit
              - names:
                  - --color
                argument: '{off,on,auto}'
                description: 'Do emit colored output (default: auto)'
              - names:
                  - -v
                  - --verbose
                argument: ""
                description: Make logging output more verbose
      - name: import
        description: Import connections from a file
        usage: airflow connections import [-h] file
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: list
        description: List connections
        usage: airflow connections list [-h] [--conn-id CONN_ID] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --conn-id
            argument: CONN_ID
            description: If passed, only items with the specified connection ID will be displayed
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
  - name: dags
    description: Manage DAGs
    usage: airflow dags [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: backfill
        description: Run subsections of a DAG for a specified date range
        usage: airflow dags backfill [-h] [-c CONF] [--continue-on-failures] [--delay-on-limit DELAY_ON_LIMIT] [-x] [-n] [-e END_DATE] [-i] [-I] [-l] [-m] [--pool POOL] [--rerun-failed-tasks] [--reset-dagruns] [-B] [-s START_DATE] [-S SUBDIR] [-t TASK_REGEX] [--treat-dag-as-regex] [-v] [-y] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -c
              - --conf
            argument: CONF
            description: JSON string that gets pickled into the DagRun's conf attribute
          - names:
              - --continue-on-failures
            argument: ""
            description: if set, the backfill will keep going even if some of the tasks failed
          - names:
              - --delay-on-limit
            argument: DELAY_ON_LIMIT
            description: Amount of time in seconds to wait when the limit on maximum active dag runs (max_active_runs) has been reached before trying to execute a dag run again
          - names:
              - -x
              - --donot-pickle
            argument: ""
            description: Do not attempt to pickle the DAG object to send over to the workers, just tell the workers to run their version of the code
          - names:
              - -n
              - --dry-run
            argument: ""
            description: Perform a dry run for each task. Only renders Template Fields for each task, nothing else
          - names:
              - -e
              - --end-date
            argument: END_DATE
            description: Override end_date YYYY-MM-DD
          - names:
              - -i
              - --ignore-dependencies
            argument: ""
            description: Skip upstream tasks, run only the tasks matching the regexp. Only works in conjunction with task_regex
          - names:
              - -I
              - --ignore-first-depends-on-past
            argument: ""
            description: Ignores depends_on_past dependencies for the first set of tasks only (subsequent executions in the backfill DO respect depends_on_past)
          - names:
              - -l
              - --local
            argument: ""
            description: Run the task using the LocalExecutor
          - names:
              - -m
              - --mark-success
            argument: ""
            description: Mark jobs as succeeded without running them
          - names:
              - --pool
            argument: POOL
            description: Resource pool to use
          - names:
              - --rerun-failed-tasks
            argument: ""
            description: if set, the backfill will auto-rerun all the failed tasks for the backfill date range instead of throwing exceptions
          - names:
              - --reset-dagruns
            argument: ""
            description: if set, the backfill will delete existing backfill-related DAG runs and start anew with fresh, running DAG runs
          - names:
              - -B
              - --run-backwards
            argument: ""
            description: if set, the backfill will run tasks from the most recent day first. if there are tasks that depend_on_past this option will throw an exception
          - names:
              - -s
              - --start-date
            argument: START_DATE
            description: Override start_date YYYY-MM-DD
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
          - names:
              - -t
              - --task-regex
            argument: TASK_REGEX
            description: The regex to filter specific task_ids to backfill (optional)
          - names:
              - --treat-dag-as-regex
            argument: ""
            description: if set, dag_id will be treated as regex instead of an exact string
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
          - names:
              - -y
              - --yes
            argument: ""
            description: Do not prompt to confirm. Use with care!
      - name: delete
        description: Delete all DB records related to the specified DAG
        usage: airflow dags delete [-h] [-y] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -y
              - --yes
            argument: ""
            description: Do not prompt to confirm. Use with care!
      - name: list
        description: List all the DAGs
        usage: airflow dags list [-h] [-o table, json, yaml, plain] [-S SUBDIR] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: list-jobs
        description: List the jobs
        usage: airflow dags list-jobs [-h] [-d DAG_ID] [--limit LIMIT] [-o table, json, yaml, plain] [--state STATE] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -d
              - --dag-id
            argument: DAG_ID
            description: The id of the dag
          - names:
              - --limit
            argument: LIMIT
            description: Return a limited number of records
          - names:
              - --state
            argument: STATE
            description: Only list the dag runs corresponding to the state
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: list-runs
        description: List DAG runs given a DAG id
        usage: airflow dags list-runs [-h] -d DAG_ID [-e END_DATE] [--no-backfill] [-o table, json, yaml, plain] [-s START_DATE] [--state STATE] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -d
              - --dag-id
            argument: DAG_ID
            description: The id of the dag
          - names:
              - -e
              - --end-date
            argument: END_DATE
            description: Override end_date YYYY-MM-DD
          - names:
              - --no-backfill
            argument: ""
            description: filter all the backfill dagruns given the dag id
          - names:
              - -s
              - --start-date
            argument: START_DATE
            description: Override start_date YYYY-MM-DD
          - names:
              - --state
            argument: STATE
            description: Only list the dag runs corresponding to the state
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: next-execution
        description: Get the next execution datetimes of a DAG
        usage: airflow dags next-execution [-h] [-n NUM_EXECUTIONS] [-S SUBDIR] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -n
              - --num-executions
            argument: NUM_EXECUTIONS
            description: The number of next execution datetimes to show
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: pause
        description: Pause a DAG
        usage: airflow dags pause [-h] [-S SUBDIR] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: report
        description: Show DagBag loading report
        usage: airflow dags report [-h] [-o table, json, yaml, plain] [-S SUBDIR] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: reserialize
        description: Reserialize all DAGs by parsing the DagBag files
        usage: airflow dags reserialize [-h] [--clear-only] [-S SUBDIR]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --clear-only
            argument: ""
            description: If passed, serialized DAGs will be cleared but not reserialized.
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: show
        description: Displays DAG's tasks with their dependencies
        usage: airflow dags show [-h] [--imgcat] [-s SAVE] [-S SUBDIR] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --imgcat
            argument: ""
            description: Displays graph using the imgcat tool.
          - names:
              - -s
              - --save
            argument: SAVE
            description: Saves the result to the indicated file.
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: state
        description: Get the status of a dag run
        usage: airflow dags state [-h] [-S SUBDIR] dag_id execution_date
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: test
        description: Execute one single DagRun
        usage: airflow dags test [-h] [-c CONF] [--imgcat-dagrun] [--save-dagrun SAVE_DAGRUN] [--show-dagrun] [-S SUBDIR] dag_id [execution_date]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -c
              - --conf
            argument: CONF
            description: JSON string that gets pickled into the DagRun's conf attribute
          - names:
              - --imgcat-dagrun
            argument: ""
            description: After completing the dag run, prints a diagram on the screen for the current DAG Run using the imgcat tool.
          - names:
              - --save-dagrun
            argument: SAVE_DAGRUN
            description: After completing the backfill, saves the diagram for current DAG Run to the indicated file.
          - names:
              - --show-dagrun
            argument: ""
            description: After completing the backfill, shows the diagram for current DAG Run.
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: trigger
        description: Trigger a DAG run
        usage: airflow dags trigger [-h] [-c CONF] [-e EXEC_DATE] [-r RUN_ID] [-S SUBDIR] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -c
              - --conf
            argument: CONF
            description: JSON string that gets pickled into the DagRun's conf attribute
          - names:
              - -e
              - --exec-date
            argument: EXEC_DATE
            description: The execution date of the DAG
          - names:
              - -r
              - --run-id
            argument: RUN_ID
            description: Helps to identify this run
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: unpause
        description: Resume a paused DAG
        usage: airflow dags unpause [-h] [-S SUBDIR] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
  - name: db
    description: Database operations
    usage: airflow db [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: check
        description: Check if the database can be reached
        usage: airflow db check [-h]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: clean
        description: Purge old records in metastore tables
        usage: airflow db clean [-h] --clean-before-timestamp CLEAN_BEFORE_TIMESTAMP [--dry-run] [--skip-archive] [-t TABLES] [-v] [-y]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --clean-before-timestamp
            argument: CLEAN_BEFORE_TIMESTAMP
            description: 'The date or timestamp before which data should be purged. If no timezone info is supplied then dates are assumed to be in airflow default timezone. Example: ''2022-01-01 00:00:00+01:00'''
          - names:
              - --dry-run
            argument: ""
            description: Perform a dry run
          - names:
              - --skip-archive
            argument: ""
            description: Don't preserve purged records in an archive table.
          - names:
              - -t
              - --tables
            argument: TABLES
            description: 'Table names to perform maintenance on (use comma-separated list). Options: [''callback_request'', ''celery_taskmeta'', ''celery_tasksetmeta'', ''dag'', ''dag_run'', ''dataset_event'', ''import_error'', ''job'', ''log'', ''rendered_task_instance_fields'', ''sla_miss'', ''task_fail'', ''task_instance'', ''task_reschedule'', ''xcom'']'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
          - names:
              - -y
              - --yes
            argument: ""
            description: Do not prompt to confirm. Use with care!
      - name: downgrade
        description: Downgrade the schema of the metadata database.
        usage: airflow db downgrade [-h] [--from-revision FROM_REVISION] [--from-version FROM_VERSION] [-s] [-r TO_REVISION] [-n TO_VERSION] [-y]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --from-revision
            argument: FROM_REVISION
            description: (Optional) If generating sql, may supply a *from* Alembic revision
          - names:
              - --from-version
            argument: FROM_VERSION
            description: (Optional) If generating sql, may supply a *from* version
          - names:
              - -s
              - --show-sql-only
            argument: ""
            description: Don't actually run migrations; just print out sql scripts for offline migration. Required if using either `--from-revision` or `--from-version`.
          - names:
              - -r
              - --to-revision
            argument: TO_REVISION
            description: 'The Alembic revision to downgrade to. Note: must provide either `--to-revision` or `--to-version`.'
          - names:
              - -n
              - --to-version
            argument: TO_VERSION
            description: (Optional) If provided, only run migrations up to this version.
          - names:
              - -y
              - --yes
            argument: ""
            description: Do not prompt to confirm. Use with care!
      - name: init
        description: Initialize the metadata database
        usage: airflow db init [-h]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: reset
        description: Burn down and rebuild the metadata database
        usage: airflow db reset [-h] [-s] [-y]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -s
              - --skip-init
            argument: ""
            description: Only remove tables; do not perform db init.
          - names:
              - -y
              - --yes
            argument: ""
            description: Do not prompt to confirm. Use with care!
      - name: shell
        description: Runs a shell to access the database
        usage: airflow db shell [-h]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: upgrade
        description: Upgrade the metadata database to latest version
        usage: airflow db upgrade [-h] [--from-revision FROM_REVISION] [--from-version FROM_VERSION] [-s] [-r TO_REVISION] [-n TO_VERSION]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --from-revision
            argument: FROM_REVISION
            description: (Optional) If generating sql, may supply a *from* Alembic revision
          - names:
              - --from-version
            argument: FROM_VERSION
            description: (Optional) If generating sql, may supply a *from* version
          - names:
              - -s
              - --show-sql-only
            argument: ""
            description: Don't actually run migrations; just print out sql scripts for offline migration. Required if using either `--from-revision` or `--from-version`.
          - names:
              - -r
              - --to-revision
            argument: TO_REVISION
            description: (Optional) If provided, only run migrations up to and including this Alembic revision.
          - names:
              - -n
              - --to-version
            argument: TO_VERSION
            description: '(Optional) The airflow version to upgrade to. Note: must provide either `--to-revision` or `--to-version`.'
  - name: jobs
    description: Manage jobs
    usage: airflow jobs [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: check
        description: Checks if job(s) are still alive
        usage: airflow jobs check [-h] [--allow-multiple] [--hostname HOSTNAME] [--job-type {BackfillJob,LocalTaskJob,SchedulerJob,TriggererJob}] [--limit LIMIT]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --allow-multiple
            argument: ""
            description: If passed, this command will be successful even if multiple matching alive jobs are found.
          - names:
              - --hostname
            argument: HOSTNAME
            description: The hostname of job(s) that will be checked.
          - names:
              - --job-type
            argument: '{BackfillJob,LocalTaskJob,SchedulerJob,TriggererJob}'
            description: The type of job(s) that will be checked.
          - names:
              - --limit
            argument: LIMIT
            description: The number of recent jobs that will be checked. To disable limit, set 0.
  - name: pools
    description: Manage pools
    usage: airflow pools [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: delete
        description: Delete pool
        usage: airflow pools delete [-h] [-o table, json, yaml, plain] [-v] NAME
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: export
        description: Export all pools
        usage: airflow pools export [-h] FILEPATH
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: get
        description: Get pool size
        usage: airflow pools get [-h] [-o table, json, yaml, plain] [-v] NAME
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: import
        description: Import pools
        usage: airflow pools import [-h] [-v] FILEPATH
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: list
        description: List pools
        usage: airflow pools list [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: set
        description: Configure pool
        usage: airflow pools set [-h] [-o table, json, yaml, plain] [-v] NAME slots description
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
  - name: providers
    description: Display providers
    usage: airflow providers [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: auth
        description: Get information about API auth backends provided
        usage: airflow providers auth [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: get
        description: Get detailed information about a provider
        usage: airflow providers get [-h] [--color {on,off,auto}] [-f] [-o table, json, yaml, plain] [-v] provider_name
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --color
            argument: '{on,off,auto}'
            description: 'Do emit colored output (default: auto)'
          - names:
              - -f
              - --full
            argument: ""
            description: Full information about the provider, including documentation information.
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
        subcommands:
          - name: provider_name
            description: Provider name, required to get provider information
            usage: airflow providers get [-h] [--color {auto,off,on}] [-f] [-o table, json, yaml, plain] [-v] provider_name
            options:
              - names:
                  - -h
                  - --help
                argument: ""
                description: show this help message and exit
              - names:
                  - --color
                argument: '{auto,off,on}'
                description: 'Do emit colored output (default: auto)'
              - names:
                  - -f
                  - --full
                argument: ""
                description: Full information about the provider, including documentation information.
              - names:
                  - -v
                  - --verbose
                argument: ""
                description: Make logging output more verbose
      - name: hooks
        description: List registered provider hooks
        usage: airflow providers hooks [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: links
        description: List extra links registered by the providers
        usage: airflow providers links [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: list
        description: List installed providers
        usage: airflow providers list [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: logging
        description: Get information about task logging handlers provided
        usage: airflow providers logging [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: secrets
        description: Get information about secrets backends provided
        usage: airflow providers secrets [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: widgets
        description: Get information about registered connection form widgets
        usage: airflow providers widgets [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
  - name: roles
    description: Manage roles
    usage: airflow roles [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: create
        description: Create role
        usage: airflow roles create [-h] [-v] [role ...]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: delete
        description: Delete role
        usage: airflow roles delete [-h] [-v] [role ...]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: export
        description: Export roles (without permissions) from db to JSON file
        usage: airflow roles export [-h] [-p] [-v] file
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -p
              - --pretty
            argument: ""
            description: Format output JSON file by sorting role names and indenting by 4 spaces
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: import
        description: Import roles (without permissions) from JSON file to db
        usage: airflow roles import [-h] [-v] file
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: list
        description: List roles
        usage: airflow roles list [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
  - name: tasks
    description: Manage tasks
    usage: airflow tasks [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: clear
        description: Clear a set of task instance, as if they never ran
        usage: airflow tasks clear [-h] [-R] [-d] [-e END_DATE] [-X] [-x] [-f] [-r] [-s START_DATE] [-S SUBDIR] [-t TASK_REGEX] [-u] [-y] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -R
              - --dag-regex
            argument: ""
            description: Search dag_id as regex instead of exact string
          - names:
              - -d
              - --downstream
            argument: ""
            description: Include downstream tasks
          - names:
              - -e
              - --end-date
            argument: END_DATE
            description: Override end_date YYYY-MM-DD
          - names:
              - -X
              - --exclude-parentdag
            argument: ""
            description: Exclude ParentDAGS if the task cleared is a part of a SubDAG
          - names:
              - -x
              - --exclude-subdags
            argument: ""
            description: Exclude subdags
          - names:
              - -f
              - --only-failed
            argument: ""
            description: Only failed jobs
          - names:
              - -r
              - --only-running
            argument: ""
            description: Only running jobs
          - names:
              - -s
              - --start-date
            argument: START_DATE
            description: Override start_date YYYY-MM-DD
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
          - names:
              - -t
              - --task-regex
            argument: TASK_REGEX
            description: The regex to filter specific task_ids to backfill (optional)
          - names:
              - -u
              - --upstream
            argument: ""
            description: Include upstream tasks
          - names:
              - -y
              - --yes
            argument: ""
            description: Do not prompt to confirm. Use with care!
      - name: failed-deps
        description: Returns the unmet dependencies for a task instance
        usage: airflow tasks failed-deps [-h] [--map-index MAP_INDEX] [-S SUBDIR] dag_id task_id execution_date_or_run_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --map-index
            argument: MAP_INDEX
            description: Mapped task index
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: list
        description: List the tasks within a DAG
        usage: airflow tasks list [-h] [-S SUBDIR] [-t] [-v] dag_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
          - names:
              - -t
              - --tree
            argument: ""
            description: Tree view
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: render
        description: Render a task instance's template(s)
        usage: airflow tasks render [-h] [--map-index MAP_INDEX] [-S SUBDIR] [-v] dag_id task_id execution_date_or_run_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --map-index
            argument: MAP_INDEX
            description: Mapped task index
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: run
        description: Run a single task instance
        usage: airflow tasks run [-h] [--cfg-path CFG_PATH] [-f] [-A] [-i] [-I] [-N] [-l] [--map-index MAP_INDEX] [-m] [-p PICKLE] [--pool POOL] [--ship-dag] [-S SUBDIR] dag_id task_id execution_date_or_run_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --cfg-path
            argument: CFG_PATH
            description: Path to config file to use instead of airflow.cfg
          - names:
              - -f
              - --force
            argument: ""
            description: Ignore previous task instance state, rerun regardless if task already succeeded/failed
          - names:
              - -A
              - --ignore-all-dependencies
            argument: ""
            description: Ignores all non-critical dependencies, including ignore_ti_state and ignore_task_deps
          - names:
              - -i
              - --ignore-dependencies
            argument: ""
            description: Ignore task-specific dependencies, e.g. upstream, depends_on_past, and retry delay dependencies
          - names:
              - -I
              - --ignore-depends-on-past
            argument: ""
            description: Ignore depends_on_past dependencies (but respect upstream dependencies)
          - names:
              - -N
              - --interactive
            argument: ""
            description: Do not capture standard output and error streams (useful for interactive debugging)
          - names:
              - -l
              - --local
            argument: ""
            description: Run the task using the LocalExecutor
          - names:
              - --map-index
            argument: MAP_INDEX
            description: Mapped task index
          - names:
              - -m
              - --mark-success
            argument: ""
            description: Mark jobs as succeeded without running them
          - names:
              - -p
              - --pickle
            argument: PICKLE
            description: Serialized pickle object of the entire dag (used internally)
          - names:
              - --pool
            argument: POOL
            description: Resource pool to use
          - names:
              - --ship-dag
            argument: ""
            description: Pickles (serializes) the DAG and ships it to the worker
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
      - name: state
        description: Get the status of a task instance
        usage: airflow tasks state [-h] [--map-index MAP_INDEX] [-S SUBDIR] [-v] dag_id task_id execution_date_or_run_id
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --map-index
            argument: MAP_INDEX
            description: Mapped task index
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: test
        description: Test a task instance
        usage: airflow tasks test [-h] [-n] [--env-vars ENV_VARS] [--map-index MAP_INDEX] [-m] [-S SUBDIR] [-t TASK_PARAMS] dag_id task_id [execution_date_or_run_id]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -n
              - --dry-run
            argument: ""
            description: Perform a dry run for each task. Only renders Template Fields for each task, nothing else
          - names:
              - --env-vars
            argument: ENV_VARS
            description: Set env var in both parsing time and runtime for each of entry supplied in a JSON dict
          - names:
              - --map-index
            argument: MAP_INDEX
            description: Mapped task index
          - names:
              - -m
              - --post-mortem
            argument: ""
            description: Open debugger on uncaught exception
          - names:
              - -S
              - --subdir
            argument: SUBDIR
            description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
          - names:
              - -t
              - --task-params
            argument: TASK_PARAMS
            description: Sends a JSON params dict to the task
  - name: users
    description: Manage users
    usage: airflow users [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: add-role
        description: Add role to a user
        usage: airflow users add-role [-h] [-e EMAIL] -r ROLE [-u USERNAME]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -e
              - --email
            argument: EMAIL
            description: Email of the user
          - names:
              - -r
              - --role
            argument: ROLE
            description: Role of the user. Existing roles include Admin, User, Op, Viewer, and Public
          - names:
              - -u
              - --username
            argument: USERNAME
            description: Username of the user
      - name: create
        description: Create a user
        usage: airflow users create [-h] -e EMAIL -f FIRSTNAME -l LASTNAME [-p PASSWORD] -r ROLE [--use-random-password] -u USERNAME
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -e
              - --email
            argument: EMAIL
            description: Email of the user
          - names:
              - -f
              - --firstname
            argument: FIRSTNAME
            description: First name of the user
          - names:
              - -l
              - --lastname
            argument: LASTNAME
            description: Last name of the user
          - names:
              - -p
              - --password
            argument: PASSWORD
            description: Password of the user, required to create a user without --use-random-password
          - names:
              - -r
              - --role
            argument: ROLE
            description: Role of the user. Existing roles include Admin, User, Op, Viewer, and Public
          - names:
              - --use-random-password
            argument: ""
            description: Do not prompt for password. Use random string instead. Required to create a user without --password
          - names:
              - -u
              - --username
            argument: USERNAME
            description: Username of the user
      - name: delete
        description: Delete a user
        usage: airflow users delete [-h] [-e EMAIL] [-u USERNAME]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -e
              - --email
            argument: EMAIL
            description: Email of the user
          - names:
              - -u
              - --username
            argument: USERNAME
            description: Username of the user
      - name: export
        description: Export all users
        usage: airflow users export [-h] FILEPATH
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: import
        description: Import users
        usage: airflow users import [-h] FILEPATH
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: list
        description: List users
        usage: airflow users list [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
  - name: variables
    description: Manage variables
    usage: airflow variables [-h] COMMAND ...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: delete
        description: Delete variable
        usage: airflow variables delete [-h] key
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: export
        description: Export all variables
        usage: airflow variables export [-h] file
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: get
        description: Get variable
        usage: airflow variables get [-h] [-d VAL] [-j] [-v] key
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -d
              - --default
            argument: VAL
            description: Default value returned if variable does not exist
          - names:
              - -j
              - --json
            argument: ""
            description: Deserialize JSON variable
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: import
        description: Import variables
        usage: airflow variables import [-h] file
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: list
        description: List variables
        usage: airflow variables list [-h] [-o table, json, yaml, plain] [-v]
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -o
              - --output
            argument: (table, json, yaml, plain)
            description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
          - names:
              - -v
              - --verbose
            argument: ""
            description: Make logging output more verbose
      - name: set
        description: Set variable
        usage: airflow variables set [-h] [-j] key VALUE
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -j
              - --json
            argument: ""
            description: Serialize JSON variable
  - name: cheat-sheet
    description: Display cheat sheet
    usage: airflow cheat-sheet [-h] [-v]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -v
          - --verbose
        argument: ""
        description: Make logging output more verbose
  - name: dag-processor
    description: Start a standalone Dag Processor instance
    usage: airflow dag-processor [-h] [-D] [-p] [-l LOG_FILE] [-n NUM_RUNS] [--pid [PID]] [--stderr STDERR] [--stdout STDOUT] [-S SUBDIR]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -D
          - --daemon
        argument: ""
        description: Daemonize instead of running in the foreground
      - names:
          - -p
          - --do-pickle
        argument: ""
        description: Attempt to pickle the DAG object to send over to the workers, instead of letting workers run their version of the code
      - names:
          - -l
          - --log-file
        argument: LOG_FILE
        description: Location of the log file
      - names:
          - -n
          - --num-runs
        argument: NUM_RUNS
        description: Set the number of runs to execute before exiting
      - names:
          - --pid
        argument: '[PID]'
        description: PID file location
      - names:
          - --stderr
        argument: STDERR
        description: Redirect stderr to this file
      - names:
          - --stdout
        argument: STDOUT
        description: Redirect stdout to this file
      - names:
          - -S
          - --subdir
        argument: SUBDIR
        description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
  - name: info
    description: Show information about current Airflow and environment
    usage: airflow info [-h] [--anonymize] [--file-io] [-o table, json, yaml, plain] [-v]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --anonymize
        argument: ""
        description: Minimize any personal identifiable information. Use it when sharing output with others.
      - names:
          - --file-io
        argument: ""
        description: Send output to file.io service and returns link.
      - names:
          - -o
          - --output
        argument: (table, json, yaml, plain)
        description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
      - names:
          - -v
          - --verbose
        argument: ""
        description: Make logging output more verbose
  - name: kerberos
    description: Start a kerberos ticket renewer
    usage: airflow kerberos [-h] [-D] [-k [KEYTAB]] [-l LOG_FILE] [--pid [PID]] [--stderr STDERR] [--stdout STDOUT] [principal]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -D
          - --daemon
        argument: ""
        description: Daemonize instead of running in the foreground
      - names:
          - -k
          - --keytab
        argument: '[KEYTAB]'
        description: '[KEYTAB] keytab'
      - names:
          - -l
          - --log-file
        argument: LOG_FILE
        description: LOG_FILE Location of the log file
      - names:
          - --pid
        argument: '[PID]'
        description: PID file location
      - names:
          - --stderr
        argument: STDERR
        description: Redirect stderr to this file
      - names:
          - --stdout
        argument: STDOUT
        description: Redirect stdout to this file
  - name: plugins
    description: Dump information about loaded plugins
    usage: airflow plugins [-h] [-o table, json, yaml, plain] [-v]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -o
          - --output
        argument: (table, json, yaml, plain)
        description: 'Output format. Allowed values: json, yaml, plain, table (default: table)'
      - names:
          - -v
          - --verbose
        argument: ""
        description: Make logging output more verbose
  - name: rotate-fernet-key
    description: Rotate encrypted connection credentials and variables
    usage: airflow rotate-fernet-key [-h]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
  - name: scheduler
    description: Start a scheduler instance
    usage: airflow scheduler [-h] [-D] [-p] [-l LOG_FILE] [-n NUM_RUNS] [--pid [PID]] [-s] [--stderr STDERR] [--stdout STDOUT] [-S SUBDIR]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -D
          - --daemon
        argument: ""
        description: Daemonize instead of running in the foreground
      - names:
          - -p
          - --do-pickle
        argument: ""
        description: Attempt to pickle the DAG object to send over to the workers, instead of letting workers run their version of the code
      - names:
          - -l
          - --log-file
        argument: LOG_FILE
        description: Location of the log file
      - names:
          - -n
          - --num-runs
        argument: NUM_RUNS
        description: Set the number of runs to execute before exiting
      - names:
          - --pid
        argument: '[PID]'
        description: PID file location
      - names:
          - -s
          - --skip-serve-logs
        argument: ""
        description: Don't start the serve logs process along with the workers
      - names:
          - --stderr
        argument: STDERR
        description: Redirect stderr to this file
      - names:
          - --stdout
        argument: STDOUT
        description: Redirect stdout to this file
      - names:
          - -S
          - --subdir
        argument: SUBDIR
        description: File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'
  - name: standalone
    description: Run an all-in-one copy of Airflow
    usage: airflow standalone [-h]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
  - name: sync-perm
    description: Update permissions for existing roles and optionally DAGs
    usage: airflow sync-perm [-h] [--include-dags]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --include-dags
        argument: ""
        description: If passed, DAG specific permissions will also be synced.
  - name: triggerer
    description: Start a triggerer instance
    usage: airflow triggerer [-h] [--capacity CAPACITY] [-D] [-l LOG_FILE] [--pid [PID]] [--stderr STDERR] [--stdout STDOUT]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --capacity
        argument: CAPACITY
        description: The maximum number of triggers that a Triggerer will run at one time.
      - names:
          - -D
          - --daemon
        argument: ""
        description: Daemonize instead of running in the foreground
      - names:
          - -l
          - --log-file
        argument: LOG_FILE
        description: Location of the log file
      - names:
          - --pid
        argument: '[PID]'
        description: PID file location
      - names:
          - --stderr
        argument: STDERR
        description: Redirect stderr to this file
      - names:
          - --stdout
        argument: STDOUT
        description: Redirect stdout to this file
  - name: version
    description: Show the version
    usage: airflow version [-h]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
  - name: webserver
    description: Start a Airflow webserver instance
    usage: airflow webserver [-h] [-A ACCESS_LOGFILE] [-L ACCESS_LOGFORMAT] [-D] [-d] [-E ERROR_LOGFILE] [-H HOSTNAME] [-l LOG_FILE] [--pid [PID]] [-p PORT] [--ssl-cert SSL_CERT] [--ssl-key SSL_KEY] [--stderr STDERR] [--stdout STDOUT] [-t WORKER_TIMEOUT] [-k {sync,eventlet,gevent,tornado}] [-w WORKERS]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -A
          - --access-logfile
        argument: ACCESS_LOGFILE
        description: The logfile to store the webserver access log. Use '-' to print to stderr
      - names:
          - -L
          - --access-logformat
        argument: ACCESS_LOGFORMAT
        description: The access log format for gunicorn logs
      - names:
          - -D
          - --daemon
        argument: ""
        description: Daemonize instead of running in the foreground
      - names:
          - -d
          - --debug
        argument: ""
        description: Use the server that ships with Flask in debug mode
      - names:
          - -E
          - --error-logfile
        argument: ERROR_LOGFILE
        description: The logfile to store the webserver error log. Use '-' to print to stderr
      - names:
          - -H
          - --hostname
        argument: HOSTNAME
        description: Set the hostname on which to run the web server
      - names:
          - -l
          - --log-file
        argument: LOG_FILE
        description: Location of the log file
      - names:
          - --pid
        argument: '[PID]'
        description: PID file location
      - names:
          - -p
          - --port
        argument: PORT
        description: The port on which to run the server
      - names:
          - --ssl-cert
        argument: SSL_CERT
        description: Path to the SSL certificate for the webserver
      - names:
          - --ssl-key
        argument: SSL_KEY
        description: Path to the key to use with the SSL certificate
      - names:
          - --stderr
        argument: STDERR
        description: Redirect stderr to this file
      - names:
          - --stdout
        argument: STDOUT
        description: Redirect stdout to this file
      - names:
          - -t
          - --worker-timeout
        argument: WORKER_TIMEOUT
        description: The timeout for waiting on webserver workers
      - names:
          - -k
          - --workerclass
        argument: '{sync,eventlet,gevent,tornado}'
        description: The worker class to use for Gunicorn
      - names:
          - -w
          - --workers
        argument: WORKERS
        description: Number of workers to run the webserver on
version: 2.4.3
