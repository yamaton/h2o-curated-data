name: ajv
description: JSON schema validator
usage: |-
  ajv [validate] -s schema[.json] -d data[.json]
  ajv compile -s schema[.json]
  ajv migrate -s schema[.json] -o migrated_schema.json
  ajv test -s schema[.json] -d data[.json] --valid
options:
  - names:
      - --spec
    argument: ""
    description: JSON schema specification to use
  - names:
      - -s
    argument: "<file>"
    description: JSON schema to validate against (required)
  - names:
      - -d
    argument: data file(s)
    description: to be validated (required)
  - names:
      - -r
    argument: "<file>"
    description: referenced schema(s)
  - names:
      - -m
    argument: "<file>"
    description: meta schema(s)
  - names:
      - -c
    argument: "<file>"
    description: custom keywords/formats definitions
  - names:
      - --spec
    argument: "{draft7|draft2019}"
    description: JSON schema specification to use
  - names:
      - --errors
    argument: "{js|json|line|text}"
    description: error reporting format ("js" by default)
  - names:
      - --changes
    argument: "{js|json|line|text|no}"
    description: log changes in data after validation ("no" by default)
  - names:
      - --strict
    argument: "false"
    description: disable strict mode
  - names:
      - --strict-tuples
    argument: "{true|false|log}"
    description: unconstrained tuples
  - names:
      - --strict-types
    argument: "{true|false|log}"
    description: union or unspecified types
  - names:
      - --allow-matching-properties
    argument: ""
    description: allow "properties" matching patterns in "patternProperties"
  - names:
      - --allow-union-types
    argument: ""
    description: allow union type keyword
  - names:
      - --validate-formats
    argument: "false"
    description: disable format validation
  - names:
      - --data
    argument: ""
    description: use $data references
  - names:
      - --all-errors
    argument: ""
    description: collect all errors
  - names:
      - --verbose
    argument: ""
    description: include schema and data in errors
  - names:
      - --comment
    argument: ""
    description: log schema "$comment"s
  - names:
      - --inline-refs
    argument: "{true|false|<number>}"
    description: referenced schemas compilation mode
  - names:
      - --remove-additional
    argument: "{true|false|failing}"
    description: remove additional properties
  - names:
      - --use-defaults
    argument: ""
    description: replace missing properties/items with the values from default keyword
  - names:
      - --coerce-types
    argument: ""
    description: change type of data to match type keyword
  - names:
      - --multiple-of-precision
    argument: "N"
    description: pass integer number
  - names:
      - --messages
    argument: "false"
    description: do not include text messages in errors
  - names:
      - --loop-required
    argument: "N"
    description: max size of "required to compile to expression (rather than to loop)
  - names:
      - --loop-enum
    argument: "N"
    description: max size of "enum" to compile to expression (rather than to loop)
  - names:
      - --own-properties
    argument: ""
    description: only validate own properties (not relevant for JSON, but can have effect for JavaScript objects)
  - names:
      - --code.es5
    argument: ""
    description: generate ES5 code
  - names:
      - --code.lines
    argument: ""
    description: generate multi-line code
  - names:
      - --code.optimize
    argument: "{false|<number>}"
    description: code optimization
subcommands:
  - name: validate
    description: Validate data file(s) against schema
    options:
      - names:
          - -s
        argument: "<file>"
        description: JSON schema to validate against (required)
      - names:
          - -d
        argument: data file(s)
        description: to be validated (required)
      - names:
          - -r
        argument: "<file>"
        description: referenced schema(s)
      - names:
          - -m
        argument: "<file>"
        description: meta schema(s)
      - names:
          - -c
        argument: "<file>"
        description: custom keywords/formats definitions
      - names:
          - --spec
        argument: "{draft7|draft2019}"
        description: JSON schema specification to use
      - names:
          - --errors
        argument: "{js|json|line|text}"
        description: error reporting format ("js" by default)
      - names:
          - --changes
        argument: "{js|json|line|text|no}"
        description: log changes in data after validation ("no" by default)
      - names:
          - --strict
        argument: "false"
        description: disable strict mode
      - names:
          - --strict-tuples
        argument: "{true|false|log}"
        description: unconstrained tuples
      - names:
          - --strict-types
        argument: "{true|false|log}"
        description: union or unspecified types
      - names:
          - --allow-matching-properties
        argument: ""
        description: allow "properties" matching patterns in "patternProperties"
      - names:
          - --allow-union-types
        argument: ""
        description: allow union type keyword
      - names:
          - --validate-formats
        argument: "false"
        description: disable format validation
      - names:
          - --data
        argument: ""
        description: use $data references
      - names:
          - --all-errors
        argument: ""
        description: collect all errors
      - names:
          - --verbose
        argument: ""
        description: include schema and data in errors
      - names:
          - --comment
        argument: ""
        description: log schema "$comment"s
      - names:
          - --inline-refs
        argument: "{true|false|<number>}"
        description: referenced schemas compilation mode
      - names:
          - --remove-additional
        argument: "{true|false|failing}"
        description: remove additional properties
      - names:
          - --use-defaults
        argument: ""
        description: replace missing properties/items with the values from default keyword
      - names:
          - --coerce-types
        argument: ""
        description: change type of data to match type keyword
      - names:
          - --multiple-of-precision
        argument: "N"
        description: pass integer number
      - names:
          - --messages
        argument: "false"
        description: do not include text messages in errors
      - names:
          - --loop-required
        argument: "N"
        description: max size of "required to compile to expression (rather than to loop)
      - names:
          - --loop-enum
        argument: "N"
        description: max size of "enum" to compile to expression (rather than to loop)
      - names:
          - --own-properties
        argument: ""
        description: only validate own properties (not relevant for JSON, but can have effect for JavaScript objects)
      - names:
          - --code.es5
        argument: ""
        description: generate ES5 code
      - names:
          - --code.lines
        argument: ""
        description: generate multi-line code
      - names:
          - --code.optimize
        argument: "{false|<number>}"
        description: code optimization
  - name: compile
    description: Compile schema(s)
    options:
      - names:
          - -s
        argument: "<file>"
        description: JSON schema to validate against (required)
      - names:
          - -r
        argument: "<file>"
        description: referenced schema(s)
      - names:
          - -m
        argument: "<file>"
        description: meta schema(s)
      - names:
          - -c
        argument: "<file>"
        description: custom keywords/formats definitions
      - names:
          - -o
        argument: "<file>"
        description: output file for compiled validation function
      - names:
          - --spec
        argument: "{draft7|draft2019}"
        description: JSON schema specification to use
      - names:
          - --strict
        argument: "false"
        description: disable strict mode
      - names:
          - --strict-tuples
        argument: "{true|false|log}"
        description: unconstrained tuples
      - names:
          - --strict-types
        argument: "{true|false|log}"
        description: union or unspecified types
      - names:
          - --allow-matching-properties
        argument: ""
        description: allow "properties" matching patterns in "patternProperties"
      - names:
          - --allow-union-types
        argument: ""
        description: allow union type keyword
      - names:
          - --validate-formats
        argument: "false"
        description: disable format validation
      - names:
          - --data
        argument: ""
        description: use $data references
      - names:
          - --all-errors
        argument: ""
        description: collect all errors
      - names:
          - --verbose
        argument: ""
        description: include schema and data in errors
      - names:
          - --comment
        argument: ""
        description: log schema "$comment"s
      - names:
          - --inline-refs
        argument: "{true|false|<number>}"
        description: referenced schemas compilation mode
      - names:
          - --remove-additional
        argument: "{true|false|failing}"
        description: remove additional properties
      - names:
          - --use-defaults
        argument: ""
        description: replace missing properties/items with the values from default keyword
      - names:
          - --coerce-types
        argument: ""
        description: change type of data to match type keyword
      - names:
          - --multiple-of-precision
        argument: "N"
        description: pass integer number
      - names:
          - --messages
        argument: "false"
        description: do not include text messages in errors
      - names:
          - --loop-required
        argument: "N"
        description: max size of "required to compile to expression (rather than to loop)
      - names:
          - --loop-enum
        argument: "N"
        description: max size of "enum" to compile to expression (rather than to loop)
      - names:
          - --own-properties
        argument: ""
        description: only validate own properties (not relevant for JSON, but can have effect for JavaScript objects)
      - names:
          - --code.es5
        argument: ""
        description: generate ES5 code
      - names:
          - --code.lines
        argument: ""
        description: generate multi-line code
      - names:
          - --code.optimize
        argument: "{false|<number>}"
        description: code optimization
  - name: migrate
    description: Migrate schema(s) to draft-07 or draft-2019-09
    options:
      - names:
          - -s
        argument: "<file>"
        description: JSON schema(s) to migrate to draft-07 or draft-2019-09
      - names:
          - -o
        argument: "<file>"
        description: output file for migrated schema (only allowed for a single schema)
      - names:
          - --spec
        argument: "{draft7|draft2019}"
        description: JSON schema specification to use
      - names:
          - --indent
        argument: "N"
        description: indentation in migrated schema JSON file, 4 by default
      - names:
          -  --validate-schema
        argument: "=false"
        description: skip schema validation
  - name: test
    description: Test data validation result
    options:
      - names:
          - -s
        argument: "<file>"
        description: JSON schema to validate against (required)
      - names:
          - -d
        argument: data file(s)
        description: to be validated (required)
      - names:
          - -r
        argument: "<file>"
        description: referenced schema(s)
      - names:
          - -m
        argument: "<file>"
        description: meta schema(s)
      - names:
          - -c
        argument: "<file>"
        description: custom keywords/formats definitions
      - names:
          - --valid
          - --invalid
        argument: ""
        description: data file(s) must be valid/invalid for this command to succeed
      - names:
          - --spec
        argument: "{draft7|draft2019}"
        description: JSON schema specification to use
      - names:
          - --errors
        argument: "{js|json|line|text}"
        description: js JavaScript object (default) json JSON format line JSON single line text text message
      - names:
          - --strict
        argument: "false"
        description: disable strict mode
      - names:
          - --strict-tuples
        argument: "{true|false|log}"
        description: unconstrained tuples
      - names:
          - --strict-types
        argument: "{true|false|log}"
        description: union or unspecified types
      - names:
          - --allow-matching-properties
        argument: ""
        description: allow "properties" matching patterns in "patternProperties"
      - names:
          - --allow-union-types
        argument: ""
        description: allow union type keyword
      - names:
          - --validate-formats
        argument: "false"
        description: disable format validation
      - names:
          - --data
        argument: ""
        description: use $data references
      - names:
          - --all-errors
        argument: ""
        description: collect all errors
      - names:
          - --verbose
        argument: ""
        description: include schema and data in errors
      - names:
          - --comment
        argument: ""
        description: log schema "$comment"s
      - names:
          - --inline-refs
        argument: "{true|false|<number>}"
        description: referenced schemas compilation mode
      - names:
          - --remove-additional
        argument: "{true|false|failing}"
        description: remove additional properties
      - names:
          - --use-defaults
        argument: ""
        description: replace missing properties/items with the values from default keyword
      - names:
          - --coerce-types
        argument: ""
        description: change type of data to match type keyword
      - names:
          - --multiple-of-precision
        argument: "N"
        description: pass integer number
      - names:
          - --messages
        argument: "false"
        description: do not include text messages in errors
      - names:
          - --loop-required
        argument: "N"
        description: max size of "required to compile to expression (rather than to loop)
      - names:
          - --loop-enum
        argument: "N"
        description: max size of "enum" to compile to expression (rather than to loop)
      - names:
          - --own-properties
        argument: ""
        description: only validate own properties (not relevant for JSON, but can have effect for JavaScript objects)
      - names:
          - --code.es5
        argument: ""
        description: generate ES5 code
      - names:
          - --code.lines
        argument: ""
        description: generate multi-line code
      - names:
          - --code.optimize
        argument: "{false|<number>}"
        description: code optimization
  - name: help
    description: Show help
    options: []
    subcommands:
      - name: validate
        description: ""
        options: []
      - name: compile
        description: ""
        options: []
      - name: migrate
        description: ""
        options: []
      - name: test
        description: ""
        options: []
version: '5.0.0'

