name: ansible-pull
description: pulls playbooks from a VCS repo and executes them for the local host
usage: |
  usage: ansible-pull [-h] [--version] [-v] [--private-key PRIVATE_KEY_FILE] [-u REMOTE_USER] [-c CONNECTION] [-T TIMEOUT]
                    [--ssh-common-args SSH_COMMON_ARGS] [--sftp-extra-args SFTP_EXTRA_ARGS] [--scp-extra-args SCP_EXTRA_ARGS]
                    [--ssh-extra-args SSH_EXTRA_ARGS] [-k | --connection-password-file CONNECTION_PASSWORD_FILE] [--vault-id VAULT_IDS]
                    [--ask-vault-password | --vault-password-file VAULT_PASSWORD_FILES] [-e EXTRA_VARS] [-t TAGS] [--skip-tags SKIP_TAGS]
                    [-i INVENTORY] [--list-hosts] [-l SUBSET] [-M MODULE_PATH] [-K | --become-password-file BECOME_PASSWORD_FILE] [--purge]
                    [-o] [-s SLEEP] [-f] [-d DEST] [-U URL] [--full] [-C CHECKOUT] [--accept-host-key] [-m MODULE_NAME] [--verify-commit]
                    [--clean] [--track-subs] [--check] [--diff]
                    [playbook.yml ...]
positionalArguments:
  - name: playbook.yml
    description: Playbook(s)
options:
  - names:
      - --accept-host-key
    argument: ""
    description: adds the hostkey for the repo url if not already added
  - names:
      - --ask-vault-password
      - --ask-vault-pass
    argument: ""
    description: ask for vault password
  - names:
      - --become-password-file
      - --become-pass-file
    argument: BECOME_PASSWORD_FILE
    description: Become password file
  - names:
      - --check
    argument: ""
    description: don't make any changes; instead, try to predict some of the changes that may occur
  - names:
      - --clean
    argument: ""
    description: modified files in the working repository will be discarded
  - names:
      - --connection-password-file
      - --conn-pass-file
    argument: CONNECTION_PASSWORD_FILE
    description: Connection password file
  - names:
      - --diff
    argument: ""
    description: when changing (small) files and templates, show the differences in those files; works great with --check
  - names:
      - --full
    argument: ""
    description: Do a full clone, instead of a shallow one.
  - names:
      - --list-hosts
    argument: ""
    description: outputs a list of matching hosts; does not execute anything else
  - names:
      - --purge
    argument: ""
    description: purge checkout after playbook run
  - names:
      - --skip-tags
    argument: SKIP_TAGS
    description: only run plays and tasks whose tags do not match these values
  - names:
      - --track-subs
    argument: ""
    description: submodules will track the latest changes. This is equivalent to specifying the --remote flag to git submodule update
  - names:
      - --vault-id
    argument: VAULT_IDS
    description: the vault identity to use
  - names:
      - --vault-password-file
      - --vault-pass-file
    argument: VAULT_PASSWORD_FILES
    description: vault password file
  - names:
      - --verify-commit
    argument: ""
    description: verify GPG signature of checked out commit, if it fails abort running the playbook. This needs the corresponding VCS module to support such an operation
  - names:
      - --version
    argument: ""
    description: show program's version number, config file location, configured module search path, module location, executable location and exit
  - names:
      - -C
      - --checkout
    argument: CHECKOUT
    description: branch/tag/commit to checkout. Defaults to behavior of repository module.
  - names:
      - -K
      - --ask-become-pass
    argument: ""
    description: ask for privilege escalation password
  - names:
      - -M
      - --module-path
    argument: MODULE_PATH
    description: prepend colon-separated path(s) to module library (default=~/.ansible/plugins/modules:/usr/share/ansible/plugins/modules)
  - names:
      - -U
      - --url
    argument: URL
    description: URL of the playbook repository
  - names:
      - -d
      - --directory
    argument: DEST
    description: absolute path of repository checkout directory (relative paths are not supported)
  - names:
      - -e
      - --extra-vars
    argument: EXTRA_VARS
    description: set additional variables as key=value or YAML/JSON, if filename prepend with @
  - names:
      - -f
      - --force
    argument: ""
    description: run the playbook even if the repository could not be updated
  - names:
      - -h
      - --help
    argument: ""
    description: show this help message and exit
  - names:
      - -i
      - --inventory
      - --inventory-file
    argument: INVENTORY
    description: specify inventory host path or comma separated host list. --inventory-file is deprecated
  - names:
      - -k
      - --ask-pass
    argument: ""
    description: ask for connection password
  - names:
      - -l
      - --limit
    argument: SUBSET
    description: further limit selected hosts to an additional pattern
  - names:
      - -m
      - --module-name
    argument: MODULE_NAME
    description: Repository module name, which ansible will use to check out the repo. Choices are ('git', 'subversion', 'hg', 'bzr'). Default is git.
  - names:
      - -o
      - --only-if-changed
    argument: ""
    description: only run the playbook if the repository has been updated
  - names:
      - -s
      - --sleep
    argument: SLEEP
    description: sleep for random interval (between 0 and n number of seconds) before starting. This is a useful way to disperse git requests
  - names:
      - -t
      - --tags
    argument: TAGS
    description: only run plays and tasks tagged with these values
  - names:
      - -v
      - --verbose
    argument: ""
    description: Causes Ansible to print more debug messages. Adding multiple -v will increase the verbosity, the builtin plugins currently evaluate up to -vvvvvv. A reasonable level to start is -vvv, connection debugging might require -vvvv.
  - names:
      - --private-key
      - --key-file
    argument: PRIVATE_KEY_FILE
    description: use this file to authenticate the connection
  - names:
      - --scp-extra-args
    argument: SCP_EXTRA_ARGS
    description: specify extra arguments to pass to scp only (e.g. -l)
  - names:
      - --sftp-extra-args
    argument: SFTP_EXTRA_ARGS
    description: specify extra arguments to pass to sftp only (e.g. -f, -l)
  - names:
      - --ssh-common-args
    argument: SSH_COMMON_ARGS
    description: specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
  - names:
      - --ssh-extra-args
    argument: SSH_EXTRA_ARGS
    description: specify extra arguments to pass to ssh only (e.g. -R)
  - names:
      - -T
      - --timeout
    argument: TIMEOUT
    description: override the connection timeout in seconds (default=10)
  - names:
      - -c
      - --connection
    argument: CONNECTION
    description: connection type to use (default=smart)
  - names:
      - -u
      - --user
    argument: REMOTE_USER
    description: connect as this user (default=None)
version: ansible-pull [core 2.13.0]
tldr: |
  > Pull ansible playbooks from a VCS repo and executes them for the local host.
  > More information: <https://docs.ansible.com/ansible/latest/cli/ansible-pull.html>.

  - Pull a playbook from a VCS and execute a default local.yml playbook:

  `ansible-pull -U {{repository_url}}`

  - Pull a playbook from a VCS and execute a specific playbook:

  `ansible-pull -U {{repository_url}} {{playbook}}`

  - Pull a playbook from a VCS at a specific branch and execute a specific playbook:

  `ansible-pull -U {{repository_url}} -C {{branch}} {{playbook}}`

  - Pull a playbook from a VCS, specify hosts file and execute a specific playbook:

  `ansible-pull -U {{repository_url}} -i {{hosts_file}} {{playbook}}`
