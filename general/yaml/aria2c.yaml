name: aria2c
description: The ultra fast download utility
usage: aria2c [<OPTIONS>] [<URI>|<MAGNET>|<TORRENT_FILE>|<METALINK_FILE>] ...
options:
  - names:
      - -d
      - --dir
    argument: <DIR>
    description: The directory to store the downloaded file.
  - names:
      - -i
      - --input-file
    argument: <FILE>
    description: Downloads the URIs listed in FILE. You can specify multiple sources for a single entity by putting multiple URIs on a single line separated by the TAB character. Additionally, options can be specified after each URI line. Option lines must start with one or more white space characters (SPACE or TAB) and must only contain one option per line. Input files can use gzip compression. When FILE is specified as -, aria2 will read the input from stdin. See the Input File subsection for details. See also the --deferred-input option. See also the --save-session option.
  - names:
      - -l
      - --log
    argument: <LOG>
    description: The file name of the log file. If - is specified, log is written to stdout. If empty string("") is specified, or this option is omitted, no log is written to disk at all.
  - names:
      - -j
      - --max-concurrent-downloads
    argument: <N>
    description: 'Set the maximum number of parallel downloads for every queue item. See also the --split option. Default: 5'
  - names:
      - -V
      - --check-integrity
    argument: '[true|false]'
    description: 'Check file integrity by validating piece hashes or a hash of entire file. This option has effect only in BitTorrent, Metalink downloads with checksums or HTTP(S)/FTP downloads with --checksum option. If piece hashes are provided, this option can detect damaged portions of a file and re-download them. If a hash of entire file is provided, hash check is only done when file has been already download. This is determined by file length. If hash check fails, file is re-downloaded from scratch. If both piece hashes and a hash of entire file are provided, only piece hashes are used. Default: false'
  - names:
      - -c
      - --continue
    argument: '[true|false]'
    description: Continue downloading a partially downloaded file. Use this option to resume a download started by a web browser or another program which downloads files sequentially from the beginning. Currently this option is only applicable to HTTP(S)/FTP downloads.
  - names:
      - -h
      - --help
    argument: '[=<TAG>|<KEYWORD>]'
    description: 'The help messages are classified with tags. A tag starts with #. For example, type --help=#http to get the usage for the options tagged with #http. If non-tag word is given, print the usage for the options whose name includes that word. Available Values: #basic, #advanced, #http, #https, #ftp, #metalink, #bittorrent, #cookie, #hook, #file, #rpc, #checksum, #experimental, #deprecated, #help, #all Default: #basic'
  - names:
      - --all-proxy
    argument: <PROXY>
    description: Use a proxy server for all protocols. To override a previously defined proxy, use "". You also can override this setting and specify a proxy server for a particular protocol using --http-proxy, --https-proxy and --ftp-proxy options. This affects all downloads. The format of PROXY is [http://][USER:PASSWORD@]HOST[:PORT]. See also ENVIRONMENT section.
  - names:
      - --all-proxy-passwd
    argument: <PASSWD>
    description: Set password for --all-proxy option.
  - names:
      - --all-proxy-user
    argument: <USER>
    description: Set user for --all-proxy option.
  - names:
      - --checksum
    argument: <TYPE>=<DIGEST>
    description: 'Set checksum. TYPE is hash type. The supported hash type is listed in Hash Algorithms in aria2c -v. DIGEST is hex digest. For example, setting sha-1 digest looks like this: sha-1=0192ba11326fe2298c8cb4de616f4d4140213838 This option applies only to HTTP(S)/FTP downloads.'
  - names:
      - --connect-timeout
    argument: <SEC>
    description: 'Set the connect timeout in seconds to establish connection to HTTP/FTP/proxy server. After the connection is established, this option makes no effect and --timeout option is used instead. Default: 60'
  - names:
      - --dry-run
    argument: '[true|false]'
    description: 'If true is given, aria2 just checks whether the remote file is available and doesn''t download data. This option has effect on HTTP/FTP download. BitTorrent downloads are canceled if true is specified. Default: false'
  - names:
      - --lowest-speed-limit
    argument: <SPEED>
    description: 'Close connection if download speed is lower than or equal to this value(bytes per sec). 0 means aria2 does not have a lowest speed limit. You can append K or M (1K = 1024, 1M = 1024K). This option does not affect BitTorrent downloads. Default: 0'
  - names:
      - -x
      - --max-connection-per-server
    argument: <NUM>
    description: 'The maximum number of connections to one server for each download. Default: 1'
  - names:
      - --max-file-not-found
    argument: <NUM>
    description: If aria2 receives "file not found" status from the remote HTTP/FTP servers NUM times without getting a single byte, then force the download to fail. Specify 0 to disable this option. This options is effective only when using HTTP/FTP servers. The number of retry attempt is counted toward --max-tries, so it should be configured too.
  - names:
      - -m
      - --max-tries
    argument: <N>
    description: 'Set number of tries. 0 means unlimited. See also --retry-wait. Default: 5'
  - names:
      - -k
      - --min-split-size
    argument: <SIZE>
    description: 'aria2 does not split less than 2*SIZE byte range. For example, let''s consider downloading 20MiB file. If SIZE is 10M, aria2 can split file into 2 range [0-10MiB) and [10MiB-20MiB) and download it using 2 sources(if --split >= 2, of course). If SIZE is 15M, since 2*15M > 20MiB, aria2 does not split file and download it using 1 source. You can append K or M (1K = 1024, 1M = 1024K). Possible Values: 1M -1024M Default: 20M'
  - names:
      - --netrc-path
    argument: <FILE>
    description: 'Specify the path to the netrc file. Default: $(HOME)/.netrc'
  - names:
      - -n
      - --no-netrc
    argument: '[true|false]'
    description: Disables netrc support. netrc support is enabled by default.
  - names:
      - --no-proxy
    argument: <DOMAINS>
    description: Specify a comma separated list of host names, domains and network addresses with or without a subnet mask where no proxy should be used.
  - names:
      - -o
      - --out
    argument: <FILE>
    description: The file name of the downloaded file. It is always relative to the directory given in --dir option. When the --force-sequential option is used, this option is ignored.
  - names:
      - --proxy-method
    argument: <METHOD>
    description: 'Set the method to use in proxy request. METHOD is either get or tunnel. HTTPS downloads always use tunnel regardless of this option. Default: get'
  - names:
      - -R
      - --remote-time
    argument: '[true|false]'
    description: 'Retrieve timestamp of the remote file from the remote HTTP/FTP server and if it is available, apply it to the local file. Default: false'
  - names:
      - --reuse-uri
    argument: '[true|false]'
    description: 'Reuse already used URIs if no unused URIs are left. Default: true'
  - names:
      - --retry-wait
    argument: <SEC>
    description: 'Set the seconds to wait between retries. When SEC > 0, aria2 will retry downloads when the HTTP server returns a 503 response. Default: 0'
  - names:
      - --server-stat-of
    argument: <FILE>
    description: Specify the file name to which performance profile of the servers is saved. You can load saved data using --server-stat-if option. See Server Performance Profile subsection below for file format.
  - names:
      - --server-stat-if
    argument: <FILE>
    description: Specify the file name to load performance profile of the servers. The loaded data will be used in some URI selector such as feedback. See also --uri-selector option. See Server Performance Profile subsection below for file format.
  - names:
      - --server-stat-timeout
    argument: <SEC>
    description: 'Specifies timeout in seconds to invalidate performance profile of the servers since the last contact to them. Default: 86400 (24hours)'
  - names:
      - -s
      - --split
    argument: <N>
    description: 'Download a file using N connections. If more than N URIs are given, first N URIs are used and remaining URIs are used for backup. If less than N URIs are given, those URIs are used more than once so that N connections total are made simultaneously. The number of connections to the same host is restricted by the --max-connection-per-server option. See also the --min-split-size option. Default: 5'
  - names:
      - --stream-piece-selector
    argument: <SELECTOR>
    description: 'Specify piece selection algorithm used in HTTP/FTP download. Piece means fixed length segment which is downloaded in parallel in segmented download. If default is given, aria2 selects piece so that it reduces the number of establishing connection. This is reasonable default behavior because establishing connection is an expensive operation. If inorder is given, aria2 selects piece which has minimum index. Index=0 means first of the file. This will be useful to view movie while downloading it. --enable-http-pipelining option may be useful to reduce re-connection overhead. Please note that aria2 honors --min-split-size option, so it will be necessary to specify a reasonable value to --min-split-size option. If random is given, aria2 selects piece randomly. Like inorder, --min-split-size option is honored. If geom is given, at the beginning aria2 selects piece which has minimum index like inorder, but it exponentially increasingly keeps space from previously selected piece. This will reduce the number of establishing connection and at the same time it will download the beginning part of the file first. This will be useful to view movie while downloading it. Default: default'
  - names:
      - -t
      - --timeout
    argument: <SEC>
    description: 'Set timeout in seconds. Default: 60'
  - names:
      - --uri-selector
    argument: <SELECTOR>
    description: 'Specify URI selection algorithm. The possible values are inorder, feedback and adaptive. If inorder is given, URI is tried in the order appeared in the URI list. If feedback is given, aria2 uses download speed observed in the previous downloads and choose fastest server in the URI list. This also effectively skips dead mirrors. The observed download speed is a part of performance profile of servers mentioned in --server-stat-of and --server-stat-if options. If adaptive is given, selects one of the best mirrors for the first and reserved connections. For supplementary ones, it returns mirrors which has not been tested yet, and if each of them has already been tested, returns mirrors which has to be tested again. Otherwise, it doesn''t select anymore mirrors. Like feedback, it uses a performance profile of servers. Default: feedback'
  - names:
      - --ca-certificate
    argument: <FILE>
    description: Use the certificate authorities in FILE to verify the peers. The certificate file must be in PEM format and can contain multiple CA certificates. Use --check-certificate option to enable verification.
  - names:
      - --certificate
    argument: <FILE>
    description: Use the client certificate in FILE. The certificate must be either in PKCS12 (.p12, .pfx) or in PEM format.
  - names:
      - --check-certificate
    argument: '[true|false]'
    description: 'Verify the peer using certificates specified in --ca-certificate option. Default: true'
  - names:
      - --http-accept-gzip
    argument: '[true|false]'
    description: 'Send Accept: deflate, gzip request header and inflate response if remote server responds with Content-Encoding: gzip or Content-Encoding: deflate. Default: false'
  - names:
      - --http-auth-challenge
    argument: '[true|false]'
    description: 'Send HTTP authorization header only when it is requested by the server. If false is set, then authorization header is always sent to the server. There is an exception: if user name and password are embedded in URI, authorization header is always sent to the server regardless of this option. Default: false'
  - names:
      - --http-no-cache
    argument: '[true|false]'
    description: 'Send Cache-Control: no-cache and Pragma: no-cache header to avoid cached content. If false is given, these headers are not sent and you can add Cache-Control header with a directive you like using --header option. Default: false'
  - names:
      - --http-user
    argument: <USER>
    description: Set HTTP user. This affects all URIs.
  - names:
      - --http-passwd
    argument: <PASSWD>
    description: Set HTTP password. This affects all URIs.
  - names:
      - --http-proxy
    argument: <PROXY>
    description: Use a proxy server for HTTP. To override a previously defined proxy, use "". See also the --all-proxy option. This affects all http downloads. The format of PROXY is [http://][USER:PASSWORD@]HOST[:PORT]
  - names:
      - --http-proxy-passwd
    argument: <PASSWD>
    description: Set password for --http-proxy.
  - names:
      - --http-proxy-user
    argument: <USER>
    description: Set user for --http-proxy.
  - names:
      - --https-proxy
    argument: <PROXY>
    description: Use a proxy server for HTTPS. To override a previously defined proxy, use "". See also the --all-proxy option. This affects all https download. The format of PROXY is [http://][USER:PASSWORD@]HOST[:PORT]
  - names:
      - --https-proxy-passwd
    argument: <PASSWD>
    description: Set password for --https-proxy.
  - names:
      - --https-proxy-user
    argument: <USER>
    description: Set user for --https-proxy.
  - names:
      - --private-key
    argument: <FILE>
    description: Use the private key in FILE. The private key must be decrypted and in PEM format. The behavior when encrypted one is given is undefined. See also --certificate option.
  - names:
      - --referer
    argument: <REFERER>
    description: Set an http referrer (Referer). This affects all http/https downloads. If * is given, the download URI is also used as the referrer. This may be useful when used together with the --parameterized-uri option.
  - names:
      - --enable-http-keep-alive
    argument: '[true|false]'
    description: 'Enable HTTP/1.1 persistent connection. Default: true'
  - names:
      - --enable-http-pipelining
    argument: '[true|false]'
    description: 'Enable HTTP/1.1 pipelining. Default: false'
  - names:
      - --header
    argument: <HEADER>
    description: 'Append HEADER to HTTP request header. You can use this option repeatedly to specify more than one header:'
  - names:
      - --load-cookies
    argument: <FILE>
    description: Load Cookies from FILE using the Firefox3 format (SQLite3), Chromium/Google Chrome (SQLite3) and the Mozilla/Firefox(1.x/2.x)/Netscape format.
  - names:
      - --save-cookies
    argument: <FILE>
    description: 'Save Cookies to FILE in Mozilla/Firefox(1.x/2.x)/ Netscape format. If FILE already exists, it is overwritten. Session Cookies are also saved and their expiry values are treated as 0. Possible Values: /path/to/file'
  - names:
      - --use-head
    argument: '[true|false]'
    description: 'Use HEAD method for the first request to the HTTP server. Default: false'
  - names:
      - -U
      - --user-agent
    argument: <USER_AGENT>
    description: 'Set user agent for HTTP(S) downloads. Default: aria2/$VERSION, $VERSION is replaced by package version.'
  - names:
      - --ftp-user
    argument: <USER>
    description: 'Set FTP user. This affects all URIs. Default: anonymous'
  - names:
      - --ftp-passwd
    argument: <PASSWD>
    description: 'Set FTP password. This affects all URIs. If user name is embedded but password is missing in URI, aria2 tries to resolve password using .netrc. If password is found in .netrc, then use it as password. If not, use the password specified in this option. Default: ARIA2USER@'
  - names:
      - -p
      - --ftp-pasv
    argument: '[true|false]'
    description: 'Use the passive mode in FTP. If false is given, the active mode will be used. Default: true'
  - names:
      - --ftp-proxy
    argument: <PROXY>
    description: Use a proxy server for FTP. To override a previously defined proxy, use "". See also the --all-proxy option. This affects all ftp downloads. The format of PROXY is [http://][USER:PASSWORD@]HOST[:PORT]
  - names:
      - --ftp-proxy-passwd
    argument: <PASSWD>
    description: Set password for --ftp-proxy option.
  - names:
      - --ftp-proxy-user
    argument: <USER>
    description: Set user for --ftp-proxy option.
  - names:
      - --ftp-type
    argument: <TYPE>
    description: 'Set FTP transfer type. TYPE is either binary or ascii. Default: binary'
  - names:
      - --ftp-reuse-connection
    argument: '[true|false]'
    description: 'Reuse connection in FTP. Default: true'
  - names:
      - --ssh-host-key-md
    argument: <TYPE>=<DIGEST>
    description: 'Set checksum for SSH host public key. TYPE is hash type. The supported hash type is sha-1 or md5. DIGEST is hex digest. For example: sha-1=b030503d4de4539dc7885e6f0f5e256704edf4c3. This option can be used to validate server''s public key when SFTP is used. If this option is not set, which is default, no validation takes place.'
  - names:
      - --select-file
    argument: <INDEX>...
    description: 'Set file to download by specifying its index. You can find the file index using the --show-files option. Multiple indexes can be specified by using ,, for example: 3,6. You can also use - to specify a range: 1-5. , and - can be used together: 1-5,8,9. When used with the -M option, index may vary depending on the query (see --metalink-* options).'
  - names:
      - -S
      - --show-files
    argument: '[true|false]'
    description: Print file listing of ".torrent", ".meta4" and ".metalink" file and exit. In case of ".torrent" file, additional information (infohash, piece length, etc) is also printed.
  - names:
      - --bt-detach-seed-only
    argument: '[true|false]'
    description: 'Exclude seed only downloads when counting concurrent active downloads (See -j option). This means that if -j3 is given and this option is turned on and 3 downloads are active and one of those enters seed mode, then it is excluded from active download count (thus it becomes 2), and the next download waiting in queue gets started. But be aware that seeding item is still recognized as active download in RPC method. Default: false'
  - names:
      - --bt-enable-hook-after-hash-check
    argument: '[true|false]'
    description: 'Allow hook command invocation after hash check (see -V option) in BitTorrent download. By default, when hash check succeeds, the command given by --on-bt-download-complete is executed. To disable this action, give false to this option. Default: true'
  - names:
      - --bt-enable-lpd
    argument: '[true|false]'
    description: 'Enable Local Peer Discovery. If a private flag is set in a torrent, aria2 doesn''t use this feature for that download even if true is given. Default: false'
  - names:
      - --bt-exclude-tracker
    argument: <URI>[,...]
    description: Comma separated list of BitTorrent tracker's announce URI to remove. You can use special value * which matches all URIs, thus removes all announce URIs. When specifying * in shell command-line, don't forget to escape or quote it. See also --bt-tracker option.
  - names:
      - --bt-external-ip
    argument: <IPADDRESS>
    description: Specify the external IP address to use in BitTorrent download and DHT. It may be sent to BitTorrent tracker. For DHT, this option should be set to report that local node is downloading a particular torrent. This is critical to use DHT in a private network. Although this function is named external, it can accept any kind of IP addresses.
  - names:
      - --bt-force-encryption
    argument: '[true|false]'
    description: 'Requires BitTorrent message payload encryption with arc4. This is a shorthand of --bt-require-crypto --bt-min-crypto-level=arc4. This option does not change the option value of those options. If true is given, deny legacy BitTorrent handshake and only use Obfuscation handshake and always encrypt message payload. Default: false'
  - names:
      - --bt-hash-check-seed
    argument: '[true|false]'
    description: 'If true is given, after hash check using --check-integrity option and file is complete, continue to seed file. If you want to check file and download it only when it is damaged or incomplete, set this option to false. This option has effect only on BitTorrent download. Default: true'
  - names:
      - --bt-load-saved-metadata
    argument: '[true|false]'
    description: 'Before getting torrent metadata from DHT when downloading with magnet link, first try to read file saved by --bt-save-metadata option. If it is successful, then skip downloading metadata from DHT. Default: false'
  - names:
      - --bt-lpd-interface
    argument: <INTERFACE>
    description: 'Use given interface for Local Peer Discovery. If this option is not specified, the default interface is chosen. You can specify interface name and IP address. Possible Values: interface, IP address'
  - names:
      - --bt-max-open-files
    argument: <NUM>
    description: 'Specify maximum number of files to open in multi-file BitTorrent/Metalink download globally. Default: 100'
  - names:
      - --bt-max-peers
    argument: <NUM>
    description: 'Specify the maximum number of peers per torrent. 0 means unlimited. See also --bt-request-peer-speed-limit option. Default: 55'
  - names:
      - --bt-metadata-only
    argument: '[true|false]'
    description: 'Download meta data only. The file(s) described in meta data will not be downloaded. This option has effect only when BitTorrent Magnet URI is used. See also --bt-save-metadata option. Default: false'
  - names:
      - --bt-min-crypto-level
    argument: plain|arc4
    description: 'Set minimum level of encryption method. If several encryption methods are provided by a peer, aria2 chooses the lowest one which satisfies the given level. Default: plain'
  - names:
      - --bt-prioritize-piece
    argument: head[=<SIZE>],tail[=<SIZE>]
    description: 'Try to download first and last pieces of each file first. This is useful for previewing files. The argument can contain 2 keywords: head and tail. To include both keywords, they must be separated by comma. These keywords can take one parameter, SIZE. For example, if head=<SIZE> is specified, pieces in the range of first SIZE bytes of each file get higher priority. tail=<SIZE> means the range of last SIZE bytes of each file. SIZE can include K or M (1K = 1024, 1M = 1024K). If SIZE is omitted, SIZE=1M is used.'
  - names:
      - --bt-remove-unselected-file
    argument: '[true|false]'
    description: 'Removes the unselected files when download is completed in BitTorrent. To select files, use --select-file option. If it is not used, all files are assumed to be selected. Please use this option with care because it will actually remove files from your disk. Default: false'
  - names:
      - --bt-require-crypto
    argument: '[true|false]'
    description: 'If true is given, aria2 doesn''t accept and establish connection with legacy BitTorrent handshake(\19BitTorrent protocol). Thus aria2 always uses Obfuscation handshake. Default: false'
  - names:
      - --bt-request-peer-speed-limit
    argument: <SPEED>
    description: 'If the whole download speed of every torrent is lower than SPEED, aria2 temporarily increases the number of peers to try for more download speed. Configuring this option with your preferred download speed can increase your download speed in some cases. You can append K or M (1K = 1024, 1M = 1024K). Default: 50K'
  - names:
      - --bt-save-metadata
    argument: '[true|false]'
    description: 'Save meta data as ".torrent" file. This option has effect only when BitTorrent Magnet URI is used. The file name is hex encoded info hash with suffix ".torrent". The directory to be saved is the same directory where download file is saved. If the same file already exists, meta data is not saved. See also --bt-metadata-only option. Default: false'
  - names:
      - --bt-seed-unverified
    argument: '[true|false]'
    description: 'Seed previously downloaded files without verifying piece hashes. Default: false'
  - names:
      - --bt-stop-timeout
    argument: <SEC>
    description: 'Stop BitTorrent download if download speed is 0 in consecutive SEC seconds. If 0 is given, this feature is disabled. Default: 0'
  - names:
      - --bt-tracker
    argument: <URI>[,...]
    description: Comma separated list of additional BitTorrent tracker's announce URI. These URIs are not affected by --bt-exclude-tracker option because they are added after URIs in --bt-exclude-tracker option are removed.
  - names:
      - --bt-tracker-connect-timeout
    argument: <SEC>
    description: 'Set the connect timeout in seconds to establish connection to tracker. After the connection is established, this option makes no effect and --bt-tracker-timeout option is used instead. Default: 60'
  - names:
      - --bt-tracker-interval
    argument: <SEC>
    description: 'Set the interval in seconds between tracker requests. This completely overrides interval value and aria2 just uses this value and ignores the min interval and interval value in the response of tracker. If 0 is set, aria2 determines interval based on the response of tracker and the download progress. Default: 0'
  - names:
      - --bt-tracker-timeout
    argument: <SEC>
    description: 'Set timeout in seconds. Default: 60'
  - names:
      - --dht-entry-point
    argument: <HOST>:<PORT>
    description: Set host and port as an entry point to IPv4 DHT network.
  - names:
      - --dht-entry-point6
    argument: <HOST>:<PORT>
    description: Set host and port as an entry point to IPv6 DHT network.
  - names:
      - --dht-file-path
    argument: <PATH>
    description: 'Change the IPv4 DHT routing table file to PATH. Default: $HOME/.aria2/dht.dat if present, otherwise $XDG_CACHE_HOME/aria2/dht.dat.'
  - names:
      - --dht-file-path6
    argument: <PATH>
    description: 'Change the IPv6 DHT routing table file to PATH. Default: $HOME/.aria2/dht6.dat if present, otherwise $XDG_CACHE_HOME/aria2/dht6.dat.'
  - names:
      - --dht-listen-addr6
    argument: <ADDR>
    description: Specify address to bind socket for IPv6 DHT. It should be a global unicast IPv6 address of the host.
  - names:
      - --dht-listen-port
    argument: <PORT>...
    description: 'Set UDP listening port used by DHT(IPv4, IPv6) and UDP tracker. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together. Default: 6881-6999'
  - names:
      - --dht-message-timeout
    argument: <SEC>
    description: 'Set timeout in seconds. Default: 10'
  - names:
      - --enable-dht
    argument: '[true|false]'
    description: 'Enable IPv4 DHT functionality. It also enables UDP tracker support. If a private flag is set in a torrent, aria2 doesn''t use DHT for that download even if true is given. Default: true'
  - names:
      - --enable-dht6
    argument: '[true|false]'
    description: Enable IPv6 DHT functionality. If a private flag is set in a torrent, aria2 doesn't use DHT for that download even if true is given. Use --dht-listen-port option to specify port number to listen on. See also --dht-listen-addr6 option.
  - names:
      - --enable-peer-exchange
    argument: '[true|false]'
    description: 'Enable Peer Exchange extension. If a private flag is set in a torrent, this feature is disabled for that download even if true is given. Default: true'
  - names:
      - --follow-torrent
    argument: true|false|mem
    description: 'If true or mem is specified, when a file whose suffix is .torrent or content type is application/x-bittorrent is downloaded, aria2 parses it as a torrent file and downloads files mentioned in it. If mem is specified, a torrent file is not written to the disk, but is just kept in memory. If false is specified, the .torrent file is downloaded to the disk, but is not parsed as a torrent and its contents are not downloaded. Default: true'
  - names:
      - -O
      - --index-out
    argument: <INDEX>=<PATH>
    description: Set file path for file with index=INDEX. You can find the file index using the --show-files option. PATH is a relative path to the path specified in --dir option. You can use this option multiple times. Using this option, you can specify the output file names of BitTorrent downloads.
  - names:
      - --listen-port
    argument: <PORT>...
    description: 'Set TCP port number for BitTorrent downloads. Multiple ports can be specified by using ,, for example: 6881,6885. You can also use - to specify a range: 6881-6999. , and - can be used together: 6881-6889,6999. Default: 6881-6999'
  - names:
      - --max-overall-upload-limit
    argument: <SPEED>
    description: 'Set max overall upload speed in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the upload speed per torrent, use --max-upload-limit option. Default: 0'
  - names:
      - -u
      - --max-upload-limit
    argument: <SPEED>
    description: 'Set max upload speed per each torrent in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the overall upload speed, use --max-overall-upload-limit option. Default: 0'
  - names:
      - --peer-id-prefix
    argument: <PEER_ID_PREFIX>
    description: Specify the prefix of peer ID. The peer ID in BitTorrent is 20 byte length. If more than 20 bytes are specified, only first 20 bytes are used. If less than 20 bytes are specified, random byte data are added to make its length 20 bytes.
  - names:
      - --peer-agent
    argument: <PEER_AGENT>
    description: Specify the string used during the bitorrent extended handshake for the peer's client version.
  - names:
      - --seed-ratio
    argument: <RATIO>
    description: 'Specify share ratio. Seed completed torrents until share ratio reaches RATIO. You are strongly encouraged to specify equals or more than 1.0 here. Specify 0.0 if you intend to do seeding regardless of share ratio. If --seed-time option is specified along with this option, seeding ends when at least one of the conditions is satisfied. Default: 1.0'
  - names:
      - --seed-time
    argument: <MINUTES>
    description: Specify seeding time in (fractional) minutes. Also see the --seed-ratio option.
  - names:
      - -T
      - --torrent-file
    argument: <TORRENT_FILE>
    description: The path to the ".torrent" file. You are not required to use this option because you can specify ".torrent" files without --torrent-file.
  - names:
      - --follow-metalink
    argument: true|false|mem
    description: 'If true or mem is specified, when a file whose suffix is .meta4 or .metalink or content type of application/metalink4+xml or application/metalink+xml is downloaded, aria2 parses it as a metalink file and downloads files mentioned in it. If mem is specified, a metalink file is not written to the disk, but is just kept in memory. If false is specified, the .metalink file is downloaded to the disk, but is not parsed as a metalink file and its contents are not downloaded. Default: true'
  - names:
      - --metalink-base-uri
    argument: <URI>
    description: Specify base URI to resolve relative URI in metalink:url and metalink:metaurl element in a metalink file stored in local disk. If URI points to a directory, URI must end with /.
  - names:
      - -M
      - --metalink-file
    argument: <METALINK_FILE>
    description: The file path to ".meta4" and ".metalink" file. Reads input from stdin when - is specified. You are not required to use this option because you can specify ".metalink" files without --metalink-file.
  - names:
      - --metalink-language
    argument: <LANGUAGE>
    description: The language of the file to download.
  - names:
      - --metalink-location
    argument: <LOCATION>[,...]
    description: The location of the preferred server. A comma-delimited list of locations is acceptable, for example, jp,us.
  - names:
      - --metalink-os
    argument: <OS>
    description: The operating system of the file to download.
  - names:
      - --metalink-version
    argument: <VERSION>
    description: The version of the file to download.
  - names:
      - --metalink-preferred-protocol
    argument: <PROTO>
    description: 'Specify preferred protocol. The possible values are http, https, ftp and none. Specify none to disable this feature. Default: none'
  - names:
      - --metalink-enable-unique-protocol
    argument: '[true|false]'
    description: 'If true is given and several protocols are available for a mirror in a metalink file, aria2 uses one of them. Use --metalink-preferred-protocol option to specify the preference of protocol. Default: true'
  - names:
      - --enable-rpc
    argument: '[true|false]'
    description: 'Enable JSON-RPC/XML-RPC server. It is strongly recommended to set secret authorization token using --rpc-secret option. See also --rpc-listen-port option. Default: false'
  - names:
      - --pause
    argument: '[true|false]'
    description: 'Pause download after added. This option is effective only when --enable-rpc=true is given. Default: false'
  - names:
      - --pause-metadata
    argument: '[true|false]'
    description: 'Pause downloads created as a result of metadata download. There are 3 types of metadata downloads in aria2: (1) downloading .torrent file. (2) downloading torrent metadata using magnet link. (3) downloading metalink file. These metadata downloads will generate downloads using their metadata. This option pauses these subsequent downloads. This option is effective only when --enable-rpc=true is given. Default: false'
  - names:
      - --rpc-allow-origin-all
    argument: '[true|false]'
    description: 'Add Access-Control-Allow-Origin header field with value * to the RPC response. Default: false'
  - names:
      - --rpc-certificate
    argument: <FILE>
    description: Use the certificate in FILE for RPC server. The certificate must be either in PKCS12 (.p12, .pfx) or in PEM format.
  - names:
      - --rpc-listen-all
    argument: '[true|false]'
    description: 'Listen incoming JSON-RPC/XML-RPC requests on all network interfaces. If false is given, listen only on local loopback interface. Default: false'
  - names:
      - --rpc-listen-port
    argument: <PORT>
    description: 'Specify a port number for JSON-RPC/XML-RPC server to listen to. Possible Values: 1024 -65535 Default: 6800'
  - names:
      - --rpc-max-request-size
    argument: <SIZE>
    description: 'Set max size of JSON-RPC/XML-RPC request. If aria2 detects the request is more than SIZE bytes, it drops connection. Default: 2M'
  - names:
      - --rpc-passwd
    argument: <PASSWD>
    description: Set JSON-RPC/XML-RPC password.
  - names:
      - --rpc-private-key
    argument: <FILE>
    description: Use the private key in FILE for RPC server. The private key must be decrypted and in PEM format. Use --rpc-secure option to enable encryption. See also --rpc-certificate option.
  - names:
      - --rpc-save-upload-metadata
    argument: '[true|false]'
    description: 'Save the uploaded torrent or metalink meta data in the directory specified by --dir option. The file name consists of SHA-1 hash hex string of meta data plus extension. For torrent, the extension is ''.torrent''. For metalink, it is ''.meta4''. If false is given to this option, the downloads added by aria2.addTorrent() or aria2.addMetalink() will not be saved by --save-session option. Default: true'
  - names:
      - --rpc-secret
    argument: <TOKEN>
    description: Set RPC secret authorization token. Read RPC authorization secret token to know how this option value is used.
  - names:
      - --rpc-secure
    argument: '[true|false]'
    description: RPC transport will be encrypted by SSL/TLS. The RPC clients must use https scheme to access the server. For WebSocket client, use wss scheme. Use --rpc-certificate and --rpc-private-key options to specify the server certificate and private key.
  - names:
      - --rpc-user
    argument: <USER>
    description: Set JSON-RPC/XML-RPC user.
  - names:
      - --allow-overwrite
    argument: '[true|false]'
    description: 'Restart download from scratch if the corresponding control file doesn''t exist. See also --auto-file-renaming option. Default: false'
  - names:
      - --allow-piece-length-change
    argument: '[true|false]'
    description: 'If false is given, aria2 aborts download when a piece length is different from one in a control file. If true is given, you can proceed but some download progress will be lost. Default: false'
  - names:
      - --always-resume
    argument: '[true|false]'
    description: 'Always resume download. If true is given, aria2 always tries to resume download and if resume is not possible, aborts download. If false is given, when all given URIs do not support resume or aria2 encounters N URIs which does not support resume (N is the value specified using --max-resume-failure-tries option), aria2 downloads file from scratch. See --max-resume-failure-tries option. Default: true'
  - names:
      - --async-dns
    argument: '[true|false]'
    description: 'Enable asynchronous DNS. Default: true'
  - names:
      - --async-dns-server
    argument: <IPADDRESS>[,...]
    description: Comma separated list of DNS server address used in asynchronous DNS resolver. Usually asynchronous DNS resolver reads DNS server addresses from /etc/resolv.conf. When this option is used, it uses DNS servers specified in this option instead of ones in /etc/resolv.conf. You can specify both IPv4 and IPv6 address. This option is useful when the system does not have /etc/resolv.conf and user does not have the permission to create it.
  - names:
      - --auto-file-renaming
    argument: '[true|false]'
    description: 'Rename file name if the same file already exists. This option works only in HTTP(S)/FTP download. The new file name has a dot and a number(1..9999) appended after the name, but before the file extension, if any. Default: true'
  - names:
      - --auto-save-interval
    argument: <SEC>
    description: 'Save a control file(*.aria2) every SEC seconds. If 0 is given, a control file is not saved during download. aria2 saves a control file when it stops regardless of the value. The possible values are between 0 to 600. Default: 60'
  - names:
      - --conditional-get
    argument: '[true|false]'
    description: 'Download file only when the local file is older than remote file. This function only works with HTTP(S) downloads only. It does not work if file size is specified in Metalink. It also ignores Content-Disposition header. If a control file exists, this option will be ignored. This function uses If-Modified-Since header to get only newer file conditionally. When getting modification time of local file, it uses user supplied file name (see --out option) or file name part in URI if --out is not specified. To overwrite existing file, --allow-overwrite is required. Default: false'
  - names:
      - --conf-path
    argument: <PATH>
    description: 'Change the configuration file path to PATH. Default: $HOME/.aria2/aria2.conf if present, otherwise $XDG_CONFIG_HOME/aria2/aria2.conf.'
  - names:
      - --console-log-level
    argument: <LEVEL>
    description: 'Set log level to output to console. LEVEL is either debug, info, notice, warn or error. Default: notice'
  - names:
      - --content-disposition-default-utf8
    argument: '[true|false]'
    description: 'Handle quoted string in Content-Disposition header as UTF-8 instead of ISO-8859-1, for example, the filename parameter, but not the extended version filename*. Default: false'
  - names:
      - -D
      - --daemon
    argument: '[true|false]'
    description: 'Run as daemon. The current working directory will be changed to / and standard input, standard output and standard error will be redirected to /dev/null. Default: false'
  - names:
      - --deferred-input
    argument: '[true|false]'
    description: 'If true is given, aria2 does not read all URIs and options from file specified by --input-file option at startup, but it reads one by one when it needs later. This may reduce memory usage if input file contains a lot of URIs to download. If false is given, aria2 reads all URIs and options at startup. Default: false'
  - names:
      - --disable-ipv6
    argument: '[true|false]'
    description: 'Disable IPv6. This is useful if you have to use broken DNS and want to avoid terribly slow AAAA record lookup. Default: false'
  - names:
      - --disk-cache
    argument: <SIZE>
    description: 'Enable disk cache. If SIZE is 0, the disk cache is disabled. This feature caches the downloaded data in memory, which grows to at most SIZE bytes. The cache storage is created for aria2 instance and shared by all downloads. The one advantage of the disk cache is reduce the disk I/O because the data are written in larger unit and it is reordered by the offset of the file. If hash checking is involved and the data are cached in memory, we don''t need to read them from the disk. SIZE can include K or M (1K = 1024, 1M = 1024K). Default: 16M'
  - names:
      - --download-result
    argument: <OPT>
    description: 'This option changes the way Download Results is formatted. If OPT is default, print GID, status, average download speed and path/URI. If multiple files are involved, path/URI of first requested file is printed and remaining ones are omitted. If OPT is full, print GID, status, average download speed, percentage of progress and path/URI. The percentage of progress and path/URI are printed for each requested file in each row. If OPT is hide, Download Results is hidden. Default: default'
  - names:
      - --dscp
    argument: <DSCP>
    description: Set DSCP value in outgoing IP packets of BitTorrent traffic for QoS. This parameter sets only DSCP bits in TOS field of IP packets, not the whole field. If you take values from /usr/include/netinet/ip.h divide them by 4 (otherwise values would be incorrect, e.g. your CS1 class would turn into CS4). If you take commonly used values from RFC, network vendors' documentation, Wikipedia or any other source, use them as they are.
  - names:
      - --rlimit-nofile
    argument: <NUM>
    description: 'Set the soft limit of open file descriptors. This open will only have effect when:'
  - names:
      - --enable-color
    argument: '[true|false]'
    description: 'Enable color output for a terminal. Default: true'
  - names:
      - --enable-mmap
    argument: '[true|false]'
    description: Map files into memory. This option may not work if the file space is not pre-allocated. See --file-allocation.
  - names:
      - --event-poll
    argument: <POLL>
    description: Specify the method for polling events. The possible values are epoll, kqueue, port, poll and select. For each epoll, kqueue, port and poll, it is available if system supports it. epoll is available on recent Linux. kqueue is available on various *BSD systems including Mac OS X. port is available on Open Solaris. The default value may vary depending on the system you use.
  - names:
      - --file-allocation
    argument: <METHOD>
    description: Specify file allocation method. none doesn't pre-allocate file space. prealloc pre-allocates file space before download begins. This may take some time depending on the size of the file. If you are using newer file systems such as ext4 (with extents support), btrfs, xfs or NTFS(MinGW build only), falloc is your best choice. It allocates large(few GiB) files almost instantly. Don't use falloc with legacy file systems such as ext3 and FAT32 because it takes almost same time as prealloc and it blocks aria2 entirely until allocation finishes. falloc may not be available if your system doesn't have posix_fallocate(3) function. trunc uses ftruncate(2) system call or platform-specific counterpart to truncate a file to a specified length.
  - names:
      - --force-save
    argument: '[true|false]'
    description: 'Save download with --save-session option even if the download is completed or removed. This option also saves control file in that situations. This may be useful to save BitTorrent seeding which is recognized as completed state. Default: false'
  - names:
      - --save-not-found
    argument: '[true|false]'
    description: 'Save download with --save-session option even if the file was not found on the server. This option also saves control file in that situations. Default: true'
  - names:
      - --gid
    argument: <GID>
    description: Set GID manually. aria2 identifies each download by the ID called GID. The GID must be hex string of 16 characters, thus [0-9a-fA-F] are allowed and leading zeros must not be stripped. The GID all 0 is reserved and must not be used. The GID must be unique, otherwise error is reported and the download is not added. This option is useful when restoring the sessions saved using --save-session option. If this option is not used, new GID is generated by aria2.
  - names:
      - --hash-check-only
    argument: '[true|false]'
    description: 'If true is given, after hash check using --check-integrity option, abort download whether or not download is complete. Default: false'
  - names:
      - --human-readable
    argument: '[true|false]'
    description: 'Print sizes and speed in human readable format (e.g., 1.2Ki, 3.4Mi) in the console readout. Default: true'
  - names:
      - --interface
    argument: <INTERFACE>
    description: 'Bind sockets to given interface. You can specify interface name, IP address and host name. Possible Values: interface, IP address, host name'
  - names:
      - --keep-unfinished-download-result
    argument: '[true|false]'
    description: 'Keep unfinished download results even if doing so exceeds --max-download-result. This is useful if all unfinished downloads must be saved in session file (see --save-session option). Please keep in mind that there is no upper bound to the number of unfinished download result to keep. If that is undesirable, turn this option off. Default: true'
  - names:
      - --max-download-result
    argument: <NUM>
    description: 'Set maximum number of download result kept in memory. The download results are completed/error/removed downloads. The download results are stored in FIFO queue and it can store at most NUM download results. When queue is full and new download result is created, oldest download result is removed from the front of the queue and new one is pushed to the back. Setting big number in this option may result high memory consumption after thousands of downloads. Specifying 0 means no download result is kept. Note that unfinished downloads are kept in memory regardless of this option value. See --keep-unfinished-download-result option. Default: 1000'
  - names:
      - --max-mmap-limit
    argument: <SIZE>
    description: 'Set the maximum file size to enable mmap (see --enable-mmap option). The file size is determined by the sum of all files contained in one download. For example, if a download contains 5 files, then file size is the total size of those files. If file size is strictly greater than the size specified in this option, mmap will be disabled. Default: 9223372036854775807'
  - names:
      - --max-resume-failure-tries
    argument: <N>
    description: 'When used with --always-resume=false, aria2 downloads file from scratch when aria2 detects N number of URIs that does not support resume. If N is 0, aria2 downloads file from scratch when all given URIs do not support resume. See --always-resume option. Default: 0'
  - names:
      - --min-tls-version
    argument: <VERSION>
    description: 'Specify minimum SSL/TLS version to enable. Possible Values: TLSv1.1, TLSv1.2, TLSv1.3 Default: TLSv1.2'
  - names:
      - --multiple-interface
    argument: <INTERFACES>
    description: 'Comma separated list of interfaces to bind sockets to. Requests will be splited among the interfaces to achieve link aggregation. You can specify interface name, IP address and hostname. If --interface is used, this option will be ignored. Possible Values: interface, IP address, hostname'
  - names:
      - --log-level
    argument: <LEVEL>
    description: 'Set log level to output. LEVEL is either debug, info, notice, warn or error. Default: debug'
  - names:
      - --on-bt-download-complete
    argument: <COMMAND>
    description: 'For BitTorrent, a command specified in --on-download-complete is called after download completed and seeding is over. On the other hand, this option set the command to be executed after download completed but before seeding. See Event Hook for more details about COMMAND. Possible Values: /path/to/command'
  - names:
      - --on-download-complete
    argument: <COMMAND>
    description: 'Set the command to be executed after download completed. See Event Hook for more details about COMMAND. See also --on-download-stop option. Possible Values: /path/to/command'
  - names:
      - --on-download-error
    argument: <COMMAND>
    description: 'Set the command to be executed after download aborted due to error. See Event Hook for more details about COMMAND. See also --on-download-stop option. Possible Values: /path/to/command'
  - names:
      - --on-download-pause
    argument: <COMMAND>
    description: 'Set the command to be executed after download was paused. See Event Hook for more details about COMMAND. Possible Values: /path/to/command'
  - names:
      - --on-download-start
    argument: <COMMAND>
    description: 'Set the command to be executed after download got started. See Event Hook for more details about COMMAND. Possible Values: /path/to/command'
  - names:
      - --on-download-stop
    argument: <COMMAND>
    description: 'Set the command to be executed after download stopped. You can override the command to be executed for particular download result using --on-download-complete and --on-download-error. If they are specified, command specified in this option is not executed. See Event Hook for more details about COMMAND. Possible Values: /path/to/command'
  - names:
      - --optimize-concurrent-downloads
    argument: '[true|false|<A>:<B>]'
    description: 'Optimizes the number of concurrent downloads according to the bandwidth available. aria2 uses the download speed observed in the previous downloads to adapt the number of downloads launched in parallel according to the rule N = A + B Log10(speed in Mbps). The coefficients A and B can be customized in the option arguments with A and B separated by a colon. The default values (A=5, B=25) lead to using typically 5 parallel downloads on 1Mbps networks and above 50 on 100Mbps networks. The number of parallel downloads remains constrained under the maximum defined by the --max-concurrent-downloads parameter. Default: false'
  - names:
      - --piece-length
    argument: <LENGTH>
    description: 'Set a piece length for HTTP/FTP downloads. This is the boundary when aria2 splits a file. All splits occur at multiple of this length. This option will be ignored in BitTorrent downloads. It will be also ignored if Metalink file contains piece hashes. Default: 1M'
  - names:
      - --show-console-readout
    argument: '[true|false]'
    description: 'Show console readout. Default: true'
  - names:
      - --stderr
    argument: '[true|false]'
    description: 'Redirect all console output that would be otherwise printed in stdout to stderr. Default: false'
  - names:
      - --summary-interval
    argument: <SEC>
    description: 'Set interval in seconds to output download progress summary. Setting 0 suppresses the output. Default: 60'
  - names:
      - -Z
      - --force-sequential
    argument: '[true|false]'
    description: 'Fetch URIs in the command-line sequentially and download each URI in a separate session, like the usual command-line download utilities. Default: false'
  - names:
      - --max-overall-download-limit
    argument: <SPEED>
    description: 'Set max overall download speed in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the download speed per download, use --max-download-limit option. Default: 0'
  - names:
      - --max-download-limit
    argument: <SPEED>
    description: 'Set max download speed per each download in bytes/sec. 0 means unrestricted. You can append K or M (1K = 1024, 1M = 1024K). To limit the overall download speed, use --max-overall-download-limit option. Default: 0'
  - names:
      - --no-conf
    argument: '[true|false]'
    description: Disable loading aria2.conf file.
  - names:
      - --no-file-allocation-limit
    argument: <SIZE>
    description: 'No file allocation is made for files whose size is smaller than SIZE. You can append K or M (1K = 1024, 1M = 1024K). Default: 5M'
  - names:
      - -P
      - --parameterized-uri
    argument: '[true|false]'
    description: 'Enable parameterized URI support. You can specify set of parts: http://{sv1,sv2,sv3}/foo.iso. Also you can specify numeric sequences with step counter: http://host/image[000-100:2].img. A step counter can be omitted. If all URIs do not point to the same file, such as the second example above, -Z option is required. Default: false'
  - names:
      - -q
      - --quiet
    argument: '[true|false]'
    description: 'Make aria2 quiet (no console output). Default: false'
  - names:
      - --realtime-chunk-checksum
    argument: '[true|false]'
    description: 'Validate chunk of data by calculating checksum while downloading a file if chunk checksums are provided. Default: true'
  - names:
      - --remove-control-file
    argument: '[true|false]'
    description: Remove control file before download. Using with --allow-overwrite=true, download always starts from scratch. This will be useful for users behind proxy server which disables resume.
  - names:
      - --save-session
    argument: <FILE>
    description: Save error/unfinished downloads to FILE on exit. You can pass this output file to aria2c with --input-file option on restart. If you like the output to be gzipped append a .gz extension to the file name. Please note that downloads added by aria2.addTorrent() and aria2.addMetalink() RPC method and whose meta data could not be saved as a file are not saved. Downloads removed using aria2.remove() and aria2.forceRemove() will not be saved. GID is also saved with gid, but there are some restrictions, see below.
  - names:
      - --save-session-interval
    argument: <SEC>
    description: 'Save error/unfinished downloads to a file specified by --save-session option every SEC seconds. If 0 is given, file will be saved only when aria2 exits. Default: 0'
  - names:
      - --socket-recv-buffer-size
    argument: <SIZE>
    description: 'Set the maximum socket receive buffer in bytes. Specifying 0 will disable this option. This value will be set to socket file descriptor using SO_RCVBUF socket option with setsockopt() call. Default: 0'
  - names:
      - --stop
    argument: <SEC>
    description: 'Stop application after SEC seconds has passed. If 0 is given, this feature is disabled. Default: 0'
  - names:
      - --stop-with-process
    argument: <PID>
    description: Stop application when process PID is not running. This is useful if aria2 process is forked from a parent process. The parent process can fork aria2 with its own pid and when parent process exits for some reason, aria2 can detect it and shutdown itself.
  - names:
      - --truncate-console-readout
    argument: '[true|false]'
    description: 'Truncate console readout to fit in a single line. Default: true'
  - names:
      - -v
      - --version
    argument: ""
    description: Print the version number, copyright and the configuration information and exit.
version: aria2 version 1.36.0
tldr: |
  > Fast download utility.
  > Supports HTTP(S), FTP, SFTP, BitTorrent, and Metalink.
  > More information: <https://aria2.github.io>.

  - Download a URI to a file:

  `aria2c {{url}}`

  - Download the file pointed to by the specified URI with the specified output name:

  `aria2c --out={{filename}} {{url}}`

  - Download multiple (different) files in parallel:

  `aria2c --force-sequential {{false}} {{url_1}} {{url_2}}`

  - Download from multiple sources with each URI pointing to the same file:

  `aria2c {{url_1}} {{url_2}}`

  - Download the URIs listed in a file with limited parallel downloads:

  `aria2c --input-file={{filename}} --max-concurrent-downloads={{number_of_downloads}}`

  - Download with multiple connections:

  `aria2c --split={{number_of_connections}} {{url}}`

  - FTP download with username and password:

  `aria2c --ftp-user={{username}} --ftp-passwd={{password}} {{url}}`

  - Limit download speed in bytes/s:

  `aria2c --max-download-limit={{speed}} {{url}}`
