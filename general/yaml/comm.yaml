name: comm
description: compare two sorted files line by line
usage: comm [OPTION]... FILE1 FILE2
options:
  - names:
      - "-1"
    argument: ""
    description: suppress column 1 (lines unique to FILE1)
  - names:
      - "-2"
    argument: ""
    description: suppress column 2 (lines unique to FILE2)
  - names:
      - "-3"
    argument: ""
    description: suppress column 3 (lines that appear in both files)
  - names:
      - --check-order
    argument: ""
    description: check that the input is correctly sorted, even if all input lines are pairable
  - names:
      - --nocheck-order
    argument: ""
    description: do not check that the input is correctly sorted
  - names:
      - --output-delimiter
    argument: STR
    description: separate columns with STR
  - names:
      - --total
    argument: ""
    description: output a summary
  - names:
      - -z
      - --zero-terminated
    argument: ""
    description: line delimiter is NUL, not newline
  - names:
      - --help
    argument: ""
    description: display this help and exit
  - names:
      - --version
    argument: ""
    description: output version information and exit
version: comm (GNU coreutils) 8.32
tldr: |
  > Select or reject lines common to two files. Both files must be sorted.
  > More information: <https://www.gnu.org/software/coreutils/comm>.

  - Produce three tab-separated columns: lines only in first file, lines only in second file and common lines:

  `comm {{file1}} {{file2}}`

  - Print only lines common to both files:

  `comm -12 {{file1}} {{file2}}`

  - Print only lines common to both files, reading one file from stdin:

  `cat {{file1}} | comm -12 - {{file2}}`

  - Get lines only found in first file, saving the result to a third file:

  `comm -23 {{file1}} {{file2}} > {{file1_only}}`

  - Print lines only found in second file, when the files aren't sorted:

  `comm -13 <(sort {{file1}}) <(sort {{file2}})`
