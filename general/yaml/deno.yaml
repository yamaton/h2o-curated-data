name: deno
description: deno
usage: deno [OPTIONS] [SUBCOMMAND]
options:
  - names:
      - -h
      - --help
    argument: ""
    description: Print help information
  - names:
      - -q
      - --quiet
    argument: ""
    description: Suppress diagnostic output
  - names:
      - --unstable
    argument: ""
    description: Enable unstable features and APIs
  - names:
      - -V
      - --version
    argument: ""
    description: Print version information
subcommands:
  - name: bench
    description: Run benchmarks
    usage: deno bench [OPTIONS] [files]... [-- <SCRIPT_ARG>...]
    options:
      - names:
          - -A
          - --allow-all
        argument: ""
        description: Allow all permissions
      - names:
          - --allow-env
        argument: '[=<allow-env>...]'
        description: Allow environment access
      - names:
          - --allow-ffi
        argument: '[=<allow-ffi>...]'
        description: Allow loading dynamic libraries
      - names:
          - --allow-hrtime
        argument: ""
        description: Allow high resolution time measurement
      - names:
          - --allow-net
        argument: '[=<allow-net>...]'
        description: Allow network access
      - names:
          - --allow-read
        argument: '[=<allow-read>...]'
        description: Allow file system read access
      - names:
          - --allow-run
        argument: '[=<allow-run>...]'
        description: Allow running subprocesses
      - names:
          - --allow-sys
        argument: '[=<allow-sys>...]'
        description: Allow access to system info
      - names:
          - --allow-write
        argument: '[=<allow-write>...]'
        description: Allow file system write access
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cached-only
        argument: ""
        description: Require that remote dependencies are already cached
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - --filter
        argument: <filter>
        description: Run benchmarks with this string or pattern in the bench name
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --ignore
        argument: <ignore>
        description: Ignore files
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --location
        argument: <HREF>
        description: Value of 'globalThis.location' used by some web APIs
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-clear-screen
        argument: ""
        description: Do not clear terminal screen when under watch mode
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-prompt
        argument: ""
        description: Always throw if required permission wasn't passed
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --seed
        argument: <NUMBER>
        description: Set the random number generator seed
      - names:
          - --unsafely-ignore-certificate-errors
        argument: '[=<HOSTNAMES>...]'
        description: 'DANGER: Disables verification of TLS certificates'
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --v8-flags
        argument: <v8-flags>
        description: To see a list of all available flags use --v8-flags=--help.
      - names:
          - --watch
        argument: ""
        description: Watch for file changes and restart process automatically. Only local files from entry point module graph are watched.
  - name: bundle
    description: Bundle module and dependencies into single file
    usage: deno bundle [OPTIONS] <source_file> [--] [out_file]
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-clear-screen
        argument: ""
        description: Do not clear terminal screen when under watch mode
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --watch
        argument: ""
        description: Watch for file changes and restart process automatically. Only local files from entry point module graph are watched.
  - name: cache
    description: Cache the dependencies
    usage: deno cache [OPTIONS] <file>...
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: check
    description: Type-check the dependencies
    usage: deno check [OPTIONS] <file>...
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --remote
        argument: ""
        description: Type-check all modules, including remote
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: compile
    description: 'UNSTABLE: Compile the script into a self contained executable'
    usage: deno compile [OPTIONS] <SCRIPT_ARG>...
    options:
      - names:
          - -A
          - --allow-all
        argument: ""
        description: Allow all permissions
      - names:
          - --allow-env
        argument: '[=<allow-env>...]'
        description: Allow environment access
      - names:
          - --allow-ffi
        argument: '[=<allow-ffi>...]'
        description: Allow loading dynamic libraries
      - names:
          - --allow-hrtime
        argument: ""
        description: Allow high resolution time measurement
      - names:
          - --allow-net
        argument: '[=<allow-net>...]'
        description: Allow network access
      - names:
          - --allow-read
        argument: '[=<allow-read>...]'
        description: Allow file system read access
      - names:
          - --allow-run
        argument: '[=<allow-run>...]'
        description: Allow running subprocesses
      - names:
          - --allow-sys
        argument: '[=<allow-sys>...]'
        description: Allow access to system info
      - names:
          - --allow-write
        argument: '[=<allow-write>...]'
        description: Allow file system write access
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cached-only
        argument: ""
        description: Require that remote dependencies are already cached
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --location
        argument: <HREF>
        description: Value of 'globalThis.location' used by some web APIs
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-prompt
        argument: ""
        description: Always throw if required permission wasn't passed
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -o
          - --output
        argument: <output>
        description: Output file (defaults to $PWD/<inferred-name>)
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --seed
        argument: <NUMBER>
        description: Set the random number generator seed
      - names:
          - --target
        argument: <target>
        description: Target OS architecture
      - names:
          - --unsafely-ignore-certificate-errors
        argument: '[=<HOSTNAMES>...]'
        description: 'DANGER: Disables verification of TLS certificates'
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --v8-flags
        argument: <v8-flags>
        description: To see a list of all available flags use --v8-flags=--help.
  - name: completions
    description: Generate shell completions
    usage: deno completions [OPTIONS] <shell>
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: coverage
    description: Print coverage reports
    usage: deno coverage [OPTIONS] <files>...
    options:
      - names:
          - --exclude
        argument: <regex>...
        description: Exclude source files from the report
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --ignore
        argument: <ignore>
        description: Ignore coverage files
      - names:
          - --include
        argument: <regex>...
        description: Include source files in the report
      - names:
          - --lcov
        argument: ""
        description: Output coverage report in lcov format
      - names:
          - --output
        argument: <output>
        description: Exports the coverage report in lcov format to the given file. Filename should be passed along with '=' For example '--output=foo.lcov' If no --output arg is specified then the report is written to stdout.
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: doc
    description: Show documentation for a module
    usage: deno doc [OPTIONS] [--] [ARGS]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --json
        argument: ""
        description: Output documentation in JSON format
      - names:
          - --private
        argument: ""
        description: Output private documentation
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: ""
        description: Reload source code cache (recompile TypeScript)
      - names:
          - -r
          - --reload
        argument: <CACHE_BLOCKLIST>...
        description: Reload source code cache (recompile TypeScript)
      - names:
          - --reload
        argument: ""
        description: Reload everything
      - names:
          - --reload
        argument: https://deno.land/std
        description: Reload only standard modules
      - names:
          - --reload
        argument: https://deno.land/std/fs/utils.ts,https://deno.land/std/fmt/colors.ts
        description: Reloads specific modules
      - names:
          - --reload
        argument: npm
        description: Reload all npm modules
      - names:
          - --reload
        argument: npm:chalk
        description: Reload specific npm module
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: eval
    description: Eval script
    usage: deno eval [OPTIONS] <CODE_ARG>...
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cached-only
        argument: ""
        description: Require that remote dependencies are already cached
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - --ext
        argument: <ext>
        description: Set standard input (stdin) content type
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --inspect
        argument: '[=<HOST:PORT>...]'
        description: 'Activate inspector on host:port (default: 127.0.0.1:9229)'
      - names:
          - --inspect-brk
        argument: '[=<HOST:PORT>...]'
        description: Activate inspector on host:port and break at start of user script
      - names:
          - --location
        argument: <HREF>
        description: Value of 'globalThis.location' used by some web APIs
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -p
          - --print
        argument: ""
        description: print result to stdout
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --seed
        argument: <NUMBER>
        description: Set the random number generator seed
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --v8-flags
        argument: <v8-flags>
        description: To see a list of all available flags use --v8-flags=--help.
  - name: fmt
    description: Format source files
    usage: deno fmt [OPTIONS] [files]...
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --check
        argument: ""
        description: Check if the source files are formatted
      - names:
          - --ext
        argument: <ext>
        description: Set standard input (stdin) content type
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --ignore
        argument: <ignore>
        description: Ignore formatting particular source files
      - names:
          - --no-clear-screen
        argument: ""
        description: Do not clear terminal screen when under watch mode
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --options-indent-width
        argument: <options-indent-width>
        description: Define indentation width. Defaults to 2.
      - names:
          - --options-line-width
        argument: <options-line-width>
        description: Define maximum line width. Defaults to 80.
      - names:
          - --options-prose-wrap
        argument: <options-prose-wrap>
        description: Define how prose should be wrapped. Defaults to always.
      - names:
          - --options-single-quote
        argument: ""
        description: Use single quotes. Defaults to false.
      - names:
          - --options-use-tabs
        argument: ""
        description: Use tabs instead of spaces for indentation. Defaults to false.
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --watch
        argument: ""
        description: Watch for file changes and restart process automatically. Only local files from entry point module graph are watched.
  - name: help
    description: Print this message or the help of the given subcommand(s)
    usage: deno help [OPTIONS] [SUBCOMMAND]...
    options:
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: info
    description: Show info about cache or info related to source file
    usage: deno info [OPTIONS] [--] [file]
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --json
        argument: ""
        description: 'UNSTABLE: Outputs the information in JSON format'
      - names:
          - --location
        argument: <HREF>
        description: Show files used for origin bound APIs like the Web Storage API when running a script with '--location=<HREF>'
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: init
    description: Initialize a new project
    usage: deno init [OPTIONS] [dir]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: install
    description: Install script as an executable
    usage: deno install [OPTIONS] <cmd>...
    options:
      - names:
          - '-'
        argument: ""
        description: Attempt to take the file stem of the URL path. The above example would become 'file_server'.
      - names:
          - '-'
        argument: ""
        description: If the resulting name has an '@...' suffix, strip it.
      - names:
          - -A
          - --allow-all
        argument: ""
        description: Allow all permissions
      - names:
          - --allow-env
        argument: '[=<allow-env>...]'
        description: Allow environment access
      - names:
          - --allow-ffi
        argument: '[=<allow-ffi>...]'
        description: Allow loading dynamic libraries
      - names:
          - --allow-hrtime
        argument: ""
        description: Allow high resolution time measurement
      - names:
          - --allow-net
        argument: '[=<allow-net>...]'
        description: Allow network access
      - names:
          - --allow-read
        argument: '[=<allow-read>...]'
        description: Allow file system read access
      - names:
          - --allow-run
        argument: '[=<allow-run>...]'
        description: Allow running subprocesses
      - names:
          - --allow-sys
        argument: '[=<allow-sys>...]'
        description: Allow access to system info
      - names:
          - --allow-write
        argument: '[=<allow-write>...]'
        description: Allow file system write access
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cached-only
        argument: ""
        description: Require that remote dependencies are already cached
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - -f
          - --force
        argument: ""
        description: Forcefully overwrite existing installation
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --inspect
        argument: '[=<HOST:PORT>...]'
        description: 'Activate inspector on host:port (default: 127.0.0.1:9229)'
      - names:
          - --inspect-brk
        argument: '[=<HOST:PORT>...]'
        description: Activate inspector on host:port and break at start of user script
      - names:
          - --location
        argument: <HREF>
        description: Value of 'globalThis.location' used by some web APIs
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - -n
          - --name
        argument: <name>
        description: Executable file name
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-prompt
        argument: ""
        description: Always throw if required permission wasn't passed
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --root
        argument: <root>
        description: Installation root
      - names:
          - --seed
        argument: <NUMBER>
        description: Set the random number generator seed
      - names:
          - --unsafely-ignore-certificate-errors
        argument: '[=<HOSTNAMES>...]'
        description: 'DANGER: Disables verification of TLS certificates'
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --v8-flags
        argument: <v8-flags>
        description: To see a list of all available flags use --v8-flags=--help.
  - name: lint
    description: Lint source files
    usage: deno lint [OPTIONS] [files]...
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --compact
        argument: ""
        description: Output lint result in compact format
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --ignore
        argument: <ignore>
        description: Ignore linting particular source files
      - names:
          - --json
        argument: ""
        description: Output lint result in JSON format
      - names:
          - --no-clear-screen
        argument: ""
        description: Do not clear terminal screen when under watch mode
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --rules
        argument: ""
        description: List available rules
      - names:
          - --rules-exclude
        argument: <rules-exclude>
        description: Exclude lint rules
      - names:
          - --rules-include
        argument: <rules-include>
        description: Include lint rules
      - names:
          - --rules-tags
        argument: <rules-tags>
        description: Use set of rules with a tag
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --watch
        argument: ""
        description: Watch for file changes and restart process automatically. Only local files from entry point module graph are watched.
  - name: lsp
    description: Start the language server
    usage: deno lsp [OPTIONS]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: repl
    description: Read Eval Print Loop
    usage: deno repl [OPTIONS]
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cached-only
        argument: ""
        description: Require that remote dependencies are already cached
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - --eval
        argument: <code>
        description: Evaluates the provided code when the REPL starts.
      - names:
          - --eval-file
        argument: <eval-file>...
        description: Evaluates the provided file(s) as scripts when the REPL starts. Accepts file paths and URLs.
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --inspect
        argument: '[=<HOST:PORT>...]'
        description: 'Activate inspector on host:port (default: 127.0.0.1:9229)'
      - names:
          - --inspect-brk
        argument: '[=<HOST:PORT>...]'
        description: Activate inspector on host:port and break at start of user script
      - names:
          - --location
        argument: <HREF>
        description: Value of 'globalThis.location' used by some web APIs
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --seed
        argument: <NUMBER>
        description: Set the random number generator seed
      - names:
          - --unsafely-ignore-certificate-errors
        argument: '[=<HOSTNAMES>...]'
        description: 'DANGER: Disables verification of TLS certificates'
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --v8-flags
        argument: <v8-flags>
        description: To see a list of all available flags use --v8-flags=--help.
  - name: run
    description: Run a JavaScript or TypeScript program
    usage: deno run [OPTIONS] <SCRIPT_ARG>...
    options:
      - names:
          - -A
          - --allow-all
        argument: ""
        description: Allow all permissions
      - names:
          - --allow-env
        argument: '[=<allow-env>...]'
        description: Allow environment access
      - names:
          - --allow-ffi
        argument: '[=<allow-ffi>...]'
        description: Allow loading dynamic libraries
      - names:
          - --allow-hrtime
        argument: ""
        description: Allow high resolution time measurement
      - names:
          - --allow-net
        argument: '[=<allow-net>...]'
        description: Allow network access
      - names:
          - --allow-read
        argument: '[=<allow-read>...]'
        description: Allow file system read access
      - names:
          - --allow-run
        argument: '[=<allow-run>...]'
        description: Allow running subprocesses
      - names:
          - --allow-sys
        argument: '[=<allow-sys>...]'
        description: Allow access to system info
      - names:
          - --allow-write
        argument: '[=<allow-write>...]'
        description: Allow file system write access
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cached-only
        argument: ""
        description: Require that remote dependencies are already cached
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --inspect
        argument: '[=<HOST:PORT>...]'
        description: 'Activate inspector on host:port (default: 127.0.0.1:9229)'
      - names:
          - --inspect-brk
        argument: '[=<HOST:PORT>...]'
        description: Activate inspector on host:port and break at start of user script
      - names:
          - --location
        argument: <HREF>
        description: Value of 'globalThis.location' used by some web APIs
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-clear-screen
        argument: ""
        description: Do not clear terminal screen when under watch mode
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-prompt
        argument: ""
        description: Always throw if required permission wasn't passed
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --seed
        argument: <NUMBER>
        description: Set the random number generator seed
      - names:
          - --unsafely-ignore-certificate-errors
        argument: '[=<HOSTNAMES>...]'
        description: 'DANGER: Disables verification of TLS certificates'
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --v8-flags
        argument: <v8-flags>
        description: To see a list of all available flags use --v8-flags=--help.
      - names:
          - --watch
        argument: '[=<FILES>...]'
        description: Watch for file changes and restart process automatically. Local files from entry point module graph are watched by default. Additional paths might be watched by passing them as arguments to this flag.
  - name: task
    description: Run a task defined in the configuration file
    usage: deno task [OPTIONS] [task_name_and_args]...
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cwd
        argument: <DIR>
        description: Specify the directory to run the task in
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: test
    description: Run tests
    usage: deno test [OPTIONS] [files]... [-- <SCRIPT_ARG>...]
    options:
      - names:
          - -A
          - --allow-all
        argument: ""
        description: Allow all permissions
      - names:
          - --allow-env
        argument: '[=<allow-env>...]'
        description: Allow environment access
      - names:
          - --allow-ffi
        argument: '[=<allow-ffi>...]'
        description: Allow loading dynamic libraries
      - names:
          - --allow-hrtime
        argument: ""
        description: Allow high resolution time measurement
      - names:
          - --allow-net
        argument: '[=<allow-net>...]'
        description: Allow network access
      - names:
          - --allow-none
        argument: ""
        description: Don't return error code if no test files are found
      - names:
          - --allow-read
        argument: '[=<allow-read>...]'
        description: Allow file system read access
      - names:
          - --allow-run
        argument: '[=<allow-run>...]'
        description: Allow running subprocesses
      - names:
          - --allow-sys
        argument: '[=<allow-sys>...]'
        description: Allow access to system info
      - names:
          - --allow-write
        argument: '[=<allow-write>...]'
        description: Allow file system write access
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cached-only
        argument: ""
        description: Require that remote dependencies are already cached
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --check
        argument: '[=<CHECK_TYPE>...]'
        description: Type-check modules.
      - names:
          - --coverage
        argument: <DIR>
        description: 'UNSTABLE: Collect coverage profile data into DIR'
      - names:
          - --doc
        argument: ""
        description: 'UNSTABLE: type-check code blocks'
      - names:
          - --fail-fast
        argument: '[=<N>...]'
        description: Stop after N errors. Defaults to stopping after first failure.
      - names:
          - --filter
        argument: <filter>
        description: Run tests with this string or pattern in the test name
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --ignore
        argument: <ignore>
        description: Ignore files
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --inspect
        argument: '[=<HOST:PORT>...]'
        description: 'Activate inspector on host:port (default: 127.0.0.1:9229)'
      - names:
          - --inspect-brk
        argument: '[=<HOST:PORT>...]'
        description: Activate inspector on host:port and break at start of user script
      - names:
          - --location
        argument: <HREF>
        description: Value of 'globalThis.location' used by some web APIs
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --lock-write
        argument: ""
        description: Force overwriting the lock file.
      - names:
          - --no-check
        argument: '[=<NO_CHECK_TYPE>...]'
        description: Skip type-checking. If the value of '--no-check=remote' is supplied, diagnostic errors from remote modules will be ignored.
      - names:
          - --no-clear-screen
        argument: ""
        description: Do not clear terminal screen when under watch mode
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --no-lock
        argument: ""
        description: Disable auto discovery of the lock file.
      - names:
          - --no-npm
        argument: ""
        description: Do not resolve npm modules
      - names:
          - --no-prompt
        argument: ""
        description: Always throw if required permission wasn't passed
      - names:
          - --no-remote
        argument: ""
        description: Do not resolve remote modules
      - names:
          - --no-run
        argument: ""
        description: Cache test modules, but don't run tests
      - names:
          - --node-modules-dir
        argument: ""
        description: Creates a local node_modules folder
      - names:
          - --parallel
        argument: ""
        description: Run test modules in parallel. Parallelism defaults to the number of available CPUs or the value in the DENO_JOBS environment variable.
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --seed
        argument: <NUMBER>
        description: Set the random number generator seed
      - names:
          - --shuffle
        argument: '[=<NUMBER>...]'
        description: '(UNSTABLE): Shuffle the order in which the tests are run'
      - names:
          - --trace-ops
        argument: ""
        description: Enable tracing of async ops. Useful when debugging leaking ops in test, but impacts test execution time.
      - names:
          - --unsafely-ignore-certificate-errors
        argument: '[=<HOSTNAMES>...]'
        description: 'DANGER: Disables verification of TLS certificates'
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --v8-flags
        argument: <v8-flags>
        description: To see a list of all available flags use --v8-flags=--help.
      - names:
          - --watch
        argument: ""
        description: Watch for file changes and restart process automatically. Only local files from entry point module graph are watched.
  - name: types
    description: Print runtime TypeScript declarations
    usage: deno types [OPTIONS]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: uninstall
    description: Uninstall a script previously installed with deno install
    usage: deno uninstall [OPTIONS] <name>
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --root
        argument: <root>
        description: Installation root
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
  - name: upgrade
    description: Upgrade deno executable to given version
    usage: deno upgrade [OPTIONS]
    options:
      - names:
          - --canary
        argument: ""
        description: Upgrade to canary builds
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - --dry-run
        argument: ""
        description: Perform all checks without replacing old exe
      - names:
          - -f
          - --force
        argument: ""
        description: Replace current exe even if not out-of-date
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --output
        argument: <output>
        description: The path to output the updated version to
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
      - names:
          - --version
        argument: <version>
        description: The version to upgrade to
  - name: vendor
    description: Vendor remote modules into a local directory
    usage: deno vendor [OPTIONS] <specifiers>...
    options:
      - names:
          - -c
          - --config
        argument: <FILE>
        description: The configuration file can be used to configure different aspects of deno including TypeScript, linting, and code formatting. Typically the configuration file will be called `deno.json` or `deno.jsonc` and automatically detected; in that case this flag is not necessary. See https://deno.land/manual@v1.27.2/getting_started/configuration_file
      - names:
          - --cert
        argument: <FILE>
        description: Load certificate authority from PEM encoded file
      - names:
          - -f
          - --force
        argument: ""
        description: Forcefully overwrite conflicting files in existing output directory
      - names:
          - -h
          - --help
        argument: ""
        description: Print help information
      - names:
          - --import-map
        argument: <FILE>
        description: Load import map file from local file or remote URL.
      - names:
          - --lock
        argument: '[<FILE>...]'
        description: Check the specified lock file. If value is not provided, defaults to "deno.lock" in the current working directory.
      - names:
          - --no-config
        argument: ""
        description: Disable automatic loading of the configuration file.
      - names:
          - --output
        argument: <output>
        description: The directory to output the vendored modules to
      - names:
          - -q
          - --quiet
        argument: ""
        description: Suppress diagnostic output
      - names:
          - -r
          - --reload
        argument: '[=<CACHE_BLOCKLIST>...]'
        description: Reload source code cache (recompile TypeScript) --reload
      - names:
          - --unstable
        argument: ""
        description: Enable unstable features and APIs
version: 'deno 1.27.2'
tldr: |
  > A secure runtime for JavaScript and TypeScript.
  > More information: <https://deno.land>.

  - Run a JavaScript or TypeScript file:

  `deno run {{path/to/file.ts}}`

  - Start a REPL (interactive shell):

  `deno`

  - Run a file with network access enabled:

  `deno run --allow-net {{path/to/file.ts}}`

  - Run a file from a URL:

  `deno run {{https://deno.land/std/examples/welcome.ts}}`

  - Install an executable script from a URL:

  `deno install {{https://deno.land/std/examples/colors.ts}}`
