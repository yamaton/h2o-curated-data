name: egrep
description: egrep
usage: grep [OPTION]... PATTERNS [FILE]...
options:
  - names:
      - -E
      - --extended-regexp
    argument: ""
    description: PATTERNS are extended regular expressions
  - names:
      - -F
      - --fixed-strings
    argument: ""
    description: PATTERNS are strings
  - names:
      - -G
      - --basic-regexp
    argument: ""
    description: PATTERNS are basic regular expressions
  - names:
      - -P
      - --perl-regexp
    argument: ""
    description: PATTERNS are Perl regular expressions
  - names:
      - -e
      - --regexp
    argument: PATTERNS
    description: use PATTERNS for matching
  - names:
      - -f
      - --file
    argument: FILE
    description: take PATTERNS from FILE
  - names:
      - -i
      - --ignore-case
    argument: ""
    description: ignore case distinctions in patterns and data
  - names:
      - --no-ignore-case
    argument: ""
    description: do not ignore case distinctions (default)
  - names:
      - -w
      - --word-regexp
    argument: ""
    description: match only whole words
  - names:
      - -x
      - --line-regexp
    argument: ""
    description: match only whole lines
  - names:
      - -z
      - --null-data
    argument: ""
    description: a data line ends in 0 byte, not newline
  - names:
      - -s
      - --no-messages
    argument: ""
    description: suppress error messages
  - names:
      - -v
      - --invert-match
    argument: ""
    description: select non-matching lines
  - names:
      - -V
      - --version
    argument: ""
    description: display version information and exit
  - names:
      - --help
    argument: ""
    description: display this help text and exit
  - names:
      - -m
      - --max-count
    argument: NUM
    description: stop after NUM selected lines
  - names:
      - -b
      - --byte-offset
    argument: ""
    description: print the byte offset with output lines
  - names:
      - -n
      - --line-number
    argument: ""
    description: print line number with output lines
  - names:
      - --line-buffered
    argument: ""
    description: flush output on every line
  - names:
      - -H
      - --with-filename
    argument: ""
    description: print file name with output lines
  - names:
      - -h
      - --no-filename
    argument: ""
    description: suppress the file name prefix on output
  - names:
      - --label
    argument: LABEL
    description: use LABEL as the standard input file name prefix
  - names:
      - -o
      - --only-matching
    argument: ""
    description: show only nonempty parts of lines that match
  - names:
      - -q
      - --quiet
      - --silent
    argument: ""
    description: suppress all normal output
  - names:
      - --binary-files
    argument: TYPE
    description: assume that binary files are TYPE; TYPE is 'binary', 'text', or 'without-match'
  - names:
      - -a
      - --text
    argument: ""
    description: equivalent to --binary-files=text
  - names:
      - -I
    argument: ""
    description: equivalent to --binary-files=without-match
  - names:
      - -d
      - --directories
    argument: ACTION
    description: how to handle directories; ACTION is 'read', 'recurse', or 'skip'
  - names:
      - -D
      - --devices
    argument: ACTION
    description: how to handle devices, FIFOs and sockets; ACTION is 'read' or 'skip'
  - names:
      - -r
      - --recursive
    argument: ""
    description: like --directories=recurse
  - names:
      - -R
      - --dereference-recursive
    argument: ""
    description: likewise, but follow all symlinks
  - names:
      - --include
    argument: GLOB
    description: search only files that match GLOB (a file pattern)
  - names:
      - --exclude
    argument: GLOB
    description: skip files that match GLOB
  - names:
      - --exclude-from
    argument: FILE
    description: skip files that match any file pattern from FILE
  - names:
      - --exclude-dir
    argument: GLOB
    description: skip directories that match GLOB
  - names:
      - -L
      - --files-without-match
    argument: ""
    description: print only names of FILEs with no selected lines
  - names:
      - -l
      - --files-with-matches
    argument: ""
    description: print only names of FILEs with selected lines
  - names:
      - -c
      - --count
    argument: ""
    description: print only a count of selected lines per FILE
  - names:
      - -T
      - --initial-tab
    argument: ""
    description: make tabs line up (if needed)
  - names:
      - -Z
      - --null
    argument: ""
    description: print 0 byte after FILE name
  - names:
      - -B
      - --before-context
    argument: NUM
    description: print NUM lines of leading context
  - names:
      - -A
      - --after-context
    argument: NUM
    description: print NUM lines of trailing context
  - names:
      - -C
      - --context
    argument: NUM
    description: print NUM lines of output context
  - names:
      - -NUM
    argument: ""
    description: same as --context=NUM
  - names:
      - --group-separator
    argument: SEP
    description: print SEP on line between matches with context
  - names:
      - --no-group-separator
    argument: ""
    description: do not print separator for matches with context
  - names:
      - --color
      - --colour
    argument: '[=WHEN]'
    description: use markers to highlight the matching strings; WHEN is 'always', 'never', or 'auto'
  - names:
      - -U
      - --binary
    argument: ""
    description: do not strip CR characters at EOL (MSDOS/Windows)
version: grep (GNU grep) 3.7
tldr: |
  > Find patterns in files using extended regular expression (supports `?`, `+`, `{}`, `()` and `|`).
  > More information: <https://manned.org/egrep>.

  - Search for a pattern within a file:

  `egrep "{{search_pattern}}" {{path/to/file}}`

  - Search for a pattern within multiple files:

  `egrep "{{search_pattern}}" {{path/to/file1}} {{path/to/file2}} {{path/to/file3}}`

  - Search stdin for a pattern:

  `cat {{path/to/file}} | egrep {{search_pattern}}`

  - Print file name and line number for each match:

  `egrep --with-filename --line-number "{{search_pattern}}" {{path/to/file}}`

  - Search for a pattern in all files recursively in a directory, ignoring binary files:

  `egrep --recursive --binary-files={{without-match}} "{{search_pattern}}" {{path/to/directory}}`

  - Search for lines that do not match a pattern:

  `egrep --invert-match "{{search_pattern}}" {{path/to/file}}`
