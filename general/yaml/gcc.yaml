name: gcc
description: gcc
options:
  - names:
      - --completion
    argument: <arg>
    description: Provide bash completion for options starting with provided string.
  - names:
      - --debug
    argument: ""
    description: Same as -g.
  - names:
      - --dumpbase
    argument: ""
    description: Same as -dumpbase.
  - names:
      - --dumpdir
    argument: ""
    description: Same as -dumpdir.
  - names:
      - --extra-warnings
    argument: ""
    description: Same as -Wextra.
  - names:
      - --help
    argument: ""
    description: Display this information.
  - names:
      - --help
    argument: <class>
    description: Display descriptions of a specific class of options. <class> is one or more of optimizers, target, warnings, undocumented, params.
  - names:
      - --optimize
    argument: ""
    description: Same as -O.
  - names:
      - --output
    argument: ""
    description: Same as -o.
  - names:
      - --output
    argument: <arg>
    description: Same as -o.
  - names:
      - --pedantic-errors
    argument: ""
    description: Same as -pedantic-errors.
  - names:
      - --profile
    argument: ""
    description: Same as -p.
  - names:
      - --target-help
    argument: ""
    description: Alias for --help=target.
  - names:
      - --verbose
    argument: ""
    description: Same as -v.
  - names:
      - --version
    argument: ""
    description: This option lacks documentation.
  - names:
      - -Ofast
    argument: ""
    description: Optimize for speed disregarding exact standards compliance.
  - names:
      - -Og
    argument: ""
    description: Optimize for debugging experience rather than speed or size.
  - names:
      - -Os
    argument: ""
    description: Optimize for space rather than speed.
  - names:
      - -W
    argument: ""
    description: This switch is deprecated; use -Wextra instead. Same as -Wextra.
  - names:
      - -Waggregate-return
    argument: ""
    description: Warn about returning structures, unions or arrays.
  - names:
      - -Waggressive-loop-optimizations
    argument: ""
    description: Warn if a loop with constant number of iterations triggers undefined behavior.
  - names:
      - -Wanalyzer-double-fclose
    argument: ""
    description: Warn about code paths in which a stdio FILE can be closed more than once.
  - names:
      - -Wanalyzer-double-free
    argument: ""
    description: Warn about code paths in which a pointer can be freed more than once.
  - names:
      - -Wanalyzer-exposure-through-output-file
    argument: ""
    description: Warn about code paths in which sensitive data is written to a file.
  - names:
      - -Wanalyzer-file-leak
    argument: ""
    description: Warn about code paths in which a stdio FILE is not closed.
  - names:
      - -Wanalyzer-free-of-non-heap
    argument: ""
    description: Warn about code paths in which a non-heap pointer is freed.
  - names:
      - -Wanalyzer-malloc-leak
    argument: ""
    description: Warn about code paths in which a heap-allocated pointer leaks.
  - names:
      - -Wanalyzer-null-argument
    argument: ""
    description: Warn about code paths in which NULL is passed to a must-not-be-NULL function argument.
  - names:
      - -Wanalyzer-null-dereference
    argument: ""
    description: Warn about code paths in which a NULL pointer is dereferenced.
  - names:
      - -Wanalyzer-possible-null-argument
    argument: ""
    description: Warn about code paths in which a possibly-NULL value is passed to a must-not-be-NULL function argument.
  - names:
      - -Wanalyzer-possible-null-dereference
    argument: ""
    description: Warn about code paths in which a possibly-NULL pointer is dereferenced.
  - names:
      - -Wanalyzer-stale-setjmp-buffer
    argument: ""
    description: Warn about code paths in which a longjmp rewinds to a jmp_buf saved in a stack frame that has returned.
  - names:
      - -Wanalyzer-tainted-array-index
    argument: ""
    description: Warn about code paths in which an unsanitized value is used as an array index.
  - names:
      - -Wanalyzer-too-complex
    argument: ""
    description: Warn if the code is too complicated for the analyzer to fully explore.
  - names:
      - -Wanalyzer-unsafe-call-within-signal-handler
    argument: ""
    description: Warn about code paths in which an async-signal-unsafe function is called from a signal handler.
  - names:
      - -Wanalyzer-use-after-free
    argument: ""
    description: Warn about code paths in which a freed value is used.
  - names:
      - -Wanalyzer-use-of-pointer-in-stale-stack-frame
    argument: ""
    description: Warn about code paths in which a pointer to a stale stack frame is used.
  - names:
      - -Warray-bounds
    argument: ""
    description: Warn if an array is accessed out of bounds.
  - names:
      - -Warray-bounds
    argument: <0,2>
    description: Warn if an array is accessed out of bounds.
  - names:
      - -Wattribute-alias
    argument: ""
    description: Warn about type safety and similar errors and mismatches in declarations with alias attributes. Same as -Wattribute-alias=.
  - names:
      - -Wattribute-alias
    argument: <0,2>
    description: Warn about type safety and similar errors and mismatches in declarations with alias attributes.
  - names:
      - -Wattribute-warning
    argument: ""
    description: Warn about uses of __attribute__((warning)) declarations.
  - names:
      - -Wattributes
    argument: ""
    description: Warn about inappropriate attribute usage.
  - names:
      - -Wcannot-profile
    argument: ""
    description: Warn when profiling instrumentation was requested, but could not be applied to a certain function.
  - names:
      - -Wcast-align
    argument: ""
    description: Warn about pointer casts which increase alignment.
  - names:
      - -Wcast-align
    argument: strict
    description: Warn about pointer casts which increase alignment.
  - names:
      - -Wcoverage-mismatch
    argument: ""
    description: Warn in case profiles in -fprofile-use do not match.
  - names:
      - -Wdeprecated-declarations
    argument: ""
    description: Warn about uses of __attribute__((deprecated)) declarations.
  - names:
      - -Wdisabled-optimization
    argument: ""
    description: Warn when an optimization pass is disabled.
  - names:
      - -Werror
    argument: <arg>
    description: Treat specified warning as error.
  - names:
      - -Wfatal-errors
    argument: ""
    description: Exit on the first error occurred.
  - names:
      - -Wframe-larger-than
    argument: <byte-size>
    description: Warn if a function's stack frame requires in excess of <byte-size>.
  - names:
      - -Wfree-nonheap-object
    argument: ""
    description: Warn when attempting to free a non-heap object.
  - names:
      - -Whsa
    argument: ""
    description: Warn when a function cannot be expanded to HSAIL.
  - names:
      - -Wimplicit-fallthrough
    argument: ""
    description: Same as -Wimplicit-fallthrough=3 (or, in negated form, -Wimplicit-fallthrough=0).
  - names:
      - -Wimplicit-fallthrough
    argument: <0,5>
    description: Warn when a switch case falls through.
  - names:
      - -Winline
    argument: ""
    description: Warn when an inlined function cannot be inlined.
  - names:
      - -Winvalid-memory-model
    argument: ""
    description: Warn when an atomic memory model parameter is known to be outside the valid range.
  - names:
      - -Wlarger-than-
    argument: ""
    description: Same as -Wlarger-than=.
  - names:
      - -Wlarger-than
    argument: <byte-size>
    description: Warn if an object's size exceeds <byte-size>.
  - names:
      - -Wlto-type-mismatch
    argument: ""
    description: During link time optimization warn about mismatched types of global declarations.
  - names:
      - -Wmissing-noreturn
    argument: ""
    description: Same as -Wsuggest-attribute=noreturn.
  - names:
      - -Wmissing-profile
    argument: ""
    description: Warn in case profiles in -fprofile-use do not exist.
  - names:
      - -Wno-frame-larger-than
    argument: ""
    description: Disable -Wframe-larger-than= warning. Equivalent to -Wframe-larger-than=<SIZE_MAX> or larger. Same as -Wframe-larger-than=.
  - names:
      - -Wno-larger-than
    argument: ""
    description: Disable -Wlarger-than= warning. Equivalent to -Wlarger-than=<SIZE_MAX> or larger. Same as -Wlargerthan=.
  - names:
      - -Wno-stack-usage
    argument: ""
    description: Disable Wstack-usage= warning. Equivalent to Wstack-usage=<SIZE_MAX> or larger. Same as -Wstack-usage=.
  - names:
      - -Wnull-dereference
    argument: ""
    description: Warn if dereferencing a NULL pointer may lead to erroneous or undefined behavior.
  - names:
      - -Wodr
    argument: ""
    description: Warn about some C++ One Definition Rule violations during link time optimization.
  - names:
      - -Woverflow
    argument: ""
    description: Warn about overflow in arithmetic expressions.
  - names:
      - -Wpacked
    argument: ""
    description: Warn when the packed attribute has no effect on struct layout.
  - names:
      - -Wpadded
    argument: ""
    description: Warn when padding is required to align structure members.
  - names:
      - -Wreturn-local-addr
    argument: ""
    description: Warn about returning a pointer/reference to a local or temporary variable.
  - names:
      - -Wshadow
    argument: ""
    description: Warn when one variable shadows another. Same as -Wshadow=global.
  - names:
      - -Wshadow-compatible-local
    argument: ""
    description: Same as -Wshadow=compatible-local.
  - names:
      - -Wshadow-local
    argument: ""
    description: Same as -Wshadow=local.
  - names:
      - -Wshadow
    argument: compatible-local
    description: Warn when one local variable shadows another local variable or parameter of compatible type.
  - names:
      - -Wshadow
    argument: global
    description: Warn when one variable shadows another (globally). Same as -Wshadow.
  - names:
      - -Wshadow
    argument: local
    description: Warn when one local variable shadows another local variable or parameter.
  - names:
      - -Wstack-protector
    argument: ""
    description: Warn when not issuing stack smashing protection for some reason.
  - names:
      - -Wstack-usage
    argument: <byte-size>
    description: Warn if stack usage might exceed <byte-size>.
  - names:
      - -Wstrict-aliasing
    argument: ""
    description: Warn about code which might break strict aliasing rules.
  - names:
      - -Wstrict-overflow
    argument: ""
    description: Warn about optimizations that assume that signed overflow is undefined.
  - names:
      - -Wsuggest-attribute
    argument: cold
    description: Warn about functions which might be candidates for __attribute__((cold)).
  - names:
      - -Wsuggest-attribute
    argument: const
    description: Warn about functions which might be candidates for __attribute__((const)).
  - names:
      - -Wsuggest-attribute
    argument: malloc
    description: Warn about functions which might be candidates for __attribute__((malloc)).
  - names:
      - -Wsuggest-attribute
    argument: noreturn
    description: Warn about functions which might be candidates for __attribute__((noreturn)).
  - names:
      - -Wsuggest-attribute
    argument: pure
    description: Warn about functions which might be candidates for __attribute__((pure)).
  - names:
      - -Wsuggest-final-methods
    argument: ""
    description: Warn about C++ virtual methods where adding final keyword would improve code quality.
  - names:
      - -Wsuggest-final-types
    argument: ""
    description: Warn about C++ polymorphic types where adding final keyword would improve code quality.
  - names:
      - -Wswitch-unreachable
    argument: ""
    description: Warn about statements between switch's controlling expression and the first case.
  - names:
      - -Wtrampolines
    argument: ""
    description: Warn whenever a trampoline is generated.
  - names:
      - -Wtype-limits
    argument: ""
    description: Warn if a comparison is always true or always false due to the limited range of the data type.
  - names:
      - -Wunreachable-code
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -Wunsafe-loop-optimizations
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -Wunused-but-set-parameter
    argument: ""
    description: Warn when a function parameter is only set, otherwise unused.
  - names:
      - -Wunused-but-set-variable
    argument: ""
    description: Warn when a variable is only set, otherwise unused.
  - names:
      - -Wunused-function
    argument: ""
    description: Warn when a function is unused.
  - names:
      - -Wunused-label
    argument: ""
    description: Warn when a label is unused.
  - names:
      - -Wunused-value
    argument: ""
    description: Warn when an expression value is unused.
  - names:
      - -Wvector-operation-performance
    argument: ""
    description: Warn when a vector operation is compiled outside the SIMD.
  - names:
      - -aux-info
    argument: <file>
    description: Emit declaration information into <file>.
  - names:
      - -aux-info
    argument: <arg>
    description: Same as -aux-info.
  - names:
      - -auxbase
    argument: ""
    description: This option lacks documentation.
  - names:
      - -auxbase-strip
    argument: ""
    description: This option lacks documentation.
  - names:
      - -dumpbase
    argument: <file>
    description: Set the file basename to be used for dumps.
  - names:
      - -dumpdir
    argument: <dir>
    description: Set the directory name to be used for dumps.
  - names:
      - -fPIC
    argument: ""
    description: Generate position-independent code if possible (large mode).
  - names:
      - -fPIE
    argument: ""
    description: Generate position-independent code for executables if possible (large mode).
  - names:
      - -fabi-version
    argument: <arg>
    description: The version of the C++ ABI in use.
  - names:
      - -faggressive-loop-optimizations
    argument: ""
    description: Aggressively optimize loops using language constraints.
  - names:
      - -falign-functions
    argument: ""
    description: Align the start of functions.
  - names:
      - -falign-functions
    argument: <arg>
    description: This option lacks documentation.
  - names:
      - -falign-jumps
    argument: ""
    description: Align labels which are only reached by jumping.
  - names:
      - -falign-jumps
    argument: <arg>
    description: This option lacks documentation.
  - names:
      - -falign-labels
    argument: ""
    description: Align all labels.
  - names:
      - -falign-labels
    argument: <arg>
    description: This option lacks documentation.
  - names:
      - -falign-loops
    argument: ""
    description: Align the start of loops.
  - names:
      - -falign-loops
    argument: <arg>
    description: This option lacks documentation.
  - names:
      - -fallocation-dce
    argument: ""
    description: Tell DCE to remove unused C++ allocations.
  - names:
      - -fallow-store-data-races
    argument: ""
    description: Allow the compiler to introduce new data races on stores.
  - names:
      - -fanalyzer
    argument: ""
    description: Enable static analysis pass.
  - names:
      - -fanalyzer-call-summaries
    argument: ""
    description: Approximate the effect of function calls to simplify analysis.
  - names:
      - -fanalyzer-checker
    argument: <arg>
    description: Restrict the analyzer to run just the named checker.
  - names:
      - -fanalyzer-fine-grained
    argument: ""
    description: Avoid combining multiple statements into one exploded edge.
  - names:
      - -fanalyzer-show-duplicate-count
    argument: ""
    description: Issue a note when diagnostics are deduplicated.
  - names:
      - -fanalyzer-state-merge
    argument: ""
    description: Merge similar-enough states during analysis.
  - names:
      - -fanalyzer-state-purge
    argument: ""
    description: Purge unneeded state during analysis.
  - names:
      - -fanalyzer-transitivity
    argument: ""
    description: Enable transitivity of constraints during analysis.
  - names:
      - -fanalyzer-verbose-edges
    argument: ""
    description: Emit more verbose descriptions of control flow in diagnostics.
  - names:
      - -fanalyzer-verbose-state-changes
    argument: ""
    description: Emit more verbose descriptions of state changes in diagnostics.
  - names:
      - -fanalyzer-verbosity
    argument: <arg>
    description: Control which events are displayed in diagnostic paths.
  - names:
      - -fargument-alias
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fargument-noalias
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fargument-noalias-anything
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fargument-noalias-global
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fasan-shadow-offset
    argument: <number>
    description: Use custom shadow memory offset.
  - names:
      - -fassociative-math
    argument: ""
    description: Allow optimization for floating-point arithmetic which may change the result of the operation due to rounding.
  - names:
      - -fasynchronous-unwind-tables
    argument: ""
    description: Generate unwind tables that are exact at each instruction boundary.
  - names:
      - -fauto-inc-dec
    argument: ""
    description: Generate auto-inc/dec instructions.
  - names:
      - -fauto-profile
    argument: ""
    description: Use sample profile information for call graph node weights. The default profile file is fbdata.afdo in 'pwd'.
  - names:
      - -fauto-profile
    argument: <arg>
    description: Use sample profile information for call graph node weights. The profile file is specified in the argument.
  - names:
      - -fbranch-count-reg
    argument: ""
    description: Replace add, compare, branch with branch on count register.
  - names:
      - -fbranch-probabilities
    argument: ""
    description: Use profiling information for branch probabilities.
  - names:
      - -fbranch-target-load-optimize
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fbranch-target-load-optimize2
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fbtr-bb-exclusive
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fcall-saved-
    argument: <register>
    description: Mark <register> as being preserved across functions.
  - names:
      - -fcall-used-
    argument: <register>
    description: Mark <register> as being corrupted by function calls.
  - names:
      - -fcaller-saves
    argument: ""
    description: Save registers around function calls.
  - names:
      - -fcallgraph-info
    argument: ""
    description: Output callgraph information on a per-file basis.
  - names:
      - -fcallgraph-info
    argument: <arg>
    description: Output callgraph information on a per-file basis with decorations.
  - names:
      - -fcf-protection
    argument: ""
    description: Same as -fcf-protection=full.
  - names:
      - -fcf-protection
    argument: '[full|branch|return|none|check]'
    description: Instrument functions with checks to verify jump/call/return control-flow transfer instructions have valid targets.
  - names:
      - -fcheck-data-deps
    argument: ""
    description: This switch is deprecated; do not use.
  - names:
      - -fcheck-new
    argument: ""
    description: Check the return value of new in C++.
  - names:
      - -fchecking
    argument: ""
    description: Perform internal consistency checkings.
  - names:
      - -fchecking
    argument: <arg>
    description: Perform internal consistency checkings.
  - names:
      - -fcode-hoisting
    argument: ""
    description: Enable code hoisting.
  - names:
      - -fcombine-stack-adjustments
    argument: ""
    description: Looks for opportunities to reduce stack adjustments and stack references.
  - names:
      - -fcommon
    argument: ""
    description: Put uninitialized globals in the common section.
  - names:
      - -fcompare-debug-second
    argument: ""
    description: Run only the second compilation of -fcompare-debug.
  - names:
      - -fcompare-debug
    argument: '[=<opts>]'
    description: Compile with and without e.g. -gtoggle, and compare the final-insns dump.
  - names:
      - -fcompare-elim
    argument: ""
    description: Perform comparison elimination after register allocation has finished.
  - names:
      - -fconserve-stack
    argument: ""
    description: Do not perform optimizations increasing noticeably stack usage.
  - names:
      - -fcprop-registers
    argument: ""
    description: Perform a register copy-propagation optimization pass.
  - names:
      - -fcrossjumping
    argument: ""
    description: Perform cross-jumping optimization.
  - names:
      - -fcse-follow-jumps
    argument: ""
    description: When running CSE, follow jumps to their targets.
  - names:
      - -fcse-skip-blocks
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fcx-fortran-rules
    argument: ""
    description: Complex multiplication and division follow Fortran rules.
  - names:
      - -fcx-limited-range
    argument: ""
    description: Omit range reduction step when performing complex division.
  - names:
      - -fdata-sections
    argument: ""
    description: Place data items into their own section.
  - names:
      - -fdbg-cnt-list
    argument: ""
    description: List all available debugging counters with their limits and counts.
  - names:
      - -fdbg-cnt
    argument: '{<counter>[:<lower_limit1>-]<upper_limit1>[:<lower_limit2>-<upper_limit2>:...][,<counter>:...]}'
    description: Set the debug counter limit.
  - names:
      - -fdce
    argument: ""
    description: Use the RTL dead code elimination pass.
  - names:
      - -fdebug-prefix-map
    argument: <old>=<new>
    description: Map one directory name to another in debug information.
  - names:
      - -fdebug-types-section
    argument: ""
    description: Output .debug_types section when using DWARF v4 debuginfo.
  - names:
      - -fdefer-pop
    argument: ""
    description: Defer popping functions args from stack until later.
  - names:
      - -fdelayed-branch
    argument: ""
    description: Attempt to fill delay slots of branch instructions.
  - names:
      - -fdelete-dead-exceptions
    argument: ""
    description: Delete dead instructions that may throw exceptions.
  - names:
      - -fdelete-null-pointer-checks
    argument: ""
    description: Delete useless null pointer checks.
  - names:
      - -fdevirtualize
    argument: ""
    description: Try to convert virtual calls to direct ones.
  - names:
      - -fdevirtualize-at-ltrans
    argument: ""
    description: Stream extra data to support more aggressive devirtualization in LTO local transformation mode.
  - names:
      - -fdevirtualize-speculatively
    argument: ""
    description: Perform speculative devirtualization.
  - names:
      - -fdiagnostics-color
    argument: ""
    description: Same as -fdiagnostics-color=always (or, in negated form, -fdiagnostics-color=never).
  - names:
      - -fdiagnostics-color
    argument: '[never|always|auto]'
    description: Colorize diagnostics.
  - names:
      - -fdiagnostics-format
    argument: '[text|json]'
    description: Select output format.
  - names:
      - -fdiagnostics-generate-patch
    argument: ""
    description: Print fix-it hints to stderr in unified diff format.
  - names:
      - -fdiagnostics-minimum-margin-width
    argument: <arg>
    description: Set minimum width of left margin of source code when showing source.
  - names:
      - -fdiagnostics-parseable-fixits
    argument: ""
    description: Print fix-it hints in machine-readable form.
  - names:
      - -fdiagnostics-path-format
    argument: <arg>
    description: Specify how to print any control-flow path associated with a diagnostic.
  - names:
      - -fdiagnostics-show-caret
    argument: ""
    description: Show the source line with a caret indicating the column.
  - names:
      - -fdiagnostics-show-cwe
    argument: ""
    description: Print CWE identifiers for diagnostic messages, where available.
  - names:
      - -fdiagnostics-show-labels
    argument: ""
    description: Show labels annotating ranges of source code when showing source.
  - names:
      - -fdiagnostics-show-line-numbers
    argument: ""
    description: Show line numbers in the left margin when showing source.
  - names:
      - -fdiagnostics-show-location
    argument: '[once|every-line]'
    description: How often to emit source location at the beginning of line-wrapped diagnostics.
  - names:
      - -fdiagnostics-show-option
    argument: ""
    description: Amend appropriate diagnostic messages with the command line option that controls them.
  - names:
      - -fdiagnostics-show-path-depths
    argument: ""
    description: Show stack depths of events in paths.
  - names:
      - -fdiagnostics-urls
    argument: '[never|always|auto]'
    description: Embed URLs in diagnostics.
  - names:
      - -fdisable-
    argument: '[tree|rtl|ipa]-<pass>=range1+range2'
    description: Disable an optimization pass.
  - names:
      - -fdse
    argument: ""
    description: Use the RTL dead store elimination pass.
  - names:
      - -fdump-
    argument: <type>
    description: Dump various compiler internals to a file.
  - names:
      - -fdump-analyzer
    argument: ""
    description: Dump various analyzer internals to SRCFILE.analyzer.txt.
  - names:
      - -fdump-analyzer-callgraph
    argument: ""
    description: Dump analyzer-specific call graph information to a SRCFILE.callgraph.dot file.
  - names:
      - -fdump-analyzer-exploded-graph
    argument: ""
    description: Dump the analyzer exploded graph to a SRCFILE.eg.dot file.
  - names:
      - -fdump-analyzer-exploded-nodes
    argument: ""
    description: Emit diagnostics showing the location of nodes in the exploded graph.
  - names:
      - -fdump-analyzer-exploded-nodes-2
    argument: ""
    description: Dump a textual representation of the exploded graph to SRCFILE.eg.txt.
  - names:
      - -fdump-analyzer-exploded-nodes-3
    argument: ""
    description: Dump a textual representation of the exploded graph to SRCFILE.eg-ID.txt.
  - names:
      - -fdump-analyzer-state-purge
    argument: ""
    description: Dump state-purging information to a SRCFILE.state-purge.dot file.
  - names:
      - -fdump-analyzer-stderr
    argument: ""
    description: Dump various analyzer internals to stderr.
  - names:
      - -fdump-analyzer-supergraph
    argument: ""
    description: Dump the analyzer supergraph to a SRCFILE.supergraph.dot file.
  - names:
      - -fdump-final-insns
    argument: filename
    description: Dump to filename the insns at the end of translation.
  - names:
      - -fdump-go-spec
    argument: filename
    description: Write all declarations to file as Go code.
  - names:
      - -fdump-internal-locations
    argument: ""
    description: Dump detailed information on GCC's internal representation of source code locations.
  - names:
      - -fdump-noaddr
    argument: ""
    description: Suppress output of addresses in debugging dumps.
  - names:
      - -fdump-passes
    argument: ""
    description: Dump optimization passes.
  - names:
      - -fdump-unnumbered
    argument: ""
    description: Suppress output of instruction numbers, line number notes and addresses in debugging dumps.
  - names:
      - -fdump-unnumbered-links
    argument: ""
    description: Suppress output of previous and next insn numbers in debugging dumps.
  - names:
      - -fdwarf2-cfi-asm
    argument: ""
    description: Enable CFI tables via GAS assembler directives.
  - names:
      - -fearly-inlining
    argument: ""
    description: Perform early inlining.
  - names:
      - -feliminate-dwarf2-dups
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -feliminate-unused-debug-symbols
    argument: ""
    description: Perform unused symbol elimination in debug info.
  - names:
      - -feliminate-unused-debug-types
    argument: ""
    description: Perform unused type elimination in debug info.
  - names:
      - -femit-class-debug-always
    argument: ""
    description: Do not suppress C++ class debug information.
  - names:
      - -fenable-
    argument: '[tree|rtl|ipa]-<pass>=range1+range2'
    description: Enable an optimization pass.
  - names:
      - -fexcess-precision
    argument: '[fast|standard]'
    description: Specify handling of excess floating-point precision.
  - names:
      - -fexpensive-optimizations
    argument: ""
    description: Perform a number of minor, expensive optimizations.
  - names:
      - -ffast-math
    argument: ""
    description: This option lacks documentation.
  - names:
      - -ffat-lto-objects
    argument: ""
    description: Output lto objects containing both the intermediate language and binary output.
  - names:
      - -ffile-prefix-map
    argument: <old>=<new>
    description: Map one directory name to another in compilation result.
  - names:
      - -ffinite-loops
    argument: ""
    description: Assume that loops with an exit will terminate and not loop indefinitely.
  - names:
      - -ffinite-math-only
    argument: ""
    description: Assume no NaNs or infinities are generated.
  - names:
      - -ffixed-
    argument: <register>
    description: Mark <register> as being unavailable to the compiler.
  - names:
      - -ffloat-store
    argument: ""
    description: Don't allocate floats and doubles in extended-precision registers.
  - names:
      - -fforce-addr
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fforward-propagate
    argument: ""
    description: Perform a forward propagation pass on RTL.
  - names:
      - -ffp-contract
    argument: '[off|on|fast]'
    description: Perform floating-point expression contraction.
  - names:
      - -ffp-int-builtin-inexact
    argument: ""
    description: Allow built-in functions ceil, floor, round, trunc to raise "inexact" exceptions.
  - names:
      - -ffunction-cse
    argument: ""
    description: Allow function addresses to be held in registers.
  - names:
      - -ffunction-sections
    argument: ""
    description: Place each function into its own section.
  - names:
      - -fgcse
    argument: ""
    description: Perform global common subexpression elimination.
  - names:
      - -fgcse-after-reload
    argument: ""
    description: Perform global common subexpression elimination after register allocation has finished.
  - names:
      - -fgcse-las
    argument: ""
    description: Perform redundant load after store elimination in global common subexpression elimination.
  - names:
      - -fgcse-lm
    argument: ""
    description: Perform enhanced load motion during global common subexpression elimination.
  - names:
      - -fgcse-sm
    argument: ""
    description: Perform store motion after global common subexpression elimination.
  - names:
      - -fgnat-encodings
    argument: '[all|gdb|minimal]'
    description: Select the balance between GNAT encodings and standard DWARF emitted in the debug information.
  - names:
      - -fgnu-tm
    argument: ""
    description: Enable support for GNU transactional memory.
  - names:
      - -fgnu-unique
    argument: ""
    description: Use STB_GNU_UNIQUE if supported by the assembler.
  - names:
      - -fgraphite
    argument: ""
    description: Enable in and out of Graphite representation.
  - names:
      - -fgraphite-identity
    argument: ""
    description: Enable Graphite Identity transformation.
  - names:
      - -fguess-branch-probability
    argument: ""
    description: Enable guessing of branch probabilities.
  - names:
      - -fhelp
    argument: ""
    description: Same as --help.
  - names:
      - -fhelp
    argument: <arg>
    description: Same as --help=.
  - names:
      - -fhoist-adjacent-loads
    argument: ""
    description: Enable hoisting adjacent loads to encourage generating conditional move instructions.
  - names:
      - -fident
    argument: ""
    description: 'Process #ident directives.'
  - names:
      - -fif-conversion
    argument: ""
    description: Perform conversion of conditional jumps to branchless equivalents.
  - names:
      - -fif-conversion2
    argument: ""
    description: Perform conversion of conditional jumps to conditional execution.
  - names:
      - -findirect-inlining
    argument: ""
    description: Perform indirect inlining.
  - names:
      - -finhibit-size-directive
    argument: ""
    description: Do not generate .size directives.
  - names:
      - -finline
    argument: ""
    description: Enable inlining of function declared "inline", disabling disables all inlining.
  - names:
      - -finline-atomics
    argument: ""
    description: Inline __atomic operations when a lock free instruction sequence is available.
  - names:
      - -finline-functions
    argument: ""
    description: Integrate functions not declared "inline" into their callers when profitable.
  - names:
      - -finline-functions-called-once
    argument: ""
    description: Integrate functions only required by their single caller.
  - names:
      - -finline-limit-
    argument: ""
    description: Same as -finline-limit=.
  - names:
      - -finline-limit
    argument: <number>
    description: Limit the size of inlined functions to <number>.
  - names:
      - -finline-small-functions
    argument: ""
    description: Integrate functions into their callers when code size is known not to grow.
  - names:
      - -finstrument-functions
    argument: ""
    description: Instrument function entry and exit with profiling calls.
  - names:
      - -finstrument-functions-exclude-file-list
    argument: filename,...
    description: Do not instrument functions listed in files.
  - names:
      - -finstrument-functions-exclude-function-list
    argument: name,...
    description: Do not instrument listed functions.
  - names:
      - -fipa-bit-cp
    argument: ""
    description: Perform interprocedural bitwise constant propagation.
  - names:
      - -fipa-cp
    argument: ""
    description: Perform interprocedural constant propagation.
  - names:
      - -fipa-cp-alignment
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fipa-cp-clone
    argument: ""
    description: Perform cloning to make Interprocedural constant propagation stronger.
  - names:
      - -fipa-icf
    argument: ""
    description: Perform Identical Code Folding for functions and read-only variables.
  - names:
      - -fipa-icf-functions
    argument: ""
    description: Perform Identical Code Folding for functions.
  - names:
      - -fipa-icf-variables
    argument: ""
    description: Perform Identical Code Folding for variables.
  - names:
      - -fipa-matrix-reorg
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fipa-profile
    argument: ""
    description: Perform interprocedural profile propagation.
  - names:
      - -fipa-pta
    argument: ""
    description: Perform interprocedural points-to analysis.
  - names:
      - -fipa-pure-const
    argument: ""
    description: Discover pure and const functions.
  - names:
      - -fipa-ra
    argument: ""
    description: Use caller save register across calls if possible.
  - names:
      - -fipa-reference
    argument: ""
    description: Discover read-only and non addressable static variables.
  - names:
      - -fipa-reference-addressable
    argument: ""
    description: Discover read-only, write-only and non-addressable static variables.
  - names:
      - -fipa-sra
    argument: ""
    description: Perform interprocedural reduction of aggregates.
  - names:
      - -fipa-stack-alignment
    argument: ""
    description: Reduce stack alignment on call sites if possible.
  - names:
      - -fipa-struct-reorg
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fipa-vrp
    argument: ""
    description: Perform IPA Value Range Propagation.
  - names:
      - -fira-algorithm
    argument: '[CB|priority]'
    description: Set the used IRA algorithm.
  - names:
      - -fira-hoist-pressure
    argument: ""
    description: Use IRA based register pressure calculation in RTL hoist optimizations.
  - names:
      - -fira-loop-pressure
    argument: ""
    description: Use IRA based register pressure calculation in RTL loop optimizations.
  - names:
      - -fira-region
    argument: '[one|all|mixed]'
    description: Set regions for IRA.
  - names:
      - -fira-share-save-slots
    argument: ""
    description: Share slots for saving different hard registers.
  - names:
      - -fira-share-spill-slots
    argument: ""
    description: Share stack slots for spilled pseudo-registers.
  - names:
      - -fira-verbose
    argument: <number>
    description: Control IRA's level of diagnostic messages.
  - names:
      - -fisolate-erroneous-paths-attribute
    argument: ""
    description: Detect paths that trigger erroneous or undefined behavior due to a null value being used in a way forbidden by a returns_nonnull or nonnull attribute. Isolate those paths from the main control flow and turn the statement with erroneous or undefined behavior into a trap.
  - names:
      - -fisolate-erroneous-paths-dereference
    argument: ""
    description: Detect paths that trigger erroneous or undefined behavior due to dereferencing a null pointer. Isolate those paths from the main control flow and turn the statement with erroneous or undefined behavior into a trap.
  - names:
      - -fivopts
    argument: ""
    description: Optimize induction variables on trees.
  - names:
      - -fjump-tables
    argument: ""
    description: Use jump tables for sufficiently large switch statements.
  - names:
      - -fkeep-gc-roots-live
    argument: ""
    description: This option lacks documentation.
  - names:
      - -fkeep-inline-functions
    argument: ""
    description: Generate code for functions even if they are fully inlined.
  - names:
      - -fkeep-static-consts
    argument: ""
    description: Emit static const variables even if they are not used.
  - names:
      - -fkeep-static-functions
    argument: ""
    description: Generate code for static functions even if they are never called.
  - names:
      - -fleading-underscore
    argument: ""
    description: Give external symbols a leading underscore.
  - names:
      - -flifetime-dse
    argument: ""
    description: Tell DSE that the storage for a C++ object is dead when the constructor starts and when the destructor finishes.
  - names:
      - -flifetime-dse
    argument: <0,2>
    description: This option lacks documentation.
  - names:
      - -flimit-function-alignment
    argument: ""
    description: This option lacks documentation.
  - names:
      - -flive-patching
    argument: ""
    description: Same as -flive-patching=inline-clone.
  - names:
      - -flive-patching
    argument: '[inline-only-static|inline-clone]'
    description: Control IPA optimizations to provide a safe compilation for live-patching. At the same time, provides multiple-level control on the enabled IPA optimizations.
  - names:
      - -flive-range-shrinkage
    argument: ""
    description: Relief of register pressure through live range shrinkage.
  - names:
      - -floop-block
    argument: ""
    description: Enable loop nest transforms. Same as -floop-nest-optimize. Same as -floop-nest-optimize.
  - names:
      - -floop-flatten
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -floop-interchange
    argument: ""
    description: Enable loop interchange on trees.
  - names:
      - -floop-nest-optimize
    argument: ""
    description: Enable the loop nest optimizer.
  - names:
      - -floop-optimize
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -floop-parallelize-all
    argument: ""
    description: Mark all loops as parallel.
  - names:
      - -floop-strip-mine
    argument: ""
    description: Enable loop nest transforms. Same as -floop-nest-optimize. Same as -floop-nest-optimize.
  - names:
      - -floop-unroll-and-jam
    argument: ""
    description: Perform unroll-and-jam on loops.
  - names:
      - -flra-remat
    argument: ""
    description: Do CFG-sensitive rematerialization in LRA.
  - names:
      - -flto
    argument: ""
    description: Enable link-time optimization.
  - names:
      - -flto-compression-level
    argument: <number>
    description: Use z Use zlib/zstd compression level <number> for IL.
  - names:
      - -flto-odr-type-merging
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -flto-partition
    argument: <arg>
    description: Specify the algorithm to partition symbols and vars at linktime.
  - names:
      - -flto-report
    argument: ""
    description: Report various link-time optimization statistics.
  - names:
      - -flto-report-wpa
    argument: ""
    description: Report various link-time optimization statistics for WPA only.
  - names:
      - -flto
    argument: <arg>
    description: Link-time optimization with number of parallel jobs or jobserver.
  - names:
      - -fmath-errno
    argument: ""
    description: Set errno after built-in math functions.
  - names:
      - -fmax-errors
    argument: <number>
    description: Maximum number of errors to report.
  - names:
      - -fmem-report
    argument: ""
    description: Report on permanent memory allocation.
  - names:
      - -fmem-report-wpa
    argument: ""
    description: Report on permanent memory allocation in WPA only.
  - names:
      - -fmerge-all-constants
    argument: ""
    description: Attempt to merge identical constants and constant variables.
  - names:
      - -fmerge-constants
    argument: ""
    description: Attempt to merge identical constants across compilation units.
  - names:
      - -fmerge-debug-strings
    argument: ""
    description: Attempt to merge identical debug strings across compilation units.
  - names:
      - -fmessage-length
    argument: <number>
    description: Limit diagnostics to <number> characters per line. 0 suppresses line-wrapping.
  - names:
      - -fmodulo-sched
    argument: ""
    description: Perform SMS based modulo scheduling before the first scheduling pass.
  - names:
      - -fmodulo-sched-allow-regmoves
    argument: ""
    description: Perform SMS based modulo scheduling with register moves allowed.
  - names:
      - -fmove-loop-invariants
    argument: ""
    description: Move loop invariant computations out of loops.
  - names:
      - -fnon-call-exceptions
    argument: ""
    description: Support synchronous non-call exceptions.
  - names:
      - -foffload-abi
    argument: '[lp64|ilp32]'
    description: Set the ABI to use in an offload compiler.
  - names:
      - -foffload
    argument: <targets>=<options>
    description: Specify offloading targets and options for them.
  - names:
      - -fomit-frame-pointer
    argument: ""
    description: When possible do not generate stack frames.
  - names:
      - -fopt-info
    argument: ""
    description: Enable all optimization info dumps on stderr.
  - names:
      - -fopt-info
    argument: '[-<type>=filename]'
    description: Dump compiler optimization details.
  - names:
      - -foptimize-register-move
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -foptimize-sibling-calls
    argument: ""
    description: Optimize sibling and tail recursive calls.
  - names:
      - -foptimize-strlen
    argument: ""
    description: Enable string length optimizations on trees.
  - names:
      - -fpack-struct
    argument: ""
    description: Pack structure members together without holes.
  - names:
      - -fpack-struct
    argument: <number>
    description: Set initial maximum structure member alignment.
  - names:
      - -fpartial-inlining
    argument: ""
    description: Perform partial inlining.
  - names:
      - -fpatchable-function-entry
    argument: <arg>
    description: Insert NOP instructions at each function entry.
  - names:
      - -fpcc-struct-return
    argument: ""
    description: Return small aggregates in memory, not registers.
  - names:
      - -fpeel-loops
    argument: ""
    description: Perform loop peeling.
  - names:
      - -fpeephole
    argument: ""
    description: Enable machine specific peephole optimizations.
  - names:
      - -fpeephole2
    argument: ""
    description: Enable an RTL peephole pass before sched2.
  - names:
      - -fpermitted-flt-eval-methods
    argument: '[c11|ts-18661]'
    description: Specify which values of FLT_EVAL_METHOD are permitted.
  - names:
      - -fpic
    argument: ""
    description: Generate position-independent code if possible (small mode).
  - names:
      - -fpie
    argument: ""
    description: Generate position-independent code for executables if possible (small mode).
  - names:
      - -fplt
    argument: ""
    description: 'Use PLT for PIC calls (-fno-plt: load the address from GOT at call site).'
  - names:
      - -fplugin-arg-
    argument: <name>-<key>
    description: Specify argument <key>=<value> for plugin <name>.
  - names:
      - -fplugin-arg-
    argument: <name>-<key>=<value>
    description: Specify argument <key>=<value> for plugin <name>.
  - names:
      - -fplugin
    argument: <arg>
    description: Specify a plugin to load.
  - names:
      - -fpost-ipa-mem-report
    argument: ""
    description: Report on memory allocation before interprocedural optimization.
  - names:
      - -fpre-ipa-mem-report
    argument: ""
    description: Report on memory allocation before interprocedural optimization.
  - names:
      - -fpredictive-commoning
    argument: ""
    description: Run predictive commoning optimization.
  - names:
      - -fprefetch-loop-arrays
    argument: ""
    description: Generate prefetch instructions, if available, for arrays in loops.
  - names:
      - -fprofile
    argument: ""
    description: Enable basic program profiling code.
  - names:
      - -fprofile-abs-path
    argument: ""
    description: Generate absolute source path names for gcov.
  - names:
      - -fprofile-arcs
    argument: ""
    description: Insert arc-based program profiling code.
  - names:
      - -fprofile-correction
    argument: ""
    description: Enable correction of flow inconsistent profile data input.
  - names:
      - -fprofile-dir
    argument: <arg>
    description: Set the top-level directory for storing the profile data. The default is 'pwd'.
  - names:
      - -fprofile-exclude-files
    argument: <file>
    description: Instrument only functions from files where names do not match all the regular expressions (separated by a semi-colon).
  - names:
      - -fprofile-filter-files
    argument: <file>
    description: Instrument only functions from files where names match any regular expression (separated by a semi-colon).
  - names:
      - -fprofile-generate
    argument: ""
    description: Enable common options for generating profile info for profile feedback directed optimizations.
  - names:
      - -fprofile-generate
    argument: <arg>
    description: Enable common options for generating profile info for profile feedback directed optimizations, and set -fprofile-dir=.
  - names:
      - -fprofile-note
    argument: <arg>
    description: Select the name for storing the profile note file.
  - names:
      - -fprofile-partial-training
    argument: ""
    description: Do not assume that functions never executed during the train run are cold.
  - names:
      - -fprofile-prefix-path
    argument: <arg>
    description: Remove prefix from absolute path before mangling name for -fprofile-generate= and -fprofile-use=.
  - names:
      - -fprofile-reorder-functions
    argument: ""
    description: Enable function reordering that improves code placement.
  - names:
      - -fprofile-report
    argument: ""
    description: Report on consistency of profile.
  - names:
      - -fprofile-reproducible
    argument: '[serial|parallel-runs|multithreaded]'
    description: Control level of reproducibility of profile gathered by -fprofile-generate.
  - names:
      - -fprofile-update
    argument: '[single|atomic|prefer-atomic]'
    description: Set the profile update method.
  - names:
      - -fprofile-use
    argument: ""
    description: Enable common options for performing profile feedback directed optimizations.
  - names:
      - -fprofile-use
    argument: <arg>
    description: Enable common options for performing profile feedback directed optimizations, and set -fprofile-dir=.
  - names:
      - -fprofile-values
    argument: ""
    description: Insert code to profile values of expressions.
  - names:
      - -frandom-seed
    argument: ""
    description: This option lacks documentation.
  - names:
      - -frandom-seed
    argument: <string>
    description: Make compile reproducible using <string>.
  - names:
      - -freciprocal-math
    argument: ""
    description: Same as -fassociative-math for expressions which include division.
  - names:
      - -frecord-gcc-switches
    argument: ""
    description: Record gcc command line switches in the object file.
  - names:
      - -free
    argument: ""
    description: Turn on Redundant Extensions Elimination pass.
  - names:
      - -freg-struct-return
    argument: ""
    description: Return small aggregates in registers.
  - names:
      - -fregmove
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -frename-registers
    argument: ""
    description: Perform a register renaming optimization pass.
  - names:
      - -freorder-blocks
    argument: ""
    description: Reorder basic blocks to improve code placement.
  - names:
      - -freorder-blocks-algorithm
    argument: '[simple|stc]'
    description: Set the used basic block reordering algorithm.
  - names:
      - -freorder-blocks-and-partition
    argument: ""
    description: Reorder basic blocks and partition into hot and cold sections.
  - names:
      - -freorder-functions
    argument: ""
    description: Reorder functions to improve code placement.
  - names:
      - -freport-bug
    argument: ""
    description: Collect and dump debug information into temporary file if ICE in C/C++ compiler occurred.
  - names:
      - -frerun-cse-after-loop
    argument: ""
    description: Add a common subexpression elimination pass after loop optimizations.
  - names:
      - -frerun-loop-opt
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -freschedule-modulo-scheduled-loops
    argument: ""
    description: Enable/Disable the traditional scheduling in loops that already passed modulo scheduling.
  - names:
      - -frounding-math
    argument: ""
    description: Disable optimizations that assume default FP rounding behavior.
  - names:
      - -fsanitize-address-use-after-scope
    argument: ""
    description: This option lacks documentation.
  - names:
      - -fsanitize-coverage
    argument: <arg>
    description: Select type of coverage sanitization.
  - names:
      - -fsanitize-recover
    argument: ""
    description: This switch is deprecated; use -fsanitize-recover= instead.
  - names:
      - -fsanitize-recover
    argument: <arg>
    description: After diagnosing undefined behavior attempt to continue execution.
  - names:
      - -fsanitize-sections
    argument: <sec1,sec2,...>
    description: Sanitize global variables in user-defined sections.
  - names:
      - -fsanitize-undefined-trap-on-error
    argument: ""
    description: Use trap instead of a library function for undefined behavior sanitization.
  - names:
      - -fsanitize
    argument: <arg>
    description: Select what to sanitize.
  - names:
      - -fsave-optimization-record
    argument: ""
    description: Write a SRCFILE.opt-record.json file detailing what optimizations were performed.
  - names:
      - -fsched-critical-path-heuristic
    argument: ""
    description: Enable the critical path heuristic in the scheduler.
  - names:
      - -fsched-dep-count-heuristic
    argument: ""
    description: Enable the dependent count heuristic in the scheduler.
  - names:
      - -fsched-group-heuristic
    argument: ""
    description: Enable the group heuristic in the scheduler.
  - names:
      - -fsched-interblock
    argument: ""
    description: Enable scheduling across basic blocks.
  - names:
      - -fsched-last-insn-heuristic
    argument: ""
    description: Enable the last instruction heuristic in the scheduler.
  - names:
      - -fsched-pressure
    argument: ""
    description: Enable register pressure sensitive insn scheduling.
  - names:
      - -fsched-rank-heuristic
    argument: ""
    description: Enable the rank heuristic in the scheduler.
  - names:
      - -fsched-spec
    argument: ""
    description: Allow speculative motion of non-loads.
  - names:
      - -fsched-spec-insn-heuristic
    argument: ""
    description: Enable the speculative instruction heuristic in the scheduler.
  - names:
      - -fsched-spec-load
    argument: ""
    description: Allow speculative motion of some loads.
  - names:
      - -fsched-spec-load-dangerous
    argument: ""
    description: Allow speculative motion of more loads.
  - names:
      - -fsched-stalled-insns
    argument: ""
    description: Allow premature scheduling of queued insns.
  - names:
      - -fsched-stalled-insns-dep
    argument: ""
    description: Set dependence distance checking in premature scheduling of queued insns.
  - names:
      - -fsched-stalled-insns-dep
    argument: <number>
    description: Set dependence distance checking in premature scheduling of queued insns.
  - names:
      - -fsched-stalled-insns
    argument: <number>
    description: Set number of queued insns that can be prematurely scheduled.
  - names:
      - -fsched-verbose
    argument: <number>
    description: Set the verbosity level of the scheduler.
  - names:
      - -fsched2-use-superblocks
    argument: ""
    description: If scheduling post reload, do superblock scheduling.
  - names:
      - -fsched2-use-traces
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fschedule-fusion
    argument: ""
    description: Perform a target dependent instruction fusion optimization pass.
  - names:
      - -fschedule-insns
    argument: ""
    description: Reschedule instructions before register allocation.
  - names:
      - -fschedule-insns2
    argument: ""
    description: Reschedule instructions after register allocation.
  - names:
      - -fsection-anchors
    argument: ""
    description: Access data in the same section from shared anchor points.
  - names:
      - -fsee
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fsel-sched-pipelining
    argument: ""
    description: Perform software pipelining of inner loops during selective scheduling.
  - names:
      - -fsel-sched-pipelining-outer-loops
    argument: ""
    description: Perform software pipelining of outer loops during selective scheduling.
  - names:
      - -fsel-sched-reschedule-pipelined
    argument: ""
    description: Reschedule pipelined regions without pipelining.
  - names:
      - -fselective-scheduling
    argument: ""
    description: Schedule instructions using selective scheduling algorithm.
  - names:
      - -fselective-scheduling2
    argument: ""
    description: Run selective scheduling after reload.
  - names:
      - -fself-test
    argument: <arg>
    description: Run self-tests, using the given path to locate test files.
  - names:
      - -fsemantic-interposition
    argument: ""
    description: Allow interposing function (or variables) by ones with different semantics (or initializer) respectively by dynamic linker.
  - names:
      - -fshow-column
    argument: ""
    description: Show column numbers in diagnostics, when available. Default on.
  - names:
      - -fshrink-wrap
    argument: ""
    description: Emit function prologues only before parts of the function that need it, rather than at the top of the function.
  - names:
      - -fshrink-wrap-separate
    argument: ""
    description: Shrink-wrap parts of the prologue and epilogue separately.
  - names:
      - -fsignaling-nans
    argument: ""
    description: Disable optimizations observable by IEEE signaling NaNs.
  - names:
      - -fsigned-zeros
    argument: ""
    description: Disable floating point optimizations that ignore the IEEE signedness of zero.
  - names:
      - -fsimd-cost-model
    argument: '[unlimited|dynamic|cheap]'
    description: Specifies the vectorization cost model for code marked with a simd directive.
  - names:
      - -fsingle-precision-constant
    argument: ""
    description: Convert floating point constants to single precision constants.
  - names:
      - -fsplit-ivs-in-unroller
    argument: ""
    description: Split lifetimes of induction variables when loops are unrolled.
  - names:
      - -fsplit-loops
    argument: ""
    description: Perform loop splitting.
  - names:
      - -fsplit-paths
    argument: ""
    description: Split paths leading to loop backedges.
  - names:
      - -fsplit-stack
    argument: ""
    description: Generate discontiguous stack frames.
  - names:
      - -fsplit-wide-types
    argument: ""
    description: Split wide types into independent registers.
  - names:
      - -fsplit-wide-types-early
    argument: ""
    description: Split wide types into independent registers earlier.
  - names:
      - -fssa-backprop
    argument: ""
    description: Enable backward propagation of use properties at the SSA level.
  - names:
      - -fssa-phiopt
    argument: ""
    description: Optimize conditional patterns using SSA PHI nodes.
  - names:
      - -fstack-check
    argument: ""
    description: Insert stack checking code into the program. Same as -fstack-check=specific. Same as -fstack-check=.
  - names:
      - -fstack-check
    argument: '[no|generic|specific]'
    description: Insert stack checking code into the program.
  - names:
      - -fstack-clash-protection
    argument: ""
    description: Insert code to probe each page of stack space as it is allocated to protect from stack-clash style attacks.
  - names:
      - -fstack-limit
    argument: ""
    description: This option lacks documentation.
  - names:
      - -fstack-limit-register
    argument: <register>
    description: Trap if the stack goes past <register>.
  - names:
      - -fstack-limit-symbol
    argument: <name>
    description: Trap if the stack goes past symbol <name>.
  - names:
      - -fstack-protector
    argument: ""
    description: Use propolice as a stack protection method.
  - names:
      - -fstack-protector-all
    argument: ""
    description: Use a stack protection method for every function.
  - names:
      - -fstack-protector-explicit
    argument: ""
    description: Use stack protection method only for functions with the stack_protect attribute.
  - names:
      - -fstack-protector-strong
    argument: ""
    description: Use a smart stack protection method for certain functions.
  - names:
      - -fstack-reuse
    argument: '[all|named_vars|none]'
    description: Set stack reuse level for local variables.
  - names:
      - -fstack-usage
    argument: ""
    description: Output stack usage information on a per-function basis.
  - names:
      - -fstdarg-opt
    argument: ""
    description: Optimize amount of stdarg registers saved to stack at start of function.
  - names:
      - -fstore-merging
    argument: ""
    description: Merge adjacent stores.
  - names:
      - -fstrength-reduce
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fstrict-aliasing
    argument: ""
    description: Assume strict aliasing rules apply.
  - names:
      - -fstrict-overflow
    argument: ""
    description: Treat signed overflow as undefined. Negated as -fwrapv -fwrapv-pointer.
  - names:
      - -fstrict-volatile-bitfields
    argument: ""
    description: Force bitfield accesses to match their type width.
  - names:
      - -fsync-libcalls
    argument: ""
    description: Implement __atomic operations via libcalls to legacy __sync functions.
  - names:
      - -fsyntax-only
    argument: ""
    description: Check for syntax errors, then stop.
  - names:
      - -ftarget-help
    argument: ""
    description: Same as --target-help.
  - names:
      - -ftest-coverage
    argument: ""
    description: Create data files needed by "gcov".
  - names:
      - -fthread-jumps
    argument: ""
    description: Perform jump threading optimizations.
  - names:
      - -ftime-report
    argument: ""
    description: Report the time taken by each compiler pass.
  - names:
      - -ftime-report-details
    argument: ""
    description: Record times taken by sub-phases separately.
  - names:
      - -ftls-model
    argument: '[global-dynamic|local-dynamic|initial-exec|local-exec]'
    description: Set the default thread-local storage code generation model.
  - names:
      - -ftoplevel-reorder
    argument: ""
    description: Reorder top level functions, variables, and asms.
  - names:
      - -ftracer
    argument: ""
    description: Perform superblock formation via tail duplication.
  - names:
      - -ftrampolines
    argument: ""
    description: For targets that normally need trampolines for nested functions, always generate them instead of using descriptors.
  - names:
      - -ftrapping-math
    argument: ""
    description: Assume floating-point operations can trap.
  - names:
      - -ftrapv
    argument: ""
    description: Trap for signed overflow in addition, subtraction and multiplication.
  - names:
      - -ftree-bit-ccp
    argument: ""
    description: Enable SSA-BIT-CCP optimization on trees.
  - names:
      - -ftree-builtin-call-dce
    argument: ""
    description: Enable conditional dead code elimination for builtin calls.
  - names:
      - -ftree-ccp
    argument: ""
    description: Enable SSA-CCP optimization on trees.
  - names:
      - -ftree-ch
    argument: ""
    description: Enable loop header copying on trees.
  - names:
      - -ftree-coalesce-inlined-vars
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -ftree-coalesce-vars
    argument: ""
    description: Enable SSA coalescing of user variables.
  - names:
      - -ftree-copy-prop
    argument: ""
    description: Enable copy propagation on trees.
  - names:
      - -ftree-copyrename
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -ftree-cselim
    argument: ""
    description: Transform condition stores into unconditional ones.
  - names:
      - -ftree-dce
    argument: ""
    description: Enable SSA dead code elimination optimization on trees.
  - names:
      - -ftree-dominator-opts
    argument: ""
    description: Enable dominator optimizations.
  - names:
      - -ftree-dse
    argument: ""
    description: Enable dead store elimination.
  - names:
      - -ftree-forwprop
    argument: ""
    description: Enable forward propagation on trees.
  - names:
      - -ftree-fre
    argument: ""
    description: Enable Full Redundancy Elimination (FRE) on trees.
  - names:
      - -ftree-loop-distribute-patterns
    argument: ""
    description: Enable loop distribution for patterns transformed into a library call.
  - names:
      - -ftree-loop-distribution
    argument: ""
    description: Enable loop distribution on trees.
  - names:
      - -ftree-loop-if-convert
    argument: ""
    description: Convert conditional jumps in innermost loops to branchless equivalents.
  - names:
      - -ftree-loop-if-convert-stores
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -ftree-loop-im
    argument: ""
    description: Enable loop invariant motion on trees.
  - names:
      - -ftree-loop-ivcanon
    argument: ""
    description: Create canonical induction variables in loops.
  - names:
      - -ftree-loop-linear
    argument: ""
    description: Enable loop nest transforms. Same as -floop-nest-optimize. Same as -floop-nest-optimize.
  - names:
      - -ftree-loop-optimize
    argument: ""
    description: Enable loop optimizations on tree level.
  - names:
      - -ftree-loop-vectorize
    argument: ""
    description: Enable loop vectorization on trees.
  - names:
      - -ftree-lrs
    argument: ""
    description: Perform live range splitting during the SSA->normal pass.
  - names:
      - -ftree-parallelize-loops
    argument: <number>
    description: Enable automatic parallelization of loops.
  - names:
      - -ftree-partial-pre
    argument: ""
    description: In SSA-PRE optimization on trees, enable partial-partial redundancy elimination.
  - names:
      - -ftree-phiprop
    argument: ""
    description: Enable hoisting loads from conditional pointers.
  - names:
      - -ftree-pre
    argument: ""
    description: Enable SSA-PRE optimization on trees.
  - names:
      - -ftree-pta
    argument: ""
    description: Perform function-local points-to analysis on trees.
  - names:
      - -ftree-reassoc
    argument: ""
    description: Enable reassociation on tree level.
  - names:
      - -ftree-salias
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -ftree-scev-cprop
    argument: ""
    description: Enable copy propagation of scalar-evolution information.
  - names:
      - -ftree-sink
    argument: ""
    description: Enable SSA code sinking on trees.
  - names:
      - -ftree-slp-vectorize
    argument: ""
    description: Enable basic block vectorization (SLP) on trees.
  - names:
      - -ftree-slsr
    argument: ""
    description: Perform straight-line strength reduction.
  - names:
      - -ftree-sra
    argument: ""
    description: Perform scalar replacement of aggregates.
  - names:
      - -ftree-store-ccp
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -ftree-store-copy-prop
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -ftree-switch-conversion
    argument: ""
    description: Perform conversions of switch initializations.
  - names:
      - -ftree-tail-merge
    argument: ""
    description: Enable tail merging on trees.
  - names:
      - -ftree-ter
    argument: ""
    description: Replace temporary expressions in the SSA->normal pass.
  - names:
      - -ftree-vect-loop-version
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -ftree-vectorize
    argument: ""
    description: Enable vectorization on trees.
  - names:
      - -ftree-vectorizer-verbose
    argument: <arg>
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -ftree-vrp
    argument: ""
    description: Perform Value Range Propagation on trees.
  - names:
      - -funconstrained-commons
    argument: ""
    description: Assume common declarations may be overridden with ones with a larger trailing array.
  - names:
      - -funit-at-a-time
    argument: ""
    description: Compile whole compilation unit at a time.
  - names:
      - -funroll-all-loops
    argument: ""
    description: Perform loop unrolling for all loops.
  - names:
      - -funroll-loops
    argument: ""
    description: Perform loop unrolling when iteration count is known.
  - names:
      - -funsafe-loop-optimizations
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -funsafe-math-optimizations
    argument: ""
    description: Allow math optimizations that may violate IEEE or ISO standards.
  - names:
      - -funswitch-loops
    argument: ""
    description: Perform loop unswitching.
  - names:
      - -funwind-tables
    argument: ""
    description: Just generate unwind tables for exception handling.
  - names:
      - -fuse-ld
    argument: bfd
    description: Use the bfd linker instead of the default linker.
  - names:
      - -fuse-ld
    argument: gold
    description: Use the gold linker instead of the default linker.
  - names:
      - -fuse-ld
    argument: lld
    description: Use the lld LLVM linker instead of the default linker.
  - names:
      - -fuse-linker-plugin
    argument: ""
    description: This option lacks documentation.
  - names:
      - -fvar-tracking
    argument: ""
    description: Perform variable tracking.
  - names:
      - -fvar-tracking-assignments
    argument: ""
    description: Perform variable tracking by annotating assignments.
  - names:
      - -fvar-tracking-assignments-toggle
    argument: ""
    description: Toggle -fvar-tracking-assignments.
  - names:
      - -fvar-tracking-uninit
    argument: ""
    description: Perform variable tracking and also tag variables that are uninitialized.
  - names:
      - -fvariable-expansion-in-unroller
    argument: ""
    description: Apply variable expansion when loops are unrolled.
  - names:
      - -fvect-cost-model
    argument: ""
    description: Enables the dynamic vectorizer cost model. Preserved for backward compatibility. Same as -fvect-costmodel=.
  - names:
      - -fvect-cost-model
    argument: '[unlimited|dynamic|cheap]'
    description: Specifies the cost model for vectorization.
  - names:
      - -fverbose-asm
    argument: ""
    description: Add extra commentary to assembler output.
  - names:
      - -fversion
    argument: ""
    description: display the GNU Modula-2 version
  - names:
      - -fversion-loops-for-strides
    argument: ""
    description: Version loops based on whether indices have a stride of one.
  - names:
      - -fvisibility
    argument: '[default|internal|hidden|protected]'
    description: Set the default symbol visibility.
  - names:
      - -fvpt
    argument: ""
    description: Use expression value profiles in optimizations.
  - names:
      - -fvtable-verify
    argument: <arg>
    description: Validate vtable pointers before using them.
  - names:
      - -fvtv-counts
    argument: ""
    description: Output vtable verification counters.
  - names:
      - -fvtv-debug
    argument: ""
    description: Output vtable verification pointer sets information.
  - names:
      - -fweb
    argument: ""
    description: Construct webs and split unrelated uses of single variable.
  - names:
      - -fwhole-program
    argument: ""
    description: Perform whole program optimizations.
  - names:
      - -fwrapv
    argument: ""
    description: Assume signed arithmetic overflow wraps around.
  - names:
      - -fwrapv-pointer
    argument: ""
    description: Assume pointer overflow wraps around.
  - names:
      - -fzee
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -fzero-initialized-in-bss
    argument: ""
    description: Put zero initialized data in the bss section.
  - names:
      - -g
    argument: ""
    description: Generate debug information in default format.
  - names:
      - -gas-loc-support
    argument: ""
    description: Assume assembler support for (DWARF2+) .loc directives.
  - names:
      - -gas-locview-support
    argument: ""
    description: Assume assembler support for view in (DWARF2+) .loc directives.
  - names:
      - -gcoff
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -gcoff1
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -gcoff2
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -gcoff3
    argument: ""
    description: Does nothing. Preserved for backward compatibility.
  - names:
      - -gcolumn-info
    argument: ""
    description: Record DW_AT_decl_column and DW_AT_call_column in DWARF.
  - names:
      - -gdescribe-dies
    argument: ""
    description: Add description attributes to some DWARF DIEs that have no name attribute.
  - names:
      - -gdwarf
    argument: ""
    description: Generate debug information in default version of DWARF format.
  - names:
      - -gdwarf-
    argument: ""
    description: Generate debug information in DWARF v2 (or later) format.
  - names:
      - -ggdb
    argument: ""
    description: Generate debug information in default extended format.
  - names:
      - -ggnu-pubnames
    argument: ""
    description: Generate DWARF pubnames and pubtypes sections with GNU extensions.
  - names:
      - -ginline-points
    argument: ""
    description: Generate extended entry point information for inlined functions.
  - names:
      - -ginternal-reset-location-views
    argument: ""
    description: Compute locview reset points based on insn length estimates.
  - names:
      - -gno-pubnames
    argument: ""
    description: Don't generate DWARF pubnames and pubtypes sections.
  - names:
      - -gpubnames
    argument: ""
    description: Generate DWARF pubnames and pubtypes sections.
  - names:
      - -grecord-gcc-switches
    argument: ""
    description: Record gcc command line switches in DWARF DW_AT_producer.
  - names:
      - -gsplit-dwarf
    argument: ""
    description: Generate debug information in separate .dwo files.
  - names:
      - -gstabs
    argument: ""
    description: Generate debug information in STABS format.
  - names:
      - -gstabs+
    argument: ""
    description: Generate debug information in extended STABS format.
  - names:
      - -gstatement-frontiers
    argument: ""
    description: Emit progressive recommended breakpoint locations.
  - names:
      - -gstrict-dwarf
    argument: ""
    description: Don't emit DWARF additions beyond selected version.
  - names:
      - -gtoggle
    argument: ""
    description: Toggle debug information generation.
  - names:
      - -gvariable-location-views
    argument: ""
    description: Augment variable location lists with progressive views.
  - names:
      - -gvariable-location-views
    argument: incompat5
    description: This option lacks documentation.
  - names:
      - -gvms
    argument: ""
    description: Generate debug information in VMS format.
  - names:
      - -gxcoff
    argument: ""
    description: Generate debug information in XCOFF format.
  - names:
      - -gxcoff+
    argument: ""
    description: Generate debug information in extended XCOFF format.
  - names:
      - -gz
    argument: ""
    description: Generate compressed debug sections.
  - names:
      - -gz
    argument: <format>
    description: Generate compressed debug sections in format <format>.
  - names:
      - -imultiarch
    argument: <dir>
    description: Set <dir> to be the multiarch include subdirectory.
  - names:
      - -iplugindir
    argument: <dir>
    description: Set <dir> to be the default plugin directory.
  - names:
      - -o
    argument: <file>
    description: Place output into <file>.
  - names:
      - -p
    argument: ""
    description: Enable function profiling.
  - names:
      - -pedantic-errors
    argument: ""
    description: Like -pedantic but issue them as errors.
  - names:
      - -quiet
    argument: ""
    description: Do not display functions compiled or elapsed time.
  - names:
      - -v
    argument: ""
    description: Enable verbose output.
tldr: |
  > Preprocess and compile C and C++ source files, then assemble and link them together.
  > More information: <https://gcc.gnu.org>.

  - Compile multiple source files into executable:

  `gcc {{path/to/source1.c path/to/source2.c ...}} --output {{path/to/output_executable}}`

  - Allow warnings, debug symbols in output:

  `gcc {{path/to/source.c}} -Wall -Og --output {{path/to/output_executable}}`

  - Include libraries from a different path:

  `gcc {{path/to/source.c}} --output {{path/to/output_executable}} -I{{path/to/header}} -L{{path/to/library}} -l{{library_name}}`

  - Compile source code into Assembler instructions:

  `gcc -S {{path/to/source.c}}`

  - Compile source code without linking:

  `gcc -c {{path/to/source.c}}`
