name: gh
description: gh
usage: gh <command> <subcommand> [flags]
options:
  - names:
      - --help
    argument: ""
    description: Show help for command
  - names:
      - --version
    argument: ""
    description: Show gh version
subcommands:
  - name: auth
    description: Authenticate gh and git with GitHub
    usage: gh auth <command> [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: login
        description: Authenticate with a GitHub host
        usage: gh auth login [flags]
        options:
          - names:
              - -p
              - --git-protocol
            argument: string
            description: 'The protocol to use for git operations: {ssh|https}'
          - names:
              - -h
              - --hostname
            argument: string
            description: The hostname of the GitHub instance to authenticate with
          - names:
              - -s
              - --scopes
            argument: strings
            description: Additional authentication scopes to request
          - names:
              - -w
              - --web
            argument: ""
            description: Open a browser to authenticate
          - names:
              - --with-token
            argument: ""
            description: Read token from standard input
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: logout
        description: Log out of a GitHub host
        usage: gh auth logout [flags]
        options:
          - names:
              - -h
              - --hostname
            argument: string
            description: The hostname of the GitHub instance to log out of
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: refresh
        description: Refresh stored authentication credentials
        usage: gh auth refresh [flags]
        options:
          - names:
              - -h
              - --hostname
            argument: string
            description: The GitHub host to use for authentication
          - names:
              - -s
              - --scopes
            argument: strings
            description: Additional authentication scopes for gh to have
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: setup-git
        description: Configure git to use GitHub CLI as a credential helper
        usage: gh auth setup-git [flags]
        options:
          - names:
              - -h
              - --hostname
            argument: string
            description: The hostname to configure git for
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: status
        description: View authentication status
        usage: gh auth status [flags]
        options:
          - names:
              - -h
              - --hostname
            argument: string
            description: Check a specific hostname's auth status
          - names:
              - -t
              - --show-token
            argument: ""
            description: Display the auth token
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: token
        description: Print the auth token gh is configured to use
        usage: gh auth token [flags]
        options:
          - names:
              - -h
              - --hostname
            argument: string
            description: The hostname of the GitHub instance authenticated with
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: browse
    description: Open the repository in the browser
    usage: gh browse [<number> | <path>] [flags]
    options:
      - names:
          - -b
          - --branch
        argument: string
        description: Select another branch by passing in the branch name
      - names:
          - -c
          - --commit
        argument: ""
        description: Open the last commit
      - names:
          - -n
          - --no-browser
        argument: ""
        description: Print destination URL instead of opening the browser
      - names:
          - -p
          - --projects
        argument: ""
        description: Open repository projects
      - names:
          - -R
          - --repo
        argument: '[HOST/]OWNER/REPO'
        description: Select another repository using the [HOST/]OWNER/REPO format
      - names:
          - -s
          - --settings
        argument: ""
        description: Open repository settings
      - names:
          - -w
          - --wiki
        argument: ""
        description: Open repository wiki
      - names:
          - --help
        argument: ""
        description: Show help for command
  - name: codespace
    description: Connect to and manage codespaces
    usage: gh codespace [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: code
        description: Open a codespace in Visual Studio Code
        usage: gh codespace code [flags]
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - --insiders
            argument: ""
            description: Use the insiders version of Visual Studio Code
          - names:
              - -w
              - --web
            argument: ""
            description: Use the web version of Visual Studio Code
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: cp
        description: Copy files between local and remote file systems
        usage: gh codespace cp [-e] [-r] [-- [<scp flags>...]] <sources>... <dest>
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - -e
              - --expand
            argument: ""
            description: Expand remote file names on remote shell
          - names:
              - -p
              - --profile
            argument: string
            description: Name of the SSH profile to use
          - names:
              - -r
              - --recursive
            argument: ""
            description: Recursively copy directories
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: create
        description: Create a codespace
        usage: gh codespace create [flags]
        options:
          - names:
              - -b
              - --branch
            argument: string
            description: repository branch
          - names:
              - --default-permissions
            argument: ""
            description: do not prompt to accept additional permissions requested by the codespace
          - names:
              - --devcontainer-path
            argument: string
            description: path to the devcontainer.json file to use when creating codespace
          - names:
              - --idle-timeout
            argument: duration
            description: allowed inactivity before codespace is stopped, e.g. "10m", "1h"
          - names:
              - -l
              - --location
            argument: string
            description: 'location: {EastUs|SouthEastAsia|WestEurope|WestUs2} (determined automatically if not provided)'
          - names:
              - -m
              - --machine
            argument: string
            description: hardware specifications for the VM
          - names:
              - -r
              - --repo
            argument: string
            description: 'repository name with owner: user/repo'
          - names:
              - --retention-period
            argument: duration
            description: allowed time after shutting down before the codespace is automatically deleted (maximum 30 days), e.g. "1h", "72h"
          - names:
              - -s
              - --status
            argument: ""
            description: show status of post-create command and dotfiles
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: delete
        description: Delete codespaces
        usage: gh codespace delete [flags]
        options:
          - names:
              - --all
            argument: ""
            description: Delete all codespaces
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - --days
            argument: "N"
            description: Delete codespaces older than N days
          - names:
              - -f
              - --force
            argument: ""
            description: Skip confirmation for codespaces that contain unsaved changes
          - names:
              - -o
              - --org
            argument: login
            description: The login handle of the organization (admin-only)
          - names:
              - -r
              - --repo
            argument: repository
            description: Delete codespaces for a repository
          - names:
              - -u
              - --user
            argument: username
            description: The username to delete codespaces for (used with --org)
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: edit
        description: Edit a codespace
        usage: gh codespace edit [flags]
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - -d
              - --display-name
            argument: string
            description: Set the display name
          - names:
              - -m
              - --machine
            argument: string
            description: Set hardware specifications for the VM
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: jupyter
        description: Open a codespace in JupyterLab
        usage: gh codespace jupyter [flags]
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: list
        description: List codespaces
        usage: gh codespace list [flags]
        options:
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of codespaces to list (default 30)
          - names:
              - -o
              - --org
            argument: login
            description: The login handle of the organization to list codespaces for (admin-only)
          - names:
              - -r
              - --repo
            argument: string
            description: 'Repository name with owner: user/repo'
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -u
              - --user
            argument: username
            description: The username to list codespaces for (used with --org)
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: logs
        description: Access codespace logs
        usage: gh codespace logs [flags]
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - -f
              - --follow
            argument: ""
            description: Tail and follow the logs
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: ports
        description: List ports in a codespace
        usage: gh codespace ports [flags]
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - --help
            argument: ""
            description: Show help for command
        subcommands:
          - name: forward
            description: Forward ports
            usage: gh codespace ports forward <remote-port>:<local-port>... [flags]
            options:
              - names:
                  - -c
                  - --codespace
                argument: string
                description: Name of the codespace
              - names:
                  - --help
                argument: ""
                description: Show help for command
          - name: visibility
            description: Change the visibility of the forwarded port
            usage: gh codespace ports visibility <port>:{public|private|org}... [flags]
            options:
              - names:
                  - -c
                  - --codespace
                argument: string
                description: Name of the codespace
              - names:
                  - --help
                argument: ""
                description: Show help for command
      - name: rebuild
        description: Rebuild a codespace
        usage: gh codespace rebuild [flags]
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: ssh
        description: SSH into a codespace
        usage: gh codespace ssh [<flags>...] [-- <ssh-flags>...] [<command>]
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - --config
            argument: ""
            description: Write OpenSSH configuration to stdout
          - names:
              - -d
              - --debug
            argument: ""
            description: Log debug data to a file
          - names:
              - --debug-file
            argument: string
            description: Path of the file log to
          - names:
              - --profile
            argument: string
            description: Name of the SSH profile to use
          - names:
              - --server-port
            argument: int
            description: SSH server port number (0 => pick unused)
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: stop
        description: Stop a running codespace
        usage: gh codespace stop [flags]
        options:
          - names:
              - -c
              - --codespace
            argument: string
            description: Name of the codespace
          - names:
              - -o
              - --org
            argument: login
            description: The login handle of the organization (admin-only)
          - names:
              - -u
              - --user
            argument: username
            description: The username to stop codespace for (used with --org)
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: gist
    description: Manage gists
    usage: gh gist <command> [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: clone
        description: Clone a gist locally
        usage: gh gist clone <gist> [<directory>] [-- <gitflags>...]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: create
        description: Create a new gist
        usage: gh gist create [<filename>... | -] [flags]
        options:
          - names:
              - -d
              - --desc
            argument: string
            description: A description for this gist
          - names:
              - -f
              - --filename
            argument: string
            description: Provide a filename to be used when reading from standard input
          - names:
              - -p
              - --public
            argument: ""
            description: 'List the gist publicly (default: secret)'
          - names:
              - -w
              - --web
            argument: ""
            description: Open the web browser with created gist
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: delete
        description: Delete a gist
        usage: gh gist delete {<id> | <url>} [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: edit
        description: Edit one of your gists
        usage: gh gist edit {<id> | <url>} [<filename>] [flags]
        options:
          - names:
              - -a
              - --add
            argument: string
            description: Add a new file to the gist
          - names:
              - -d
              - --desc
            argument: string
            description: New description for the gist
          - names:
              - -f
              - --filename
            argument: string
            description: Select a file to edit
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: list
        description: List your gists
        usage: gh gist list [flags]
        options:
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of gists to fetch (default 10)
          - names:
              - --public
            argument: ""
            description: Show only public gists
          - names:
              - --secret
            argument: ""
            description: Show only secret gists
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: view
        description: View a gist
        usage: gh gist view [<id> | <url>] [flags]
        options:
          - names:
              - -f
              - --filename
            argument: string
            description: Display a single file from the gist
          - names:
              - --files
            argument: ""
            description: List file names from the gist
          - names:
              - -r
              - --raw
            argument: ""
            description: Print raw instead of rendered gist contents
          - names:
              - -w
              - --web
            argument: ""
            description: Open gist in the browser
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: issue
    description: Manage issues
    usage: gh issue <command> [flags]
    options:
      - names:
          - -R
          - --repo
        argument: '[HOST/]OWNER/REPO'
        description: Select another repository using the [HOST/]OWNER/REPO format
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: close
        description: Close issue
        usage: gh issue close {<number> | <url>} [flags]
        options:
          - names:
              - -c
              - --comment
            argument: string
            description: Leave a closing comment
          - names:
              - -r
              - --reason
            argument: string
            description: 'Reason for closing: {completed|not planned}'
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: comment
        description: Add a comment to an issue
        usage: gh issue comment {<number> | <url>} [flags]
        options:
          - names:
              - -b
              - --body
            argument: text
            description: The comment body text
          - names:
              - -F
              - --body-file
            argument: file
            description: Read body text from file (use "-" to read from standard input)
          - names:
              - --edit-last
            argument: ""
            description: Edit the last comment of the same author
          - names:
              - -e
              - --editor
            argument: ""
            description: Skip prompts and open the text editor to write the body in
          - names:
              - -w
              - --web
            argument: ""
            description: Open the web browser to write the comment
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: create
        description: Create a new issue
        usage: gh issue create [flags]
        options:
          - names:
              - -a
              - --assignee
            argument: login
            description: Assign people by their login. Use "@me" to self-assign.
          - names:
              - -b
              - --body
            argument: string
            description: Supply a body. Will prompt for one otherwise.
          - names:
              - -F
              - --body-file
            argument: file
            description: Read body text from file (use "-" to read from standard input)
          - names:
              - -l
              - --label
            argument: name
            description: Add labels by name
          - names:
              - -m
              - --milestone
            argument: name
            description: Add the issue to a milestone by name
          - names:
              - -p
              - --project
            argument: name
            description: Add the issue to projects by name
          - names:
              - --recover
            argument: string
            description: Recover input from a failed run of create
          - names:
              - -t
              - --title
            argument: string
            description: Supply a title. Will prompt for one otherwise.
          - names:
              - -w
              - --web
            argument: ""
            description: Open the browser to create an issue
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: delete
        description: Delete issue
        usage: gh issue delete {<number> | <url>} [flags]
        options:
          - names:
              - --confirm
            argument: ""
            description: confirm deletion without prompting
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: edit
        description: Edit an issue
        usage: gh issue edit {<number> | <url>} [flags]
        options:
          - names:
              - --add-assignee
            argument: login
            description: Add assigned users by their login. Use "@me" to assign yourself.
          - names:
              - --add-label
            argument: name
            description: Add labels by name
          - names:
              - --add-project
            argument: name
            description: Add the issue to projects by name
          - names:
              - -b
              - --body
            argument: string
            description: Set the new body.
          - names:
              - -F
              - --body-file
            argument: file
            description: Read body text from file (use "-" to read from standard input)
          - names:
              - -m
              - --milestone
            argument: name
            description: Edit the milestone the issue belongs to by name
          - names:
              - --remove-assignee
            argument: login
            description: Remove assigned users by their login. Use "@me" to unassign yourself.
          - names:
              - --remove-label
            argument: name
            description: Remove labels by name
          - names:
              - --remove-project
            argument: name
            description: Remove the issue from projects by name
          - names:
              - -t
              - --title
            argument: string
            description: Set the new title.
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: list
        description: List issues in a repository
        usage: gh issue list [flags]
        options:
          - names:
              - --app
            argument: string
            description: Filter by GitHub App author
          - names:
              - -a
              - --assignee
            argument: string
            description: Filter by assignee
          - names:
              - -A
              - --author
            argument: string
            description: Filter by author
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -l
              - --label
            argument: strings
            description: Filter by label
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of issues to fetch (default 30)
          - names:
              - --mention
            argument: string
            description: Filter by mention
          - names:
              - -m
              - --milestone
            argument: string
            description: Filter by milestone number or title
          - names:
              - -S
              - --search
            argument: query
            description: Search issues with query
          - names:
              - -s
              - --state
            argument: string
            description: 'Filter by state: {open|closed|all} (default "open")'
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -w
              - --web
            argument: ""
            description: List issues in the web browser
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: pin
        description: Pin a issue
        usage: gh issue pin {<number> | <url>} [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: reopen
        description: Reopen issue
        usage: gh issue reopen {<number> | <url>} [flags]
        options:
          - names:
              - -c
              - --comment
            argument: string
            description: Add a reopening comment
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: status
        description: Show status of relevant issues
        usage: gh issue status [flags]
        options:
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: transfer
        description: Transfer issue to another repository
        usage: gh issue transfer {<number> | <url>} <destination-repo> [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: unpin
        description: Unpin a issue
        usage: gh issue unpin {<number> | <url>} [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: view
        description: View an issue
        usage: gh issue view {<number> | <url>} [flags]
        options:
          - names:
              - -c
              - --comments
            argument: ""
            description: View issue comments
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -w
              - --web
            argument: ""
            description: Open an issue in the browser
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
  - name: pr
    description: Manage pull requests
    usage: gh pr <command> [flags]
    options:
      - names:
          - -R
          - --repo
        argument: '[HOST/]OWNER/REPO'
        description: Select another repository using the [HOST/]OWNER/REPO format
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: checkout
        description: Check out a pull request in git
        usage: gh pr checkout {<number> | <url> | <branch>} [flags]
        options:
          - names:
              - -b
              - --branch
            argument: string
            description: 'Local branch name to use (default: the name of the head branch)'
          - names:
              - --detach
            argument: ""
            description: Checkout PR with a detached HEAD
          - names:
              - -f
              - --force
            argument: ""
            description: Reset the existing local branch to the latest state of the pull request
          - names:
              - --recurse-submodules
            argument: ""
            description: Update all submodules after checkout
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: checks
        description: Show CI status for a single pull request
        usage: gh pr checks [<number> | <url> | <branch>] [flags]
        options:
          - names:
              - -i
              - --interval
              - --watch
            argument: ""
            description: Refresh interval in seconds when using --watch flag (default 10)
          - names:
              - --required
            argument: ""
            description: Only show checks that are required
          - names:
              - --watch
            argument: ""
            description: Watch checks until they finish
          - names:
              - -w
              - --web
            argument: ""
            description: Open the web browser to show details about checks
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: close
        description: Close a pull request
        usage: gh pr close {<number> | <url> | <branch>} [flags]
        options:
          - names:
              - -c
              - --comment
            argument: string
            description: Leave a closing comment
          - names:
              - -d
              - --delete-branch
            argument: ""
            description: Delete the local and remote branch after close
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: comment
        description: Add a comment to a pull request
        usage: gh pr comment [<number> | <url> | <branch>] [flags]
        options:
          - names:
              - -b
              - --body
            argument: text
            description: The comment body text
          - names:
              - -F
              - --body-file
            argument: file
            description: Read body text from file (use "-" to read from standard input)
          - names:
              - --edit-last
            argument: ""
            description: Edit the last comment of the same author
          - names:
              - -e
              - --editor
            argument: ""
            description: Skip prompts and open the text editor to write the body in
          - names:
              - -w
              - --web
            argument: ""
            description: Open the web browser to write the comment
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: create
        description: Create a pull request
        usage: gh pr create [flags]
        options:
          - names:
              - -a
              - --assignee
            argument: login
            description: Assign people by their login. Use "@me" to self-assign.
          - names:
              - -B
              - --base
            argument: branch
            description: The branch into which you want your code merged
          - names:
              - -b
              - --body
            argument: string
            description: Body for the pull request
          - names:
              - -F
              - --body-file
            argument: file
            description: Read body text from file (use "-" to read from standard input)
          - names:
              - -d
              - --draft
            argument: ""
            description: Mark pull request as a draft
          - names:
              - -f
              - --fill
            argument: ""
            description: Do not prompt for title/body and just use commit info
          - names:
              - -H
              - --head
            argument: branch
            description: 'The branch that contains commits for your pull request (default: current branch)'
          - names:
              - -l
              - --label
            argument: name
            description: Add labels by name
          - names:
              - -m
              - --milestone
            argument: name
            description: Add the pull request to a milestone by name
          - names:
              - --no-maintainer-edit
            argument: ""
            description: Disable maintainer's ability to modify pull request
          - names:
              - -p
              - --project
            argument: name
            description: Add the pull request to projects by name
          - names:
              - --recover
            argument: string
            description: Recover input from a failed run of create
          - names:
              - -r
              - --reviewer
            argument: handle
            description: Request reviews from people or teams by their handle
          - names:
              - -t
              - --title
            argument: string
            description: Title for the pull request
          - names:
              - -w
              - --web
            argument: ""
            description: Open the web browser to create a pull request
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: diff
        description: View changes in a pull request
        usage: gh pr diff [<number> | <url> | <branch>] [flags]
        options:
          - names:
              - --color
            argument: string
            description: 'Use color in diff output: {always|never|auto} (default "auto")'
          - names:
              - --name-only
            argument: ""
            description: Display only names of changed files
          - names:
              - --patch
            argument: ""
            description: Display diff in patch format
          - names:
              - -w
              - --web
            argument: ""
            description: Open the pull request diff in the browser
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: edit
        description: Edit a pull request
        usage: gh pr edit [<number> | <url> | <branch>] [flags]
        options:
          - names:
              - --add-assignee
            argument: login
            description: Add assigned users by their login. Use "@me" to assign yourself.
          - names:
              - --add-label
            argument: name
            description: Add labels by name
          - names:
              - --add-project
            argument: name
            description: Add the pull request to projects by name
          - names:
              - --add-reviewer
            argument: login
            description: Add reviewers by their login.
          - names:
              - -B
              - --base
            argument: branch
            description: Change the base branch for this pull request
          - names:
              - -b
              - --body
            argument: string
            description: Set the new body.
          - names:
              - -F
              - --body-file
            argument: file
            description: Read body text from file (use "-" to read from standard input)
          - names:
              - -m
              - --milestone
            argument: name
            description: Edit the milestone the pull request belongs to by name
          - names:
              - --remove-assignee
            argument: login
            description: Remove assigned users by their login. Use "@me" to unassign yourself.
          - names:
              - --remove-label
            argument: name
            description: Remove labels by name
          - names:
              - --remove-project
            argument: name
            description: Remove the pull request from projects by name
          - names:
              - --remove-reviewer
            argument: login
            description: Remove reviewers by their login.
          - names:
              - -t
              - --title
            argument: string
            description: Set the new title.
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: list
        description: List pull requests in a repository
        usage: gh pr list [flags]
        options:
          - names:
              - --app
            argument: string
            description: Filter by GitHub App author
          - names:
              - -a
              - --assignee
            argument: string
            description: Filter by assignee
          - names:
              - -A
              - --author
            argument: string
            description: Filter by author
          - names:
              - -B
              - --base
            argument: string
            description: Filter by base branch
          - names:
              - -d
              - --draft
            argument: ""
            description: Filter by draft state
          - names:
              - -H
              - --head
            argument: string
            description: Filter by head branch
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -l
              - --label
            argument: strings
            description: Filter by label
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of items to fetch (default 30)
          - names:
              - -S
              - --search
            argument: query
            description: Search pull requests with query
          - names:
              - -s
              - --state
            argument: string
            description: 'Filter by state: {open|closed|merged|all} (default "open")'
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -w
              - --web
            argument: ""
            description: List pull requests in the web browser
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: merge
        description: Merge a pull request
        usage: gh pr merge [<number> | <url> | <branch>] [flags]
        options:
          - names:
              - --admin
            argument: ""
            description: Use administrator privileges to merge a pull request that does not meet requirements
          - names:
              - -A
              - --author-email
            argument: text
            description: Email text for merge commit author
          - names:
              - --auto
            argument: ""
            description: Automatically merge only after necessary requirements are met
          - names:
              - -b
              - --body
            argument: text
            description: Body text for the merge commit
          - names:
              - -F
              - --body-file
            argument: file
            description: Read body text from file (use "-" to read from standard input)
          - names:
              - -d
              - --delete-branch
            argument: ""
            description: Delete the local and remote branch after merge
          - names:
              - --disable-auto
            argument: ""
            description: Disable auto-merge for this pull request
          - names:
              - --match-head-commit
            argument: SHA
            description: Commit SHA that the pull request head must match to allow merge
          - names:
              - -m
              - --merge
            argument: ""
            description: Merge the commits with the base branch
          - names:
              - -r
              - --rebase
            argument: ""
            description: Rebase the commits onto the base branch
          - names:
              - -s
              - --squash
            argument: ""
            description: Squash the commits into one commit and merge it into the base branch
          - names:
              - -t
              - --subject
            argument: text
            description: Subject text for the merge commit
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: ready
        description: Mark a pull request as ready for review
        usage: gh pr ready [<number> | <url> | <branch>] [flags]
        options:
          - names:
              - --undo
            argument: ""
            description: Convert a pull request to "draft"
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: reopen
        description: Reopen a pull request
        usage: gh pr reopen {<number> | <url> | <branch>} [flags]
        options:
          - names:
              - -c
              - --comment
            argument: string
            description: Add a reopening comment
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: review
        description: Add a review to a pull request
        usage: gh pr review [<number> | <url> | <branch>] [flags]
        options:
          - names:
              - -a
              - --approve
            argument: ""
            description: Approve pull request
          - names:
              - -b
              - --body
            argument: string
            description: Specify the body of a review
          - names:
              - -F
              - --body-file
            argument: file
            description: Read body text from file (use "-" to read from standard input)
          - names:
              - -c
              - --comment
            argument: ""
            description: Comment on a pull request
          - names:
              - -r
              - --request-changes
            argument: ""
            description: Request changes on a pull request
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: status
        description: Show status of relevant pull requests
        usage: gh pr status [flags]
        options:
          - names:
              - -c
              - --conflict-status
            argument: ""
            description: Display the merge conflict status of each pull request
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: view
        description: View a pull request
        usage: gh pr view [<number> | <url> | <branch>] [flags]
        options:
          - names:
              - -c
              - --comments
            argument: ""
            description: View pull request comments
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -w
              - --web
            argument: ""
            description: Open a pull request in the browser
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
  - name: release
    description: Manage releases
    usage: gh release <command> [flags]
    options:
      - names:
          - -R
          - --repo
        argument: '[HOST/]OWNER/REPO'
        description: Select another repository using the [HOST/]OWNER/REPO format
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: create
        description: Create a new release
        usage: gh release create [<tag>] [<files>...]
        options:
          - names:
              - --discussion-category
            argument: string
            description: Start a discussion in the specified category
          - names:
              - -d
              - --draft
            argument: ""
            description: Save the release as a draft instead of publishing it
          - names:
              - --generate-notes
            argument: ""
            description: Automatically generate title and notes for the release
          - names:
              - -n
              - --notes
            argument: string
            description: Release notes
          - names:
              - -F
              - --notes-file
            argument: file
            description: Read release notes from file (use "-" to read from standard input)
          - names:
              - --notes-start-tag
            argument: string
            description: Tag to use as the starting point for generating release notes
          - names:
              - -p
              - --prerelease
            argument: ""
            description: Mark the release as a prerelease
          - names:
              - --target
            argument: branch
            description: 'Target branch or full commit SHA (default: main branch)'
          - names:
              - -t
              - --title
            argument: string
            description: Release title
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: delete
        description: Delete a release
        usage: gh release delete <tag> [flags]
        options:
          - names:
              - --cleanup-tag
            argument: ""
            description: Delete the specified tag in addition to its release
          - names:
              - -y
              - --yes
            argument: ""
            description: Skip the confirmation prompt
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: download
        description: Download release assets
        usage: gh release download [<tag>] [flags]
        options:
          - names:
              - -A
              - --archive
            argument: format
            description: Download the source code archive in the specified format (zip or tar.gz)
          - names:
              - --clobber
            argument: ""
            description: Overwrite existing files of the same name
          - names:
              - -D
              - --dir
            argument: string
            description: The directory to download files into (default ".")
          - names:
              - -p
              - --pattern
            argument: stringArray
            description: Download only assets that match a glob pattern
          - names:
              - --skip-existing
            argument: ""
            description: Skip downloading when files of the same name exist
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: edit
        description: Edit a release
        usage: gh release edit <tag>
        options:
          - names:
              - --discussion-category
            argument: string
            description: Start a discussion in the specified category when publishing a draft
          - names:
              - --draft
            argument: ""
            description: Save the release as a draft instead of publishing it
          - names:
              - -n
              - --notes
            argument: string
            description: Release notes
          - names:
              - -F
              - --notes-file
            argument: file
            description: Read release notes from file (use "-" to read from standard input)
          - names:
              - --prerelease
            argument: ""
            description: Mark the release as a prerelease
          - names:
              - --tag
            argument: string
            description: The name of the tag
          - names:
              - --target
            argument: branch
            description: 'Target branch or full commit SHA (default: main branch)'
          - names:
              - -t
              - --title
            argument: string
            description: Release title
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: list
        description: List releases in a repository
        usage: gh release list [flags]
        options:
          - names:
              - --exclude-drafts
            argument: ""
            description: Exclude draft releases
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of items to fetch (default 30)
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: upload
        description: Upload assets to a release
        usage: gh release upload <tag> <files>... [flags]
        options:
          - names:
              - --clobber
            argument: ""
            description: Overwrite existing assets of the same name
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: view
        description: View information about a release
        usage: gh release view [<tag>] [flags]
        options:
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -w
              - --web
            argument: ""
            description: Open the release in the browser
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
  - name: repo
    description: Manage repositories
    usage: gh repo <command> [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: archive
        description: Archive a repository
        usage: gh repo archive [<repository>] [flags]
        options:
          - names:
              - -y
              - --confirm
            argument: ""
            description: Skip the confirmation prompt
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: clone
        description: Clone a repository locally
        usage: gh repo clone <repository> [<directory>] [-- <gitflags>...]
        options:
          - names:
              - -u
              - --upstream-remote-name
            argument: string
            description: Upstream remote name when cloning a fork (default "upstream")
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: create
        description: Create a new repository
        usage: gh repo create [<name>] [flags]
        options:
          - names:
              - --add-readme
            argument: ""
            description: Add a README file to the new repository
          - names:
              - -c
              - --clone
            argument: ""
            description: Clone the new repository to the current directory
          - names:
              - -d
              - --description
            argument: string
            description: Description of the repository
          - names:
              - --disable-issues
            argument: ""
            description: Disable issues in the new repository
          - names:
              - --disable-wiki
            argument: ""
            description: Disable wiki in the new repository
          - names:
              - -g
              - --gitignore
            argument: string
            description: Specify a gitignore template for the repository
          - names:
              - -h
              - --homepage
            argument: URL
            description: Repository home page URL
          - names:
              - --include-all-branches
            argument: ""
            description: Include all branches from template repository
          - names:
              - --internal
            argument: ""
            description: Make the new repository internal
          - names:
              - -l
              - --license
            argument: string
            description: Specify an Open Source License for the repository
          - names:
              - --private
            argument: ""
            description: Make the new repository private
          - names:
              - --public
            argument: ""
            description: Make the new repository public
          - names:
              - --push
            argument: ""
            description: Push local commits to the new repository
          - names:
              - -r
              - --remote
            argument: string
            description: Specify remote name for the new repository
          - names:
              - -s
              - --source
            argument: string
            description: Specify path to local repository to use as source
          - names:
              - -t
              - --team
            argument: name
            description: The name of the organization team to be granted access
          - names:
              - -p
              - --template
            argument: repository
            description: Make the new repository based on a template repository
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: delete
        description: Delete a repository
        usage: gh repo delete [<repository>] [flags]
        options:
          - names:
              - --confirm
            argument: ""
            description: confirm deletion without prompting
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: deploy-key
        description: Manage deploy keys in a repository
        usage: gh repo deploy-key <command> [flags]
        options:
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
          - names:
              - --help
            argument: ""
            description: Show help for command
        subcommands:
          - name: add
            description: Add a deploy key to a GitHub repository
            usage: gh repo deploy-key add <key-file> [flags]
            options:
              - names:
                  - -w
                  - --allow-write
                argument: ""
                description: Allow write access for the key
              - names:
                  - -t
                  - --title
                argument: string
                description: Title of the new key
              - names:
                  - --help
                argument: ""
                description: Show help for command
              - names:
                  - -R
                  - --repo
                argument: '[HOST/]OWNER/REPO'
                description: Select another repository using the [HOST/]OWNER/REPO format
          - name: delete
            description: Delete a deploy key from a GitHub repository
            usage: gh repo deploy-key delete <key-id> [flags]
            options:
              - names:
                  - --help
                argument: ""
                description: Show help for command
              - names:
                  - -R
                  - --repo
                argument: '[HOST/]OWNER/REPO'
                description: Select another repository using the [HOST/]OWNER/REPO format
          - name: list
            description: List deploy keys in a GitHub repository
            usage: gh repo deploy-key list [flags]
            options:
              - names:
                  - --help
                argument: ""
                description: Show help for command
              - names:
                  - -R
                  - --repo
                argument: '[HOST/]OWNER/REPO'
                description: Select another repository using the [HOST/]OWNER/REPO format
      - name: edit
        description: Edit repository settings
        usage: gh repo edit [<repository>] [flags]
        options:
          - names:
              - --add-topic
            argument: strings
            description: Add repository topic
          - names:
              - --allow-forking
            argument: ""
            description: Allow forking of an organization repository
          - names:
              - --default-branch
            argument: name
            description: Set the default branch name for the repository
          - names:
              - --delete-branch-on-merge
            argument: ""
            description: Delete head branch when pull requests are merged
          - names:
              - -d
              - --description
            argument: string
            description: Description of the repository
          - names:
              - --enable-auto-merge
            argument: ""
            description: Enable auto-merge functionality
          - names:
              - --enable-issues
            argument: ""
            description: Enable issues in the repository
          - names:
              - --enable-merge-commit
            argument: ""
            description: Enable merging pull requests via merge commit
          - names:
              - --enable-projects
            argument: ""
            description: Enable projects in the repository
          - names:
              - --enable-rebase-merge
            argument: ""
            description: Enable merging pull requests via rebase
          - names:
              - --enable-squash-merge
            argument: ""
            description: Enable merging pull requests via squashed commit
          - names:
              - --enable-wiki
            argument: ""
            description: Enable wiki in the repository
          - names:
              - -h
              - --homepage
            argument: URL
            description: Repository home page URL
          - names:
              - --remove-topic
            argument: strings
            description: Remove repository topic
          - names:
              - --template
            argument: ""
            description: Make the repository available as a template repository
          - names:
              - --visibility
            argument: string
            description: Change the visibility of the repository to {public,private,internal}
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: fork
        description: Create a fork of a repository
        usage: gh repo fork [<repository>] [-- <gitflags>...] [flags]
        options:
          - names:
              - --clone
            argument: ""
            description: Clone the fork
          - names:
              - --fork-name
            argument: string
            description: Rename the forked repository
          - names:
              - --org
            argument: string
            description: Create the fork in an organization
          - names:
              - --remote
            argument: ""
            description: Add a git remote for the fork
          - names:
              - --remote-name
            argument: string
            description: Specify the name for the new remote (default "origin")
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: list
        description: List repositories owned by user or organization
        usage: gh repo list [<owner>] [flags]
        options:
          - names:
              - --archived
            argument: ""
            description: Show only archived repositories
          - names:
              - --fork
            argument: ""
            description: Show only forks
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -l
              - --language
            argument: string
            description: Filter by primary coding language
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of repositories to list (default 30)
          - names:
              - --no-archived
            argument: ""
            description: Omit archived repositories
          - names:
              - --source
            argument: ""
            description: Show only non-forks
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - --topic
            argument: string
            description: Filter by topic
          - names:
              - --visibility
            argument: string
            description: 'Filter by repository visibility: {public|private|internal}'
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: rename
        description: Rename a repository
        usage: gh repo rename [<new-name>] [flags]
        options:
          - names:
              - -y
              - --confirm
            argument: ""
            description: skip confirmation prompt
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: sync
        description: Sync a repository
        usage: gh repo sync [<destination-repository>] [flags]
        options:
          - names:
              - -b
              - --branch
            argument: string
            description: 'Branch to sync (default: main branch)'
          - names:
              - --force
            argument: ""
            description: Hard reset the branch of the destination repository to match the source repository
          - names:
              - -s
              - --source
            argument: string
            description: Source repository
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: view
        description: View a repository
        usage: gh repo view [<repository>] [flags]
        options:
          - names:
              - -b
              - --branch
            argument: string
            description: View a specific branch of the repository
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -w
              - --web
            argument: ""
            description: Open a repository in the browser
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: run
    description: View details about workflow runs
    usage: gh run <command> [flags]
    options:
      - names:
          - -R
          - --repo
        argument: '[HOST/]OWNER/REPO'
        description: Select another repository using the [HOST/]OWNER/REPO format
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: cancel
        description: Cancel a workflow run
        usage: gh run cancel [<run-id>] [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: download
        description: Download artifacts generated by a workflow run
        usage: gh run download [<run-id>] [flags]
        options:
          - names:
              - -D
              - --dir
            argument: string
            description: The directory to download artifacts into (default ".")
          - names:
              - -n
              - --name
            argument: stringArray
            description: Download artifacts that match any of the given names
          - names:
              - -p
              - --pattern
            argument: stringArray
            description: Download artifacts that match a glob pattern
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: list
        description: List recent workflow runs
        usage: gh run list [flags]
        options:
          - names:
              - -b
              - --branch
            argument: string
            description: Filter runs by branch
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of runs to fetch (default 20)
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -u
              - --user
            argument: string
            description: Filter runs by user who triggered the run
          - names:
              - -w
              - --workflow
            argument: string
            description: Filter runs by workflow
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: rerun
        description: Rerun a failed run
        usage: gh run rerun [<run-id>] [flags]
        options:
          - names:
              - -d
              - --debug
            argument: ""
            description: Rerun with debug logging
          - names:
              - --failed
            argument: ""
            description: Rerun only failed jobs, including dependencies
          - names:
              - -j
              - --job
            argument: string
            description: Rerun a specific job from a run, including dependencies
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: view
        description: View a summary of a workflow run
        usage: gh run view [<run-id>] [flags]
        options:
          - names:
              - --exit-status
            argument: ""
            description: Exit with non-zero status if run failed
          - names:
              - -j
              - --job
            argument: string
            description: View a specific job ID from a run
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - --log
            argument: ""
            description: View full log for either a run or specific job
          - names:
              - --log-failed
            argument: ""
            description: View the log for any failed steps in a run or specific job
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -v
              - --verbose
            argument: ""
            description: Show job steps
          - names:
              - -w
              - --web
            argument: ""
            description: Open run in the browser
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: watch
        description: Watch a run until it completes, showing its progress
        usage: gh run watch <run-id> [flags]
        options:
          - names:
              - --exit-status
            argument: ""
            description: Exit with non-zero status if run fails
          - names:
              - -i
              - --interval
            argument: int
            description: Refresh interval in seconds (default 3)
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
  - name: workflow
    description: View details about GitHub Actions workflows
    usage: gh workflow <command> [flags]
    options:
      - names:
          - -R
          - --repo
        argument: '[HOST/]OWNER/REPO'
        description: Select another repository using the [HOST/]OWNER/REPO format
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: disable
        description: Disable a workflow
        usage: gh workflow disable [<workflow-id> | <workflow-name>] [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: enable
        description: Enable a workflow
        usage: gh workflow enable [<workflow-id> | <workflow-name>] [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: list
        description: List workflows
        usage: gh workflow list [flags]
        options:
          - names:
              - -a
              - --all
            argument: ""
            description: Show all workflows, including disabled workflows
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of workflows to fetch (default 50)
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: run
        description: Run a workflow by creating a workflow_dispatch event
        usage: gh workflow run [<workflow-id> | <workflow-name>] [flags]
        options:
          - names:
              - -F
              - --field
            argument: key=value
            description: Add a string parameter in key=value format, respecting @ syntax
          - names:
              - --json
            argument: ""
            description: Read workflow inputs as JSON via STDIN
          - names:
              - -f
              - --raw-field
            argument: key=value
            description: Add a string parameter in key=value format
          - names:
              - -r
              - --ref
            argument: string
            description: The branch or tag name which contains the version of the workflow file you'd like to run
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: view
        description: View the summary of a workflow
        usage: gh workflow view [<workflow-id> | <workflow-name> | <filename>] [flags]
        options:
          - names:
              - -r
              - --ref
            argument: string
            description: The branch or tag name which contains the version of the workflow file you'd like to view
          - names:
              - -w
              - --web
            argument: ""
            description: Open workflow in the browser
          - names:
              - -y
              - --yaml
            argument: ""
            description: View the workflow yaml file
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
  - name: alias
    description: Create command shortcuts
    usage: gh alias <command> [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: delete
        description: Delete an alias
        usage: gh alias delete <alias> [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: list
        description: List your aliases
        usage: gh alias list [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: set
        description: Create a shortcut for a gh command
        usage: gh alias set <alias> <expansion> [flags]
        options:
          - names:
              - -s
              - --shell
            argument: ""
            description: Declare an alias to be passed through a shell interpreter
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: api
    description: Make an authenticated GitHub API request
    usage: gh api <endpoint> [flags]
    options:
      - names:
          - --cache
        argument: duration
        description: Cache the response, e.g. "3600s", "60m", "1h"
      - names:
          - -F
          - --field
        argument: key=value
        description: Add a typed parameter in key=value format
      - names:
          - -H
          - --header
        argument: key:value
        description: Add a HTTP request header in key:value format
      - names:
          - --hostname
        argument: string
        description: The GitHub hostname for the request (default "github.com")
      - names:
          - -i
          - --include
        argument: ""
        description: Include HTTP response status line and headers in the output
      - names:
          - --input
        argument: file
        description: The file to use as body for the HTTP request (use "-" to read from standard input)
      - names:
          - -q
          - --jq
        argument: string
        description: Query to select values from the response using jq syntax
      - names:
          - -X
          - --method
        argument: string
        description: The HTTP method for the request (default "GET")
      - names:
          - --paginate
        argument: ""
        description: Make additional HTTP requests to fetch all pages of results
      - names:
          - -p
          - --preview
        argument: names
        description: GitHub API preview names to request (without the "-preview" suffix)
      - names:
          - -f
          - --raw-field
        argument: key=value
        description: Add a string parameter in key=value format
      - names:
          - --silent
        argument: ""
        description: Do not print the response body
      - names:
          - -t
          - --template
        argument: string
        description: Format JSON output using a Go template; see "gh help formatting"
      - names:
          - --help
        argument: ""
        description: Show help for command
  - name: completion
    description: Generate shell completion scripts
    usage: gh completion -s <shell>
    options:
      - names:
          - -s
          - --shell
        argument: string
        description: 'Shell type: {bash|zsh|fish|powershell}'
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: autoload
        description: -U compinit
        usage: ""
        options: []
      - name: compinit
        description: -i
        usage: ""
        options: []
  - name: config
    description: Manage configuration for gh
    usage: gh config <command> [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: get
        description: Print the value of a given configuration key
        usage: gh config get <key> [flags]
        options:
          - names:
              - -h
              - --host
            argument: string
            description: Get per-host setting
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: list
        description: Print a list of configuration keys and values
        usage: gh config list [flags]
        options:
          - names:
              - -h
              - --host
            argument: string
            description: Get per-host configuration
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: set
        description: Update configuration with a value for the given key
        usage: gh config set <key> <value> [flags]
        options:
          - names:
              - -h
              - --host
            argument: string
            description: Set per-host setting
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: extension
    description: Manage gh extensions
    usage: gh extension [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: create
        description: Create a new extension
        usage: gh extension create [<name>] [flags]
        options:
          - names:
              - --precompiled
            argument: string
            description: 'Create a precompiled extension. Possible values: go, other'
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: exec
        description: Execute an installed extension
        usage: ""
        options: []
      - name: install
        description: Install a gh extension from a repository
        usage: gh extension install <repository> [flags]
        options:
          - names:
              - --pin
            argument: string
            description: pin extension to a release tag or commit ref
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: list
        description: List installed extension commands
        usage: gh extension list [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: remove
        description: Remove an installed extension
        usage: gh extension remove <name> [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: upgrade
        description: Upgrade installed extensions
        usage: gh extension upgrade {<name> | --all} [flags]
        options:
          - names:
              - --all
            argument: ""
            description: Upgrade all extensions
          - names:
              - --dry-run
            argument: ""
            description: Only display upgrades
          - names:
              - --force
            argument: ""
            description: Force upgrade extension
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: gpg-key
    description: Manage GPG keys
    usage: gh gpg-key <command> [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: add
        description: Add a GPG key to your GitHub account
        usage: gh gpg-key add [<key-file>] [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: delete
        description: Delete a GPG key from your GitHub account
        usage: gh gpg-key delete <key-id> [flags]
        options:
          - names:
              - -y
              - --confirm
            argument: ""
            description: Skip the confirmation prompt
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: list
        description: Lists GPG keys in your GitHub account
        usage: gh gpg-key list [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: label
    description: Manage labels
    usage: gh label <command> [flags]
    options:
      - names:
          - -R
          - --repo
        argument: '[HOST/]OWNER/REPO'
        description: Select another repository using the [HOST/]OWNER/REPO format
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: clone
        description: Clones labels from one repository to another
        usage: gh label clone <source-repository> [flags]
        options:
          - names:
              - -f
              - --force
            argument: ""
            description: Overwrite labels in the destination repository
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: create
        description: Create a new label
        usage: gh label create <name> [flags]
        options:
          - names:
              - -c
              - --color
            argument: string
            description: Color of the label
          - names:
              - -d
              - --description
            argument: string
            description: Description of the label
          - names:
              - -f
              - --force
            argument: ""
            description: Update the label color and description if label already exists
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: delete
        description: Delete a label from a repository
        usage: gh label delete <name> [flags]
        options:
          - names:
              - --confirm
            argument: ""
            description: Confirm deletion without prompting
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: edit
        description: Edit a label
        usage: gh label edit <name> [flags]
        options:
          - names:
              - -c
              - --color
            argument: string
            description: Color of the label
          - names:
              - -d
              - --description
            argument: string
            description: Description of the label
          - names:
              - -n
              - --name
            argument: string
            description: New name of the label
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: list
        description: List labels in a repository
        usage: gh label list [flags]
        options:
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of labels to fetch (default 30)
          - names:
              - --order
            argument: string
            description: 'Order of labels returned: {asc|desc} (default "asc")'
          - names:
              - -S
              - --search
            argument: string
            description: Search label names and descriptions
          - names:
              - --sort
            argument: string
            description: 'Sort fetched labels: {created|name} (default "created")'
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - -w
              - --web
            argument: ""
            description: List labels in the web browser
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
  - name: search
    description: Search for repositories, issues, and pull requests
    usage: gh search <command> [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: issues
        description: Search for issues
        usage: gh search issues [<query>] [flags]
        options:
          - names:
              - --app
            argument: string
            description: Filter by GitHub App author
          - names:
              - --archived
            argument: ""
            description: Restrict search to archived repositories
          - names:
              - --assignee
            argument: string
            description: Filter by assignee
          - names:
              - --author
            argument: string
            description: Filter by author
          - names:
              - --closed
            argument: date
            description: Filter on closed at date
          - names:
              - --commenter
            argument: user
            description: Filter based on comments by user
          - names:
              - --comments
            argument: number
            description: Filter on number of comments
          - names:
              - --created
            argument: date
            description: Filter based on created at date
          - names:
              - --include-prs
            argument: ""
            description: Include pull requests in results
          - names:
              - --interactions
            argument: number
            description: Filter on number of reactions and comments
          - names:
              - --involves
            argument: user
            description: Filter based on involvement of user
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - --label
            argument: strings
            description: Filter on label
          - names:
              - --language
            argument: string
            description: Filter based on the coding language
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of results to fetch (default 30)
          - names:
              - --locked
            argument: ""
            description: Filter on locked conversation status
          - names:
              - --match
            argument: strings
            description: 'Restrict search to specific field of issue: {title|body|comments}'
          - names:
              - --mentions
            argument: user
            description: Filter based on user mentions
          - names:
              - --milestone
            argument: title
            description: Filter by milestone title
          - names:
              - --no-assignee
            argument: ""
            description: Filter on missing assignee
          - names:
              - --no-label
            argument: ""
            description: Filter on missing label
          - names:
              - --no-milestone
            argument: ""
            description: Filter on missing milestone
          - names:
              - --no-project
            argument: ""
            description: Filter on missing project
          - names:
              - --order
            argument: string
            description: 'Order of results returned, ignored unless ''--sort'' flag is specified: {asc|desc} (default "desc")'
          - names:
              - --owner
            argument: string
            description: Filter on repository owner
          - names:
              - --project
            argument: number
            description: Filter on project board number
          - names:
              - --reactions
            argument: number
            description: Filter on number of reactions
          - names:
              - --repo
            argument: strings
            description: Filter on repository
          - names:
              - --sort
            argument: string
            description: 'Sort fetched results: {comments|created|interactions|reactions|reactions-+1|reactions--1|reactions-heart|reactions-smile|reactions-tada|reactions-thinking_face|updated} (default "best-match")'
          - names:
              - --state
            argument: string
            description: 'Filter based on state: {open|closed}'
          - names:
              - --team-mentions
            argument: string
            description: Filter based on team mentions
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - --updated
            argument: date
            description: Filter on last updated at date
          - names:
              - --visibility
            argument: strings
            description: 'Filter based on repository visibility: {public|private|internal}'
          - names:
              - -w
              - --web
            argument: ""
            description: Open the search query in the web browser
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: prs
        description: Search for pull requests
        usage: gh search prs [<query>] [flags]
        options:
          - names:
              - --app
            argument: string
            description: Filter by GitHub App author
          - names:
              - --archived
            argument: ""
            description: Restrict search to archived repositories
          - names:
              - --assignee
            argument: string
            description: Filter by assignee
          - names:
              - --author
            argument: string
            description: Filter by author
          - names:
              - -B
              - --base
            argument: string
            description: Filter on base branch name
          - names:
              - --checks
            argument: string
            description: 'Filter based on status of the checks: {pending|success|failure}'
          - names:
              - --closed
            argument: date
            description: Filter on closed at date
          - names:
              - --commenter
            argument: user
            description: Filter based on comments by user
          - names:
              - --comments
            argument: number
            description: Filter on number of comments
          - names:
              - --created
            argument: date
            description: Filter based on created at date
          - names:
              - --draft
            argument: ""
            description: Filter based on draft state
          - names:
              - -H
              - --head
            argument: string
            description: Filter on head branch name
          - names:
              - --interactions
            argument: number
            description: Filter on number of reactions and comments
          - names:
              - --involves
            argument: user
            description: Filter based on involvement of user
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - --label
            argument: strings
            description: Filter on label
          - names:
              - --language
            argument: string
            description: Filter based on the coding language
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of results to fetch (default 30)
          - names:
              - --locked
            argument: ""
            description: Filter on locked conversation status
          - names:
              - --match
            argument: strings
            description: 'Restrict search to specific field of issue: {title|body|comments}'
          - names:
              - --mentions
            argument: user
            description: Filter based on user mentions
          - names:
              - --merged
            argument: ""
            description: Filter based on merged state
          - names:
              - --merged-at
            argument: date
            description: Filter on merged at date
          - names:
              - --milestone
            argument: title
            description: Filter by milestone title
          - names:
              - --no-assignee
            argument: ""
            description: Filter on missing assignee
          - names:
              - --no-label
            argument: ""
            description: Filter on missing label
          - names:
              - --no-milestone
            argument: ""
            description: Filter on missing milestone
          - names:
              - --no-project
            argument: ""
            description: Filter on missing project
          - names:
              - --order
            argument: string
            description: 'Order of results returned, ignored unless ''--sort'' flag is specified: {asc|desc} (default "desc")'
          - names:
              - --owner
            argument: string
            description: Filter on repository owner
          - names:
              - --project
            argument: number
            description: Filter on project board number
          - names:
              - --reactions
            argument: number
            description: Filter on number of reactions
          - names:
              - --repo
            argument: strings
            description: Filter on repository
          - names:
              - --review
            argument: string
            description: 'Filter based on review status: {none|required|approved|changes_requested}'
          - names:
              - --review-requested
            argument: user
            description: Filter on user or team requested to review
          - names:
              - --reviewed-by
            argument: user
            description: Filter on user who reviewed
          - names:
              - --sort
            argument: string
            description: 'Sort fetched results: {comments|reactions|reactions-+1|reactions--1|reactions-smile|reactions-thinking_face|reactions-heart|reactions-tada|interactions|created|updated} (default "best-match")'
          - names:
              - --state
            argument: string
            description: 'Filter based on state: {open|closed}'
          - names:
              - --team-mentions
            argument: string
            description: Filter based on team mentions
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - --updated
            argument: date
            description: Filter on last updated at date
          - names:
              - --visibility
            argument: strings
            description: 'Filter based on repository visibility: {public|private|internal}'
          - names:
              - -w
              - --web
            argument: ""
            description: Open the search query in the web browser
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: repos
        description: Search for repositories
        usage: gh search repos [<query>] [flags]
        options:
          - names:
              - --archived
            argument: ""
            description: Filter based on archive state
          - names:
              - --created
            argument: date
            description: Filter based on created at date
          - names:
              - --followers
            argument: number
            description: Filter based on number of followers
          - names:
              - --forks
            argument: number
            description: Filter on number of forks
          - names:
              - --good-first-issues
            argument: number
            description: Filter on number of issues with the 'good first issue' label
          - names:
              - --help-wanted-issues
            argument: number
            description: Filter on number of issues with the 'help wanted' label
          - names:
              - --include-forks
            argument: string
            description: 'Include forks in fetched repositories: {false|true|only}'
          - names:
              - -q
              - --jq
            argument: expression
            description: Filter JSON output using a jq expression
          - names:
              - --json
            argument: fields
            description: Output JSON with the specified fields
          - names:
              - --language
            argument: string
            description: Filter based on the coding language
          - names:
              - --license
            argument: strings
            description: Filter based on license type
          - names:
              - -L
              - --limit
            argument: int
            description: Maximum number of repositories to fetch (default 30)
          - names:
              - --match
            argument: strings
            description: 'Restrict search to specific field of repository: {name|description|readme}'
          - names:
              - --number-topics
            argument: number
            description: Filter on number of topics
          - names:
              - --order
            argument: string
            description: 'Order of repositories returned, ignored unless ''--sort'' flag is specified: {asc|desc} (default "desc")'
          - names:
              - --owner
            argument: string
            description: Filter on owner
          - names:
              - --size
            argument: string
            description: Filter on a size range, in kilobytes
          - names:
              - --sort
            argument: string
            description: 'Sort fetched repositories: {forks|help-wanted-issues|stars|updated} (default "best-match")'
          - names:
              - --stars
            argument: number
            description: Filter on number of stars
          - names:
              - -t
              - --template
            argument: string
            description: Format JSON output using a Go template; see "gh help formatting"
          - names:
              - --topic
            argument: strings
            description: Filter on topic
          - names:
              - --updated
            argument: date
            description: Filter on last updated at date
          - names:
              - --visibility
            argument: strings
            description: 'Filter based on visibility: {public|private|internal}'
          - names:
              - -w
              - --web
            argument: ""
            description: Open the search query in the web browser
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: secret
    description: Manage GitHub secrets
    usage: gh secret <command> [flags]
    options:
      - names:
          - -R
          - --repo
        argument: '[HOST/]OWNER/REPO'
        description: Select another repository using the [HOST/]OWNER/REPO format
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: delete
        description: Delete secrets
        usage: gh secret delete <secret-name> [flags]
        options:
          - names:
              - -a
              - --app
            argument: string
            description: 'Delete a secret for a specific application: {actions|codespaces|dependabot}'
          - names:
              - -e
              - --env
            argument: string
            description: Delete a secret for an environment
          - names:
              - -o
              - --org
            argument: string
            description: Delete a secret for an organization
          - names:
              - -u
              - --user
            argument: ""
            description: Delete a secret for your user
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: list
        description: List secrets
        usage: gh secret list [flags]
        options:
          - names:
              - -a
              - --app
            argument: string
            description: 'List secrets for a specific application: {actions|codespaces|dependabot}'
          - names:
              - -e
              - --env
            argument: string
            description: List secrets for an environment
          - names:
              - -o
              - --org
            argument: string
            description: List secrets for an organization
          - names:
              - -u
              - --user
            argument: ""
            description: List a secret for your user
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
      - name: set
        description: Create or update secrets
        usage: gh secret set <secret-name> [flags]
        options:
          - names:
              - -a
              - --app
            argument: string
            description: 'Set the application for a secret: {actions|codespaces|dependabot}'
          - names:
              - -b
              - --body
            argument: string
            description: The value for the secret (reads from standard input if not specified)
          - names:
              - -e
              - --env
            argument: environment
            description: Set deployment environment secret
          - names:
              - -f
              - --env-file
            argument: file
            description: Load secret names and values from a dotenv-formatted file
          - names:
              - --no-store
            argument: ""
            description: Print the encrypted, base64-encoded value instead of storing it on Github
          - names:
              - -o
              - --org
            argument: organization
            description: Set organization secret
          - names:
              - -r
              - --repos
            argument: repositories
            description: List of repositories that can access an organization or user secret
          - names:
              - -u
              - --user
            argument: ""
            description: Set a secret for your user
          - names:
              - -v
              - --visibility
            argument: string
            description: 'Set visibility for an organization secret: {all|private|selected} (default "private")'
          - names:
              - --help
            argument: ""
            description: Show help for command
          - names:
              - -R
              - --repo
            argument: '[HOST/]OWNER/REPO'
            description: Select another repository using the [HOST/]OWNER/REPO format
  - name: ssh-key
    description: Manage SSH keys
    usage: gh ssh-key <command> [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
    subcommands:
      - name: add
        description: Add an SSH key to your GitHub account
        usage: gh ssh-key add [<key-file>] [flags]
        options:
          - names:
              - -t
              - --title
            argument: string
            description: Title for the new key
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: delete
        description: Delete an SSH key from your GitHub account
        usage: gh ssh-key delete <id> [flags]
        options:
          - names:
              - -y
              - --confirm
            argument: ""
            description: Skip the confirmation prompt
          - names:
              - --help
            argument: ""
            description: Show help for command
      - name: list
        description: Lists SSH keys in your GitHub account
        usage: gh ssh-key list [flags]
        options:
          - names:
              - --help
            argument: ""
            description: Show help for command
  - name: status
    description: Print information about relevant issues, pull requests, and notifications across repositories
    usage: gh status [flags]
    options:
      - names:
          - -e
          - --exclude
        argument: strings
        description: Comma separated list of repos to exclude in owner/name format
      - names:
          - -o
          - --org
        argument: string
        description: Report status within an organization
      - names:
          - --help
        argument: ""
        description: Show help for command
  - name: actions
    description: Learn about working with GitHub Actions
    usage: gh actions [flags]
    options:
      - names:
          - --help
        argument: ""
        description: Show help for command
  - name: environment
    description: Environment variables that can be used with gh
    usage: ""
    options: []
  - name: exit-codes
    description: Exit codes used by gh
    usage: ""
    options: []
  - name: formatting
    description: Formatting options for JSON data exported from gh
    usage: ""
    options: []
  - name: mintty
    description: Information about using gh with MinTTY
    usage: ""
    options: []
  - name: reference
    description: A comprehensive reference of all gh commands
    usage: gh reference
    options: []
version: gh version 2.18.1 (2022-10-20)
tldr: |
  > Work seamlessly with GitHub from the command-line.
  > Some subcommands such as `gh config` have their own usage documentation.
  > More information: <https://cli.github.com/>.

  - Clone a GitHub repository locally:

  `gh repo clone {{owner}}/{{repository}}`

  - Create a new issue:

  `gh issue create`

  - View and filter the open issues of the current repository:

  `gh issue list`

  - View an issue in the default web browser:

  `gh issue view --web {{issue_number}}`

  - Create a pull request:

  `gh pr create`

  - View a pull request in the default web browser:

  `gh pr view --web {{pr_number}}`

  - Check out a specific pull request locally:

  `gh pr checkout {{pr_number}}`

  - Check the status of a repository's pull requests:

  `gh pr status`
