name: meson
description: meson
options:
  - names:
      - -h
      - --help
    argument: ""
    description: show this help message and exit
subcommands:
  - name: setup
    description: Configure the project
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --prefix
        argument: PREFIX
        description: 'Installation prefix (default: /usr/local).'
      - names:
          - --bindir
        argument: BINDIR
        description: 'Executable directory (default: bin).'
      - names:
          - --datadir
        argument: DATADIR
        description: 'Data file directory (default: share).'
      - names:
          - --includedir
        argument: INCLUDEDIR
        description: 'Header file directory (default: include).'
      - names:
          - --infodir
        argument: INFODIR
        description: 'Info page directory (default: share/info).'
      - names:
          - --libdir
        argument: LIBDIR
        description: 'Library directory (default: lib/x86_64-linux-gnu).'
      - names:
          - --libexecdir
        argument: LIBEXECDIR
        description: 'Library executable directory (default: libexec).'
      - names:
          - --localedir
        argument: LOCALEDIR
        description: 'Locale data directory (default: share/locale).'
      - names:
          - --localstatedir
        argument: LOCALSTATEDIR
        description: 'Localstate data directory (default: var).'
      - names:
          - --mandir
        argument: MANDIR
        description: 'Manual page directory (default: share/man).'
      - names:
          - --sbindir
        argument: SBINDIR
        description: 'System executable directory (default: sbin).'
      - names:
          - --sharedstatedir
        argument: SHAREDSTATEDIR
        description: 'Architecture-independent data directory (default: com).'
      - names:
          - --sysconfdir
        argument: SYSCONFDIR
        description: 'Sysconf data directory (default: etc).'
      - names:
          - --auto-features
        argument: '{enabled,disabled,auto}'
        description: 'Override value of all ''auto'' features (default: auto).'
      - names:
          - --backend
        argument: '{ninja,vs,vs2010,vs2012,vs2013,vs2015,vs2017,vs2019,vs2022,xcode}'
        description: 'Backend to use (default: ninja).'
      - names:
          - --buildtype
        argument: '{plain,debug,debugoptimized,release,minsize,custom}'
        description: 'Build type to use (default: debug).'
      - names:
          - --debug
        argument: ""
        description: Enable debug symbols and other information
      - names:
          - --default-library
        argument: '{shared,static,both}'
        description: 'Default library type (default: shared).'
      - names:
          - --errorlogs
        argument: ""
        description: Whether to print the logs from failing tests
      - names:
          - --install-umask
        argument: INSTALL_UMASK
        description: 'Default umask to apply on permissions of installed files (default: 022).'
      - names:
          - --layout
        argument: '{mirror,flat}'
        description: 'Build directory layout (default: mirror).'
      - names:
          - --optimization
        argument: '{0,g,1,2,3,s}'
        description: 'Optimization level (default: 0).'
      - names:
          - --stdsplit
        argument: ""
        description: Split stdout and stderr in test logs
      - names:
          - --strip
        argument: ""
        description: Strip targets on install
      - names:
          - --unity
        argument: '{on,off,subprojects}'
        description: 'Unity build (default: off).'
      - names:
          - --unity-size
        argument: UNITY_SIZE
        description: 'Unity block size (default: (2, None, 4)).'
      - names:
          - --warnlevel
        argument: '{0,1,2,3}'
        description: 'Compiler warning level to use (default: 1).'
      - names:
          - --werror
        argument: ""
        description: Treat warnings as errors
      - names:
          - --wrap-mode
        argument: '{default,nofallback,nodownload,forcefallback,nopromote}'
        description: 'Wrap mode (default: default).'
      - names:
          - --force-fallback-for
        argument: FORCE_FALLBACK_FOR
        description: 'Force fallback for those subprojects (default: []).'
      - names:
          - --python.install-env
        argument: '{auto,prefix,system,venv}'
        description: 'Which python environment to install to (default: prefix).'
      - names:
          - --python.platlibdir
        argument: PYTHON.PLATLIBDIR
        description: 'Directory for site-specific, platform-specific files (default: ).'
      - names:
          - --python.purelibdir
        argument: PYTHON.PURELIBDIR
        description: 'Directory for site-specific, non-platform-specific files (default: ).'
      - names:
          - --pkg-config-path
        argument: PKG_CONFIG_PATH
        description: 'List of additional paths for pkg-config to search (default: []). (just for host machine)'
      - names:
          - --build.pkg-config-path
        argument: BUILD.PKG_CONFIG_PATH
        description: 'List of additional paths for pkg-config to search (default: []). (just for build machine)'
      - names:
          - --cmake-prefix-path
        argument: CMAKE_PREFIX_PATH
        description: 'List of additional prefixes for cmake to search (default: []). (just for host machine)'
      - names:
          - --build.cmake-prefix-path
        argument: BUILD.CMAKE_PREFIX_PATH
        description: 'List of additional prefixes for cmake to search (default: []). (just for build machine)'
      - names:
          - -D
        argument: option
        description: Set the value of an option, can be used several times to set multiple options.
      - names:
          - --native-file
        argument: NATIVE_FILE
        description: File containing overrides for native compilation environment.
      - names:
          - --cross-file
        argument: CROSS_FILE
        description: File describing cross compilation environment.
      - names:
          - --vsenv
        argument: ""
        description: Setup Visual Studio environment even when other compilers are found, abort if Visual Studio is not found. This option has no effect on other platforms than Windows. Defaults to True when using "vs" backend.
      - names:
          - -v
          - --version
        argument: ""
        description: show program's version number and exit
      - names:
          - --fatal-meson-warnings
        argument: ""
        description: Make all Meson warnings fatal
      - names:
          - --reconfigure
        argument: ""
        description: Set options and reconfigure the project. Useful when new options have been added to the project and the default value is not working.
      - names:
          - --wipe
        argument: ""
        description: Wipe build directory and reconfigure using previous command line options. Useful when build directory got corrupted, or when rebuilding with a newer version of meson.
  - name: configure
    description: Change project options
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --prefix
        argument: PREFIX
        description: 'Installation prefix (default: /usr/local).'
      - names:
          - --bindir
        argument: BINDIR
        description: 'Executable directory (default: bin).'
      - names:
          - --datadir
        argument: DATADIR
        description: 'Data file directory (default: share).'
      - names:
          - --includedir
        argument: INCLUDEDIR
        description: 'Header file directory (default: include).'
      - names:
          - --infodir
        argument: INFODIR
        description: 'Info page directory (default: share/info).'
      - names:
          - --libdir
        argument: LIBDIR
        description: 'Library directory (default: lib/x86_64-linux-gnu).'
      - names:
          - --libexecdir
        argument: LIBEXECDIR
        description: 'Library executable directory (default: libexec).'
      - names:
          - --localedir
        argument: LOCALEDIR
        description: 'Locale data directory (default: share/locale).'
      - names:
          - --localstatedir
        argument: LOCALSTATEDIR
        description: 'Localstate data directory (default: var).'
      - names:
          - --mandir
        argument: MANDIR
        description: 'Manual page directory (default: share/man).'
      - names:
          - --sbindir
        argument: SBINDIR
        description: 'System executable directory (default: sbin).'
      - names:
          - --sharedstatedir
        argument: SHAREDSTATEDIR
        description: 'Architecture-independent data directory (default: com).'
      - names:
          - --sysconfdir
        argument: SYSCONFDIR
        description: 'Sysconf data directory (default: etc).'
      - names:
          - --auto-features
        argument: '{enabled,disabled,auto}'
        description: 'Override value of all ''auto'' features (default: auto).'
      - names:
          - --backend
        argument: '{ninja,vs,vs2010,vs2012,vs2013,vs2015,vs2017,vs2019,vs2022,xcode}'
        description: 'Backend to use (default: ninja).'
      - names:
          - --buildtype
        argument: '{plain,debug,debugoptimized,release,minsize,custom}'
        description: 'Build type to use (default: debug).'
      - names:
          - --debug
        argument: ""
        description: Enable debug symbols and other information
      - names:
          - --default-library
        argument: '{shared,static,both}'
        description: 'Default library type (default: shared).'
      - names:
          - --errorlogs
        argument: ""
        description: Whether to print the logs from failing tests
      - names:
          - --install-umask
        argument: INSTALL_UMASK
        description: 'Default umask to apply on permissions of installed files (default: 022).'
      - names:
          - --layout
        argument: '{mirror,flat}'
        description: 'Build directory layout (default: mirror).'
      - names:
          - --optimization
        argument: '{0,g,1,2,3,s}'
        description: 'Optimization level (default: 0).'
      - names:
          - --stdsplit
        argument: ""
        description: Split stdout and stderr in test logs
      - names:
          - --strip
        argument: ""
        description: Strip targets on install
      - names:
          - --unity
        argument: '{on,off,subprojects}'
        description: 'Unity build (default: off).'
      - names:
          - --unity-size
        argument: UNITY_SIZE
        description: 'Unity block size (default: (2, None, 4)).'
      - names:
          - --warnlevel
        argument: '{0,1,2,3}'
        description: 'Compiler warning level to use (default: 1).'
      - names:
          - --werror
        argument: ""
        description: Treat warnings as errors
      - names:
          - --wrap-mode
        argument: '{default,nofallback,nodownload,forcefallback,nopromote}'
        description: 'Wrap mode (default: default).'
      - names:
          - --force-fallback-for
        argument: FORCE_FALLBACK_FOR
        description: 'Force fallback for those subprojects (default: []).'
      - names:
          - --python.install-env
        argument: '{auto,prefix,system,venv}'
        description: 'Which python environment to install to (default: prefix).'
      - names:
          - --python.platlibdir
        argument: PYTHON.PLATLIBDIR
        description: 'Directory for site-specific, platform-specific files (default: ).'
      - names:
          - --python.purelibdir
        argument: PYTHON.PURELIBDIR
        description: 'Directory for site-specific, non-platform-specific files (default: ).'
      - names:
          - --pkg-config-path
        argument: PKG_CONFIG_PATH
        description: 'List of additional paths for pkg-config to search (default: []). (just for host machine)'
      - names:
          - --build.pkg-config-path
        argument: BUILD.PKG_CONFIG_PATH
        description: 'List of additional paths for pkg-config to search (default: []). (just for build machine)'
      - names:
          - --cmake-prefix-path
        argument: CMAKE_PREFIX_PATH
        description: 'List of additional prefixes for cmake to search (default: []). (just for host machine)'
      - names:
          - --build.cmake-prefix-path
        argument: BUILD.CMAKE_PREFIX_PATH
        description: 'List of additional prefixes for cmake to search (default: []). (just for build machine)'
      - names:
          - -D
        argument: option
        description: Set the value of an option, can be used several times to set multiple options.
      - names:
          - --clearcache
        argument: ""
        description: Clear cached state (e.g. found dependencies)
  - name: dist
    description: Generate release archive
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -C
        argument: WD
        description: directory to cd into before running
      - names:
          - --allow-dirty
        argument: ""
        description: Allow even when repository contains uncommitted changes.
      - names:
          - --formats
        argument: FORMATS
        description: Comma separated list of archive types to create. Supports xztar (default), gztar, and zip.
      - names:
          - --include-subprojects
        argument: ""
        description: Include source code of subprojects that have been used for the build.
      - names:
          - --no-tests
        argument: ""
        description: Do not build and test generated packages.
  - name: install
    description: Install the project
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -C
        argument: WD
        description: directory to cd into before running
      - names:
          - --no-rebuild
        argument: ""
        description: Do not rebuild before installing.
      - names:
          - --only-changed
        argument: ""
        description: Only overwrite files that are older than the copied file.
      - names:
          - --quiet
        argument: ""
        description: Do not print every file that was installed.
      - names:
          - --destdir
        argument: DESTDIR
        description: Sets or overrides DESTDIR environment. (Since 0.57.0)
      - names:
          - --dry-run
          - -n
        argument: ""
        description: Doesn't actually install, but print logs. (Since 0.57.0)
      - names:
          - --skip-subprojects
        argument: '[SKIP_SUBPROJECTS]'
        description: Do not install files from given subprojects. (Since 0.58.0)
      - names:
          - --tags
        argument: TAGS
        description: Install only targets having one of the given tags. (Since 0.60.0)
      - names:
          - --strip
        argument: ""
        description: Strip targets even if strip option was not set during configure. (Since 0.62.0)
  - name: introspect
    description: Introspect project
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --ast
        argument: ""
        description: Dump the AST of the meson file.
      - names:
          - --benchmarks
        argument: ""
        description: List all benchmarks.
      - names:
          - --buildoptions
        argument: ""
        description: List all build options.
      - names:
          - --buildsystem-files
        argument: ""
        description: List files that make up the build system.
      - names:
          - --dependencies
        argument: ""
        description: List external dependencies.
      - names:
          - --scan-dependencies
        argument: ""
        description: Scan for dependencies used in the meson.build file.
      - names:
          - --installed
        argument: ""
        description: List all installed files and directories.
      - names:
          - --install-plan
        argument: ""
        description: List all installed files and directories with their details.
      - names:
          - --projectinfo
        argument: ""
        description: Information about projects.
      - names:
          - --targets
        argument: ""
        description: List top level targets.
      - names:
          - --tests
        argument: ""
        description: List all unit tests.
      - names:
          - --backend
        argument: '{ninja,vs,vs2010,vs2012,vs2013,vs2015,vs2017,vs2019,vs2022,xcode}'
        description: The backend to use for the --buildoptions introspection.
      - names:
          - -a
          - --all
        argument: ""
        description: Print all available information.
      - names:
          - -i
          - --indent
        argument: ""
        description: Enable pretty printed JSON.
      - names:
          - -f
          - --force-object-output
        argument: ""
        description: Always use the new JSON format for multiple entries (even for 0 and 1 introspection commands)
  - name: init
    description: Create a new project
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -C
        argument: WD
        description: directory to cd into before running
      - names:
          - -n
          - --name
        argument: NAME
        description: 'project name. default: name of current directory'
      - names:
          - -e
          - --executable
        argument: EXECUTABLE
        description: 'executable name. default: project name'
      - names:
          - -d
          - --deps
        argument: DEPS
        description: dependencies, comma-separated
      - names:
          - -l
          - --language
        argument: '{c,cpp,cs,cuda,d,fortran,java,objc,objcpp,rust,vala}'
        description: 'project language. default: autodetected based on source files'
      - names:
          - -b
          - --build
        argument: ""
        description: build after generation
      - names:
          - --builddir
        argument: BUILDDIR
        description: directory for build
      - names:
          - -f
          - --force
        argument: ""
        description: force overwrite of existing files and directories.
      - names:
          - --type
        argument: '{executable,library}'
        description: 'project type. default: executable based project'
      - names:
          - --version
        argument: VERSION
        description: 'project version. default: 0.1'
  - name: test
    description: Run tests
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --repeat
        argument: REPEAT
        description: Number of times to run the tests.
      - names:
          - --no-rebuild
        argument: ""
        description: Do not rebuild before running tests.
      - names:
          - --gdb
        argument: ""
        description: Run test under gdb.
      - names:
          - --gdb-path
        argument: GDB_PATH
        description: 'Path to the gdb binary (default: gdb).'
      - names:
          - --list
        argument: ""
        description: List available tests.
      - names:
          - --wrapper
        argument: WRAPPER
        description: wrapper to run tests with (e.g. Valgrind)
      - names:
          - -C
        argument: WD
        description: directory to cd into before running
      - names:
          - --suite
        argument: SUITE
        description: Only run tests belonging to the given suite.
      - names:
          - --no-suite
        argument: SUITE
        description: Do not run tests belonging to the given suite.
      - names:
          - --no-stdsplit
        argument: ""
        description: Do not split stderr and stdout in test logs.
      - names:
          - --print-errorlogs
        argument: ""
        description: Whether to print failing tests' logs.
      - names:
          - --benchmark
        argument: ""
        description: Run benchmarks instead of tests.
      - names:
          - --logbase
        argument: LOGBASE
        description: Base name for log file.
      - names:
          - --num-processes
        argument: NUM_PROCESSES
        description: How many parallel processes to use.
      - names:
          - -v
          - --verbose
        argument: ""
        description: Do not redirect stdout and stderr
      - names:
          - -q
          - --quiet
        argument: ""
        description: Produce less output to the terminal.
      - names:
          - -t
          - --timeout-multiplier
        argument: TIMEOUT_MULTIPLIER
        description: Define a multiplier for test timeout, for example when running tests in particular conditions they might take more time to execute. (<= 0 to disable timeout)
      - names:
          - --setup
        argument: SETUP
        description: Which test setup to use.
      - names:
          - --test-args
        argument: TEST_ARGS
        description: Arguments to pass to the specified test(s) or all tests
  - name: wrap
    description: Wrap tools
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: list
        description: show all available projects
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: search
        description: search the db by name
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: install
        description: install the specified project
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: update
        description: update the project to its newest available release
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: info
        description: show available versions of a project
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: status
        description: show installed and available versions of your projects
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: promote
        description: bring a subsubproject up to the master project
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
  - name: subprojects
    description: Manage subprojects
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
    subcommands:
      - name: update
        description: Update all subprojects from wrap files
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --rebase
            argument: ""
            description: Rebase your branch on top of wrap's revision. Deprecated, it is now the default behaviour. (git only)
          - names:
              - --reset
            argument: ""
            description: Checkout wrap's revision and hard reset to that commit. (git only)
          - names:
              - --sourcedir
            argument: SOURCEDIR
            description: Path to source directory
          - names:
              - --types
            argument: TYPES
            description: 'Comma-separated list of subproject types. Supported types are: file, git, hg, svn (default: all)'
          - names:
              - --num-processes
            argument: NUM_PROCESSES
            description: How many parallel processes to use (Since 0.59.0).
      - name: checkout
        description: Checkout a branch (git only)
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -b
            argument: ""
            description: Create a new branch
          - names:
              - --sourcedir
            argument: SOURCEDIR
            description: Path to source directory
          - names:
              - --types
            argument: TYPES
            description: 'Comma-separated list of subproject types. Supported types are: file, git, hg, svn (default: all)'
          - names:
              - --num-processes
            argument: NUM_PROCESSES
            description: How many parallel processes to use (Since 0.59.0).
      - name: download
        description: Ensure subprojects are fetched, even if not in use. Already downloaded subprojects are not modified. This can be used to pre-fetch all subprojects and avoid downloads during configure.
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --sourcedir
            argument: SOURCEDIR
            description: Path to source directory
          - names:
              - --types
            argument: TYPES
            description: 'Comma-separated list of subproject types. Supported types are: file, git, hg, svn (default: all)'
          - names:
              - --num-processes
            argument: NUM_PROCESSES
            description: How many parallel processes to use (Since 0.59.0).
      - name: foreach
        description: Execute a command in each subproject directory.
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --sourcedir
            argument: SOURCEDIR
            description: Path to source directory
          - names:
              - --types
            argument: TYPES
            description: 'Comma-separated list of subproject types. Supported types are: file, git, hg, svn (default: all)'
          - names:
              - --num-processes
            argument: NUM_PROCESSES
            description: How many parallel processes to use (Since 0.59.0).
      - name: purge
        description: Remove all wrap-based subproject artifacts
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --sourcedir
            argument: SOURCEDIR
            description: Path to source directory
          - names:
              - --types
            argument: TYPES
            description: 'Comma-separated list of subproject types. Supported types are: file, git, hg, svn (default: all)'
          - names:
              - --num-processes
            argument: NUM_PROCESSES
            description: How many parallel processes to use (Since 0.59.0).
          - names:
              - --include-cache
            argument: ""
            description: Remove the package cache as well
          - names:
              - --confirm
            argument: ""
            description: Confirm the removal of subproject artifacts
      - name: packagefiles
        description: Manage the packagefiles overlay
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - --sourcedir
            argument: SOURCEDIR
            description: Path to source directory
          - names:
              - --types
            argument: TYPES
            description: 'Comma-separated list of subproject types. Supported types are: file, git, hg, svn (default: all)'
          - names:
              - --num-processes
            argument: NUM_PROCESSES
            description: How many parallel processes to use (Since 0.59.0).
          - names:
              - --apply
            argument: ""
            description: Apply packagefiles to the subproject
          - names:
              - --save
            argument: ""
            description: Save packagefiles from the subproject
  - name: rewrite
    description: Modify the project definition
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -s
          - --sourcedir
        argument: SRCDIR
        description: Path to source directory.
      - names:
          - -V
          - --verbose
        argument: ""
        description: Enable verbose output
      - names:
          - -S
          - --skip-errors
        argument: ""
        description: Skip errors instead of aborting
    subcommands:
      - name: target
        description: Modify a target
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
          - names:
              - -s
              - --subdir
            argument: SUBDIR
            description: Subdirectory of the new target (only for the "add_target" action)
          - names:
              - --type
            argument: '{both_libraries,executable,jar,library,shared_library,shared_module,static_library}'
            description: Type of the target to add (only for the "add_target" action)
      - name: kwargs
        description: Modify keyword arguments
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: default-options
        description: Modify the project default options
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
      - name: command
        description: Execute a JSON array of commands
        options:
          - names:
              - -h
              - --help
            argument: ""
            description: show this help message and exit
  - name: compile
    description: Build the project
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --clean
        argument: ""
        description: Clean the build directory.
      - names:
          - -C
        argument: WD
        description: directory to cd into before running
      - names:
          - -j
          - --jobs
        argument: JOBS
        description: The number of worker jobs to run (if supported). If the value is less than 1 the build program will guess.
      - names:
          - -l
          - --load-average
        argument: LOAD_AVERAGE
        description: The system load average to try to maintain (if supported).
      - names:
          - -v
          - --verbose
        argument: ""
        description: Show more verbose output.
      - names:
          - --ninja-args
        argument: NINJA_ARGS
        description: Arguments to pass to `ninja` (applied only on `ninja` backend).
      - names:
          - --vs-args
        argument: VS_ARGS
        description: Arguments to pass to `msbuild` (applied only on `vs` backend).
      - names:
          - --xcode-args
        argument: XCODE_ARGS
        description: Arguments to pass to `xcodebuild` (applied only on `xcode` backend).
  - name: devenv
    description: Run commands in developer environment
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - -C
        argument: WD
        description: Directory to cd into before running
      - names:
          - --dump
        argument: ""
        description: Only print required environment (Since 0.62.0)
  - name: env2mfile
    description: Convert current environment to a cross
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: show this help message and exit
      - names:
          - --debarch
        argument: DEBARCH
        description: The dpkg architecture to generate.
      - names:
          - --gccsuffix
        argument: GCCSUFFIX
        description: A particular gcc version suffix if necessary.
      - names:
          - -o
        argument: OUTFILE
        description: The output file.
      - names:
          - --cross
        argument: ""
        description: Generate a cross compilation file.
      - names:
          - --native
        argument: ""
        description: Generate a native compilation file.
      - names:
          - --system
        argument: SYSTEM
        description: Define system for cross compilation.
      - names:
          - --cpu
        argument: CPU
        description: Define cpu for cross compilation.
      - names:
          - --cpu-family
        argument: CPU_FAMILY
        description: Define cpu family for cross compilation.
      - names:
          - --endian
        argument: '{big,little}'
        description: Define endianness for cross compilation.
version: 0.62.2
tldr: |
  > SCons-like build system that uses python as a front-end language and Ninja as a building backend.
  > More information: <https://mesonbuild.com>.

  - Generate a C project with a given name and version:

  `meson init --language={{c}} --name={{myproject}} --version={{0.1}}`

  - Configure the `builddir` with default values:

  `meson setup {{build_dir}}`

  - Build the project:

  `meson compile -C {{path/to/build_dir}}`

  - Run all tests in the project:

  `meson test`

  - Show the help:

  `meson --help`

  - Show version info:

  `meson --version`
