name: mosh
description: mosh
usage: mosh [options] [--] [user@]host [command...]
options:
  - names:
      - --client
    argument: PATH
    description: 'path to client helper on local machine (default: "mosh-client")'
  - names:
      - --server
    argument: COMMAND
    description: 'command to run server helper on remote machine (default: "mosh-server")'
  - names:
      - --ssh
    argument: COMMAND
    description: 'OpenSSH command to remotely execute mosh-server on remote machine (default: "ssh")'
  - names:
      - --ssh-pty
    argument: ""
    description: --no-ssh-pty Enable or disable ssh's use of a pty when connecting to a remote host. The default is enabled.
  - names:
      - --predict
    argument: WHEN
    description: Controls use of speculative local echo. WHEN defaults to `adaptive' (show predictions on slower links and to smooth out network glitches) and can also be `always` or `never'.
  - names:
      - -a
    argument: ""
    description: Synonym for --predict=always
  - names:
      - -n
    argument: ""
    description: Synonym for --predict=never
  - names:
      - --family
    argument: inet
    description: Only use IPv4 for the SSH connection and Mosh session.
  - names:
      - --family
    argument: inet6
    description: Only use IPv6 for the SSH connection and Mosh session. This and the following modes require Perl's IO::Socket::IP or IO::Socket::INET6 modules.
  - names:
      - --family
    argument: auto
    description: Autodetect IPv4 or IPv6 for hosts that only have addresses in a single family. Hosts with both IPv4 and IPv6 addresses will raise an error, and require re-invocation of mosh with another --family option.
  - names:
      - --family
    argument: all
    description: Choose an address from all available IPv4 or IPv6 address, even for dual-stack hosts. This is the most convenient option, but requires dual-stack connectivity, and Mosh 1.2.5 or later on the server, when roaming with dual-stack servers.
  - names:
      - --family
    argument: prefer-inet
    description: Similar to --family=all, but attempt connects to the IPv4 addresses first. This is the default.
  - names:
      - --family
    argument: prefer-inet6
    description: Similar to --family=all, but attempt connects to the IPv6 addresses first.
  - names:
      - "-4"
    argument: ""
    description: Synonym for --family=inet
  - names:
      - "-6"
    argument: ""
    description: Synonym for --family=inet6
  - names:
      - -p
      - --port
    argument: PORT[:PORT2]
    description: Use a particular server-side UDP port or port range, for example, if this is the only port that is forwarded through a firewall to the server. With -p 0, the server will let the operating system pick an available UDP port. Otherwise, mosh will choose a port between 60000 and 61000. Please note that this option does not affect the server-side port used by SSH.
  - names:
      - --bind-server
    argument: '{ssh|any|IP}'
    description: Control the IP address that the mosh-server binds to.
  - names:
      - --no-init
    argument: ""
    description: Do not send the smcup initialization string and rmcup deinitialization string to the client's terminal. On many terminals this disables alternate screen mode.
  - names:
      - --local
    argument: ""
    description: Invoke mosh-server locally, without using ssh. This option requires the host argument to be a local, numeric IPv4/IPv6 address. This option is useful for testing.
  - names:
      - --experimental-remote-ip
    argument: '{proxy|local|remote}'
    description: Select the method used to discover the IP address that the mosh-client connects to.
version: mosh 1.3.2 [build mosh 1.3.2]
tldr: |
  > Mobile Shell (`mosh`) is a robust and responsive replacement for SSH.
  > `mosh` persists connections to remote servers while roaming between networks.
  > More information: <https://mosh.org>.

  - Connect to a remote server:

  `mosh {{username}}@{{remote_host}}`

  - Connect to a remote server with a specific identity (private key):

  `mosh --ssh="ssh -i {{path/to/key_file}}" {{username}}@{{remote_host}}`

  - Connect to a remote server using a specific port:

  `mosh --ssh="ssh -p {{2222}}" {{username}}@{{remote_host}}`

  - Run a command on a remote server:

  `mosh {{remote_host}} -- {{command -with -flags}}`

  - Select Mosh UDP port (useful when `{{remote_host}}` is behind a NAT):

  `mosh -p {{124}} {{username}}@{{remote_host}}`

  - Usage when `mosh-server` binary is outside standard path:

  `mosh --server={{path/to/bin/}}mosh-server {{remote_host}}`
