name: nim
description: nim
usage: nim command [options] [projectfile] [arguments]
options: []
inheritedOptions:
  - names:
      - -p
      - --path
    argument: PATH
    description: add path to search paths
  - names:
      - -d
      - --define
    argument: SYMBOL(:VAL)
    description: 'define a conditional symbol (Optionally: Define the value for that symbol, see: "compile time define pragmas")'
  - names:
      - -u
      - --undef
    argument: SYMBOL
    description: undefine a conditional symbol
  - names:
      - -f
      - --forceBuild
    argument: on|off
    description: force rebuilding of all modules
  - names:
      - --stackTrace
    argument: on|off
    description: turn stack tracing on|off
  - names:
      - --lineTrace
    argument: on|off
    description: turn line tracing on|off
  - names:
      - --threads
    argument: on|off
    description: turn support for multi-threading on|off
  - names:
      - -x
      - --checks
    argument: on|off
    description: turn all runtime checks on|off
  - names:
      - -a
      - --assertions
    argument: on|off
    description: turn assertions on|off
  - names:
      - --opt
    argument: none|speed|size
    description: 'optimize not at all or for speed|size Note: use -d:release for a release build!'
  - names:
      - --debugger
    argument: native
    description: use native debugger (gdb)
  - names:
      - --app
    argument: console|gui|lib|staticlib
    description: generate a console app|GUI app|DLL|static library
  - names:
      - -r
      - --run
    argument: ""
    description: run the compiled program with given arguments
  - names:
      - --eval
    argument: cmd
    description: 'evaluate nim code directly; e.g.: `nim --eval:"echo 1"` defaults to `e` (nimscript) but customizable: `nim r --eval:''for a in stdin.lines: echo a''`'
  - names:
      - --fullhelp
    argument: ""
    description: show all command line switches
  - names:
      - -h
      - --help
    argument: ""
    description: show this help
  - names:
      - -v
      - --version
    argument: ""
    description: show detailed version information
subcommands:
  - name: compile
    aliases:
      - c
    description: compile project with default code generator (C)
    options: []
  - name: r
    description: 'compile to $nimcache/projname, run with [arguments] using backend specified by `--backend` (default: c)'
    options: []
  - name: doc
    description: 'generate the documentation for inputfile for backend specified by `--backend` (default: c)'
    options: []
version: Nim Compiler Version 1.6.6
tldr: |
  > The Nim compiler.
  > Processes, compiles and links Nim language source files.
  > More information: <https://nim-lang.org>.

  - Compile a source file:

  `nim compile {{file.nim}}`

  - Compile and run a source file:

  `nim compile -r {{file.nim}}`

  - Compile a source file with release optimizations enabled:

  `nim compile -d:release {{file.nim}}`

  - Build a release binary optimized for low file size:

  `nim compile -d:release --opt:size {{file.nim}}`

  - Generate HTML documentation for a module (output will be placed in the current directory):

  `nim doc {{file.nim}}`
