name: nix
description: nix
usage: |-
  nix [option...] subcommand
options:
  - names:
      - --help
    argument: ""
    description: Show usage information.
  - names:
      - --offline
    argument: ""
    description: Disable substituters and consider all previously downloaded files up-to-date.
  - names:
      - --option
    argument: name value
    description: Set the Nix configuration setting name to value (overriding nix.conf).
  - names:
      - --refresh
    argument: ""
    description: Consider all previously downloaded files out-of-date.
  - names:
      - --version
    argument: ""
    description: Show version information.
  - names:
      - --debug
    argument: ""
    description: Set the logging verbosity level to 'debug'.
  - names:
      - --log-format
    argument: format
    description: Set the format of log output; one of raw, internal-json, bar or bar-with-logs.
  - names:
      - --print-build-logs
      - -L
    argument: ""
    description: Print full build logs on standard error.
  - names:
      - --quiet
    argument: ""
    description: Decrease the logging verbosity level.
  - names:
      - --verbose
      - -v
    argument: ""
    description: Increase the logging verbosity level.
  - names:
      - --accept-flake-config
    argument: ""
    description: Enable the accept-flake-config setting.
  - names:
      - --access-tokens
    argument: value
    description: Set the access-tokens setting.
  - names:
      - --allow-dirty
    argument: ""
    description: Enable the allow-dirty setting.
  - names:
      - --allow-import-from-derivation
    argument: ""
    description: Enable the allow-import-from-derivation setting.
  - names:
      - --allow-new-privileges
    argument: ""
    description: Enable the allow-new-privileges setting.
  - names:
      - --allow-symlinked-store
    argument: ""
    description: Enable the allow-symlinked-store setting.
  - names:
      - --allow-unsafe-native-code-during-evaluation
    argument: ""
    description: Enable the allow-unsafe-native-code-during-evaluation setting.
  - names:
      - --allowed-impure-host-deps
    argument: value
    description: Set the allowed-impure-host-deps setting.
  - names:
      - --allowed-uris
    argument: value
    description: Set the allowed-uris setting.
  - names:
      - --allowed-users
    argument: value
    description: Set the allowed-users setting.
  - names:
      - --auto-optimise-store
    argument: ""
    description: Enable the auto-optimise-store setting.
  - names:
      - --bash-prompt
    argument: value
    description: Set the bash-prompt setting.
  - names:
      - --bash-prompt-prefix
    argument: value
    description: Set the bash-prompt-prefix setting.
  - names:
      - --bash-prompt-suffix
    argument: value
    description: Set the bash-prompt-suffix setting.
  - names:
      - --build-hook
    argument: value
    description: Set the build-hook setting.
  - names:
      - --build-poll-interval
    argument: value
    description: Set the build-poll-interval setting.
  - names:
      - --build-users-group
    argument: value
    description: Set the build-users-group setting.
  - names:
      - --builders
    argument: value
    description: Set the builders setting.
  - names:
      - --builders-use-substitutes
    argument: ""
    description: Enable the builders-use-substitutes setting.
  - names:
      - --commit-lockfile-summary
    argument: value
    description: Set the commit-lockfile-summary setting.
  - names:
      - --compress-build-log
    argument: ""
    description: Enable the compress-build-log setting.
  - names:
      - --connect-timeout
    argument: value
    description: Set the connect-timeout setting.
  - names:
      - --cores
    argument: value
    description: Set the cores setting.
  - names:
      - --diff-hook
    argument: value
    description: Set the diff-hook setting.
  - names:
      - --download-attempts
    argument: value
    description: Set the download-attempts setting.
  - names:
      - --enforce-determinism
    argument: ""
    description: Enable the enforce-determinism setting.
  - names:
      - --eval-cache
    argument: ""
    description: Enable the eval-cache setting.
  - names:
      - --experimental-features
    argument: value
    description: Set the experimental-features setting.
  - names:
      - --extra-access-tokens
    argument: value
    description: Append to the access-tokens setting.
  - names:
      - --extra-allowed-impure-host-deps
    argument: value
    description: Append to the allowed-impure-host-deps setting.
  - names:
      - --extra-allowed-uris
    argument: value
    description: Append to the allowed-uris setting.
  - names:
      - --extra-allowed-users
    argument: value
    description: Append to the allowed-users setting.
  - names:
      - --extra-experimental-features
    argument: value
    description: Append to the experimental-features setting.
  - names:
      - --extra-extra-platforms
    argument: value
    description: Append to the extra-platforms setting.
  - names:
      - --extra-hashed-mirrors
    argument: value
    description: Append to the hashed-mirrors setting.
  - names:
      - --extra-ignored-acls
    argument: value
    description: Append to the ignored-acls setting.
  - names:
      - --extra-nix-path
    argument: value
    description: Append to the nix-path setting.
  - names:
      - --extra-platforms
    argument: value
    description: Set the extra-platforms setting.
  - names:
      - --extra-plugin-files
    argument: value
    description: Append to the plugin-files setting.
  - names:
      - --extra-sandbox-paths
    argument: value
    description: Append to the sandbox-paths setting.
  - names:
      - --extra-secret-key-files
    argument: value
    description: Append to the secret-key-files setting.
  - names:
      - --extra-substituters
    argument: value
    description: Append to the substituters setting.
  - names:
      - --extra-system-features
    argument: value
    description: Append to the system-features setting.
  - names:
      - --extra-trusted-public-keys
    argument: value
    description: Append to the trusted-public-keys setting.
  - names:
      - --extra-trusted-substituters
    argument: value
    description: Append to the trusted-substituters setting.
  - names:
      - --extra-trusted-users
    argument: value
    description: Append to the trusted-users setting.
  - names:
      - --fallback
    argument: ""
    description: Enable the fallback setting.
  - names:
      - --filter-syscalls
    argument: ""
    description: Enable the filter-syscalls setting.
  - names:
      - --flake-registry
    argument: value
    description: Set the flake-registry setting.
  - names:
      - --fsync-metadata
    argument: ""
    description: Enable the fsync-metadata setting.
  - names:
      - --gc-reserved-space
    argument: value
    description: Set the gc-reserved-space setting.
  - names:
      - --hashed-mirrors
    argument: value
    description: Set the hashed-mirrors setting.
  - names:
      - --http-connections
    argument: value
    description: Set the http-connections setting.
  - names:
      - --http2
    argument: ""
    description: Enable the http2 setting.
  - names:
      - --ignore-try
    argument: ""
    description: Enable the ignore-try setting.
  - names:
      - --ignored-acls
    argument: value
    description: Set the ignored-acls setting.
  - names:
      - --impersonate-linux-26
    argument: ""
    description: Enable the impersonate-linux-26 setting.
  - names:
      - --keep-build-log
    argument: ""
    description: Enable the keep-build-log setting.
  - names:
      - --keep-derivations
    argument: ""
    description: Enable the keep-derivations setting.
  - names:
      - --keep-env-derivations
    argument: ""
    description: Enable the keep-env-derivations setting.
  - names:
      - --keep-failed
    argument: ""
    description: Enable the keep-failed setting.
  - names:
      - --keep-going
    argument: ""
    description: Enable the keep-going setting.
  - names:
      - --keep-outputs
    argument: ""
    description: Enable the keep-outputs setting.
  - names:
      - --log-lines
    argument: value
    description: Set the log-lines setting.
  - names:
      - --max-build-log-size
    argument: value
    description: Set the max-build-log-size setting.
  - names:
      - --max-free
    argument: value
    description: Set the max-free setting.
  - names:
      - --max-jobs
    argument: value
    description: Set the max-jobs setting.
  - names:
      - --max-silent-time
    argument: value
    description: Set the max-silent-time setting.
  - names:
      - --min-free
    argument: value
    description: Set the min-free setting.
  - names:
      - --min-free-check-interval
    argument: value
    description: Set the min-free-check-interval setting.
  - names:
      - --nar-buffer-size
    argument: value
    description: Set the nar-buffer-size setting.
  - names:
      - --narinfo-cache-negative-ttl
    argument: value
    description: Set the narinfo-cache-negative-ttl setting.
  - names:
      - --narinfo-cache-positive-ttl
    argument: value
    description: Set the narinfo-cache-positive-ttl setting.
  - names:
      - --netrc-file
    argument: value
    description: Set the netrc-file setting.
  - names:
      - --nix-path
    argument: value
    description: Set the nix-path setting.
  - names:
      - --no-accept-flake-config
    argument: ""
    description: Disable the accept-flake-config setting.
  - names:
      - --no-allow-dirty
    argument: ""
    description: Disable the allow-dirty setting.
  - names:
      - --no-allow-import-from-derivation
    argument: ""
    description: Disable the allow-import-from-derivation setting.
  - names:
      - --no-allow-new-privileges
    argument: ""
    description: Disable the allow-new-privileges setting.
  - names:
      - --no-allow-symlinked-store
    argument: ""
    description: Disable the allow-symlinked-store setting.
  - names:
      - --no-allow-unsafe-native-code-during-evaluation
    argument: ""
    description: Disable the allow-unsafe-native-code-during-evaluation setting.
  - names:
      - --no-auto-optimise-store
    argument: ""
    description: Disable the auto-optimise-store setting.
  - names:
      - --no-builders-use-substitutes
    argument: ""
    description: Disable the builders-use-substitutes setting.
  - names:
      - --no-compress-build-log
    argument: ""
    description: Disable the compress-build-log setting.
  - names:
      - --no-enforce-determinism
    argument: ""
    description: Disable the enforce-determinism setting.
  - names:
      - --no-eval-cache
    argument: ""
    description: Disable the eval-cache setting.
  - names:
      - --no-fallback
    argument: ""
    description: Disable the fallback setting.
  - names:
      - --no-filter-syscalls
    argument: ""
    description: Disable the filter-syscalls setting.
  - names:
      - --no-fsync-metadata
    argument: ""
    description: Disable the fsync-metadata setting.
  - names:
      - --no-http2
    argument: ""
    description: Disable the http2 setting.
  - names:
      - --no-ignore-try
    argument: ""
    description: Disable the ignore-try setting.
  - names:
      - --no-impersonate-linux-26
    argument: ""
    description: Disable the impersonate-linux-26 setting.
  - names:
      - --no-keep-build-log
    argument: ""
    description: Disable the keep-build-log setting.
  - names:
      - --no-keep-derivations
    argument: ""
    description: Disable the keep-derivations setting.
  - names:
      - --no-keep-env-derivations
    argument: ""
    description: Disable the keep-env-derivations setting.
  - names:
      - --no-keep-failed
    argument: ""
    description: Disable the keep-failed setting.
  - names:
      - --no-keep-going
    argument: ""
    description: Disable the keep-going setting.
  - names:
      - --no-keep-outputs
    argument: ""
    description: Disable the keep-outputs setting.
  - names:
      - --no-preallocate-contents
    argument: ""
    description: Disable the preallocate-contents setting.
  - names:
      - --no-print-missing
    argument: ""
    description: Disable the print-missing setting.
  - names:
      - --no-pure-eval
    argument: ""
    description: Disable the pure-eval setting.
  - names:
      - --no-require-sigs
    argument: ""
    description: Disable the require-sigs setting.
  - names:
      - --no-restrict-eval
    argument: ""
    description: Disable the restrict-eval setting.
  - names:
      - --no-run-diff-hook
    argument: ""
    description: Disable the run-diff-hook setting.
  - names:
      - --no-sandbox
    argument: ""
    description: Disable sandboxing.
  - names:
      - --no-sandbox-fallback
    argument: ""
    description: Disable the sandbox-fallback setting.
  - names:
      - --no-show-trace
    argument: ""
    description: Disable the show-trace setting.
  - names:
      - --no-substitute
    argument: ""
    description: Disable the substitute setting.
  - names:
      - --no-sync-before-registering
    argument: ""
    description: Disable the sync-before-registering setting.
  - names:
      - --no-trace-function-calls
    argument: ""
    description: Disable the trace-function-calls setting.
  - names:
      - --no-trace-verbose
    argument: ""
    description: Disable the trace-verbose setting.
  - names:
      - --no-use-case-hack
    argument: ""
    description: Disable the use-case-hack setting.
  - names:
      - --no-use-registries
    argument: ""
    description: Disable the use-registries setting.
  - names:
      - --no-use-sqlite-wal
    argument: ""
    description: Disable the use-sqlite-wal setting.
  - names:
      - --no-warn-dirty
    argument: ""
    description: Disable the warn-dirty setting.
  - names:
      - --plugin-files
    argument: value
    description: Set the plugin-files setting.
  - names:
      - --post-build-hook
    argument: value
    description: Set the post-build-hook setting.
  - names:
      - --pre-build-hook
    argument: value
    description: Set the pre-build-hook setting.
  - names:
      - --preallocate-contents
    argument: ""
    description: Enable the preallocate-contents setting.
  - names:
      - --print-missing
    argument: ""
    description: Enable the print-missing setting.
  - names:
      - --pure-eval
    argument: ""
    description: Enable the pure-eval setting.
  - names:
      - --relaxed-sandbox
    argument: ""
    description: Enable sandboxing, but allow builds to disable it.
  - names:
      - --repeat
    argument: value
    description: Set the repeat setting.
  - names:
      - --require-sigs
    argument: ""
    description: Enable the require-sigs setting.
  - names:
      - --restrict-eval
    argument: ""
    description: Enable the restrict-eval setting.
  - names:
      - --run-diff-hook
    argument: ""
    description: Enable the run-diff-hook setting.
  - names:
      - --sandbox
    argument: ""
    description: Enable sandboxing.
  - names:
      - --sandbox-build-dir
    argument: value
    description: Set the sandbox-build-dir setting.
  - names:
      - --sandbox-dev-shm-size
    argument: value
    description: Set the sandbox-dev-shm-size setting.
  - names:
      - --sandbox-fallback
    argument: ""
    description: Enable the sandbox-fallback setting.
  - names:
      - --sandbox-paths
    argument: value
    description: Set the sandbox-paths setting.
  - names:
      - --secret-key-files
    argument: value
    description: Set the secret-key-files setting.
  - names:
      - --show-trace
    argument: ""
    description: Enable the show-trace setting.
  - names:
      - --stalled-download-timeout
    argument: value
    description: Set the stalled-download-timeout setting.
  - names:
      - --store
    argument: value
    description: Set the store setting.
  - names:
      - --substitute
    argument: ""
    description: Enable the substitute setting.
  - names:
      - --substituters
    argument: value
    description: Set the substituters setting.
  - names:
      - --sync-before-registering
    argument: ""
    description: Enable the sync-before-registering setting.
  - names:
      - --system
    argument: value
    description: Set the system setting.
  - names:
      - --system-features
    argument: value
    description: Set the system-features setting.
  - names:
      - --tarball-ttl
    argument: value
    description: Set the tarball-ttl setting.
  - names:
      - --timeout
    argument: value
    description: Set the timeout setting.
  - names:
      - --trace-function-calls
    argument: ""
    description: Enable the trace-function-calls setting.
  - names:
      - --trace-verbose
    argument: ""
    description: Enable the trace-verbose setting.
  - names:
      - --trusted-public-keys
    argument: value
    description: Set the trusted-public-keys setting.
  - names:
      - --trusted-substituters
    argument: value
    description: Set the trusted-substituters setting.
  - names:
      - --trusted-users
    argument: value
    description: Set the trusted-users setting.
  - names:
      - --use-case-hack
    argument: ""
    description: Enable the use-case-hack setting.
  - names:
      - --use-registries
    argument: ""
    description: Enable the use-registries setting.
  - names:
      - --use-sqlite-wal
    argument: ""
    description: Enable the use-sqlite-wal setting.
  - names:
      - --user-agent-suffix
    argument: value
    description: Set the user-agent-suffix setting.
  - names:
      - --warn-dirty
    argument: ""
    description: Enable the warn-dirty setting.
subcommands:
  - name: build
    description: build a derivation or fetch a store path
    usage: |2-
      nix build [option...] installables...
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --dry-run
        argument: ""
        description: Show what this command would do without doing it.
      - names:
          - --json
        argument: ""
        description: Produce output in JSON format, suitable for consumption by another program.
      - names:
          - --no-link
        argument: ""
        description: Do not create symlinks to the build results.
      - names:
          - --out-link
          - -o
        argument: path
        description: Use path as prefix for the symlinks to the build results. It defaults to result.
      - names:
          - --print-out-paths
        argument: ""
        description: Print the resulting output paths
      - names:
          - --profile
        argument: path
        description: The profile to update.
      - names:
          - --rebuild
        argument: ""
        description: Rebuild an already built package and compare the result to the existing store paths.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: develop
    description: run a bash shell that provides the build environment of a derivation
    usage: |2-
      nix develop [option...] installable
    options:
      - names:
          - --build
        argument: ""
        description: Run the build phase.
      - names:
          - --check
        argument: ""
        description: Run the check phase.
      - names:
          - --command
          - -c
        argument: command args
        description: Instead of starting an interactive shell, start the specified command and arguments.
      - names:
          - --configure
        argument: ""
        description: Run the configure phase.
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --ignore-environment
          - -i
        argument: ""
        description: Clear the entire environment (except those specified with --keep).
      - names:
          - --install
        argument: ""
        description: Run the install phase.
      - names:
          - --installcheck
        argument: ""
        description: Run the installcheck phase.
      - names:
          - --keep
          - -k
        argument: name
        description: Keep the environment variable name.
      - names:
          - --phase
        argument: phase-name
        description: The stdenv phase to run (e.g. build or configure).
      - names:
          - --profile
        argument: path
        description: The profile to update.
      - names:
          - --redirect
        argument: installable outputs-dir
        description: Redirect a store path to a mutable location.
      - names:
          - --unpack
        argument: ""
        description: Run the unpack phase.
      - names:
          - --unset
          - -u
        argument: name
        description: Unset the environment variable name.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: flake
    description: manage Nix flakes
    usage: "\nnix flake [option...] subcommand\n\nwhere subcommand is one of the following:\n\n  nix flake archive - copy a flake and all its inputs to\n  a store \n  nix flake check - check whether the flake evaluates and\n  run its tests \n  nix flake clone - clone flake repository \n  nix flake info - show flake metadata \n  nix flake init - create a flake in the current\n  directory from a template \n  nix flake lock - create missing lock file entries \n  nix flake metadata - show flake metadata \n  nix flake new - create a flake in the specified\n  directory from a template \n  nix flake prefetch - download the source tree denoted\n  by a flake reference into the Nix store \n  nix flake show - show the outputs provided by a flake \n  nix flake update - update flake lock file"
    options: []
  - name: help
    description: show help about nix or a particular subcommand
    usage: |2-
      nix help [option...] subcommand...
    options: []
  - name: profile
    description: manage Nix profiles
    usage: "\nnix profile [option...] subcommand\n\nwhere subcommand is one of the following:\n\n  nix profile diff-closures - show the closure difference\n  between each version of a profile \n  nix profile history - show all versions of a profile \n  nix profile install - install a package into a profile \n  nix profile list - list installed packages \n  nix profile remove - remove packages from a profile \n  nix profile rollback - roll back to the previous\n  version or a specified version of a profile \n  nix profile upgrade - upgrade packages using their most\n  recent flake \n  nix profile wipe-history - delete non-current versions\n  of a profile"
    options: []
  - name: repl
    description: start an interactive environment for evaluating Nix expressions
    usage: |2-
      nix repl [option...] installables...
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: run
    description: run a Nix application
    usage: |2-
      nix run [option...] installable args...
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: search
    description: search for packages
    usage: |2-
      nix search [option...] installable regex...
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --exclude
          - -e
        argument: regex
        description: Hide packages whose attribute path, name or description contain regex.
      - names:
          - --json
        argument: ""
        description: Produce output in JSON format, suitable for consumption by another program.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: shell
    description: run a shell in which the specified packages are available
    usage: |2-
      nix shell [option...] installables...
    options:
      - names:
          - --command
          - -c
        argument: command args
        description: Command and arguments to be executed, defaulting to $SHELL
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --ignore-environment
          - -i
        argument: ""
        description: Clear the entire environment (except those specified with --keep).
      - names:
          - --keep
          - -k
        argument: name
        description: Keep the environment variable name.
      - names:
          - --unset
          - -u
        argument: name
        description: Unset the environment variable name.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: bundle
    description: bundle an application so that it works outside of the Nix store
    usage: |2-
      nix bundle [option...] installable
    options:
      - names:
          - --bundler
        argument: flake-url
        description: Use a custom bundler instead of the default (github:NixOS/bundlers).
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --out-link
          - -o
        argument: path
        description: Override the name of the symlink to the build result. It defaults to the base name of the app.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: copy
    description: copy paths between Nix stores
    usage: |2-
      nix copy [option...] installables...
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --from
        argument: store-uri
        description: URL of the source Nix store.
      - names:
          - --no-check-sigs
        argument: ""
        description: Do not require that paths are signed by trusted keys.
      - names:
          - --substitute-on-destination
          - -s
        argument: ""
        description: Whether to try substitutes on the destination store (only supported by SSH stores).
      - names:
          - --to
        argument: store-uri
        description: URL of the destination Nix store.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --all
        argument: ""
        description: Apply the operation to every store path.
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
      - names:
          - --no-recursive
        argument: ""
        description: Apply operation to specified paths only.
  - name: edit
    description: open the Nix expression of a Nix package in $EDITOR
    usage: |2-
      nix edit [option...] installable
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: eval
    description: evaluate a Nix expression
    usage: |2-
      nix eval [option...] installable
    options:
      - names:
          - --apply
        argument: expr
        description: Apply the function expr to each argument.
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --json
        argument: ""
        description: Produce output in JSON format, suitable for consumption by another program.
      - names:
          - --raw
        argument: ""
        description: Print strings without quotes or escaping.
      - names:
          - --read-only
        argument: ""
        description: Do not instantiate each evaluated derivation. This improves performance, but can cause errors when accessing store paths of derivations during evaluation.
      - names:
          - --write-to
        argument: path
        description: Write a string or attrset of strings to path.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: fmt
    description: reformat your code in the standard style
    usage: |2-
      nix fmt [option...] args...
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: log
    description: show the build log of the specified packages or paths, if available
    usage: |2-
      nix log [option...] installable
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: path-info
    description: query information about store paths
    usage: |2-
      nix path-info [option...] installables...
    options:
      - names:
          - --closure-size
          - -S
        argument: ""
        description: Print the sum of the sizes of the NAR serialisations of the closure of each path.
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --human-readable
          - -h
        argument: ""
        description: With -s and -S, print sizes in a human-friendly format such as 5.67G.
      - names:
          - --json
        argument: ""
        description: Produce output in JSON format, suitable for consumption by another program.
      - names:
          - --sigs
        argument: ""
        description: Show signatures.
      - names:
          - --size
          - -s
        argument: ""
        description: Print the size of the NAR serialisation of each path.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --all
        argument: ""
        description: Apply the operation to every store path.
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
      - names:
          - --recursive
          - -r
        argument: ""
        description: Apply operation to closure of the specified paths.
  - name: registry
    description: manage the flake registry
    usage: "\nnix registry [option...] subcommand\n\nwhere subcommand is one of the following:\n\n  nix registry add - add/replace flake in user flake\n  registry \n  nix registry list - list available Nix flakes \n  nix registry pin - pin a flake to its current version\n  or to the current version of a flake URL \n  nix registry remove - remove flake from user flake\n  registry"
    options: []
  - name: why-depends
    description: show why a package has another package in its closure
    usage: |2-
      nix why-depends [option...] package dependency
    options:
      - names:
          - --all
          - -a
        argument: ""
        description: Show all edges in the dependency graph leading from package to dependency, rather than just a shortest path.
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --precise
        argument: ""
        description: For each edge in the dependency graph, show the files in the parent that cause the dependency.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: daemon
    description: daemon to perform store operations on behalf of non-root clients
    usage: |2-
      nix daemon [option...]
    options: []
  - name: describe-stores
    description: show registered store types and their available options
    usage: |2-
      nix describe-stores [option...]
    options:
      - names:
          - --json
        argument: ""
        description: Produce output in JSON format, suitable for consumption by another program.
  - name: hash
    description: compute and convert cryptographic hashes
    usage: "\nnix hash [option...] subcommand\n\nwhere subcommand is one of the following:\n\n  nix hash file - print cryptographic hash of a regular\n  file \n  nix hash path - print cryptographic hash of the NAR\n  serialisation of a path \n  nix hash to-base16 - convert a hash to base-16\n  representation \n  nix hash to-base32 - convert a hash to base-32\n  representation \n  nix hash to-base64 - convert a hash to base-64\n  representation \n  nix hash to-sri - convert a hash to SRI representation"
    options: []
  - name: key
    description: generate and convert Nix signing keys
    usage: "\nnix key [option...] subcommand\n\nwhere subcommand is one of the following:\n\n  nix key convert-secret-to-public - generate a public\n  key for verifying store paths from a secret key read\n  from standard input \n  nix key generate-secret - generate a secret key for\n  signing store paths"
    options: []
  - name: nar
    description: create or inspect NAR files
    usage: "\nnix nar [option...] subcommand\n\nwhere subcommand is one of the following:\n\n  nix nar cat - print the contents of a file inside a NAR\n  file on stdout \n  nix nar dump-path - serialise a path to stdout in NAR\n  format \n  nix nar ls - show information about a path inside a NAR\n  file"
    options: []
  - name: print-dev-env
    description: print shell code that can be sourced by bash to reproduce the build environment of a derivation
    usage: |2-
      nix print-dev-env [option...] installable
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --json
        argument: ""
        description: Produce output in JSON format, suitable for consumption by another program.
      - names:
          - --profile
        argument: path
        description: The profile to update.
      - names:
          - --redirect
        argument: installable outputs-dir
        description: Redirect a store path to a mutable location.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: realisation
    description: manipulate a Nix realisation
    usage: |2-
      nix realisation [option...] subcommand

      where subcommand is one of the following:

        nix realisation info - query information about one or
        several realisations
    options: []
  - name: show-config
    description: show the Nix configuration
    usage: |2-
      nix show-config [option...]
    options:
      - names:
          - --json
        argument: ""
        description: Produce output in JSON format, suitable for consumption by another program.
  - name: show-derivation
    description: show the contents of a store derivation
    usage: |2-
      nix show-derivation [option...] installables...
    options:
      - names:
          - --debugger
        argument: ""
        description: start an interactive environment if evaluation fails
      - names:
          - --recursive
          - -r
        argument: ""
        description: Include the dependencies of the specified derivations.
      - names:
          - --arg
        argument: name expr
        description: Pass the value expr as the argument name to Nix functions.
      - names:
          - --argstr
        argument: name string
        description: Pass the string string as the argument name to Nix functions.
      - names:
          - --eval-store
        argument: store-url
        description: The Nix store to use for evaluations.
      - names:
          - --impure
        argument: ""
        description: Allow access to mutable paths and repositories.
      - names:
          - --include
          - -I
        argument: path
        description: Add path to the list of locations used to look up <...> file names.
      - names:
          - --override-flake
        argument: original-ref resolved-ref
        description: Override the flake registries, redirecting original-ref to resolved-ref.
      - names:
          - --commit-lock-file
        argument: ""
        description: Commit changes to the flake's lock file.
      - names:
          - --inputs-from
        argument: flake-url
        description: Use the inputs of the specified flake as registry entries.
      - names:
          - --no-registries
        argument: ""
        description: Don't allow lookups in the flake registries. This option is deprecated; use --no-use-registries.
      - names:
          - --no-update-lock-file
        argument: ""
        description: Do not allow any updates to the flake's lock file.
      - names:
          - --no-write-lock-file
        argument: ""
        description: Do not write the flake's newly generated lock file.
      - names:
          - --override-input
        argument: input-path flake-url
        description: Override a specific flake input (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.
      - names:
          - --recreate-lock-file
        argument: ""
        description: Recreate the flake's lock file from scratch.
      - names:
          - --update-input
        argument: input-path
        description: Update a specific flake input (ignoring its previous entry in the lock file).
      - names:
          - --derivation
        argument: ""
        description: Operate on the store derivation rather than its outputs.
      - names:
          - --expr
        argument: expr
        description: Interpret installables as attribute paths relative to the Nix expression expr.
      - names:
          - --file
          - -f
        argument: file
        description: Interpret installables as attribute paths relative to the Nix expression stored in file. If file is the character -, then a Nix expression will be read from standard input. Implies --impure.
  - name: store
    description: manipulate a Nix store
    usage: "\nnix store [option...] subcommand\n\nwhere subcommand is one of the following:\n\nAvailable commands:\n\n  nix store add-file - add a regular file to the Nix\n  store \n  nix store add-path - add a path to the Nix store \n  nix store cat - print the contents of a file in the Nix\n  store on stdout \n  nix store copy-sigs - copy store path signatures from\n  substituters \n  nix store delete - delete paths from the Nix store \n  nix store diff-closures - show what packages and\n  versions were added and removed between two closures \n  nix store dump-path - serialise a store path to stdout\n  in NAR format \n  nix store gc - perform garbage collection on a Nix\n  store \n  nix store ls - show information about a path in the Nix\n  store \n  nix store make-content-addressed - rewrite a path or\n  closure to content-addressed form \n  nix store optimise - replace identical files in the\n  store by hard links \n  nix store ping - test whether a store can be accessed \n  nix store prefetch-file - download a file into the Nix\n  store \n  nix store repair - repair store paths \n  nix store sign - sign store paths \n  nix store verify - verify the integrity of store paths \n\n:\n\n  nix store copy-log - copy build logs between Nix stores"
    options: []
  - name: doctor
    description: check your system for potential problems and print a PASS or FAIL for each check
    usage: |2-
      nix doctor [option...]
    options: []
  - name: upgrade-nix
    description: upgrade Nix to the stable version declared in Nixpkgs
    usage: |2-
      nix upgrade-nix [option...]
    options:
      - names:
          - --dry-run
        argument: ""
        description: Show what this command would do without doing it.
      - names:
          - --nix-store-paths-url
        argument: url
        description: The URL of the file that contains the store paths of the latest Nix release.
      - names:
          - --profile
          - -p
        argument: profile-dir
        description: The path to the Nix profile to upgrade.
version: nix (Nix) 2.10.3
tldr: |
  > Utilities for the Nix language and store.
  > More information: <https://nixos.org>.

  - Search for a package via its name or description:

  `nix search {{search_term}}`

  - Start a Nix shell with the specified packages available:

  `nix run {{nixpkgs.pkg1 nixpkgs.pkg2 nixpkgs.pkg3...}}`

  - Optimise Nix store disk usage by combining duplicate files:

  `nix store optimise`

  - Start an interactive environment for evaluating Nix expressions:

  `nix repl`

  - Upgrade Nix to the latest stable version:

  `nix upgrade-nix`
