name: npm
description: npm
usage: |-
  npm install        install all the dependencies in your project
  npm install <foo>  add the <foo> dependency to your project
  npm test           run this project's tests
  npm run <foo>      run the script named <foo>
  npm <command> -h   quick help on <command>
  npm -l             display usage info for all commands
  npm help <term>    search for help on <term>
  npm help npm       more involved overview
options: []
subcommands:
  - name: access
    description: Set access level on published packages
    usage: |-
      npm access public [<package>]
      npm access restricted [<package>]
      npm access grant <read-only|read-write> <scope:team> [<package>]
      npm access revoke <scope:team> [<package>]
      npm access 2fa-required [<package>]
      npm access 2fa-not-required [<package>]
      npm access ls-packages [<user>|<scope>|<scope:team>]
      npm access ls-collaborators [<package> [<user>]]
      npm access edit [<package>]
    options: []
    inheritedOptions:
      - names:
          - --registry
        argument: URL
        description: 'The base URL of the npm registry. (default: "https://registry.npmjs.org/")'
      - names:
          - --otp
        argument: String
        description: "This is a one-time password from a two-factor authenticator. It's needed when publishing or changing package permissions with npm access. If not set, and a registry response fails with a challenge for a one-time password, npm will prompt on the command line for one. (default: null)"
    subcommands:
      - name: public
        description: Set a package to be publicly accessible
        options: []
      - name: restricted
        description: Set a package to be publicly restricted
        options: []
      - name: grant
        description: Add the ability of users and teams to have read-only or read-write access to a package.
        options: []
      - name: revoke
        description: Remove the ability of users and teams to have read-only or read-write access to a package.
        options: []
      - name: 2fa-required
        description: Configure a package to require that anyone publishing it have two-factor authentication enabled on their account.
        options: []
      - name: 2fa-not-required
        description: Configure a package NOT to require two-factor authentication.
        options: []
      - name: ls-packages
        description: Show all  of the packages a user or a team is able to access, along with the access level, except for read-only public packages
        options: []
      - name: ls-collaborators
        description: Show all of the access privileges for a package. Will only show permissions for packages to which you have at least read access.
        options: []
      - name: edit
        description: Set the access privileges for a package at once using $EDITOR.
        options: []
  - name: adduser
    aliases:
      - login
      - add-user
    description: Add a registry user account
    usage: npm adduser
    options: []
  - name: audit
    description: Run a security audit
    usage: npm audit [fix|signatures]
    options: []
    inheritedOptions:
      - names:
          - --audit-level
        argument: "{info|low|moderate|high|critical|none}"
        description: The minimum level of vulnerability for npm audit to exit with a non-zero exit code.
      - names:
          - --dry-run
        argument: ""
        description: "Indicates that you don't want npm to make any changes and that it should only report what it would have done. This can be passed into any of the commands that modify your local installation, eg, install, update, dedupe, uninstall, as well as pack and publish."
      - names:
          - --force
        argument: ""
        description: Removes various protections against unfortunate side effects, common mistakes, unnecessary performance degradation, and malicious input.
      - names:
          - --json
        argument: ""
        description: Whether or not to output JSON data, rather than the normal output.
      - names:
          - --package-lock-only
        argument: ""
        description: If set to true, the current operation will only use the package-lock.json, ignoring node_modules.
      - names:
          - --omit
        argument: "{dev|optional|peer}"
        description: Dependency types to omit from the installation tree on disk.
      - names:
          - --foreground-scripts
        argument: ""
        description: Run all  build scripts (ie, preinstall, install, and postinstall) scripts for installed packages in the foreground process, sharing standard input, output, and error with the main npm process.
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
    subcommands:
      - name: fix
        description: Scan your project for vulnerabilities and automatically install any compatible updates to vulnerable dependencies
        options: []
  - name: bin
    description: Display npm bin folder
    usage: npm bin
    options:
      - names:
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
  - name: bugs
    aliases:
      - issues
    description: Report bugs for a package in a web browser
    usage: npm bugs [<pkgname> [<pkgname> ...]]
    options: []
    positionalArguments:
      - name: "[<pkgname>]"
        description: ""
  - name: cache
    description: Manipulates packages cache
    usage: |-
      npm cache add <package-spec>
      npm cache clean [<key>]
      npm cache ls [<name>@<version>]
      npm cache verify
    options: []
    inheritedOptions:
      - names:
          - --cache
        argument: Path
        description: The location of npm's cache directory. See npm help npm cache
    subcommands:
      - name: add
        description: Add the specified packages to the local cache. This command is primarily intended to be used internally by npm, but it can provide a way to add data to the local installation cache explicitly.
        options: []
      - name: clean
        description: Delete all data out of the cache folder.
        options: []
      - name: ls
        description: List data in the local cache.
        options: []
      - name: verify
        description: Verify the contents of the cache folder, garbage collecting any unneeded data, and verifying the integrity of the cache index and all cached data.
        options: []
  - name: ci
    aliases:
      - ic
      - clean-install
      - install-clean
    description: Install a project with a clean slate
    usage: npm ci
    options:
      - names:
          - --audit
        argument: ""
        description: When "true" submit audit reports alongside the current npm command to the default registry and all registries configured for scopes. See the documentation for npm help audit for details on what is submitted.
      - names:
          - --foreground-scripts
        argument: ""
        description: Run all  build scripts (ie, preinstall, install, and postinstall) scripts for installed packages in the foreground process, sharing standard input, output, and error with the main npm process.
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --script-shell
        argument: String
        description: The shell to use for scripts run with the npm exec, npm run and npm init <pkg> commands.
  - name: completion
    description: Tab Completion for npm
    usage: npm completion
    options: []
  - name: config
    aliases:
      - c
    description: Manage the npm configuration files
    options: []
    inheritedOptions:
      - names:
          - --json
        argument: ""
        description: Whether or not to output JSON data, rather than the normal output.
      - names:
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
      - names:
          - --editor
        argument: String
        description: The command to run for npm edit and npm config edit.
      - names:
          - --location
        argument: "{global|user|project}"
        description: When passed to npm config this refers to which config file to use.
      - names:
          - --long
        argument: ""
        description: Show extended information in ls, search, and help-search.
    subcommands:
      - name: set
        description: Sets each of the config keys to the value provided.
        options: []
      - name: get
        description: Echo the config value(s) to stdout.
        options: []
      - name: list
        description: Show all the config settings. Use -l to also show defaults. Use --json to show the settings in json format.
        options: []
      - name: delete
        description: Deletes the specified keys from all configuration files.
        options: []
      - name: edit
        description: Opens the config file in an editor. Use the --global flag to edit the global config.
        options: []
  - name: dedupe
    aliases:
      - ddp
    description: Reduce duplication in the package tree
    usage: npm dedupe
    options:
      - names:
          - --global-style
        argument: ""
        description: Causes npm to install the package into your local node_modules folder with the same layout it uses with the global node_modules folder. Only your direct dependencies will show in node_modules and everything they depend on will be flattened in their node_modules folders. This obviously will eliminate some deduping. If used with legacy-bundling, legacy-bundling will be preferred.
      - names:
          - --legacy-bundling
        argument: ""
        description: Causes npm to install the package such that versions of npm prior to 1.4, such as the one included with node 0.8, can install the package. This eliminates all automatic deduping. If used with global-style this option will be preferred.
      - names:
          - --strict-peer-deps
        argument: ""
        description: If set to true, and --legacy-peer-deps is not set, then any conflicting peerDependencies will be treated as an install failure, even if npm could reasonably guess the appropriate resolution based on non-peer dependency relationships.
      - names:
          - --package-lock
        argument: ""
        description: If set to false, then ignore package-lock.json files when installing. This will also prevent writing package-lock.json if save is true.
      - names:
          - --save
        argument: ""
        description: Save installed packages to a package.json file as dependencies.
      - names:
          - --omit
        argument: "{dev|optional|peer}"
        description: Dependency types to omit from the installation tree on disk.
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --audit
        argument: ""
        description: When "true" submit audit reports alongside the current npm command to the default registry and all registries configured for scopes. See the documentation for npm help audit for details on what is submitted.
      - names:
          - --bin-links
        argument: ""
        description: Tells npm to create symlinks (or .cmd shims on Windows) for package executables.
      - names:
          - --fund
        argument: ""
        description: When "true" displays the message at the end of each npm install acknowledging the number of dependencies looking for funding. See npm help npm fund for details.
      - names:
          - --dry-run
        argument: ""
        description: "Indicates that you don't want npm to make any changes and that it should only report what it would have done. This can be passed into any of the commands that modify your local installation, eg, install, update, dedupe, uninstall, as well as pack and publish."
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: deprecate
    description: Deprecate a version of a package
    usage: npm deprecate <package-spec> <message>
    positionalArguments:
      - name: "<package-spec>"
        description: ""
      - name: "<message>"
        description: ""
    options:
      - names:
          - --registry
        argument: URL
        description: 'The base URL of the npm registry. (default: "https://registry.npmjs.org/")'
      - names:
          - --otp
        argument: String
        description: "This is a one-time password from a two-factor authenticator. It's needed when publishing or changing package permissions with npm access. If not set, and a registry response fails with a challenge for a one-time password, npm will prompt on the command line for one. (default: null)"
  - name: diff
    description: The registry diff command
    usage: npm diff [...<paths>]
    positionalArguments:
      - name: "[...<paths>]"
        description: ""
    options:
      - names:
          - --diff
        argument: String
        description: Define arguments to compare in npm diff.
      - names:
          - --diff-name-only
        argument: ""
        description: Prints only filenames when using npm diff.
      - names:
          - --diff-unified
        argument: Number
        description: Ignore whitespace when comparing lines in npm diff.
      - names:
          - --diff-ignore-all-space
        argument: ""
        description: Define arguments to compare in npm diff.
      - names:
          - --diff-no-prefix
        argument: ""
        description: Do not show any source or destination prefix in npm diff output.
      - names:
          - --diff-src-prefix
        argument: String
        description: Source prefix to be used in npm diff output.
      - names:
          - --diff-dst-prefix
        argument: String
        description: Destination prefix to be used in npm diff output.
      - names:
          - --diff-text
        argument: ""
        description: Treat all files as text in npm diff.
      - names:
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
      - names:
          - --tag
        argument: String
        description: If you ask npm to install a package and don't tell it a specific version, then it will install the specified tag.
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: dist-tag
    description: Modify package distribution tags
    usage: |-
      npm dist-tag add <package-spec (with version)> [<tag>]
      npm dist-tag rm <package-spec> <tag>
      npm dist-tag ls [<package-spec>]
    options: []
    inheritedOptions:
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
    subcommands:
      - name: add
        description: Tags the specified version of the package with the specified tag, or the --tag config if not specified. If you have two-factor authentication on auth-and-writes then you’ll need to include a one-time password on the command line with --otp <one-time password>, or at the OTP prompt.
        options: []
      - name: rm
        description: Clear a tag that is no longer in use from the package. If you have two-factor authentication on auth-and-writes then you’ll need to include a one-time password on the command line with --otp <one-time password>, or at the OTP prompt.
        options: []
      - name: ls
        description: Show all of the dist-tags for a package, defaulting to the package in the current prefix. This is the default action if none is specified.
        options: []
  - name: docs
    aliases:
      - home
    positionalArguments:
      - name: "[<pkgname> [<pkgname> ...]]"
        description: ""
    description: Open documentation for a package in a web browser
    usage: npm docs [<pkgname> [<pkgname> ...]]
    options:
      - names:
          - --browser
        argument: "Boolean|String"
        description: The browser that is called by npm commands to open websites.
      - names:
          - --registry
        argument: URL
        description: The base URL of the npm registry.
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: doctor
    description: Check your npm environment
    usage: npm doctor
    options:
      - names:
          - --registry
        argument: URL
        description: The base URL of the npm registry.
  - name: edit
    description: Edit an installed package
    usage: npm edit <pkg>[/<subpkg>...]
    options:
      - names:
          - --editor
        argument: String
        description: The command to run for `npm edit` and `npm config edit`.
  - name: exec
    description: Run a command from a local or remote npm package
    options: []
  - name: explain
    aliases:
      - why
    description: Explain installed packages
    usage: npm explain <package-spec>
    positionalArguments:
      - name: '<package-spec>'
        description: ""
    options:
      - names:
          - --json
        argument: ""
        description: Whether or not to output JSON data, rather than the normal output.
      - names:
          - -w
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
  - name: explore
    description: Browse an installed package
    usage: npm explore <pkg> [ -- <command>]
    options: []
  - name: find-dupes
    description: Find duplication in the package tree
    usage: npm find-dupes
    options: []
  - name: fund
    description: Retrieve funding information
    usage: npm fund [<package-spec>]
    options: []
  - name: get
    description: Get a value from the npm configuration
    usage: npm get [<key> ...]
    options: []
  - name: help
    description: Get help on npm
    options: []
  - name: hook
    description: Manage registry hooks
    usage: |-
      npm hook add <pkg> <url> <secret> [--type=<type>]
      npm hook ls [pkg]
      npm hook rm <id>
      npm hook update <id> <url> <secret>
    options: []
    inheritedOptions:
      - names:
          - --registry
        argument: URL
        description: The base URL of the npm registry.
      - names:
          - --otp
        argument: String
        description: "This is a one-time password from a two-factor authenticator. It's needed when publishing or changing package permissions with npm access. If not set, and a registry response fails with a challenge for a one-time password, npm will prompt on the command line for one. (default: null)"
    subcommands:
      - name: add
        positionalArguments:
          - name: '<pkg>'
            description: ''
          - name: '<url>'
            description: ''
          - name: '<secret>'
            description: ''
          - name: '[--type=<type>]'
            description: ''
        description: Add a hook.
        options: []
      - name: ls
        positionalArguments:
          - name: '[pkg]'
            description: ''
        description: List your active hooks.
        options: []
      - name: rm
        positionalArguments:
          - name: '<id>'
            description: ''
        description: Remove a hook.
        options: []
      - name: update
        positionalArguments:
          - name: '<id>'
            description: ''
          - name: '<url>'
            description: ''
          - name: '<secret>'
            description: ''
        description: Update an existing hook's url
        options: []
  - name: init
    aliases:
      - create
    description: Create a package.json file
    usage: |-
      npm init <package-spec> (same as `npx <package-spec>)
      npm init <@scope> (same as `npx <@scope>/create`)
    options:
      - names:
          - -y
          - --yes
        argument: ""
        description: Automatically answer "yes" to any prompts that npm might print on the command line.
      - names:
          - --force
        argument: ""
        description: Removes various protections against unfortunate side effects, common mistakes, unnecessary performance degradation, and malicious input.
      - names:
          - -w
          - --workspace
        argument: <workspace-name>
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - -ws
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --no-workspaces-update
        argument: ""
        description: Don't update workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: install
    aliases:
      - i
      - add
    description: Install a package
    usage: npm install [<package-spec> ...]
    options:
      - names:
          - --save
        argument: ""
        description: Save installed packages to a package.json file as dependencies.
      - names:
          - --save-exact
        argument: ""
        description: Dependencies saved to package.json will be configured with an exact version rather than using npm's default semver range operator.
      - names:
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
      - names:
          - --global-style
        argument: ""
        description: Causes npm to install the package into your local node_modules folder with the same layout it uses with the global node_modules folder. Only your direct dependencies will show in node_modules and everything they depend on will be flattened in their node_modules folders. This obviously will eliminate some deduping. If used with legacy-bundling, legacy-bundling will be preferred.
      - names:
          - --legacy-bundling
        argument: ""
        description: Causes npm to install the package such that versions of npm prior to 1.4, such as the one included with node 0.8, can install the package. This eliminates all automatic deduping. If used with global-style this option will be preferred.
      - names:
          - --omit
        argument: "{dev|optional|peer}"
        description: Dependency types to omit from the installation tree on disk.
      - names:
          - --strict-peer-deps
        argument: ""
        description: If set to true, and --legacy-peer-deps is not set, then any conflicting peerDependencies will be treated as an install failure, even if npm could reasonably guess the appropriate resolution based on non-peer dependency relationships.
      - names:
          - --package-lock
        argument: ""
        description: If set to false, then ignore package-lock.json files when installing. This will also prevent writing package-lock.json if save is true.
      - names:
          - --foreground-scripts
        argument: ""
        description: Run all  build scripts (ie, preinstall, install, and postinstall) scripts for installed packages in the foreground process, sharing standard input, output, and error with the main npm process.
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --audit
        argument: ""
        description: When "true" submit audit reports alongside the current npm command to the default registry and all registries configured for scopes. See the documentation for npm help audit for details on what is submitted.
      - names:
          - --bin-links
        argument: ""
        description: Tells npm to create symlinks (or .cmd shims on Windows) for package executables.
      - names:
          - --fund
        argument: ""
        description: When "true" displays the message at the end of each npm install acknowledging the number of dependencies looking for funding. See npm help npm fund for details.
      - names:
          - --dry-run
        argument: ""
        description: "Indicates that you don't want npm to make any changes and that it should only report what it would have done. This can be passed into any of the commands that modify your local installation, eg, install, update, dedupe, uninstall, as well as pack and publish."
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: install-ci-test
    aliases:
      - cit
    description: Install a project with a clean slate and run tests
    usage: npm install-ci-test
    options: []
  - name: install-test
    aliases:
      - it
    description: Install package(s) and run tests
    usage: npm install-test [<package-spec> ...]
    options:
      - names:
          - --save
        argument: ""
        description: Save installed packages to a package.json file as dependencies.
      - names:
          - --save-exact
        argument: ""
        description: Dependencies saved to package.json will be configured with an exact version rather than using npm's default semver range operator.
      - names:
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
      - names:
          - --global-style
        argument: ""
        description: Causes npm to install the package into your local node_modules folder with the same layout it uses with the global node_modules folder. Only your direct dependencies will show in node_modules and everything they depend on will be flattened in their node_modules folders. This obviously will eliminate some deduping. If used with legacy-bundling, legacy-bundling will be preferred.
      - names:
          - --legacy-bundling
        argument: ""
        description: Causes npm to install the package such that versions of npm prior to 1.4, such as the one included with node 0.8, can install the package. This eliminates all automatic deduping. If used with global-style this option will be preferred.
      - names:
          - --omit
        argument: "{dev|optional|peer}"
        description: Dependency types to omit from the installation tree on disk.
      - names:
          - --strict-peer-deps
        argument: ""
        description: If set to true, and --legacy-peer-deps is not set, then any conflicting peerDependencies will be treated as an install failure, even if npm could reasonably guess the appropriate resolution based on non-peer dependency relationships.
      - names:
          - --package-lock
        argument: ""
        description: If set to false, then ignore package-lock.json files when installing. This will also prevent writing package-lock.json if save is true.
      - names:
          - --foreground-scripts
        argument: ""
        description: Run all  build scripts (ie, preinstall, install, and postinstall) scripts for installed packages in the foreground process, sharing standard input, output, and error with the main npm process.
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --audit
        argument: ""
        description: When "true" submit audit reports alongside the current npm command to the default registry and all registries configured for scopes. See the documentation for npm help audit for details on what is submitted.
      - names:
          - --bin-links
        argument: ""
        description: Tells npm to create symlinks (or .cmd shims on Windows) for package executables.
      - names:
          - --fund
        argument: ""
        description: When "true" displays the message at the end of each npm install acknowledging the number of dependencies looking for funding. See npm help npm fund for details.
      - names:
          - --dry-run
        argument: ""
        description: "Indicates that you don't want npm to make any changes and that it should only report what it would have done. This can be passed into any of the commands that modify your local installation, eg, install, update, dedupe, uninstall, as well as pack and publish."
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: link
    aliases:
      - ln
    description: Symlink a package folder
    usage: npm link [<package-spec>]
    options:
      - names:
          - --save
        argument: ""
        description: Save installed packages to a package.json file as dependencies.
      - names:
          - --save-exact
        argument: ""
        description: Dependencies saved to package.json will be configured with an exact version rather than using npm's default semver range operator.
      - names:
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
      - names:
          - --global-style
        argument: ""
        description: Causes npm to install the package into your local node_modules folder with the same layout it uses with the global node_modules folder. Only your direct dependencies will show in node_modules and everything they depend on will be flattened in their node_modules folders. This obviously will eliminate some deduping. If used with legacy-bundling, legacy-bundling will be preferred.
      - names:
          - --legacy-bundling
        argument: ""
        description: Causes npm to install the package such that versions of npm prior to 1.4, such as the one included with node 0.8, can install the package. This eliminates all automatic deduping. If used with global-style this option will be preferred.
      - names:
          - --omit
        argument: "{dev|optional|peer}"
        description: Dependency types to omit from the installation tree on disk.
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --audit
        argument: ""
        description: When "true" submit audit reports alongside the current npm command to the default registry and all registries configured for scopes. See the documentation for npm help audit for details on what is submitted.
      - names:
          - --bin-links
        argument: ""
        description: Tells npm to create symlinks (or .cmd shims on Windows) for package executables.
      - names:
          - --fund
        argument: ""
        description: When "true" displays the message at the end of each npm install acknowledging the number of dependencies looking for funding. See npm help npm fund for details.
      - names:
          - --dry-run
        argument: ""
        description: "Indicates that you don't want npm to make any changes and that it should only report what it would have done. This can be passed into any of the commands that modify your local installation, eg, install, update, dedupe, uninstall, as well as pack and publish."
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: ll
    aliases:
      - la
    description: List installed packages
    usage: npm ll [[<@scope>/]<pkg> ...]
    options:
      - names:
          - -a
          - --all
        argument: ""
        description: When running npm outdated and npm ls, setting --all will show all outdated or installed packages, rather than only those directly depended upon by the current project.
      - names:
          - --json
        argument: ""
        description: Whether or not to output JSON data, rather than the normal output.
      - names:
          - -l
          - --long
        argument: ""
        description: Show extended information in ls, search, and help-search.
      - names:
          - -p
          - --parseable
        argument: ""
        description: Show the description in npm search
      - names:
          - -g
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
      - names:
          - --depth
        argument: Number
        description: The depth to go when recursing packages for npm ls.
      - names:
          - --omit
        argument: "{dev|optional|peer}"
        description: Dependency types to omit from the installation tree on disk.
      - names:
          - --link
        argument: ""
        description: Used with npm ls, limiting output to only those packages that are linked.
      - names:
          - --package-lock-only
        argument: ""
        description: If set to true, the current operation will only use the package-lock.json, ignoring node_modules.
      - names:
          - --unicode
        argument: ""
        description: When set to true, npm uses unicode characters in the tree output. When false, it uses ascii characters instead of unicode glyphs.
      - names:
          - -w
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - -ws
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: logout
    description: Log out of the registry
    usage: npm logout
    options: []
  - name: ls
    aliases:
      - list
    description: List installed packages
    usage: npm ls <package-spec>
    options:
      - names:
          - -a
          - --all
        argument: ""
        description: When running npm outdated and npm ls, setting --all will show all outdated or installed packages, rather than only those directly depended upon by the current project.
      - names:
          - --json
        argument: ""
        description: Whether or not to output JSON data, rather than the normal output.
      - names:
          - -l
          - --long
        argument: ""
        description: Show extended information in ls, search, and help-search.
      - names:
          - -p
          - --parseable
        argument: ""
        description: Show the description in npm search
      - names:
          - -g
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
      - names:
          - --depth
        argument: Number
        description: The depth to go when recursing packages for npm ls.
      - names:
          - --omit
        argument: "{dev|optional|peer}"
        description: Dependency types to omit from the installation tree on disk.
      - names:
          - --link
        argument: ""
        description: Used with npm ls, limiting output to only those packages that are linked.
      - names:
          - --package-lock-only
        argument: ""
        description: If set to true, the current operation will only use the package-lock.json, ignoring node_modules.
      - names:
          - --unicode
        argument: ""
        description: When set to true, npm uses unicode characters in the tree output. When false, it uses ascii characters instead of unicode glyphs.
      - names:
          - -w
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - -ws
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: org
    description: Manage orgs
    usage: |-
      npm org set orgname username [developer | admin | owner]
      npm org rm orgname username
      npm org ls orgname [<username>]
    options: []
    subcommands:
      - name: set
        description: Sets each of the config keys to the value provided.
        options: []
      - name: rm
        description: Clear a tag that is no longer in use from the package.
        options: []
      - name: ls
        description: Show all the config settings.
        options: []
  - name: outdated
    description: Check for outdated packages
    usage: npm outdated [<package-spec> ...]
    options: []
  - name: owner
    aliases:
      - author
    description: Manage package owners
    usage: |-
      npm owner add <user> <package-spec>
      npm owner rm <user> <package-spec>
      npm owner ls <package-spec>
    options: []
    subcommands:
      - name: add
        description: Add a config keys.
        options: []
      - name: rm
        description: Clear a tag that is no longer in use from the package.
        options: []
      - name: ls
        description: Show config settings.
        options: []
  - name: pack
    description: Create a tarball from a package
    usage: npm pack <package-spec>
    options: []
  - name: ping
    description: Ping npm registry
    usage: npm ping
    options: []
  - name: pkg
    description: Manages your package.json
    usage: |-
      npm pkg set <key>=<value> [<key>=<value> ...]
      npm pkg get [<key> [<key> ...]]
      npm pkg delete <key> [<key> ...]
      npm pkg set [<array>[<index>].<key>=<value> ...]
      npm pkg set [<array>[].<key>=<value> ...]
    options: []
    subcommands:
      - name: set
        description: Set a config key-value.
        options: []
      - name: delete
        description: Clear a key.
        options: []
      - name: get
        description: Get a config value.
        options: []
  - name: prefix
    description: Display prefix
    usage: npm prefix [-g]
    options:
      - names:
          - -g
          - --global
        argument: ""
        description: Operates in "global" mode, so that packages are installed into the prefix folder instead of the current working directory. See npm help folders for more on the differences in behavior.
  - name: profile
    description: Change settings on your registry profile
    usage: |-
      npm profile enable-2fa [auth-only|auth-and-writes]
      npm profile disable-2fa
      npm profile get [<key>]
      npm profile set <key> <value>
    options: []
    subcommands:
      - name: enable-2fa
        description: Enable 2FA.
        options: []
      - name: diable-2fa
        description: Disable 2FA.
        options: []
      - name: set
        description: Sets a config keys value.
        options: []
      - name: get
        description: Get a key-value.
        options: []
  - name: prune
    description: Remove extraneous packages
    usage: npm prune [[<@scope>/]<pkg>...]
    options: []
  - name: publish
    description: Publish a package
    usage: npm publish <package-spec>
    options: []
  - name: rebuild
    description: Rebuild a package
    options: []
  - name: repo
    description: Open package repository page in the browser
    options: []
  - name: restart
    description: Restart a package
    options: []
  - name: root
    description: Display npm root
    usage: npm root
    options: []
  - name: run-script
    aliases:
      - run
    description: Run arbitrary package scripts
    usage: npm run-script <command> [-- <args>]
    options:
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
      - names:
          - --if-present
        argument: ""
        description: If true, npm will not exit with an error code when run-script is invoked for a script that isn't defined in the scripts section of package.json. This option can be used when it's desirable to optionally run a script when it's present and fail if the script fails. This is useful, for example, when running scripts that may only apply for some builds in an otherwise generic CI setup.
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --script-shell
        argument: String
        description: The shell to use for scripts run with the npm exec, npm run and npm init <pkg> commands.
  - name: search
    aliases:
      - s
      - find
    description: Search for packages
    usage: npm search [search terms ...]
    options:
      - names:
          - --long
        argument: ""
        description: Show extended information in ls, search, and help-search.
      - names:
          - --json
        argument: ""
        description: Whether or not to output JSON data, rather than the normal output.
      - names:
          - --color
        argument: "always|<boolean>"
        description: If false, never shows colors. If "always" then always shows colors. If true, then only prints color codes for tty file descriptors.
      - names:
          - --parseable
        argument: ""
        description: Show the description in npm search
      - names:
          - --searchopts
        argument: String
        description: Space-separated options that are always passed to search.
      - names:
          - --searchexclude
        argument: String
        description: Space-separated options that limit the results from search.
      - names:
          - --registry
        argument: URL
        description: The base URL of the npm registry.
      - names:
          - --prefer-online
        argument: ""
        description: If true, staleness checks for cached data will be forced, making the CLI look for updates immediately even for fresh package data.
      - names:
          - --prefer-offline
        argument: ""
        description: If true, staleness checks for cached data will be bypassed, but missing data will be requested from the server. To force full offline mode, use --offline.
      - names:
          - --offline
        argument: ""
        description: 'Force offline mode: no network requests will be done during install. To allow the CLI to fill in missing cache data, see --prefer-offline.'
  - name: set
    description: Set a value in the npm configuration
    usage: npm set <key>=<value> [<key>=<value> ...]
    options: []
  - name: set-script
    description: Set tasks in the scripts section of package.json
    usage: npm set-script [<script>] [<command>]
    options: []
  - name: shrinkwrap
    description: Lock down dependency versions for publication
    usage: npm shrinkwrap
    options: []
  - name: star
    description: Mark your favorite packages
    usage: npm star [<package-spec>...]
    options: []
  - name: stars
    description: View packages marked as favorites
    options: []
  - name: start
    description: Start a package
    usage: npm start [-- <args>]
    options:
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --script-shell
        argument: String
        description: The shell to use for scripts run with the npm exec, npm run and npm init <pkg> commands.
  - name: stop
    description: Stop a package
    usage: npm stop [-- <args>]
    options:
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --script-shell
        argument: String
        description: The shell to use for scripts run with the npm exec, npm run and npm init <pkg> commands.
  - name: team
    description: Manage organization teams and team memberships
    usage: |-
      npm team create <scope:team> [--otp <otpcode>]
      npm team destroy <scope:team> [--otp <otpcode>]
      npm team add <scope:team> <user> [--otp <otpcode>]
      npm team rm <scope:team> <user> [--otp <otpcode>]
      npm team ls <scope>|<scope:team>
    options: []
    inheritedOptions:
      - names:
          - --registry
        argument: URL
        description: The base URL of the npm registry.
      - names:
          - --otp
        argument: String
        description: "This is a one-time password from a two-factor authenticator. It's needed when publishing or changing package permissions with npm access. If not set, and a registry response fails with a challenge for a one-time password, npm will prompt on the command line for one. (default: null)"
      - names:
          - --parseable
        argument: ""
        description: Show the description in npm search
      - names:
          - --json
        argument: ""
        description: Whether or not to output JSON data, rather than the normal output.
    subcommands:
      - name: create
        description: Create a new team.
        options: []
      - name: destroy
        description: Destroy a team.
        options: []
      - name: add
        description: Add a user to an existing team.
        options: []
      - name: rm
        description: Using npm team rm you can also remove users from a team they belong to.
        options: []
      - name: ls
        description: If performed on an organization name, will return a list of existing teams under that organization.
        options: []
  - name: test
    aliases:
      - t
    description: Test a package
    usage: npm test [-- <args>]
    options:
      - names:
          - --ignore-scripts
        argument: ""
        description: If true, npm does not run scripts specified in package.json files.
      - names:
          - --script-shell
        argument: String
        description: The shell to use for scripts run with the npm exec, npm run and npm init <pkg> commands.
  - name: token
    description: Manage your authentication tokens
    usage: |-
      npm token list
      npm token revoke <id|token>
      npm token create [--read-only] [--cidr=list]
    options: []
  - name: uninstall
    aliases:
      - unlink
      - remove
      - rm
    description: Remove a package
    usage: npm uninstall [<@scope>/]<pkg>...
    options:
      - names:
          - --save
          - -S
        argument: ""
        description: Save installed packages to a package.json file as dependencies.
      - names:
          - --no-save
        argument: ""
        description: Tell npm not to remove the package from your package.json, npm-shrinkwrap.json, or package-lock.json files.
  - name: unpublish
    description: Remove a package from the registry
    usage: npm unpublish [<package-spec>]
    options: []
  - name: unstar
    description: Remove an item from your favorite packages
    usage: npm unstar [<package-spec>...]
    options: []
  - name: update
    aliases:
      - upgrade
      - up
    description: Update packages
    options: []
  - name: version
    description: Bump a package version
    options: []
  - name: view
    aliases:
      - v
      - info
      - show
    description: View registry info
    usage: npm view [<package-spec>] [<field>[.subfield]...]
    positionalArguments:
      - name: '[<@scope>/]<pkg>[@<version>]'
        description: ""
      - name: '[<field>[.subfield]...]'
        description: ""
    options:
      - names:
          - --json
        argument: ""
        description: Whether or not to output JSON data, rather than the normal output.
      - names:
          - --workspace
        argument: String
        description: Enable running a command in the context of the configured workspaces of the current project while filtering by running only the workspaces defined by this configuration option.
      - names:
          - --workspaces
        argument: ""
        description: Set to true to run the command in the context of all configured workspaces.
      - names:
          - --include-workspace-root
        argument: ""
        description: Include the workspace root when workspaces are enabled for a command.
  - name: whoami
    description: Display npm username
    usage: npm whoami
    options:
      - names:
          - --registry
        argument: URL
        description: 'The base URL of the npm registry. (default: "https://registry.npmjs.org/")'
version: "npm 8.19.2"
tldr: |
  > JavaScript and Node.js package manager.
  > Manage Node.js projects and their module dependencies.
  > More information: <https://www.npmjs.com>.

  - Interactively create a `package.json` file:

  `npm init`

  - Download all the packages listed as dependencies in package.json:

  `npm install`

  - Download a specific version of a package and add it to the list of dependencies in `package.json`:

  `npm install {{module_name}}@{{version}}`

  - Download a package and add it to the list of dev dependencies in `package.json`:

  `npm install {{module_name}} --save-dev`

  - Download a package and install it globally:

  `npm install --global {{module_name}}`

  - Uninstall a package and remove it from the list of dependencies in `package.json`:

  `npm uninstall {{module_name}}`

  - Print a tree of locally installed dependencies:

  `npm list`

  - List top-level globally installed modules:

  `npm list --global --depth={{0}}`
