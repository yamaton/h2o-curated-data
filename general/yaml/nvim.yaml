name: nvim
description: nvim
usage: |-
  nvim [options] [file ...]      Edit file(s)
  nvim [options] -t <tag>        Edit file where tag is defined
  nvim [options] -q [errorfile]  Edit file with first error
options:
  - names:
      - --
    argument: ""
    description: Only file names after this
  - names:
      - --cmd
    argument: <cmd>
    description: Execute <cmd> before any config
  - names:
      - -c
    argument: <cmd>
    description: Execute <cmd> after config and first file
  - names:
      - -b
    argument: ""
    description: Binary mode
  - names:
      - -d
    argument: ""
    description: Diff mode
  - names:
      - -e
      - -E
    argument: ""
    description: Ex mode
  - names:
      - -es
      - -Es
    argument: ""
    description: Silent (batch) mode
  - names:
      - -h
      - --help
    argument: ""
    description: Print this help message
  - names:
      - -i
    argument: <shada>
    description: Use this shada file
  - names:
      - -m
    argument: ""
    description: Modifications (writing files) not allowed
  - names:
      - -M
    argument: ""
    description: Modifications in text not allowed
  - names:
      - -n
    argument: ""
    description: No swap file, use memory only
  - names:
      - -o
    argument: '[N]'
    description: 'Open N windows (default: one per file)'
  - names:
      - -O
    argument: '[N]'
    description: 'Open N vertical windows (default: one per file)'
  - names:
      - -p
    argument: '[N]'
    description: 'Open N tab pages (default: one per file)'
  - names:
      - -r
    argument: <file>
    description: Recover edit state for this file
  - names:
      - -R
    argument: ""
    description: Read-only mode
  - names:
      - -S
    argument: <session>
    description: Source <session> after loading the first file
  - names:
      - -s
    argument: <scriptin>
    description: Read Normal mode commands from <scriptin>
  - names:
      - -u
    argument: <config>
    description: Use this config file
  - names:
      - -v
      - --version
    argument: ""
    description: Print version information
  - names:
      - -V
    argument: '[N][file]'
    description: Verbose [level][file]
  - names:
      - --api-info
    argument: ""
    description: Write msgpack-encoded API metadata to stdout
  - names:
      - --clean
    argument: ""
    description: '"Factory defaults" (skip user config and plugins, shada)'
  - names:
      - --embed
    argument: ""
    description: Use stdin/stdout as a msgpack-rpc channel
  - names:
      - --headless
    argument: ""
    description: Don't start a user interface
  - names:
      - --listen
    argument: <address>
    description: Serve RPC API from this address
  - names:
      - --noplugin
    argument: ""
    description: Don't load plugins
  - names:
      - --remote
    argument: '[-subcommand]'
    description: Execute commands remotely on a server
  - names:
      - --server
    argument: <address>
    description: Specify RPC server to send commands to
  - names:
      - --startuptime
    argument: <file>
    description: Write startup timing messages to <file>
version: NVIM v0.8.1
tldr: |
  > Neovim, a programmer's text editor based on Vim, provides several modes for different kinds of text manipulation.
  > Pressing `i` in normal mode enters insert mode. `<Esc>` goes back to normal mode, which doesn't allow regular text insertion.
  > See also `vim`, `vimtutor`, `vimdiff`.
  > More information: <https://neovim.io>.

  - Open a file:

  `nvim {{path/to/file}}`

  - Enter text editing mode (insert mode):

  `<Esc>i`

  - Copy ("yank") or cut ("delete") the current line (paste it with `P`):

  `<Esc>{{yy|dd}}`

  - Enter normal mode and undo the last operation:

  `<Esc>u`

  - Search for a pattern in the file (press `n`/`N` to go to next/previous match):

  `<Esc>/{{search_pattern}}<Enter>`

  - Perform a regular expression substitution in the whole file:

  `<Esc>:%s/{{regular_expression}}/{{replacement}}/g<Enter>`

  - Enter normal mode and save (write) the file, and quit:

  `<Esc>:wq<Enter>`

  - Quit without saving:

  `<Esc>:q!<Enter>`
