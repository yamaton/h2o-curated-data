name: nvm
description: nvm
options:
  - names:
      - --help
    argument: ""
    description: Show this message
  - names:
      - --no-colors
    argument: ""
    description: Suppress colored output
  - names:
      - --version
    argument: ""
    description: Print out the installed version of nvm
subcommands:
  - name: install
    description: Download and install a <version>. Uses .nvmrc if available and version is omitted.
    usage: nvm install [options] [<version>]
    options:
      - names:
          - -s
        argument: ""
        description: Skip binary download, install from source only.
      - names:
          - -b
        argument: ""
        description: Skip source download, install from binary only.
      - names:
          - --reinstall-packages-from
        argument: <version>
        description: When installing, reinstall packages installed in <node|iojs|node version number>
      - names:
          - --lts
        argument: ""
        description: When installing, only select from LTS (long-term support) versions
      - names:
          - --lts
        argument: <LTS name>
        description: When installing, only select from versions for a specific LTS line
      - names:
          - --skip-default-packages
        argument: ""
        description: When installing, skip the default-packages file if it exists
      - names:
          - --latest-npm
        argument: ""
        description: After installing, attempt to upgrade to the latest working npm on the given node version
      - names:
          - --no-progress
        argument: ""
        description: Disable the progress bar on any downloads
      - names:
          - --alias
        argument: <name>
        description: "After installing, set the alias specified to the version specified. (same as: nvm alias <name> <version>)"
      - names:
          - --default
        argument: ""
        description: "After installing, set default alias to the version specified. (same as: nvm alias default <version>)"
  - name: uninstall
    description: Uninstall a version
    usage: |
      nvm uninstall <version>
      nvm uninstall --lts
      nvm uninstall --lts=<LTS name>
    options:
      - names:
          - --lts
        argument: ""
        description: Uninstall using automatic LTS (long-term support) alias `lts/*`, if available.
      - names:
          - --lts
        argument: <LTS name>
        description: Uninstall using automatic alias for provided LTS line, if available.
  - name: use
    description: Modify PATH to use <version>. Uses .nvmrc if available and version is omitted.
    usage: nvm use [options] [<version>]
    options:
      - names:
          - --silent
        argument: ""
        description: Silences stdout/stderr output
      - names:
          - --lts
        argument: ""
        description: Uses automatic LTS (long-term support) alias `lts/*`, if available.
      - names:
          - --lts
        argument: <LTS name>
        description: Uses automatic alias for provided LTS line, if available.
  - name: exec
    description: Run <command> on <version>. Uses .nvmrc if available and version is omitted.
    usage: nvm exec [<version>] [<command>]
    options:
      - names:
          - --silent
        argument: ""
        description: Silences stdout/stderr output
      - names:
          - --lts
        argument: ""
        description: Uses automatic LTS (long-term support) alias `lts/*`, if available.
      - names:
          - --lts
        argument: <LTS name>
        description: Uses automatic alias for provided LTS line, if available.
  - name: run
    description: Run `node` on <version> with <args> as arguments. Uses .nvmrc if available and version is omitted.
    usage: nvm exec [<version>] [<command>]
    options: []
  - name: current
    description: Display currently activated version of Node
    usage: nvm current
    options: []
  - name: ls
    description: List installed versions, matching a given <version> if provided
    usage: nvm ls [<version>]
    options:
      - names:
          - --no-colors
        argument: ""
        description: Suppress colored output
      - names:
          - --no-alias
        argument: ""
        description: Suppress `nvm alias` output
  - name: ls-remote
    description: List remote versions available for install, matching a given <version> if provided
    usage: nvm ls-remote [<version>]
    options:
      - names:
          - --lts
        argument: ""
        description: When listing, only show LTS (long-term support) versions
      - names:
          - --lts
        argument: <LTS name>
        description: When listing, only show versions for a specific LTS line
      - names:
          - --no-colors
        argument: ""
        description: Suppress colored output
  - name: version
    description: Resolve the given description to a single local version
    usage: nvm version <version>
    options: []
  - name: version-remote
    description: Resolve the given description to a single remote version
    usage: nvm version-remote <version>
    options:
      - names:
          - --lts
        argument: ""
        description: When listing, only select from LTS (long-term support) versions
      - names:
          - --lts
        argument: <LTS name>
        description: When listing, only select from versions for a specific LTS line
  - name: deactivate
    description: Undo effects of `nvm` on current shell
    usage: nvm deactivate [options]
    options:
      - names:
          - --silent
        argument: ""
        description: Silences stdout/stderr output
  - name: alias
    description: Show all aliases beginning with <pattern>
    usage: nvm alias <name> <version>
    options:
      - names:
          - --no-colors
        argument: ""
        description: Suppress colored output
  - name: unalias
    description: Deletes the alias named <name>
    usage: nvm unalias <name>
    options: []
  - name: install-latest-npm
    description: Attempt to upgrade to the latest working `npm` on the current node version
    usage: nvm install-latest-npm
    options: []
  - name: reinstall-packages
    description: Reinstall global `npm` packages contained in <version> to current version
    usage: nvm reinstall-packages <version>
    options: []
  - name: unload
    description: Unload `nvm` from shell
    usage: nvm unload
    options: []
  - name: which
    description: Display path to installed node version. Uses .nvmrc if available and version is omitted.
    usage: nvm which [current | <version>]
    options:
      - names:
          - --silent
        argument: ""
        description: Silences stdout/stderr output
  - name: cache
    description: Display path to the cache directory for nvm
    usage: |-
      nvm cache dir
      nvm cache clear
    options: []
  - name: set-colors
    description: Set five text colors using format "yMeBg". Available when supported.
    usage: nvm set-colors [<color codes>]
    options: []
version: Node Version Manager (v0.39.2)
tldr: |
  > Install, uninstall or switch between Node.js versions.
  > Supports version numbers like "12.8" or "v16.13.1", and labels like "stable", "system", etc.
  > More information: <https://github.com/creationix/nvm>.

  - Install a specific version of Node.js:

  `nvm install {{node_version}}`

  - Use a specific version of Node.js in the current shell:

  `nvm use {{node_version}}`

  - Set the default Node.js version:

  `nvm alias default {{node_version}}`

  - List all available Node.js versions and highlight the default one:

  `nvm list`

  - Uninstall a given Node.js version:

  `nvm uninstall {{node_version}}`

  - Launch the REPL of a specific version of Node.js:

  `nvm run {{node_version}} --version`

  - Execute a script in a specific version of Node.js:

  `nvm exec {{node_version}} node {{app.js}}`
