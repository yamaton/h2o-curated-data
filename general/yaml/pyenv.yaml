name: pyenv
description: pyenv
usage: pyenv <command> [<args>]
options:
  - names:
      - --version
    argument: ""
    description: Display the version of pyenv
subcommands:
  - name: commands
    description: List all available pyenv commands
    usage: pyenv commands [--sh|--no-sh]
    options: []
  - name: exec
    description: Run an executable with the selected Python version
    usage: pyenv exec <command> [arg1 arg2...]
    options: []
  - name: global
    description: Set or show the global Python version(s)
    usage: pyenv global <version> <version2> <..>
    options: []
  - name: help
    description: Display help for a command
    usage: pyenv help [--usage] COMMAND
    options: []
  - name: hooks
    description: List hook scripts for a given pyenv command
    usage: pyenv hooks <command>
    options: []
  - name: init
    description: Configure the shell environment for pyenv
    usage: eval "$(pyenv init [-|--path] [--no-push-path] [--no-rehash] [<shell>])"
    options: []
  - name: install
    description: Install a Python version using python-build
    usage: |-
      pyenv install [-f] [-kvp] <version>
      pyenv install [-f] [-kvp] <definition-file>
      pyenv install -l|--list
      pyenv install --version
    options:
      - names:
          - -l
          - --list
        argument: ""
        description: List all available versions
      - names:
          - -f
          - --force
        argument: ""
        description: Install even if the version appears to be installed already
      - names:
          - -s
          - --skip-existing
        argument: ""
        description: Skip if the version appears to be installed already
      - names:
          - -k
          - --keep
        argument: ""
        description: Keep source tree in $PYENV_BUILD_ROOT after installation (defaults to $PYENV_ROOT/sources)
      - names:
          - -p
          - --patch
        argument: ""
        description: Apply a patch from stdin before building
      - names:
          - -v
          - --verbose
        argument: ""
        description: 'Verbose mode: print compilation status to stdout'
      - names:
          - --version
        argument: ""
        description: Show version of python-build
      - names:
          - -g
          - --debug
        argument: ""
        description: Build a debug version
  - name: latest
    description: Print the latest installed or known version with the given prefix
    usage: pyenv latest [-k|--known] [-q|--quiet] <prefix>
    options:
      - names:
          - -k
          - --known
        argument: ""
        description: Select from all known versions instead of installed
      - names:
          - -q
          - --quiet
        argument: ""
        description: Do not print an error message on resolution failure
  - name: local
    description: Set or show the local application-specific Python version(s)
    usage: |-
      pyenv local <version> <version2> <..>
      pyenv local --unset
    options: []
  - name: prefix
    description: Display prefixes for Python versions
    usage: pyenv prefix [<version>...]
    options: []
  - name: rehash
    description: Rehash pyenv shims (run this after installing executables)
    usage: pyenv rehash
    options: []
  - name: root
    description: Display the root directory where versions and shims are kept
    usage: pyenv root
    options: []
  - name: shell
    description: Set or show the shell-specific Python version
    usage: |-
      pyenv shell <version>...
      pyenv shell -
      pyenv shell --unset
    options: []
  - name: shims
    description: List existing pyenv shims
    usage: pyenv shims [--short]
    options: []
  - name: uninstall
    description: Uninstall Python versions
    usage: pyenv uninstall [-f|--force] <version> ...
    options:
      - names:
          - -f
        argument: ""
        description: Attempt to remove the specified version without prompting for confirmation. If the version does not exist, do not display an error message.
  - name: version
    description: Show the current Python version(s) and its origin
    usage: pyenv version
    options: []
  - name: versions
    description: List all Python versions available to pyenv
    usage: pyenv versions [--bare] [--skip-aliases]
    options: []
  - name: whence
    description: List all Python versions that contain the given executable
    usage: pyenv whence [--path] <command>
    options: []
  - name: which
    description: Display the full path to an executable
    usage: pyenv which <command> [--nosystem]
    options: []
version: pyenv 2.3.6-15-g13d85686
tldr: |
  > Switch between multiple versions of Python easily.
  > More information: <https://github.com/pyenv/pyenv>.

  - List all available commands:

  `pyenv commands`

  - List all Python versions under the `${PYENV_ROOT}/versions` directory:

  `pyenv versions`

  - List all Python versions that can be installed from upstream:

  `pyenv install --list`

  - Install a Python version under the `${PYENV_ROOT}/versions` directory:

  `pyenv install {{2.7.10}}`

  - Uninstall a Python version under the `${PYENV_ROOT}/versions` directory:

  `pyenv uninstall {{2.7.10}}`

  - Set Python version to be used globally in the current machine:

  `pyenv global {{2.7.10}}`

  - Set Python version to be used in the current directory and all directories below it:

  `pyenv local {{2.7.10}}`
