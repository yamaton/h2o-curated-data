name: rake
description: make-like build utility for Ruby
usage: rake [-f rakefile] [options] targets ...
options:
  - names:
      - -m
      - --multitask
    argument: ""
    description: Treat all tasks as multitasks.
  - names:
      - -B
      - --build-all
    argument: ""
    description: Build all prerequisites, including those which are up-to-date.
  - names:
      - -j
      - --jobs
    argument: num_jobs
    description: Specifies the maximum number of tasks to execute in parallel (default is number of CPU cores + 4).
  - names:
      - -I
      - --libdir
    argument: libdir
    description: Include libdir in the search path for required modules.
  - names:
      - -r
      - --require
    argument: module
    description: Require module before executing rakefile.
  - names:
      - -f
      - --rakefile
    argument: filename
    description: Use filename as the rakefile to search for.
  - names:
      - -N
      - --no-search
      - --nosearch
    argument: ""
    description: Do not search parent directories for the Rakefile.
  - names:
      - -G
      - --no-system
      - --nosystem
    argument: ""
    description: Use standard project Rakefile search paths, ignore system wide rakefiles.
  - names:
      - -R
      - --rakelib
      - --rakelibdir
    argument: rakelibdir
    description: Auto-import any .rake files in rakelibdir (default is ‘rakelib’)
  - names:
      - -g
      - --system
    argument: ""
    description: Use system-wide (global) rakefiles (usually ~/.rake/*.rake).
  - names:
      - --backtrace
    argument: out
    description: Enable full backtrace. out can be stderr (default) or stdout.
  - names:
      - -t
      - --trace
    argument: out
    description: Turn on invoke/execute tracing, enable full backtrace. out can be stderr (default) or stdout.
  - names:
      - --suppress-backtrace
    argument: pattern
    description: Suppress backtrace lines matching regexp pattern. Ignored if --trace is on.
  - names:
      - --rules
    argument: ""
    description: Trace the rules resolution.
  - names:
      - -n
      - --dry-run
    argument: ""
    description: Do a dry run without executing actions.
  - names:
      - -T
      - --tasks
    argument: '[pattern]'
    description: Display the tasks (matching optional pattern) with descriptions, then exit.
  - names:
      - -D
      - --describe
    argument: '[pattern]'
    description: Describe the tasks (matching optional pattern), then exit.
  - names:
      - -W
      - --where
    argument: '[pattern]'
    description: Describe the tasks (matching optional pattern), then exit.
  - names:
      - -P
      - --prereqs
    argument: ""
    description: Display the tasks and dependencies, then exit.
  - names:
      - -e
      - --execute
    argument: code
    description: Execute some Ruby code and exit.
  - names:
      - -p
      - --execute-print
    argument: code
    description: Execute some Ruby code, print the result, then exit.
  - names:
      - -E
      - --execute-continue
    argument: code
    description: Execute some Ruby code, then continue with normal task processing.
  - names:
      - -v
      - --verbose
    argument: ""
    description: Log message to standard output.
  - names:
      - -q
      - --quiet
    argument: ""
    description: Do not log messages to standard output.
  - names:
      - -s
      - --silent
    argument: ""
    description: Like --quiet, but also suppresses the ‘in directory’ announcement.
  - names:
      - -X
      - --no-deprecation-warnings
    argument: ""
    description: Disable the deprecation warnings.
  - names:
      - --comments
    argument: ""
    description: Show commented tasks only
  - names:
      - -A
      - --all
    argument: ""
    description: Show all tasks, even uncommented ones (in combination with -T or -D)
  - names:
      - --job-stats
    argument: '[level]'
    description: Display job statistics. If level is ‘history’, displays a complete job list.
  - names:
      - -V
      - --version
    argument: ""
    description: Display the program version.
  - names:
      - -h
      - -H
      - --help
    argument: ""
    description: Display a help message.
version: rake, version 13.0.6
tldr: |
  > A Make-like program for Ruby.
  > Tasks for `rake` are specified in a Rakefile.
  > More information: <https://ruby.github.io/rake>.

  - Run the `default` Rakefile task:

  `rake`

  - Run a specific task:

  `rake {{task}}`

  - Execute `n` jobs at a time in parallel (number of CPU cores + 4 by default):

  `rake --jobs {{n}}`

  - Use a specific Rakefile:

  `rake --rakefile {{path/to/Rakefile}}`

  - Execute `rake` from another directory:

  `rake --directory {{path/to/directory}}`
