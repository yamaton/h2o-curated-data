name: rbenv
description: Simple Ruby Version Management
usage: rbenv <command> [<args>]
options: []
subcommands:
  - name: commands
    description: List all available rbenv commands
    usage: rbenv commands [--sh|--no-sh]
    options: []
  - name: local
    description: Set or show the local application-specific Ruby version
    usage: |-
      rbenv local <version>
      rbenv local --unset
    options: []
  - name: global
    description: Set or show the global Ruby version
    usage: rbenv global <version>
    options: []
  - name: shell
    description: Set or show the shell-specific Ruby version
    usage: |-
      rbenv shell <version>
      rbenv shell -
      rbenv shell --unset
    options: []
  - name: install
    description: Install a Ruby version using ruby-build
    usage: |-
      rbenv install [-f|-s] [-kpv] <version>
      rbenv install [-f|-s] [-kpv] <definition-file>
      rbenv install -l|--list
      rbenv install --version
    options:
      - names:
          - -l
          - --list
        argument: ""
        description: List all available versions
      - names:
          - -f
          - --force
        argument: ""
        description: Install even if the version appears to be installed already
      - names:
          - -s
          - --skip-existing
        argument: ""
        description: Skip if the version appears to be installed already
      - names:
          - -k
          - --keep
        argument: ""
        description: Keep source tree in $RBENV_BUILD_ROOT after installation (defaults to $RBENV_ROOT/sources)
      - names:
          - -p
          - --patch
        argument: ""
        description: Apply a patch from stdin before building
      - names:
          - -v
          - --verbose
        argument: ""
        description: 'Verbose mode: print compilation status to stdout'
      - names:
          - --version
        argument: ""
        description: Show version of ruby-build
  - name: uninstall
    description: Uninstall a specific Ruby version
    usage: rbenv uninstall [-f|--force] <version>
    options:
      - names:
          - -f
        argument: ""
        description: Attempt to remove the specified version without prompting for confirmation. If the version does not exist, do not display an error message.
  - name: rehash
    description: Rehash rbenv shims (run this after installing executables)
    usage: rbenv rehash
    options: []
  - name: version
    description: Show the current Ruby version and its origin
    usage: rbenv version
    options: []
  - name: versions
    description: List installed Ruby versions
    usage: rbenv versions [--bare] [--skip-aliases]
    options: []
  - name: which
    description: Display the full path to an executable
    usage: rbenv which <command>
    options: []
  - name: whence
    description: List all Ruby versions that contain the given executable
    usage: rbenv whence [--path] <command>
    options: []
version: rbenv 1.1.2
tldr: |
  > A tool to easily install Ruby versions and manage application environments.
  > More information: <https://github.com/rbenv/rbenv>.

  - Install a Ruby version:

  `rbenv install {{version}}`

  - Display a list of the latest stable versions for each Ruby:

  `rbenv install --list`

  - Display a list of installed Ruby versions:

  `rbenv versions`

  - Use a specific Ruby version across the whole system:

  `rbenv global {{version}}`

  - Use a specific Ruby version for an application/project directory:

  `rbenv local {{version}}`

  - Display the currently selected Ruby version:

  `rbenv version`

  - Uninstall a Ruby version:

  `rbenv uninstall {{version}}`

  - Display all Ruby versions that contain the specified executable:

  `rbenv whence {{executable}}`
