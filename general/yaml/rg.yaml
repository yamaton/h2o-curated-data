name: rg
description: rg
usage: |-
  rg [OPTIONS] PATTERN [PATH...]
  rg [OPTIONS] -e PATTERN... [PATH...]
  rg [OPTIONS] -f PATTERNFILE... [PATH...]
  rg [OPTIONS] --files [PATH...]
  rg [OPTIONS] --type-list
  command | rg [OPTIONS] PATTERN
  rg [OPTIONS] --help
  rg [OPTIONS] --version
options:
  - names:
      - -A
      - --after-context
    argument: NUM
    description: Show NUM lines after each match.
  - names:
      - --auto-hybrid-regex
    argument: ""
    description: DEPRECATED. Use --engine instead.
  - names:
      - -B
      - --before-context
    argument: NUM
    description: Show NUM lines before each match.
  - names:
      - --binary
    argument: ""
    description: Enabling this flag will cause ripgrep to search binary files. By default, ripgrep attempts to automatically skip binary files in order to improve the relevance of results and make the search faster.
  - names:
      - --block-buffered
    argument: ""
    description: When enabled, ripgrep will use block buffering. That is, whenever a matching line is found, it will be written to an in-memory buffer and will not be written to stdout until the buffer reaches a certain size. This is the default when ripgrep’s stdout is redirected to a pipeline or a file. When ripgrep’s stdout is connected to a terminal, line buffering will be used. Forcing block buffering can be useful when dumping a large amount of contents to a terminal.
  - names:
      - -b
      - --byte-offset
    argument: ""
    description: Print the 0-based byte offset within the input file before each line of output. If -o (--only-matching) is specified, print the offset of the matching part itself.
  - names:
      - -s
      - --case-sensitive
    argument: ""
    description: Search case sensitively.
  - names:
      - --color
    argument: WHEN
    description: This flag controls when to use colors. The default setting is auto, which means ripgrep will try to guess when to use colors. For example, if ripgrep is printing to a terminal, then it will use colors, but if it is redirected to a file or a pipe, then it will suppress color output. ripgrep will suppress color output in some other circumstances as well. For example, if the TERM environment variable is not set or set to dumb, then ripgrep will not use colors.
  - names:
      - --colors
    argument: COLOR_SPEC ...
    description: 'This flag specifies color settings for use in the output. This flag may be provided multiple times. Settings are applied iteratively. Colors are limited to one of eight choices: red, blue, green, cyan, magenta, yellow, white and black. Styles are limited to nobold, bold, nointense, intense, nounderline or underline.'
  - names:
      - --column
    argument: ""
    description: Show column numbers (1-based). This only shows the column numbers for the first match on each line. This does not try to account for Unicode. One byte is equal to one column. This implies --line-number.
  - names:
      - -C
      - --context
    argument: NUM
    description: Show NUM lines before and after each match. This is equivalent to providing both the -B/--before-context and -A/--after-context flags with the same value.
  - names:
      - --context-separator
    argument: SEPARATOR
    description: The string used to separate non-contiguous context lines in the output. This is only used when one of the context flags is used (-A, -B or -C). Escape sequences like \x7F or \t may be used. The default value is --.
  - names:
      - -c
      - --count
    argument: ""
    description: This flag suppresses normal output and shows the number of lines that match the given patterns for each file searched. Each file containing a match has its path and count printed on each line. Note that this reports the number of lines that match and not the total number of matches, unless -U/--multiline is enabled. In multiline mode, --count is equivalent to --count-matches.
  - names:
      - --count-matches
    argument: ""
    description: This flag suppresses normal output and shows the number of individual matches of the given patterns for each file searched. Each file containing matches has its path and match count printed on each line. Note that this reports the total number of individual matches and not the number of lines that match.
  - names:
      - --crlf
    argument: ""
    description: When enabled, ripgrep will treat CRLF (\r\n) as a line terminator instead of just \n.
  - names:
      - --debug
    argument: ""
    description: Show debug messages. Please use this when filing a bug report.
  - names:
      - -E
      - --encoding
    argument: ENCODING
    description: Specify the text encoding that ripgrep will use on all files searched. The default value is auto, which will cause ripgrep to do a best effort automatic detection of encoding on a per-file basis. Automatic detection in this case only applies to files that begin with a UTF-8 or UTF-16 byte-order mark (BOM). No other automatic detection is performed. One can also specify none which will then completely disable BOM sniffing and always result in searching the raw bytes, including a BOM if it’s present, regardless of its encoding.
  - names:
      - --engine
    argument: ENGINE
    description: Specify which regular expression engine to use. When you choose a regex engine, it applies that choice for every regex provided to ripgrep (e.g., via multiple -e/--regexp or -f/--file flags).
  - names:
      - --field-context-separator
    argument: SEPARATOR
    description: Set the field context separator, which is used to delimit file paths, line numbers, columns and the context itself, when printing contextual lines. The separator may be any number of bytes, including zero. Escape sequences like \x7F or \t may be used. The default value is -.
  - names:
      - --field-match-separator
    argument: SEPARATOR
    description: Set the field match separator, which is used to delimit file paths, line numbers, columns and the match itself. The separator may be any number of bytes, including zero. Escape sequences like \x7F or \t may be used. The default value is -.
  - names:
      - -f
      - --file
    argument: PATTERNFILE ...
    description: Search for patterns from the given file, with one pattern per line. When this flag is used multiple times or in combination with the -e/--regexp flag, then all patterns provided are searched. Empty pattern lines will match all input lines, and the newline is not counted as part of the pattern.
  - names:
      - --files
    argument: ""
    description: Print each file that would be searched without actually performing the search. This is useful to determine whether a particular file is being searched or not.
  - names:
      - -l
      - --files-with-matches
    argument: ""
    description: Print the paths with at least one match and suppress match contents.
  - names:
      - --files-without-match
    argument: ""
    description: Print the paths that contain zero matches and suppress match contents. This inverts/negates the --files-with-matches flag.
  - names:
      - -F
      - --fixed-strings
    argument: ""
    description: Treat the pattern as a literal string instead of a regular expression. When this flag is used, special regular expression meta characters such as .(){}*+ do not need to be escaped.
  - names:
      - -L
      - --follow
    argument: ""
    description: When this flag is enabled, ripgrep will follow symbolic links while traversing directories. This is disabled by default. Note that ripgrep will check for symbolic link loops and report errors if it finds one.
  - names:
      - -g
      - --glob
    argument: GLOB ...
    description: Include or exclude files and directories for searching that match the given glob. This always overrides any other ignore logic. Multiple glob flags may be used. Globbing rules match .gitignore globs. Precede a glob with a ! to exclude it. If multiple globs match a file or directory, the glob given later in the command line takes precedence.
  - names:
      - --glob-case-insensitive
    argument: ""
    description: Process glob patterns given with the -g/--glob flag case insensitively. This effectively treats --glob as --iglob.
  - names:
      - --heading
    argument: ""
    description: This flag prints the file path above clusters of matches from each file instead of printing the file path as a prefix for each matched line. This is the default mode when printing to a terminal.
  - names:
      - -.
      - --hidden
    argument: ""
    description: Search hidden files and directories. By default, hidden files and directories are skipped. Note that if a hidden file or a directory is whitelisted in an ignore file, then it will be searched even if this flag isn’t provided.
  - names:
      - --iglob
    argument: GLOB ...
    description: Include or exclude files and directories for searching that match the given glob. This always overrides any other ignore logic. Multiple glob flags may be used. Globbing rules match .gitignore globs. Precede a glob with a ! to exclude it. Globs are matched case insensitively.
  - names:
      - -i
      - --ignore-case
    argument: ""
    description: When this flag is provided, the given patterns will be searched case insensitively. The case insensitivity rules used by ripgrep conform to Unicode’s "simple" case folding rules.
  - names:
      - --ignore-file
    argument: PATH ...
    description: Specifies a path to one or more .gitignore format rules files. These patterns are applied after the patterns found in .gitignore and .ignore are applied and are matched relative to the current working directory. Multiple additional ignore files can be specified by using the --ignore-file flag several times. When specifying multiple ignore files, earlier files have lower precedence than later files.
  - names:
      - --ignore-file-case-insensitive
    argument: ""
    description: Process ignore files (.gitignore, .ignore, etc.) case insensitively. Note that this comes with a performance penalty and is most useful on case insensitive file systems (such as Windows).
  - names:
      - --include-zero
    argument: ""
    description: When used with --count or --count-matches, print the number of matches for each file even if there were zero matches. This is disabled by default but can be enabled to make ripgrep behave more like grep.
  - names:
      - -v
      - --invert-match
    argument: ""
    description: Invert matching. Show lines that do not match the given patterns.
  - names:
      - --json
    argument: ""
    description: Enable printing results in a JSON Lines format.
  - names:
      - --line-buffered
    argument: ""
    description: When enabled, ripgrep will use line buffering. That is, whenever a matching line is found, it will be flushed to stdout immediately. This is the default when ripgrep’s stdout is connected to a terminal, but otherwise, ripgrep will use block buffering, which is typically faster. This flag forces ripgrep to use line buffering even if it would otherwise use block buffering. This is typically useful in shell pipelines, e.g., tail -f something.log | rg foo --line-buffered | rg bar.
  - names:
      - -n
      - --line-number
    argument: ""
    description: Show line numbers (1-based). This is enabled by default when searching in a terminal.
  - names:
      - -x
      - --line-regexp
    argument: ""
    description: Only show matches surrounded by line boundaries. This is equivalent to putting ^...$ around all of the search patterns. In other words, this only prints lines where the entire line participates in a match.
  - names:
      - -M
      - --max-columns
    argument: NUM
    description: Don’t print lines longer than this limit in bytes. Longer lines are omitted, and only the number of matches in that line is printed.
  - names:
      - --max-columns-preview
    argument: ""
    description: When the --max-columns flag is used, ripgrep will by default completely replace any line that is too long with a message indicating that a matching line was removed. When this flag is combined with --max-columns, a preview of the line (corresponding to the limit size) is shown instead, where the part of the line exceeding the limit is not shown.
  - names:
      - -m
      - --max-count
    argument: NUM
    description: Limit the number of matching lines per file searched to NUM.
  - names:
      - --max-depth
    argument: NUM
    description: Limit the depth of directory traversal to NUM levels beyond the paths given. A value of zero only searches the explicitly given paths themselves.
  - names:
      - --mmap
    argument: ""
    description: Search using memory maps when possible. This is enabled by default when ripgrep thinks it will be faster.
  - names:
      - -U
      - --multiline
    argument: ""
    description: Enable matching across multiple lines.
  - names:
      - --multiline-dotall
    argument: ""
    description: This flag enables "dot all" in your regex pattern, which causes . to match newlines when multiline searching is enabled. This flag has no effect if multiline searching isn’t enabled with the --multiline flag.
  - names:
      - --no-config
    argument: ""
    description: Never read configuration files. When this flag is present, ripgrep will not respect the RIPGREP_CONFIG_PATH environment variable.
  - names:
      - -I
      - --no-filename
    argument: ""
    description: Never print the file path with the matched lines. This is the default when ripgrep is explicitly instructed to search one file or stdin.
  - names:
      - --no-heading
    argument: ""
    description: Don’t group matches by each file. If --no-heading is provided in addition to the -H/--with-filename flag, then file paths will be printed as a prefix for every matched line. This is the default mode when not printing to a terminal.
  - names:
      - --no-ignore
    argument: ""
    description: Don’t respect ignore files (.gitignore, .ignore, etc.). This implies --no-ignore-dot, --no-ignore-exclude, --no-ignore-global, no-ignore-parent and --no-ignore-vcs.
  - names:
      - --no-ignore-dot
    argument: ""
    description: Don’t respect .ignore files.
  - names:
      - --no-ignore-exclude
    argument: ""
    description: Don’t respect ignore files that are manually configured for the repository such as git’s .git/info/exclude.
  - names:
      - --no-ignore-files
    argument: ""
    description: When set, any --ignore-file flags, even ones that come after this flag, are ignored.
  - names:
      - --no-ignore-global
    argument: ""
    description: Don’t respect ignore files that come from "global" sources such as git’s core.excludesFile configuration option (which defaults to $HOME/.config/git/ignore).
  - names:
      - --no-ignore-messages
    argument: ""
    description: Suppresses all error messages related to parsing ignore files such as .ignore or .gitignore.
  - names:
      - --no-ignore-parent
    argument: ""
    description: Don’t respect ignore files (.gitignore, .ignore, etc.) in parent directories.
  - names:
      - --no-ignore-vcs
    argument: ""
    description: Don’t respect version control ignore files (.gitignore, etc.). This implies --no-ignore-parent for VCS files. Note that .ignore files will continue to be respected.
  - names:
      - -N
      - --no-line-number
    argument: ""
    description: Suppress line numbers. This is enabled by default when not searching in a terminal.
  - names:
      - --no-messages
    argument: ""
    description: Suppress all error messages related to opening and reading files. Error messages related to the syntax of the pattern given are still shown.
  - names:
      - --no-mmap
    argument: ""
    description: Never use memory maps, even when they might be faster.
  - names:
      - --no-pcre2-unicode
    argument: ""
    description: DEPRECATED. Use --no-unicode instead.
  - names:
      - --no-require-git
    argument: ""
    description: By default, ripgrep will only respect global gitignore rules, .gitignore rules and local exclude rules if ripgrep detects that you are searching inside a git repository. This flag allows you to relax this restriction such that ripgrep will respect all git related ignore rules regardless of whether you’re searching in a git repository or not.
  - names:
      - --no-unicode
    argument: ""
    description: 'By default, ripgrep will enable "Unicode mode" in all of its regexes. This has a number of consequences:'
  - names:
      - "-0"
      - --null
    argument: ""
    description: Whenever a file path is printed, follow it with a NUL byte. This includes printing file paths before matches, and when printing a list of matching files such as with --count, --files-with-matches and --files. This option is useful for use with xargs.
  - names:
      - --null-data
    argument: ""
    description: Enabling this option causes ripgrep to use NUL as a line terminator instead of the default of \n.
  - names:
      - --one-file-system
    argument: ""
    description: When enabled, ripgrep will not cross file system boundaries relative to where the search started from.
  - names:
      - -o
      - --only-matching
    argument: ""
    description: Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line.
  - names:
      - --passthru
    argument: ""
    description: Print both matching and non-matching lines.
  - names:
      - --path-separator
    argument: SEPARATOR
    description: Set the path separator to use when printing file paths. This defaults to your platform’s path separator, which is / on Unix and \ on Windows. This flag is intended for overriding the default when the environment demands it (e.g., cygwin). A path separator is limited to a single byte.
  - names:
      - -P
      - --pcre2
    argument: ""
    description: When this flag is present, ripgrep will use the PCRE2 regex engine instead of its default regex engine.
  - names:
      - --pcre2-version
    argument: ""
    description: When this flag is present, ripgrep will print the version of PCRE2 in use, along with other information, and then exit. If PCRE2 is not available, then ripgrep will print an error message and exit with an error code.
  - names:
      - --pre
    argument: COMMAND
    description: For each input FILE, search the standard output of COMMAND FILE rather than the contents of FILE. This option expects the COMMAND program to either be an absolute path or to be available in your PATH. Either an empty string COMMAND or the --no-pre flag will disable this behavior.
  - names:
      - --pre-glob
    argument: GLOB ...
    description: This flag works in conjunction with the --pre flag. Namely, when one or more --pre-glob flags are given, then only files that match the given set of globs will be handed to the command specified by the --pre flag. Any non-matching files will be searched without using the preprocessor command.
  - names:
      - -p
      - --pretty
    argument: ""
    description: 'This is a convenience alias for --color always --heading --line-number. This flag is useful when you still want pretty output even if you’re piping ripgrep to another program or file. For example: rg -p foo | less -R.'
  - names:
      - -q
      - --quiet
    argument: ""
    description: Do not print anything to stdout. If a match is found in a file, then ripgrep will stop searching. This is useful when ripgrep is used only for its exit code (which will be an error if no matches are found).
  - names:
      - -e
      - --regexp
    argument: PATTERN ...
    description: A pattern to search for. This option can be provided multiple times, where all patterns given are searched. Lines matching at least one of the provided patterns are printed. This flag can also be used when searching for patterns that start with a dash.
  - names:
      - -r
      - --replace
    argument: REPLACEMENT_TEXT
    description: Replace every match with the text given when printing results. Neither this flag nor any other ripgrep flag will modify your files.
  - names:
      - -z
      - --search-zip
    argument: ""
    description: Search in compressed files. Currently gzip, bzip2, xz, LZ4, LZMA, Brotli and Zstd files are supported. This option expects the decompression binaries to be available in your PATH.
  - names:
      - -S
      - --smart-case
    argument: ""
    description: Searches case insensitively if the pattern is all lowercase. Search case sensitively otherwise.
  - names:
      - --sort
    argument: SORTBY
    description: 'This flag enables sorting of results in ascending order. The possible values for this flag are:'
  - names:
      - --sortr
    argument: SORTBY
    description: 'This flag enables sorting of results in descending order. The possible values for this flag are:'
  - names:
      - --stats
    argument: ""
    description: 'Print aggregate statistics about this ripgrep search. When this flag is present, ripgrep will print the following stats to stdout at the end of the search: number of matched lines, number of files with matches, number of files searched, and the time taken for the entire search to complete.'
  - names:
      - -a
      - --text
    argument: ""
    description: Search binary files as if they were text. When this flag is present, ripgrep’s binary file detection is disabled. This means that when a binary file is searched, its contents may be printed if there is a match. This may cause escape codes to be printed that alter the behavior of your terminal.
  - names:
      - -j
      - --threads
    argument: NUM
    description: The approximate number of threads to use. A value of 0 (which is the default) causes ripgrep to choose the thread count using heuristics.
  - names:
      - --trim
    argument: ""
    description: When set, all ASCII whitespace at the beginning of each line printed will be trimmed.
  - names:
      - -t
      - --type
    argument: TYPE ...
    description: Only search files matching TYPE. Multiple type flags may be provided. Use the --type-list flag to list all available types.
  - names:
      - --type-add
    argument: TYPE_SPEC ...
    description: Add a new glob for a particular file type. Only one glob can be added at a time. Multiple --type-add flags can be provided. Unless --type-clear is used, globs are added to any existing globs defined inside of ripgrep.
  - names:
      - --type-clear
    argument: TYPE ...
    description: Clear the file type globs previously defined for TYPE. This only clears the default type definitions that are found inside of ripgrep.
  - names:
      - --type-list
    argument: ""
    description: Show all supported file types and their corresponding globs.
  - names:
      - -T
      - --type-not
    argument: TYPE ...
    description: Do not search files matching TYPE. Multiple type-not flags may be provided. Use the --type-list flag to list all available types.
  - names:
      - -u
      - --unrestricted
    argument: '...'
    description: Reduce the level of "smart" searching. A single -u won’t respect .gitignore (etc.) files (--no-ignore). Two -u flags will additionally search hidden files and directories (-./--hidden). Three -u flags will additionally search binary files (--binary).
  - names:
      - --vimgrep
    argument: ""
    description: Show results with every match on its own line, including line numbers and column numbers. With this option, a line with more than one match will be printed more than once.
  - names:
      - -H
      - --with-filename
    argument: ""
    description: Display the file path for matches. This is the default when more than one file is searched. If --heading is enabled (the default when printing to a terminal), the file path will be shown above clusters of matches from each file; otherwise, the file name will be shown as a prefix for each matched line.
  - names:
      - -w
      - --word-regexp
    argument: ""
    description: Only show matches surrounded by word boundaries. This is roughly equivalent to putting \b before and after all of the search patterns.
version: ripgrep 13.0.0 (rev 7ec2fd51ba)
tldr: |
  > Ripgrep is a recursive line-oriented CLI search tool.
  > Aims to be a faster alternative to `grep`.
  > More information: <https://github.com/BurntSushi/ripgrep>.

  - Recursively search the current directory for a regular expression:

  `rg {{regular_expression}}`

  - Search for regular expressions recursively in the current directory, including hidden files and files listed in `.gitignore`:

  `rg --no-ignore --hidden {{regular_expression}}`

  - Search for a regular expression only in a certain filetype (e.g. HTML, CSS, etc.):

  `rg --type {{filetype}} {{regular_expression}}`

  - Search for a regular expression only in a subset of directories:

  `rg {{regular_expression}} {{set_of_subdirs}}`

  - Search for a regular expression in files matching a glob (e.g. `README.*`):

  `rg {{regular_expression}} --glob {{glob}}`

  - Only list matched files (useful when piping to other commands):

  `rg --files-with-matches {{regular_expression}}`

  - Show lines that do not match the given regular expression:

  `rg --invert-match {{regular_expression}}`

  - Search a literal string pattern:

  `rg --fixed-strings -- {{string}}`
