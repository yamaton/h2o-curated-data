name: sftp
description: OpenSSH secure file transfer
usage: sftp [-46AaCfNpqrv] [-B buffer_size] [-b batchfile] [-c cipher] [-D sftp_server_path] [-F ssh_config] [-i identity_file] [-J destination] [-l limit] [-o ssh_option] [-P port] [-R num_requests] [-S program] [-s subsystem | sftp_server] destination
options:
  - names:
      - "-4"
    argument: ""
    description: Forces sftp to use IPv4 addresses only.
  - names:
      - "-6"
    argument: ""
    description: Forces sftp to use IPv6 addresses only.
  - names:
      - -A
    argument: ""
    description: Allows forwarding of ssh-agent(1) to the remote system. The default is not to forward an authentication agent.
  - names:
      - -B
    argument: buffer_size
    description: Specify the size of the buffer that sftp uses when transferring files. Larger buffers require fewer round trips at the cost of higher memory consumption. The default is 32768 bytes.
  - names:
      - -b
    argument: batchfile
    description: Batch mode reads a series of commands from an input batchfile instead of stdin. Since it lacks user interaction it should be used in conjunction with non-interactive authentication to obviate the need to enter a password at connection time (see sshd(8) and ssh-keygen(1) for details).
  - names:
      - -C
    argument: ""
    description: Enables compression (via ssh's -C flag).
  - names:
      - -c
    argument: cipher
    description: Selects the cipher to use for encrypting the data transfers. This option is directly passed to ssh(1).
  - names:
      - -D
    argument: sftp_server_path
    description: Connect directly to a local sftp server (rather than via ssh(1)). This option may be useful in debugging the client and server.
  - names:
      - -F
    argument: ssh_config
    description: Specifies an alternative per-user configuration file for ssh(1). This option is directly passed to ssh(1).
  - names:
      - -f
    argument: ""
    description: Requests that files be flushed to disk immediately after transfer. When uploading files, this feature is only enabled if the server implements the "fsync@openssh.com" extension.
  - names:
      - -i
    argument: identity_file
    description: Selects the file from which the identity (private key) for public key authentication is read. This option is directly passed to ssh(1).
  - names:
      - -J
    argument: destination
    description: Connect to the target host by first making an sftp connection to the jump host described by destination and then establishing a TCP forwarding to the ultimate destination from there. Multiple jump hops may be specified separated by comma characters. This is a shortcut to specify a ProxyJump configuration directive. This option is directly passed to ssh(1).
  - names:
      - -l
    argument: limit
    description: Limits the used bandwidth, specified in Kbit/s.
  - names:
      - -N
    argument: ""
    description: Disables quiet mode, e.g. to override the implicit quiet mode set by the -b flag.
  - names:
      - -o
    argument: ssh_option
    description: 'Can be used to pass options to ssh in the format used in ssh_config(5). This is useful for specifying options for which there is no separate sftp command-line flag. For example, to specify an alternate port use: sftp -oPort=24. For full details of the options listed below, and their possible values, see ssh_config(5).'
  - names:
      - -P
    argument: port
    description: Specifies the port to connect to on the remote host.
  - names:
      - -p
    argument: ""
    description: Preserves modification times, access times, and modes from the original files transferred.
  - names:
      - -q
    argument: ""
    description: 'Quiet mode: disables the progress meter as well as warning and diagnostic messages from ssh(1).'
  - names:
      - -R
    argument: num_requests
    description: Specify how many requests may be outstanding at any one time. Increasing this may slightly improve file transfer speed but will increase memory usage. The default is 64 outstanding requests.
  - names:
      - -r
    argument: ""
    description: Recursively copy entire directories when uploading and downloading. Note that sftp does not follow symbolic links encountered in the tree traversal.
  - names:
      - -S
    argument: program
    description: Name of the program to use for the encrypted connection. The program must understand ssh(1) options.
  - names:
      - -s
    argument: subsystem | sftp_server
    description: Specifies the SSH2 subsystem or the path for an sftp server on the remote host. A path is useful when the remote sshd(8) does not have an sftp subsystem configured.
  - names:
      - -v
    argument: ""
    description: Raise logging level. This option is also passed to ssh.
  - names:
      - "-1"
    argument: ""
    description: Produce single columnar output.
  - names:
      - -a
    argument: ""
    description: List files beginning with a dot (‘.’).
  - names:
      - -f
    argument: ""
    description: Do not sort the listing. The default sort order is lexicographical.
  - names:
      - -h
    argument: ""
    description: 'When used with a long format option, use unit suffixes: Byte, Kilobyte, Megabyte, Gigabyte, Terabyte, Petabyte, and Exabyte in order to reduce the number of digits to four or fewer using powers of 2 for sizes (K=1024, M=1048576, etc.).'
  - names:
      - -l
    argument: ""
    description: Display additional details including permissions and ownership information.
  - names:
      - -n
    argument: ""
    description: Produce a long listing with user and group information presented numerically.
  - names:
      - -r
    argument: ""
    description: Reverse the sort order of the listing.
  - names:
      - -S
    argument: ""
    description: Sort the listing by file size.
  - names:
      - -t
    argument: ""
    description: Sort the listing by last modification time.
tldr: |
  > Secure File Transfer Program.
  > Interactive program to copy files between hosts over SSH.
  > For non-interactive file transfers, see `scp` or `rsync`.
  > More information: <https://manned.org/sftp>.

  - Connect to a remote server and enter an interactive command mode:

  `sftp {{remote_user}}@{{remote_host}}`

  - Connect using an alternate port:

  `sftp -P {{remote_port}} {{remote_user}}@{{remote_host}}`

  - Connect using a predefined host (in `~/.ssh/config`):

  `sftp {{host}}`

  - Transfer remote file to the local system:

  `get {{/path/remote_file}}`

  - Transfer local file to the remote system:

  `put {{/path/local_file}}`

  - Transfer remote directory to the local system recursively (works with `put` too):

  `get -R {{/path/remote_directory}}`

  - Get list of files on local machine:

  `lls`

  - Get list of files on remote machine:

  `ls`
