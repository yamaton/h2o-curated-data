name: terraform
description: terraform
options:
  - names:
      - -chdir
    argument: DIR
    description: Switch to a different working directory before executing the given subcommand.
  - names:
      - -help
    argument: ""
    description: Show this help output, or the help for a specified subcommand.
  - names:
      - -version
    argument: ""
    description: An alias for the "version" subcommand.
subcommands:
  - name: init
    description: Prepare your working directory for other commands
    options:
      - names:
          - -backend
        argument: "true"
        description: Configure the backend for this configuration.
      - names:
          - -backend-config
        argument: path
        description: This can be either a path to an HCL file with key/value assignments (same format as terraform.tfvars) or a 'key=value' format. This is merged with what is in the configuration file. This can be specified multiple times. The backend type must be in the configuration itself.
      - names:
          - -force-copy
        argument: ""
        description: Suppress prompts about copying state data. This is equivalent to providing a "yes" to all confirmation prompts.
      - names:
          - -from-module
        argument: SOURCE
        description: Copy the contents of the given module into the target directory before initialization.
      - names:
          - -get
        argument: "true"
        description: Download any modules for this configuration.
      - names:
          - -input
        argument: "true"
        description: Ask for input if necessary. If false, will error if input was required.
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
      - names:
          - -plugin-dir
        argument: ""
        description: Directory containing plugin binaries. This overrides all default search paths for plugins, and prevents the automatic installation of plugins. This flag can be used multiple times.
      - names:
          - -reconfigure
        argument: ""
        description: Reconfigure the backend, ignoring any saved configuration.
      - names:
          - -migrate-state
        argument: ""
        description: Reconfigure the backend, and attempt to migrate any existing state.
      - names:
          - -upgrade
        argument: "false"
        description: If installing modules (-get) or plugins, ignore previously-downloaded objects and install the latest version allowed within configured constraints.
      - names:
          - -lockfile
        argument: MODE
        description: Set a dependency lockfile mode. Currently only "readonly" is valid.
      - names:
          - -ignore-remote-version
        argument: ""
        description: A rare option used for the remote backend only. See the remote backend documentation for more information.
  - name: validate
    description: Check whether the configuration is valid
    options:
      - names:
          - -json
        argument: ""
        description: Produce output in a machine-readable JSON format, suitable for use in text editor integrations and other automated systems. Always disables color.
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
  - name: plan
    description: Show changes required by the current configuration
    options:
      - names:
          - -destroy
        argument: ""
        description: Select the "destroy" planning mode, which creates a plan to destroy all objects currently managed by this Terraform configuration instead of the usual behavior.
      - names:
          - -refresh-only
        argument: ""
        description: Select the "refresh only" planning mode, which checks whether remote objects still match the outcome of the most recent Terraform apply but does not propose any actions to undo any changes made outside of Terraform.
      - names:
          - -refresh
        argument: "false"
        description: Skip checking for external changes to remote objects while creating the plan. This can potentially make planning faster, but at the expense of possibly planning against a stale record of the remote system state.
      - names:
          - -replace
        argument: resource
        description: Force replacement of a particular resource instance using its resource address. If the plan would've normally produced an update or no-op action for this instance, Terraform will plan to replace it instead.
      - names:
          - -target
        argument: resource
        description: Limit the planning operation to only the given module, resource, or resource instance and all of its dependencies. You can use this option multiple times to include more than one object. This is for exceptional use only.
      - names:
          - -var
        argument: '''foo=bar'''
        description: Set a value for one of the input variables in the root module of the configuration. Use this option more than once to set more than one variable.
      - names:
          - -var-file
        argument: filename
        description: Load variable values from the given file, in addition to the default files terraform.tfvars and *.auto.tfvars. Use this option more than once to include more than one variables file.
      - names:
          - -compact-warnings
        argument: ""
        description: If Terraform produces any warnings that are not accompanied by errors, shows them in a more compact form that includes only the summary messages.
      - names:
          - -detailed-exitcode
        argument: ""
        description: 'Return detailed exit codes when the command exits. This will change the meaning of exit codes to: 0 - Succeeded, diff is empty (no changes) 1 - Errored 2 - Succeeded, there is a diff'
      - names:
          - -input
        argument: "true"
        description: Ask for input for variables if not directly set.
      - names:
          - -lock
        argument: "false"
        description: Don't hold a state lock during the operation. This is dangerous if others might concurrently run commands against the same workspace.
      - names:
          - -lock-timeout
        argument: 0s
        description: Duration to retry a state lock.
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
      - names:
          - -out
        argument: path
        description: Write a plan file to the given path. This can be used as input to the "apply" command.
      - names:
          - -parallelism
        argument: n
        description: Limit the number of concurrent operations. Defaults to 10.
      - names:
          - -state
        argument: statefile
        description: A legacy option used for the local backend only. See the local backend's documentation for more information.
  - name: apply
    description: Create or update infrastructure
    options:
      - names:
          - -auto-approve
        argument: ""
        description: Skip interactive approval of plan before applying.
      - names:
          - -backup
        argument: path
        description: Path to backup the existing state file before modifying. Defaults to the "-state-out" path with ".backup" extension. Set to "-" to disable backup.
      - names:
          - -compact-warnings
        argument: ""
        description: If Terraform produces any warnings that are not accompanied by errors, show them in a more compact form that includes only the summary messages.
      - names:
          - -lock
        argument: "false"
        description: Don't hold a state lock during the operation. This is dangerous if others might concurrently run commands against the same workspace.
      - names:
          - -lock-timeout
        argument: 0s
        description: Duration to retry a state lock.
      - names:
          - -input
        argument: "true"
        description: Ask for input for variables if not directly set.
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
      - names:
          - -parallelism
        argument: n
        description: Limit the number of parallel resource operations. Defaults to 10.
      - names:
          - -state
        argument: path
        description: Path to read and save state (unless state-out is specified). Defaults to "terraform.tfstate".
      - names:
          - -state-out
        argument: path
        description: Path to write state to that is different than "-state". This can be used to preserve the old state.
  - name: destroy
    description: Destroy previously-created infrastructure
    options: []
  - name: console
    description: Try Terraform expressions at an interactive command prompt
    options:
      - names:
          - -state
        argument: path
        description: Legacy option for the local backend only. See the local backend's documentation for more information.
      - names:
          - -var
        argument: '''foo=bar'''
        description: Set a variable in the Terraform configuration. This flag can be set multiple times.
      - names:
          - -var-file
        argument: foo
        description: Set variables in the Terraform configuration from a file. If "terraform.tfvars" or any ".auto.tfvars" files are present, they will be automatically loaded.
  - name: fmt
    description: Reformat your configuration in the standard style
    options:
      - names:
          - -list
        argument: "false"
        description: Don't list files whose formatting differs (always disabled if using STDIN)
      - names:
          - -write
        argument: "false"
        description: Don't write to source files (always disabled if using STDIN or -check)
      - names:
          - -diff
        argument: ""
        description: Display diffs of formatting changes
      - names:
          - -check
        argument: ""
        description: Check if the input is formatted. Exit status will be 0 if all input is properly formatted and non-zero otherwise.
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
      - names:
          - -recursive
        argument: ""
        description: Also process files in subdirectories. By default, only the given directory (or current directory) is processed.
  - name: force-unlock
    description: Release a stuck lock on the current workspace
    options:
      - names:
          - -force
        argument: ""
        description: Don't ask for input for unlock confirmation.
  - name: get
    description: Install or upgrade remote Terraform modules
    options:
      - names:
          - -update
        argument: ""
        description: Check already-downloaded modules for available updates and install the newest versions available.
      - names:
          - -no-color
        argument: ""
        description: Disable text coloring in the output.
  - name: graph
    description: Generate a Graphviz graph of the steps in an operation
    options:
      - names:
          - -plan
        argument: tfplan
        description: Render graph using the specified plan file instead of the configuration in the current directory.
      - names:
          - -draw-cycles
        argument: ""
        description: Highlight any cycles in the graph with colored edges. This helps when diagnosing cycle errors.
      - names:
          - -type
        argument: plan
        description: 'Type of graph to output. Can be: plan, plan-destroy, apply, validate, input, refresh.'
      - names:
          - -module-depth
        argument: n
        description: (deprecated) In prior versions of Terraform, specified the
  - name: import
    description: Associate existing infrastructure with a Terraform resource
    options:
      - names:
          - -config
        argument: path
        description: Path to a directory of Terraform configuration files to use to configure the provider. Defaults to pwd. If no config files are present, they must be provided via the input prompts or env vars.
      - names:
          - -allow-missing-config
        argument: ""
        description: Allow import when no resource configuration block exists.
      - names:
          - -input
        argument: "false"
        description: Disable interactive input prompts.
      - names:
          - -lock
        argument: "false"
        description: Don't hold a state lock during the operation. This is dangerous if others might concurrently run commands against the same workspace.
      - names:
          - -lock-timeout
        argument: 0s
        description: Duration to retry a state lock.
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
      - names:
          - -var
        argument: '''foo=bar'''
        description: Set a variable in the Terraform configuration. This flag can be set multiple times. This is only useful with the "-config" flag.
      - names:
          - -var-file
        argument: foo
        description: Set variables in the Terraform configuration from a file. If "terraform.tfvars" or any ".auto.tfvars" files are present, they will be automatically loaded.
      - names:
          - -ignore-remote-version
        argument: ""
        description: A rare option used for the remote backend only. See the remote backend documentation for more information.
  - name: login
    description: Obtain and save credentials for a remote host
    options: []
  - name: logout
    description: Remove locally-stored credentials for a remote host
    options: []
  - name: output
    description: Show output values from your root module
    options:
      - names:
          - -state
        argument: path
        description: Path to the state file to read. Defaults to "terraform.tfstate".
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
      - names:
          - -json
        argument: ""
        description: If specified, machine readable output will be printed in JSON format.
      - names:
          - -raw
        argument: ""
        description: For value types that can be automatically converted to a string, will print the raw string directly, rather than a human-oriented representation of the value.
  - name: providers
    description: Show the providers required for this configuration
    options: []
  - name: refresh
    description: Update the state to match remote systems
    options:
      - names:
          - -compact-warnings
        argument: ""
        description: If Terraform produces any warnings that are not accompanied by errors, show them in a more compact form that includes only the summary messages.
      - names:
          - -input
        argument: "true"
        description: Ask for input for variables if not directly set.
      - names:
          - -lock
        argument: "false"
        description: Don't hold a state lock during the operation. This is dangerous if others might concurrently run commands against the same workspace.
      - names:
          - -lock-timeout
        argument: 0s
        description: Duration to retry a state lock.
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
      - names:
          - -target
        argument: resource
        description: Resource to target. Operation will be limited to this resource and its dependencies. This flag can be used multiple times.
      - names:
          - -var
        argument: '''foo=bar'''
        description: Set a variable in the Terraform configuration. This flag can be set multiple times.
      - names:
          - -var-file
        argument: foo
        description: Set variables in the Terraform configuration from a file. If "terraform.tfvars" or any ".auto.tfvars" files are present, they will be automatically loaded.
  - name: show
    description: Show the current state or a saved plan
    options:
      - names:
          - -no-color
        argument: ""
        description: If specified, output won't contain any color.
      - names:
          - -json
        argument: ""
        description: If specified, output the Terraform plan or state in a machine-readable form.
  - name: state
    description: Advanced state management
    options: []
  - name: taint
    description: Mark a resource instance as not fully functional
    options:
      - names:
          - -allow-missing
        argument: ""
        description: If specified, the command will succeed (exit code 0) even if the resource is missing.
      - names:
          - -lock
        argument: "false"
        description: Don't hold a state lock during the operation. This is dangerous if others might concurrently run commands against the same workspace.
      - names:
          - -lock-timeout
        argument: 0s
        description: Duration to retry a state lock.
      - names:
          - -ignore-remote-version
        argument: ""
        description: A rare option used for the remote backend only. See the remote backend documentation for more information.
  - name: test
    description: Experimental support for module integration testing
    options:
      - names:
          - '-'
        argument: ""
        description: Testing of subsequent updates to existing infrastructure, where currently it only supports initial creation and then destruction.
      - names:
          - '-'
        argument: ""
        description: Testing top-level modules that are intended to be used for "real" environments, which typically have hard-coded values that don't permit creating a separate "copy" for testing.
      - names:
          - '-'
        argument: ""
        description: Some sort of support for unit test runs that don't interact with remote systems at all, e.g. for use in checking pull requests from untrusted contributors.
      - names:
          - -compact-warnings
        argument: ""
        description: Use a more compact representation for warnings, if this command produces only warnings and no errors.
      - names:
          - -junit-xml
        argument: FILE
        description: In addition to the usual output, also write test results to the given file path in JUnit XML format. This format is commonly supported by CI systems, and they typically expect to be given a filename to search for in the test workspace after the test run finishes.
      - names:
          - -no-color
        argument: ""
        description: Don't include virtual terminal formatting sequences in the output.
  - name: untaint
    description: Remove the 'tainted' state from a resource instance
    options:
      - names:
          - -allow-missing
        argument: ""
        description: If specified, the command will succeed (exit code 0) even if the resource is missing.
      - names:
          - -lock
        argument: "false"
        description: Don't hold a state lock during the operation. This is dangerous if others might concurrently run commands against the same workspace.
      - names:
          - -lock-timeout
        argument: 0s
        description: Duration to retry a state lock.
      - names:
          - -ignore-remote-version
        argument: ""
        description: A rare option used for the remote backend only. See the remote backend documentation for more information.
  - name: version
    description: Show the current Terraform version
    options:
      - names:
          - -json
        argument: ""
        description: Output the version information as a JSON object.
  - name: workspace
    description: Workspace management
    options: []
tldr: |
  > Create and deploy infrastructure as code to cloud providers.
  > More information: <https://www.terraform.io/>.

  - Initialize a new or existing Terraform configuration:

  `terraform init`

  - Verify that the configuration files are syntactically valid:

  `terraform validate`

  - Format configuration according to Terraform language style conventions:

  `terraform fmt`

  - Generate and show an execution plan:

  `terraform plan`

  - Build or change infrastructure:

  `terraform apply`

  - Destroy Terraform-managed infrastructure:

  `terraform destroy`
