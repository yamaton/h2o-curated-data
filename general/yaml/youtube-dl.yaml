name: youtube-dl
description: youtube-dl
options:
  - names:
      - -h
      - --help
    argument: ""
    description: Print this help text and exit
  - names:
      - --version
    argument: ""
    description: Print program version and exit
  - names:
      - -U
      - --update
    argument: ""
    description: Update this program to latest version. Make sure that you have sufficient permissions (run with sudo if needed)
  - names:
      - -i
      - --ignore-errors
    argument: ""
    description: Continue on download errors, for example to skip unavailable videos in a playlist
  - names:
      - --abort-on-error
    argument: ""
    description: Abort downloading of further videos (in the playlist or the command line) if an error occurs
  - names:
      - --dump-user-agent
    argument: ""
    description: Display the current browser identification
  - names:
      - --list-extractors
    argument: ""
    description: List all supported extractors
  - names:
      - --extractor-descriptions
    argument: ""
    description: Output descriptions of all supported extractors
  - names:
      - --force-generic-extractor
    argument: ""
    description: Force extraction to use the generic extractor
  - names:
      - --default-search
    argument: PREFIX
    description: Use this prefix for unqualified URLs. For example "gvsearch2:" downloads two videos from google videos for youtubedl "large apple". Use the value "auto" to let youtube-dl guess ("auto_warning" to emit a warning when guessing). "error" just throws an error. The default value "fixup_error" repairs broken URLs, but emits an error if this is not possible instead of searching.
  - names:
      - --ignore-config
    argument: ""
    description: 'Do not read configuration files. When given in the global configuration file /etc/youtube-dl.conf: Do not read the user configuration in ~/.config/youtube-dl/config (%APPDATA%/youtube-dl/config.txt on Windows)'
  - names:
      - --config-location
    argument: PATH
    description: Location of the configuration file; either the path to the config or its containing directory.
  - names:
      - --flat-playlist
    argument: ""
    description: Do not extract the videos of a playlist, only list them.
  - names:
      - --mark-watched
    argument: ""
    description: Mark videos watched (YouTube only)
  - names:
      - --no-mark-watched
    argument: ""
    description: Do not mark videos watched (YouTube only)
  - names:
      - --no-color
    argument: ""
    description: Do not emit color codes in output
  - names:
      - --proxy
    argument: URL
    description: Use the specified HTTP/HTTPS/SOCKS proxy. To enable SOCKS proxy, specify a proper scheme. For example socks5://127.0.0.1:1080/. Pass in an empty string (--proxy "") for direct connection
  - names:
      - --socket-timeout
    argument: SECONDS
    description: Time to wait before giving up, in seconds
  - names:
      - --source-address
    argument: IP
    description: Client-side IP address to bind to
  - names:
      - "-4"
      - --force-ipv4
    argument: ""
    description: Make all connections via IPv4
  - names:
      - "-6"
      - --force-ipv6
    argument: ""
    description: Make all connections via IPv6
  - names:
      - --geo-verification-proxy
    argument: URL
    description: Use this proxy to verify the IP address for some geo-restricted sites. The default proxy specified by --proxy (or none, if the option is not present) is used for the actual downloading.
  - names:
      - --geo-bypass
    argument: ""
    description: Bypass geographic restriction via faking X-Forwarded-For HTTP header
  - names:
      - --no-geo-bypass
    argument: ""
    description: Do not bypass geographic restriction via faking X-Forwarded-For HTTP header
  - names:
      - --geo-bypass-country
    argument: CODE
    description: Force bypass geographic restriction with explicitly provided two-letter ISO 3166-2 country code
  - names:
      - --geo-bypass-ip-block
    argument: IP_BLOCK
    description: Force bypass geographic restriction with explicitly provided IP block in CIDR notation
  - names:
      - --playlist-start
    argument: NUMBER
    description: Playlist video to start at (default is 1)
  - names:
      - --playlist-end
    argument: NUMBER
    description: Playlist video to end at (default is last)
  - names:
      - --playlist-items
    argument: ITEM_SPEC
    description: 'Playlist video items to download. Specify indices of the videos in the playlist separated by commas like: "-playlist-items 1,2,5,8" if you want to download videos indexed 1, 2, 5, 8 in the playlist. You can specify range: " --playlist-items 1-3,7,10-13", it will download the videos at index 1, 2, 3, 7, 10, 11, 12 and 13.'
  - names:
      - --match-title
    argument: REGEX
    description: Download only matching titles (regex or caseless sub-string)
  - names:
      - --reject-title
    argument: REGEX
    description: Skip download for matching titles (regex or caseless sub-string)
  - names:
      - --max-downloads
    argument: NUMBER
    description: Abort after downloading NUMBER files
  - names:
      - --min-filesize
    argument: SIZE
    description: Do not download any videos smaller than SIZE (e.g. 50k or 44.6m)
  - names:
      - --max-filesize
    argument: SIZE
    description: Do not download any videos larger than SIZE (e.g. 50k or 44.6m)
  - names:
      - --date
    argument: DATE
    description: Download only videos uploaded in this date
  - names:
      - --datebefore
    argument: DATE
    description: Download only videos uploaded on or before this date (i.e. inclusive)
  - names:
      - --dateafter
    argument: DATE
    description: Download only videos uploaded on or after this date (i.e. inclusive)
  - names:
      - --min-views
    argument: COUNT
    description: Do not download any videos with less than COUNT views
  - names:
      - --max-views
    argument: COUNT
    description: Do not download any videos with more than COUNT views
  - names:
      - --match-filter
    argument: FILTER
    description: Generic video filter. Specify any key (see the "OUTPUT TEMPLATE" for a list of available keys) to match if the key is present, !key to check if the key is not present, key > NUMBER (like "comment_count > 12", also works with >=, <, <=, !=, =) to compare against a number, key = 'LITERAL' (like "uploader = 'Mike Smith'", also works with !=) to match against a string literal and & to require multiple matches. Values which are not known are excluded unless you put a question mark (?) after the operator. For example, to only match videos that have been liked more than 100 times and disliked less than 50 times (or the dislike functionality is not available at the given service), but who also have a description, use --match-filter "like_count > 100 & dislike_count <? 50 & description" .
  - names:
      - --no-playlist
    argument: ""
    description: Download only the video, if the URL refers to a video and a playlist.
  - names:
      - --yes-playlist
    argument: ""
    description: Download the playlist, if the URL refers to a video and a playlist.
  - names:
      - --age-limit
    argument: YEARS
    description: Download only videos suitable for the given age
  - names:
      - --download-archive
    argument: FILE
    description: Download only videos not listed in the archive file. Record the IDs of all downloaded videos in it.
  - names:
      - --include-ads
    argument: ""
    description: Download advertisements as well (experimental)
  - names:
      - -r
      - --limit-rate
    argument: RATE
    description: Maximum download rate in bytes per second (e.g. 50K or 4.2M)
  - names:
      - -R
      - --retries
    argument: RETRIES
    description: Number of retries (default is 10), or "infinite".
  - names:
      - --fragment-retries
    argument: RETRIES
    description: Number of retries for a fragment (default is 10), or "infinite" (DASH, hlsnative and ISM)
  - names:
      - --skip-unavailable-fragments
    argument: ""
    description: Skip unavailable fragments (DASH, hlsnative and ISM)
  - names:
      - --abort-on-unavailable-fragment
    argument: ""
    description: Abort downloading when some fragment is not available
  - names:
      - --keep-fragments
    argument: ""
    description: Keep downloaded fragments on disk after downloading is finished; fragments are erased by default
  - names:
      - --buffer-size
    argument: SIZE
    description: Size of download buffer (e.g. 1024 or 16K) (default is 1024)
  - names:
      - --no-resize-buffer
    argument: ""
    description: Do not automatically adjust the buffer size. By default, the buffer size is automatically resized from an initial value of SIZE.
  - names:
      - --http-chunk-size
    argument: SIZE
    description: Size of a chunk for chunk-based HTTP downloading (e.g. 10485760 or 10M) (default is disabled). May be useful for bypassing bandwidth throttling imposed by a webserver (experimental)
  - names:
      - --playlist-reverse
    argument: ""
    description: Download playlist videos in reverse order
  - names:
      - --playlist-random
    argument: ""
    description: Download playlist videos in random order
  - names:
      - --xattr-set-filesize
    argument: ""
    description: Set file xattribute ytdl.filesize with expected file size
  - names:
      - --hls-prefer-native
    argument: ""
    description: Use the native HLS downloader instead of ffmpeg
  - names:
      - --hls-prefer-ffmpeg
    argument: ""
    description: Use ffmpeg instead of the native HLS downloader
  - names:
      - --hls-use-mpegts
    argument: ""
    description: Use the mpegts container for HLS videos, allowing to play the video while downloading (some players may not be able to play it)
  - names:
      - --external-downloader
    argument: COMMAND
    description: Use the specified external downloader. Currently supports aria2c,avconv,axel,c url,ffmpeg,httpie,wget
  - names:
      - --external-downloader-args
    argument: ARGS
    description: Give these arguments to the external downloader
  - names:
      - -a
      - --batch-file
    argument: FILE
    description: File containing URLs to download ('-' for stdin), one URL per line. Lines starting with '#', ';' or ']' are considered as comments and ignored.
  - names:
      - --id
    argument: ""
    description: Use only video ID in file name
  - names:
      - -o
      - --output
    argument: TEMPLATE
    description: Output filename template, see the "OUTPUT TEMPLATE" for all the info
  - names:
      - --output-na-placeholder
    argument: PLACEHOLDER
    description: Placeholder value for unavailable meta fields in output filename template (default is "NA")
  - names:
      - --autonumber-start
    argument: NUMBER
    description: Specify the start value for %(autonumber)s (default is 1)
  - names:
      - --restrict-filenames
    argument: ""
    description: Restrict filenames to only ASCII characters, and avoid "&" and spaces in filenames
  - names:
      - -w
      - --no-overwrites
    argument: ""
    description: Do not overwrite files
  - names:
      - -c
      - --continue
    argument: ""
    description: Force resume of partially downloaded files. By default, youtube-dl will resume downloads if possible.
  - names:
      - --no-continue
    argument: ""
    description: Do not resume partially downloaded files (restart from beginning)
  - names:
      - --no-part
    argument: ""
    description: Do not use .part files - write directly into output file
  - names:
      - --no-mtime
    argument: ""
    description: Do not use the Last-modified header to set the file modification time
  - names:
      - --write-description
    argument: ""
    description: Write video description to a .description file
  - names:
      - --write-info-json
    argument: ""
    description: Write video metadata to a .info.json file
  - names:
      - --write-annotations
    argument: ""
    description: Write video annotations to a .annotations.xml file
  - names:
      - --load-info-json
    argument: FILE
    description: JSON file containing the video information (created with the "--writeinfo-json" option)
  - names:
      - --cookies
    argument: FILE
    description: File to read cookies from and dump cookie jar in
  - names:
      - --cache-dir
    argument: DIR
    description: Location in the filesystem where youtube-dl can store some downloaded information permanently. By default $XDG_CACHE_HOME/youtube-dl or ~/.cache/youtube-dl . At the moment, only YouTube player files (for videos with obfuscated signatures) are cached, but that may change.
  - names:
      - --no-cache-dir
    argument: ""
    description: Disable filesystem caching
  - names:
      - --rm-cache-dir
    argument: ""
    description: Delete all filesystem cache files
  - names:
      - --write-thumbnail
    argument: ""
    description: Write thumbnail image to disk
  - names:
      - --write-all-thumbnails
    argument: ""
    description: Write all thumbnail image formats to disk
  - names:
      - --list-thumbnails
    argument: ""
    description: Simulate and list all available thumbnail formats
  - names:
      - -q
      - --quiet
    argument: ""
    description: Activate quiet mode
  - names:
      - --no-warnings
    argument: ""
    description: Ignore warnings
  - names:
      - -s
      - --simulate
    argument: ""
    description: Do not download the video and do not write anything to disk
  - names:
      - --skip-download
    argument: ""
    description: Do not download the video
  - names:
      - -g
      - --get-url
    argument: ""
    description: Simulate, quiet but print URL
  - names:
      - -e
      - --get-title
    argument: ""
    description: Simulate, quiet but print title
  - names:
      - --get-id
    argument: ""
    description: Simulate, quiet but print id
  - names:
      - --get-thumbnail
    argument: ""
    description: Simulate, quiet but print thumbnail URL
  - names:
      - --get-description
    argument: ""
    description: Simulate, quiet but print video description
  - names:
      - --get-duration
    argument: ""
    description: Simulate, quiet but print video length
  - names:
      - --get-filename
    argument: ""
    description: Simulate, quiet but print output filename
  - names:
      - --get-format
    argument: ""
    description: Simulate, quiet but print output format
  - names:
      - -j
      - --dump-json
    argument: ""
    description: Simulate, quiet but print JSON information. See the "OUTPUT TEMPLATE" for a description of available keys.
  - names:
      - -J
      - --dump-single-json
    argument: ""
    description: Simulate, quiet but print JSON information for each command-line argument. If the URL refers to a playlist, dump the whole playlist information in a single line.
  - names:
      - --print-json
    argument: ""
    description: Be quiet and print the video information as JSON (video is still being downloaded).
  - names:
      - --newline
    argument: ""
    description: Output progress bar as new lines
  - names:
      - --no-progress
    argument: ""
    description: Do not print progress bar
  - names:
      - --console-title
    argument: ""
    description: Display progress in console titlebar
  - names:
      - -v
      - --verbose
    argument: ""
    description: Print various debugging information
  - names:
      - --dump-pages
    argument: ""
    description: Print downloaded pages encoded using base64 to debug problems (very verbose)
  - names:
      - --write-pages
    argument: ""
    description: Write downloaded intermediary pages to files in the current directory to debug problems
  - names:
      - --print-traffic
    argument: ""
    description: Display sent and read HTTP traffic
  - names:
      - -C
      - --call-home
    argument: ""
    description: Contact the youtube-dl server for debugging
  - names:
      - --no-call-home
    argument: ""
    description: Do NOT contact the youtube-dl server for debugging
  - names:
      - --encoding
    argument: ENCODING
    description: Force the specified encoding (experimental)
  - names:
      - --no-check-certificate
    argument: ""
    description: Suppress HTTPS certificate validation
  - names:
      - --prefer-insecure
    argument: ""
    description: Use an unencrypted connection to retrieve information about the video. (Currently supported only for YouTube)
  - names:
      - --user-agent
    argument: UA
    description: Specify a custom user agent
  - names:
      - --referer
    argument: URL
    description: Specify a custom referer, use if the video access is restricted to one domain
  - names:
      - --add-header
    argument: FIELD:VALUE
    description: Specify a custom HTTP header and its value, separated by a colon ':'. You can use this option multiple times
  - names:
      - --bidi-workaround
    argument: ""
    description: Work around terminals that lack bidirectional text support. Requires bidiv or fribidi executable in PATH
  - names:
      - --sleep-interval
    argument: SECONDS
    description: Number of seconds to sleep before each download when used alone or a lower bound of a range for randomized sleep before each download (minimum possible number of seconds to sleep) when used along with --max-sleep-interval.
  - names:
      - --max-sleep-interval
    argument: SECONDS
    description: Upper bound of a range for randomized sleep before each download (maximum possible number of seconds to sleep). Must only be used along with --minsleep-interval.
  - names:
      - -f
      - --format
    argument: FORMAT
    description: Video format code, see the "FORMAT SELECTION" for all the info
  - names:
      - --all-formats
    argument: ""
    description: Download all available video formats
  - names:
      - --prefer-free-formats
    argument: ""
    description: Prefer free video formats unless a specific one is requested
  - names:
      - -F
      - --list-formats
    argument: ""
    description: List all available formats of requested videos
  - names:
      - --youtube-skip-dash-manifest
    argument: ""
    description: Do not download the DASH manifests and related data on YouTube videos
  - names:
      - --merge-output-format
    argument: FORMAT
    description: If a merge is required (e.g. bestvideo+bestaudio), output to given container format. One of mkv, mp4, ogg, webm, flv. Ignored if no merge is required
  - names:
      - --write-sub
    argument: ""
    description: Write subtitle file
  - names:
      - --write-auto-sub
    argument: ""
    description: Write automatically generated subtitle file (YouTube only)
  - names:
      - --all-subs
    argument: ""
    description: Download all the available subtitles of the video
  - names:
      - --list-subs
    argument: ""
    description: List all available subtitles for the video
  - names:
      - --sub-format
    argument: FORMAT
    description: 'Subtitle format, accepts formats preference, for example: "srt" or "ass/srt/best"'
  - names:
      - --sub-lang
    argument: LANGS
    description: Languages of the subtitles to download (optional) separated by commas, use --list-subs for available language tags
  - names:
      - -u
      - --username
    argument: USERNAME
    description: Login with this account ID
  - names:
      - -p
      - --password
    argument: PASSWORD
    description: Account password. If this option is left out, youtube-dl will ask interactively.
  - names:
      - "-2"
      - --twofactor
    argument: TWOFACTOR
    description: Two-factor authentication code
  - names:
      - -n
      - --netrc
    argument: ""
    description: Use .netrc authentication data
  - names:
      - --video-password
    argument: PASSWORD
    description: Video password (vimeo, youku)
  - names:
      - --ap-mso
    argument: MSO
    description: Adobe Pass multiple-system operator (TV provider) identifier, use --ap-list-mso for a list of available MSOs
  - names:
      - --ap-username
    argument: USERNAME
    description: Multiple-system operator account login
  - names:
      - --ap-password
    argument: PASSWORD
    description: Multiple-system operator account password. If this option is left out, youtube-dl will ask interactively.
  - names:
      - --ap-list-mso
    argument: ""
    description: List all supported multiple-system operators
  - names:
      - -x
      - --extract-audio
    argument: ""
    description: Convert video files to audio-only files (requires ffmpeg/avconv and ffprobe/avprobe)
  - names:
      - --audio-format
    argument: FORMAT
    description: 'Specify audio format: "best", "aac", "flac", "mp3", "m4a", "opus", "vorbis", or "wav"; "best" by default; No effect without -x'
  - names:
      - --audio-quality
    argument: QUALITY
    description: Specify ffmpeg/avconv audio quality, insert a value between 0 (better) and 9 (worse) for VBR or a specific bitrate like 128K (default 5)
  - names:
      - --recode-video
    argument: FORMAT
    description: 'Encode the video to another format if necessary (currently supported: mp4|flv|ogg|webm|mkv|avi)'
  - names:
      - --postprocessor-args
    argument: ARGS
    description: Give these arguments to the postprocessor
  - names:
      - -k
      - --keep-video
    argument: ""
    description: Keep the video file on disk after the post-processing; the video is erased by default
  - names:
      - --no-post-overwrites
    argument: ""
    description: Do not overwrite post-processed files; the post-processed files are overwritten by default
  - names:
      - --embed-subs
    argument: ""
    description: Embed subtitles in the video (only for mp4, webm and mkv videos)
  - names:
      - --embed-thumbnail
    argument: ""
    description: Embed thumbnail in the audio as cover art
  - names:
      - --add-metadata
    argument: ""
    description: Write metadata to the video file
  - names:
      - --metadata-from-title
    argument: FORMAT
    description: 'Parse additional metadata like song title / artist from the video title. The format syntax is the same as --output. Regular expression with named capture groups may also be used. The parsed parameters replace existing values. Example: --metadata-from-title "%(artist)s - %(title)s" matches a title like "Coldplay - Paradise". Example (regex): --metadata-from-title "(?P<artist>.+?) - (?P<title>.+)"'
  - names:
      - --xattrs
    argument: ""
    description: Write metadata to the video file's xattrs (using dublin core and xdg standards)
  - names:
      - --fixup
    argument: POLICY
    description: Automatically correct known faults of the file. One of never (do nothing), warn (only emit a warning), detect_or_warn (the default; fix file if we can, warn otherwise)
  - names:
      - --prefer-avconv
    argument: ""
    description: Prefer avconv over ffmpeg for running the postprocessors
  - names:
      - --prefer-ffmpeg
    argument: ""
    description: Prefer ffmpeg over avconv for running the postprocessors (default)
  - names:
      - --ffmpeg-location
    argument: PATH
    description: Location of the ffmpeg/avconv binary; either the path to the binary or its containing directory.
  - names:
      - --exec
    argument: CMD
    description: 'Execute a command on the file after downloading and post-processing, similar to find''s -exec syntax. Example: --exec ''adb push {} /sdcard/Music/ && rm {}'''
  - names:
      - --convert-subs
    argument: FORMAT
    description: 'Convert the subtitles to other format (currently supported: srt|ass|vtt|lrc)'
tldr: |
  > Download videos from YouTube and other websites.
  > More information: <http://rg3.github.io/youtube-dl/>.

  - Download a video or playlist:

  `youtube-dl '{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}'`

  - List all formats that a video or playlist is available in:

  `youtube-dl --list-formats '{{https://www.youtube.com/watch?v=Mwa0_nE9H7A}}'`

  - Download a video or playlist at a specific quality:

  `youtube-dl --format "{{best[height<=480]}}" '{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}'`

  - Download the audio from a video and convert it to an MP3:

  `youtube-dl -x --audio-format {{mp3}} '{{url}}'`

  - Download the best quality audio and video and merge them:

  `youtube-dl -f bestvideo+bestaudio '{{url}}'`

  - Download video(s) as MP4 files with custom filenames:

  `youtube-dl --format {{mp4}} -o "{{%(playlist_index)s-%(title)s by %(uploader)s on %(upload_date)s in %(playlist)s.%(ext)s}}" '{{url}}'`

  - Download a particular language's subtitles along with the video:

  `youtube-dl --sub-lang {{en}} --write-sub '{{https://www.youtube.com/watch?v=Mwa0_nE9H7A}}'`

  - Download a playlist and extract MP3s from it:

  `youtube-dl -f "bestaudio" --continue --no-overwrites --ignore-errors --extract-audio --audio-format mp3 -o "%(title)s.%(ext)s" {{url_to_playlist}}`
