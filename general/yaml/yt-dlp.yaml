name: yt-dlp
description: yt-dlp
usage: yt-dlp [OPTIONS] URL [URL...]
options:
  - names:
      - -h
      - --help
    argument: ""
    description: Print this help text and exit
  - names:
      - --version
    argument: ""
    description: Print program version and exit
  - names:
      - -U
      - --update
    argument: ""
    description: Check if updates are available. You installed yt-dlp with pip or using the wheel from PyPi; Use that to update
  - names:
      - --no-update
    argument: ""
    description: Do not check for updates (default)
  - names:
      - -i
      - --ignore-errors
    argument: ""
    description: Ignore download and postprocessing errors. The download will be considered successful even if the postprocessing fails
  - names:
      - --no-abort-on-error
    argument: ""
    description: Continue with next video on download errors; e.g. to skip unavailable videos in a playlist (default)
  - names:
      - --abort-on-error
    argument: ""
    description: 'Abort downloading of further videos if an error occurs (Alias: --no-ignore-errors)'
  - names:
      - --dump-user-agent
    argument: ""
    description: Display the current user-agent and exit
  - names:
      - --list-extractors
    argument: ""
    description: List all supported extractors and exit
  - names:
      - --extractor-descriptions
    argument: ""
    description: Output descriptions of all supported extractors and exit
  - names:
      - --use-extractors
    argument: NAMES
    description: 'Extractor names to use separated by commas. You can also use regexes, "all", "default" and "end" (end URL matching); e.g. --ies "holodex.*,end,youtube". Prefix the name with a "-" to exclude it, e.g. --ies default,-generic. Use --list-extractors for a list of extractor names. (Alias: --ies)'
  - names:
      - --default-search
    argument: PREFIX
    description: Use this prefix for unqualified URLs. E.g. "gvsearch2:python" downloads two videos from google videos for the search term "python". Use the value "auto" to let yt-dlp guess ("auto_warning" to emit a warning when guessing). "error" just throws an error. The default value "fixup_error" repairs broken URLs, but emits an error if this is not possible instead of searching
  - names:
      - --ignore-config
    argument: ""
    description: 'Don''t load any more configuration files except those given by --config-locations. For backward compatibility, if this option is found inside the system configuration file, the user configuration is not loaded. (Alias: --no-config)'
  - names:
      - --no-config-locations
    argument: ""
    description: Do not load any custom configuration files (default). When given inside a configuration file, ignore all previous --config-locations defined in the current file
  - names:
      - --config-locations
    argument: PATH
    description: Location of the main configuration file; either the path to the config or its containing directory ("-" for stdin). Can be used multiple times and inside other configuration files
  - names:
      - --flat-playlist
    argument: ""
    description: Do not extract the videos of a playlist, only list them
  - names:
      - --no-flat-playlist
    argument: ""
    description: Extract the videos of a playlist
  - names:
      - --live-from-start
    argument: ""
    description: Download livestreams from the start. Currently only supported for YouTube (Experimental)
  - names:
      - --no-live-from-start
    argument: ""
    description: Download livestreams from the current time (default)
  - names:
      - --wait-for-video
    argument: MIN[-MAX]
    description: Wait for scheduled streams to become available. Pass the minimum number of seconds (or range) to wait between retries
  - names:
      - --no-wait-for-video
    argument: ""
    description: Do not wait for scheduled streams (default)
  - names:
      - --mark-watched
    argument: ""
    description: Mark videos watched (even with --simulate)
  - names:
      - --no-mark-watched
    argument: ""
    description: Do not mark videos watched (default)
  - names:
      - --no-colors
    argument: ""
    description: 'Do not emit color codes in output (Alias: --no-colours)'
  - names:
      - --compat-options
    argument: OPTS
    description: Options that can help keep compatibility with youtube-dl or youtube-dlc configurations by reverting some of the changes made in yt-dlp. See "Differences in default behavior" for details
  - names:
      - --alias
    argument: ALIASES OPTIONS
    description: Create aliases for an option string. Unless an alias starts with a dash "-", it is prefixed with "--". Arguments are parsed according to the Python string formatting mini-language. E.g. --alias get-audio,-X "-S=aext:{0},abr -x --audio-format {0}" creates options "--get-audio" and "-X" that takes an argument (ARG0) and expands to "-S=aext:ARG0,abr -x --audio-format ARG0". All defined aliases are listed in the --help output. Alias options can trigger more aliases; so be careful to avoid defining recursive options. As a safety measure, each alias may be triggered a maximum of 100 times. This option can be used multiple times
  - names:
      - --proxy
    argument: URL
    description: Use the specified HTTP/HTTPS/SOCKS proxy. To enable SOCKS proxy, specify a proper scheme, e.g. socks5://user:pass@127.0.0.1:1080/. Pass in an empty string (--proxy "") for direct connection
  - names:
      - --socket-timeout
    argument: SECONDS
    description: Time to wait before giving up, in seconds
  - names:
      - --source-address
    argument: IP
    description: Client-side IP address to bind to
  - names:
      - "-4"
      - --force-ipv4
    argument: ""
    description: Make all connections via IPv4
  - names:
      - "-6"
      - --force-ipv6
    argument: ""
    description: Make all connections via IPv6
  - names:
      - --geo-verification-proxy
    argument: URL
    description: Use this proxy to verify the IP address for some geo-restricted sites. The default proxy specified by --proxy (or none, if the option is not present) is used for the actual downloading
  - names:
      - --geo-bypass
    argument: ""
    description: Bypass geographic restriction via faking X-Forwarded-For HTTP header (default)
  - names:
      - --no-geo-bypass
    argument: ""
    description: Do not bypass geographic restriction via faking X-Forwarded-For HTTP header
  - names:
      - --geo-bypass-country
    argument: CODE
    description: Force bypass geographic restriction with explicitly provided two-letter ISO 3166-2 country code
  - names:
      - --geo-bypass-ip-block
    argument: IP_BLOCK
    description: Force bypass geographic restriction with explicitly provided IP block in CIDR notation
  - names:
      - -I
      - --playlist-items
    argument: ITEM_SPEC
    description: Comma separated playlist_index of the videos to download. You can specify a range using "[START]:[STOP][:STEP]". For backward compatibility, START-STOP is also supported. Use negative indices to count from the right and negative STEP to download in reverse order. E.g. "-I 1:3,7,-5::2" used on a playlist of size 15 will download the videos at index 1,2,3,7,11,13,15
  - names:
      - --min-filesize
    argument: SIZE
    description: Abort download if filesize is smaller than SIZE, e.g. 50k or 44.6M
  - names:
      - --max-filesize
    argument: SIZE
    description: Abort download if filesize if larger than SIZE, e.g. 50k or 44.6M
  - names:
      - --date
    argument: DATE
    description: Download only videos uploaded on this date. The date can be "YYYYMMDD" or in the format [now|today|yesterday][-N[day|week|month|year]]. E.g. --date today-2weeks
  - names:
      - --datebefore
    argument: DATE
    description: Download only videos uploaded on or before this date. The date formats accepted is the same as --date
  - names:
      - --dateafter
    argument: DATE
    description: Download only videos uploaded on or after this date. The date formats accepted is the same as --date
  - names:
      - --match-filters
    argument: FILTER
    description: Generic video filter. Any "OUTPUT TEMPLATE" field can be compared with a number or a string using the operators defined in "Filtering Formats". You can also simply specify a field to match if the field is present, use "!field" to check if the field is not present, and "&" to check multiple conditions. Use a "\" to escape "&" or quotes if needed. If used multiple times, the filter matches if atleast one of the conditions are met. E.g. --match-filter !is_live --match-filter "like_count>?100 & description~='(?i)\bcats \& dogs\b'" matches only videos that are not live OR those that have a like count more than 100 (or the like field is not available) and also has a description that contains the phrase "cats & dogs" (caseless). Use "--match-filter -" to interactively ask whether to download each video
  - names:
      - --no-match-filter
    argument: ""
    description: Do not use generic video filter (default)
  - names:
      - --no-playlist
    argument: ""
    description: Download only the video, if the URL refers to a video and a playlist
  - names:
      - --yes-playlist
    argument: ""
    description: Download the playlist, if the URL refers to a video and a playlist
  - names:
      - --age-limit
    argument: YEARS
    description: Download only videos suitable for the given age
  - names:
      - --download-archive
    argument: FILE
    description: Download only videos not listed in the archive file. Record the IDs of all downloaded videos in it
  - names:
      - --no-download-archive
    argument: ""
    description: Do not use archive file (default)
  - names:
      - --max-downloads
    argument: NUMBER
    description: Abort after downloading NUMBER files
  - names:
      - --break-on-existing
    argument: ""
    description: Stop the download process when encountering a file that is in the archive
  - names:
      - --break-on-reject
    argument: ""
    description: Stop the download process when encountering a file that has been filtered out
  - names:
      - --break-per-input
    argument: ""
    description: --break-on-existing, --break-on-reject, --max-downloads, and autonumber resets per input URL
  - names:
      - --no-break-per-input
    argument: ""
    description: --break-on-existing and similar options terminates the entire download queue
  - names:
      - --skip-playlist-after-errors
    argument: "N"
    description: Number of allowed failures until the rest of the playlist is skipped
  - names:
      - -N
      - --concurrent-fragments
    argument: "N"
    description: Number of fragments of a dash/hlsnative video that should be downloaded concurrently (default is 1)
  - names:
      - -r
      - --limit-rate
    argument: RATE
    description: Maximum download rate in bytes per second, e.g. 50K or 4.2M
  - names:
      - --throttled-rate
    argument: RATE
    description: Minimum download rate in bytes per second below which throttling is assumed and the video data is re-extracted, e.g. 100K
  - names:
      - -R
      - --retries
    argument: RETRIES
    description: Number of retries (default is 10), or "infinite"
  - names:
      - --file-access-retries
    argument: RETRIES
    description: Number of times to retry on file access error (default is 3), or "infinite"
  - names:
      - --fragment-retries
    argument: RETRIES
    description: Number of retries for a fragment (default is 10), or "infinite" (DASH, hlsnative and ISM)
  - names:
      - --retry-sleep
    argument: '[TYPE:]EXPR'
    description: Time to sleep between retries in seconds (optionally) prefixed by the type of retry (http (default), fragment, file_access, extractor) to apply the sleep to. EXPR can be a number, linear=START[:END[:STEP=1]] or exp=START[:END[:BASE=2]]. This option can be used multiple times to set the sleep for the different retry types, e.g. --retry-sleep linear=1::2 --retry-sleep fragment:exp=1:20
  - names:
      - --skip-unavailable-fragments
    argument: ""
    description: 'Skip unavailable fragments for DASH, hlsnative and ISM downloads (default) (Alias: --no-abort-on-unavailable-fragment)'
  - names:
      - --abort-on-unavailable-fragment
    argument: ""
    description: 'Abort download if a fragment is unavailable (Alias: --no-skip-unavailable-fragments)'
  - names:
      - --keep-fragments
    argument: ""
    description: Keep downloaded fragments on disk after downloading is finished
  - names:
      - --no-keep-fragments
    argument: ""
    description: Delete downloaded fragments after downloading is finished (default)
  - names:
      - --buffer-size
    argument: SIZE
    description: Size of download buffer, e.g. 1024 or 16K (default is 1024)
  - names:
      - --resize-buffer
    argument: ""
    description: The buffer size is automatically resized from an initial value of --buffer-size (default)
  - names:
      - --no-resize-buffer
    argument: ""
    description: Do not automatically adjust the buffer size
  - names:
      - --http-chunk-size
    argument: SIZE
    description: Size of a chunk for chunk-based HTTP downloading, e.g. 10485760 or 10M (default is disabled). May be useful for bypassing bandwidth throttling imposed by a webserver (experimental)
  - names:
      - --playlist-random
    argument: ""
    description: Download playlist videos in random order
  - names:
      - --lazy-playlist
    argument: ""
    description: Process entries in the playlist as they are received. This disables n_entries, --playlist-random and --playlist-reverse
  - names:
      - --no-lazy-playlist
    argument: ""
    description: Process videos in the playlist only after the entire playlist is parsed (default)
  - names:
      - --xattr-set-filesize
    argument: ""
    description: Set file xattribute ytdl.filesize with expected file size
  - names:
      - --hls-use-mpegts
    argument: ""
    description: Use the mpegts container for HLS videos; allowing some players to play the video while downloading, and reducing the chance of file corruption if download is interrupted. This is enabled by default for live streams
  - names:
      - --no-hls-use-mpegts
    argument: ""
    description: Do not use the mpegts container for HLS videos. This is default when not downloading live streams
  - names:
      - --download-sections
    argument: REGEX
    description: Download only chapters whose title matches the given regular expression. Time ranges prefixed by a "*" can also be used in place of chapters to download the specified range. Needs ffmpeg. This option can be used multiple times to download multiple sections, e.g. --download-sections "*10:15-inf" --download-sections "intro"
  - names:
      - --downloader
    argument: '[PROTO:]NAME'
    description: 'Name or path of the external downloader to use (optionally) prefixed by the protocols (http, ftp, m3u8, dash, rstp, rtmp, mms) to use it for. Currently supports native, aria2c, avconv, axel, curl, ffmpeg, httpie, wget. You can use this option multiple times to set different downloaders for different protocols. E.g. --downloader aria2c --downloader "dash,m3u8:native" will use aria2c for http/ftp downloads, and the native downloader for dash/m3u8 downloads (Alias: --external-downloader)'
  - names:
      - --downloader-args
    argument: NAME:ARGS
    description: 'Give these arguments to the external downloader. Specify the downloader name and the arguments separated by a colon ":". For ffmpeg, arguments can be passed to different positions using the same syntax as --postprocessor-args. You can use this option multiple times to give different arguments to different downloaders (Alias: --external-downloader-args)'
  - names:
      - -a
      - --batch-file
    argument: FILE
    description: File containing URLs to download ("-" for stdin), one URL per line. Lines starting with "#", ";" or "]" are considered as comments and ignored
  - names:
      - --no-batch-file
    argument: ""
    description: Do not read URLs from batch file (default)
  - names:
      - -P
      - --paths
    argument: '[TYPES:]PATH'
    description: The paths where the files should be downloaded. Specify the type of file and the path separated by a colon ":". All the same TYPES as --output are supported. Additionally, you can also provide "home" (default) and "temp" paths. All intermediary files are first downloaded to the temp path and then the final files are moved over to the home path after download is finished. This option is ignored if --output is an absolute path
  - names:
      - -o
      - --output
    argument: '[TYPES:]TEMPLATE'
    description: Output filename template; see "OUTPUT TEMPLATE" for details
  - names:
      - --output-na-placeholder
    argument: TEXT
    description: 'Placeholder for unavailable fields in "OUTPUT TEMPLATE" (default: "NA")'
  - names:
      - --restrict-filenames
    argument: ""
    description: Restrict filenames to only ASCII characters, and avoid "&" and spaces in filenames
  - names:
      - --no-restrict-filenames
    argument: ""
    description: Allow Unicode characters, "&" and spaces in filenames (default)
  - names:
      - --windows-filenames
    argument: ""
    description: Force filenames to be Windows-compatible
  - names:
      - --no-windows-filenames
    argument: ""
    description: Make filenames Windows-compatible only if using Windows (default)
  - names:
      - --trim-filenames
    argument: LENGTH
    description: Limit the filename length (excluding extension) to the specified number of characters
  - names:
      - -w
      - --no-overwrites
    argument: ""
    description: Do not overwrite any files
  - names:
      - --force-overwrites
    argument: ""
    description: Overwrite all video and metadata files. This option includes --no-continue
  - names:
      - --no-force-overwrites
    argument: ""
    description: Do not overwrite the video, but overwrite related files (default)
  - names:
      - -c
      - --continue
    argument: ""
    description: Resume partially downloaded files/fragments (default)
  - names:
      - --no-continue
    argument: ""
    description: Do not resume partially downloaded fragments. If the file is not fragmented, restart download of the entire file
  - names:
      - --part
    argument: ""
    description: Use .part files instead of writing directly into output file (default)
  - names:
      - --no-part
    argument: ""
    description: Do not use .part files - write directly into output file
  - names:
      - --mtime
    argument: ""
    description: Use the Last-modified header to set the file modification time (default)
  - names:
      - --no-mtime
    argument: ""
    description: Do not use the Last-modified header to set the file modification time
  - names:
      - --write-description
    argument: ""
    description: Write video description to a .description file
  - names:
      - --no-write-description
    argument: ""
    description: Do not write video description (default)
  - names:
      - --write-info-json
    argument: ""
    description: Write video metadata to a .info.json file (this may contain personal information)
  - names:
      - --no-write-info-json
    argument: ""
    description: Do not write video metadata (default)
  - names:
      - --write-playlist-metafiles
    argument: ""
    description: Write playlist metadata in addition to the video metadata when using --write-info-json, --write-description etc. (default)
  - names:
      - --no-write-playlist-metafiles
    argument: ""
    description: Do not write playlist metadata when using --write-info-json, --write-description etc.
  - names:
      - --clean-info-json
    argument: ""
    description: Remove some private fields such as filenames from the infojson. Note that it could still contain some personal information (default)
  - names:
      - --no-clean-info-json
    argument: ""
    description: Write all fields to the infojson
  - names:
      - --write-comments
    argument: ""
    description: 'Retrieve video comments to be placed in the infojson. The comments are fetched even without this option if the extraction is known to be quick (Alias: --get-comments)'
  - names:
      - --no-write-comments
    argument: ""
    description: 'Do not retrieve video comments unless the extraction is known to be quick (Alias: --no-get-comments)'
  - names:
      - --load-info-json
    argument: FILE
    description: JSON file containing the video information (created with the "--write-info-json" option)
  - names:
      - --cookies
    argument: FILE
    description: Netscape formatted file to read cookies from and dump cookie jar in
  - names:
      - --no-cookies
    argument: ""
    description: Do not read/dump cookies from/to file (default)
  - names:
      - --cookies-from-browser
    argument: BROWSER[+KEYRING][:PROFILE][::CONTAINER]
    description: 'The name of the browser to load cookies from. Currently supported browsers are: brave, chrome, chromium, edge, firefox, opera, safari, vivaldi. Optionally, the KEYRING used for decrypting Chromium cookies on Linux, the name/path of the PROFILE to load cookies from, and the CONTAINER name (if Firefox) ("none" for no container) can be given with their respective seperators. By default, all containers of the most recently accessed profile are used. Currently supported keyrings are: basictext, gnomekeyring, kwallet'
  - names:
      - --no-cookies-from-browser
    argument: ""
    description: Do not load cookies from browser (default)
  - names:
      - --cache-dir
    argument: DIR
    description: Location in the filesystem where yt-dlp can store some downloaded information (such as client ids and signatures) permanently. By default ${XDG_CACHE_HOME}/yt-dlp
  - names:
      - --no-cache-dir
    argument: ""
    description: Disable filesystem caching
  - names:
      - --rm-cache-dir
    argument: ""
    description: Delete all filesystem cache files
  - names:
      - --write-thumbnail
    argument: ""
    description: Write thumbnail image to disk
  - names:
      - --no-write-thumbnail
    argument: ""
    description: Do not write thumbnail image to disk (default)
  - names:
      - --write-all-thumbnails
    argument: ""
    description: Write all thumbnail image formats to disk
  - names:
      - --list-thumbnails
    argument: ""
    description: List available thumbnails of each video. Simulate unless --no-simulate is used
  - names:
      - --write-link
    argument: ""
    description: Write an internet shortcut file, depending on the current platform (.url, .webloc or .desktop). The URL may be cached by the OS
  - names:
      - --write-url-link
    argument: ""
    description: Write a .url Windows internet shortcut. The OS caches the URL based on the file path
  - names:
      - --write-webloc-link
    argument: ""
    description: Write a .webloc macOS internet shortcut
  - names:
      - --write-desktop-link
    argument: ""
    description: Write a .desktop Linux internet shortcut
  - names:
      - -q
      - --quiet
    argument: ""
    description: Activate quiet mode. If used with --verbose, print the log to stderr
  - names:
      - --no-warnings
    argument: ""
    description: Ignore warnings
  - names:
      - -s
      - --simulate
    argument: ""
    description: Do not download the video and do not write anything to disk
  - names:
      - --no-simulate
    argument: ""
    description: Download the video even if printing/listing options are used
  - names:
      - --ignore-no-formats-error
    argument: ""
    description: Ignore "No video formats" error. Useful for extracting metadata even if the videos are not actually available for download (experimental)
  - names:
      - --no-ignore-no-formats-error
    argument: ""
    description: Throw error when no downloadable video formats are found (default)
  - names:
      - --skip-download
    argument: ""
    description: 'Do not download the video but write all related files (Alias: --no-download)'
  - names:
      - -O
      - --print
    argument: '[WHEN:]TEMPLATE'
    description: Field name or output template to print to screen, optionally prefixed with when to print it, separated by a ":". Supported values of "WHEN" are the same as that of --use-postprocessor, and "video" (default). Implies --quiet. Implies --simulate unless --no-simulate or later stages of WHEN are used. This option can be used multiple times
  - names:
      - --print-to-file
    argument: '[WHEN:]TEMPLATE FILE'
    description: Append given template to the file. The values of WHEN and TEMPLATE are same as that of --print. FILE uses the same syntax as the output template. This option can be used multiple times
  - names:
      - -j
      - --dump-json
    argument: ""
    description: Quiet, but print JSON information for each video. Simulate unless --no-simulate is used. See "OUTPUT TEMPLATE" for a description of available keys
  - names:
      - -J
      - --dump-single-json
    argument: ""
    description: Quiet, but print JSON information for each url or infojson passed. Simulate unless --no-simulate is used. If the URL refers to a playlist, the whole playlist information is dumped in a single line
  - names:
      - --force-write-archive
    argument: ""
    description: 'Force download archive entries to be written as far as no errors occur, even if -s or another simulation option is used (Alias: --force-download-archive)'
  - names:
      - --newline
    argument: ""
    description: Output progress bar as new lines
  - names:
      - --no-progress
    argument: ""
    description: Do not print progress bar
  - names:
      - --progress
    argument: ""
    description: Show progress bar, even if in quiet mode
  - names:
      - --console-title
    argument: ""
    description: Display progress in console titlebar
  - names:
      - --progress-template
    argument: '[TYPES:]TEMPLATE'
    description: Template for progress outputs, optionally prefixed with one of "download:" (default), "download-title:" (the console title), "postprocess:", or "postprocess-title:". The video's fields are accessible under the "info" key and the progress attributes are accessible under "progress" key. E.g. --console-title --progress-template "download-title:%(info.id)s-%(progress.eta)s"
  - names:
      - -v
      - --verbose
    argument: ""
    description: Print various debugging information
  - names:
      - --dump-pages
    argument: ""
    description: Print downloaded pages encoded using base64 to debug problems (very verbose)
  - names:
      - --write-pages
    argument: ""
    description: Write downloaded intermediary pages to files in the current directory to debug problems
  - names:
      - --print-traffic
    argument: ""
    description: Display sent and read HTTP traffic
  - names:
      - --encoding
    argument: ENCODING
    description: Force the specified encoding (experimental)
  - names:
      - --legacy-server-connect
    argument: ""
    description: Explicitly allow HTTPS connection to servers that do not support RFC 5746 secure renegotiation
  - names:
      - --no-check-certificates
    argument: ""
    description: Suppress HTTPS certificate validation
  - names:
      - --prefer-insecure
    argument: ""
    description: Use an unencrypted connection to retrieve information about the video (Currently supported only for YouTube)
  - names:
      - --add-header
    argument: FIELD:VALUE
    description: Specify a custom HTTP header and its value, separated by a colon ":". You can use this option multiple times
  - names:
      - --bidi-workaround
    argument: ""
    description: Work around terminals that lack bidirectional text support. Requires bidiv or fribidi executable in PATH
  - names:
      - --sleep-requests
    argument: SECONDS
    description: Number of seconds to sleep between requests during data extraction
  - names:
      - --sleep-interval
    argument: SECONDS
    description: 'Number of seconds to sleep before each download. This is the minimum time to sleep when used along with --max-sleep-interval (Alias: --min-sleep-interval)'
  - names:
      - --max-sleep-interval
    argument: SECONDS
    description: Maximum number of seconds to sleep. Can only be used along with --min-sleep-interval
  - names:
      - --sleep-subtitles
    argument: SECONDS
    description: Number of seconds to sleep before each subtitle download
  - names:
      - -f
      - --format
    argument: FORMAT
    description: Video format code, see "FORMAT SELECTION" for more details
  - names:
      - -S
      - --format-sort
    argument: SORTORDER
    description: Sort the formats by the fields given, see "Sorting Formats" for more details
  - names:
      - --format-sort-force
    argument: ""
    description: 'Force user specified sort order to have precedence over all fields, see "Sorting Formats" for more details (Alias: --S-force)'
  - names:
      - --no-format-sort-force
    argument: ""
    description: Some fields have precedence over the user specified sort order (default)
  - names:
      - --video-multistreams
    argument: ""
    description: Allow multiple video streams to be merged into a single file
  - names:
      - --no-video-multistreams
    argument: ""
    description: Only one video stream is downloaded for each output file (default)
  - names:
      - --audio-multistreams
    argument: ""
    description: Allow multiple audio streams to be merged into a single file
  - names:
      - --no-audio-multistreams
    argument: ""
    description: Only one audio stream is downloaded for each output file (default)
  - names:
      - --prefer-free-formats
    argument: ""
    description: Prefer video formats with free containers over non-free ones of same quality. Use with "-S ext" to strictly prefer free containers irrespective of quality
  - names:
      - --no-prefer-free-formats
    argument: ""
    description: Don't give any special preference to free containers (default)
  - names:
      - --check-formats
    argument: ""
    description: Make sure formats are selected only from those that are actually downloadable
  - names:
      - --check-all-formats
    argument: ""
    description: Check all formats for whether they are actually downloadable
  - names:
      - --no-check-formats
    argument: ""
    description: Do not check that the formats are actually downloadable
  - names:
      - -F
      - --list-formats
    argument: ""
    description: List available formats of each video. Simulate unless --no-simulate is used
  - names:
      - --merge-output-format
    argument: FORMAT
    description: 'Containers that may be used when merging formats, separated by "/", e.g. "mp4/mkv". Ignored if no merge is required. (currently supported: avi, flv, mkv, mov, mp4, webm)'
  - names:
      - --write-subs
    argument: ""
    description: Write subtitle file
  - names:
      - --no-write-subs
    argument: ""
    description: Do not write subtitle file (default)
  - names:
      - --write-auto-subs
    argument: ""
    description: 'Write automatically generated subtitle file (Alias: --write-automatic-subs)'
  - names:
      - --no-write-auto-subs
    argument: ""
    description: 'Do not write auto-generated subtitles (default) (Alias: --no-write-automatic-subs)'
  - names:
      - --list-subs
    argument: ""
    description: List available subtitles of each video. Simulate unless --no-simulate is used
  - names:
      - --sub-format
    argument: FORMAT
    description: Subtitle format; accepts formats preference, e.g. "srt" or "ass/srt/best"
  - names:
      - --sub-langs
    argument: LANGS
    description: Languages of the subtitles to download (can be regex) or "all" separated by commas, e.g. --sub-langs "en.*,ja". You can prefix the language code with a "-" to exclude it from the requested languages, e.g. --sub-langs all,-live_chat. Use --list-subs for a list of available language tags
  - names:
      - -u
      - --username
    argument: USERNAME
    description: Login with this account ID
  - names:
      - -p
      - --password
    argument: PASSWORD
    description: Account password. If this option is left out, yt-dlp will ask interactively
  - names:
      - "-2"
      - --twofactor
    argument: TWOFACTOR
    description: Two-factor authentication code
  - names:
      - -n
      - --netrc
    argument: ""
    description: Use .netrc authentication data
  - names:
      - --netrc-location
    argument: PATH
    description: Location of .netrc authentication data; either the path or its containing directory. Defaults to ~/.netrc
  - names:
      - --video-password
    argument: PASSWORD
    description: Video password (vimeo, youku)
  - names:
      - --ap-mso
    argument: MSO
    description: Adobe Pass multiple-system operator (TV provider) identifier, use --ap-list-mso for a list of available MSOs
  - names:
      - --ap-username
    argument: USERNAME
    description: Multiple-system operator account login
  - names:
      - --ap-password
    argument: PASSWORD
    description: Multiple-system operator account password. If this option is left out, yt-dlp will ask interactively
  - names:
      - --ap-list-mso
    argument: ""
    description: List all supported multiple-system operators
  - names:
      - --client-certificate
    argument: CERTFILE
    description: Path to client certificate file in PEM format. May include the private key
  - names:
      - --client-certificate-key
    argument: KEYFILE
    description: Path to private key file for client certificate
  - names:
      - --client-certificate-password
    argument: PASSWORD
    description: Password for client certificate private key, if encrypted. If not provided, and the key is encrypted, yt-dlp will ask interactively
  - names:
      - -x
      - --extract-audio
    argument: ""
    description: Convert video files to audio-only files (requires ffmpeg and ffprobe)
  - names:
      - --audio-format
    argument: FORMAT
    description: 'Format to convert the audio to when -x is used. (currently supported: best (default), aac, alac, flac, m4a, mp3, opus, vorbis, wav). You can specify multiple rules using similar syntax as --remux-video'
  - names:
      - --audio-quality
    argument: QUALITY
    description: Specify ffmpeg audio quality to use when converting the audio with -x. Insert a value between 0 (best) and 10 (worst) for VBR or a specific bitrate like 128K (default 5)
  - names:
      - --remux-video
    argument: FORMAT
    description: 'Remux the video into another container if necessary (currently supported: avi, flv, mkv, mov, mp4, webm, aac, aiff, alac, flac, m4a, mka, mp3, ogg, opus, vorbis, wav). If target container does not support the video/audio codec, remuxing will fail. You can specify multiple rules; e.g. "aac>m4a/mov>mp4/mkv" will remux aac to m4a, mov to mp4 and anything else to mkv'
  - names:
      - --recode-video
    argument: FORMAT
    description: Re-encode the video into another format if necessary. The syntax and supported formats are the same as --remux-video
  - names:
      - --postprocessor-args
    argument: NAME:ARGS
    description: 'Give these arguments to the postprocessors. Specify the postprocessor/executable name and the arguments separated by a colon ":" to give the argument to the specified postprocessor/executable. Supported PP are: Merger, ModifyChapters, SplitChapters, ExtractAudio, VideoRemuxer, VideoConvertor, Metadata, EmbedSubtitle, EmbedThumbnail, SubtitlesConvertor, ThumbnailsConvertor, FixupStretched, FixupM4a, FixupM3u8, FixupTimestamp and FixupDuration. The supported executables are: AtomicParsley, FFmpeg and FFprobe. You can also specify "PP+EXE:ARGS" to give the arguments to the specified executable only when being used by the specified postprocessor. Additionally, for ffmpeg/ffprobe, "_i"/"_o" can be appended to the prefix optionally followed by a number to pass the argument before the specified input/output file, e.g. --ppa "Merger+ffmpeg_i1:-v quiet". You can use this option multiple times to give different arguments to different postprocessors. (Alias: --ppa)'
  - names:
      - -k
      - --keep-video
    argument: ""
    description: Keep the intermediate video file on disk after post-processing
  - names:
      - --no-keep-video
    argument: ""
    description: Delete the intermediate video file after post-processing (default)
  - names:
      - --post-overwrites
    argument: ""
    description: Overwrite post-processed files (default)
  - names:
      - --no-post-overwrites
    argument: ""
    description: Do not overwrite post-processed files
  - names:
      - --embed-subs
    argument: ""
    description: Embed subtitles in the video (only for mp4, webm and mkv videos)
  - names:
      - --no-embed-subs
    argument: ""
    description: Do not embed subtitles (default)
  - names:
      - --embed-thumbnail
    argument: ""
    description: Embed thumbnail in the video as cover art
  - names:
      - --no-embed-thumbnail
    argument: ""
    description: Do not embed thumbnail (default)
  - names:
      - --embed-metadata
    argument: ""
    description: 'Embed metadata to the video file. Also embeds chapters/infojson if present unless --no-embed-chapters/--no-embed-info-json are used (Alias: --add-metadata)'
  - names:
      - --no-embed-metadata
    argument: ""
    description: 'Do not add metadata to file (default) (Alias: --no-add-metadata)'
  - names:
      - --embed-chapters
    argument: ""
    description: 'Add chapter markers to the video file (Alias: --add-chapters)'
  - names:
      - --no-embed-chapters
    argument: ""
    description: 'Do not add chapter markers (default) (Alias: --no-add-chapters)'
  - names:
      - --embed-info-json
    argument: ""
    description: Embed the infojson as an attachment to mkv/mka video files
  - names:
      - --no-embed-info-json
    argument: ""
    description: Do not embed the infojson as an attachment to the video file
  - names:
      - --parse-metadata
    argument: FROM:TO
    description: Parse additional metadata like title/artist from other fields; see "MODIFYING METADATA" for details
  - names:
      - --replace-in-metadata
    argument: FIELDS REGEX REPLACE
    description: Replace text in a metadata field using the given regex. This option can be used multiple times
  - names:
      - --xattrs
    argument: ""
    description: Write metadata to the video file's xattrs (using dublin core and xdg standards)
  - names:
      - --concat-playlist
    argument: POLICY
    description: Concatenate videos in a playlist. One of "never", "always", or "multi_video" (default; only when the videos form a single show). All the video files must have same codecs and number of streams to be concatable. The "pl_video:" prefix can be used with "--paths" and "--output" to set the output filename for the concatenated files. See "OUTPUT TEMPLATE" for details
  - names:
      - --fixup
    argument: POLICY
    description: Automatically correct known faults of the file. One of never (do nothing), warn (only emit a warning), detect_or_warn (the default; fix file if we can, warn otherwise), force (try fixing even if file already exists)
  - names:
      - --ffmpeg-location
    argument: PATH
    description: Location of the ffmpeg binary; either the path to the binary or its containing directory
  - names:
      - --exec
    argument: '[WHEN:]CMD'
    description: Execute a command, optionally prefixed with when to execute it (after_move if unspecified), separated by a ":". Supported values of "WHEN" are the same as that of --use-postprocessor. Same syntax as the output template can be used to pass any field as arguments to the command. After download, an additional field "filepath" that contains the final path of the downloaded file is also available, and if no fields are passed, %(filepath)q is appended to the end of the command. This option can be used multiple times
  - names:
      - --no-exec
    argument: ""
    description: Remove any previously defined --exec
  - names:
      - --convert-subs
    argument: FORMAT
    description: 'Convert the subtitles to another format (currently supported: ass, lrc, srt, vtt) (Alias: --convert-subtitles)'
  - names:
      - --convert-thumbnails
    argument: FORMAT
    description: 'Convert the thumbnails to another format (currently supported: jpg, png, webp). You can specify multiple rules using similar syntax as --remux-video'
  - names:
      - --split-chapters
    argument: ""
    description: Split video into multiple files based on internal chapters. The "chapter:" prefix can be used with "--paths" and "--output" to set the output filename for the split files. See "OUTPUT TEMPLATE" for details
  - names:
      - --no-split-chapters
    argument: ""
    description: Do not split video based on chapters (default)
  - names:
      - --remove-chapters
    argument: REGEX
    description: Remove chapters whose title matches the given regular expression. The syntax is the same as --download-sections. This option can be used multiple times
  - names:
      - --no-remove-chapters
    argument: ""
    description: Do not remove any chapters from the file (default)
  - names:
      - --force-keyframes-at-cuts
    argument: ""
    description: Force keyframes at cuts when downloading/splitting/removing sections. This is slow due to needing a re-encode, but the resulting video may have fewer artifacts around the cuts
  - names:
      - --no-force-keyframes-at-cuts
    argument: ""
    description: Do not force keyframes around the chapters when cutting/splitting (default)
  - names:
      - --use-postprocessor
    argument: NAME[:ARGS]
    description: The (case sensitive) name of plugin postprocessors to be enabled, and (optionally) arguments to be passed to it, separated by a colon ":". ARGS are a semicolon ";" delimited list of NAME=VALUE. The "when" argument determines when the postprocessor is invoked. It can be one of "pre_process" (after video extraction), "after_filter" (after video passes filter), "before_dl" (before each video download), "post_process" (after each video download; default), "after_move" (after moving video file to it's final locations), "after_video" (after downloading and processing all formats of a video), or "playlist" (at end of playlist). This option can be used multiple times to add different postprocessors
  - names:
      - --sponsorblock-mark
    argument: CATS
    description: SponsorBlock categories to create chapters for, separated by commas. Available categories are sponsor, intro, outro, selfpromo, preview, filler, interaction, music_offtopic, poi_highlight, chapter, all and default (=all). You can prefix the category with a "-" to exclude it. See [1] for description of the categories. E.g. --sponsorblock-mark all,-preview [1] https://wiki.sponsor.ajay.app/w/Segment_Categories
  - names:
      - --sponsorblock-remove
    argument: CATS
    description: SponsorBlock categories to be removed from the video file, separated by commas. If a category is present in both mark and remove, remove takes precedence. The syntax and available categories are the same as for --sponsorblock-mark except that "default" refers to "all,-filler" and poi_highlight, chapter are not available
  - names:
      - --sponsorblock-chapter-title
    argument: TEMPLATE
    description: 'An output template for the title of the SponsorBlock chapters created by --sponsorblock-mark. The only available fields are start_time, end_time, category, categories, name, category_names. Defaults to "[SponsorBlock]: %(category_names)l"'
  - names:
      - --no-sponsorblock
    argument: ""
    description: Disable both --sponsorblock-mark and --sponsorblock-remove
  - names:
      - --sponsorblock-api
    argument: URL
    description: SponsorBlock API location, defaults to https://sponsor.ajay.app
  - names:
      - --extractor-retries
    argument: RETRIES
    description: Number of retries for known extractor errors (default is 3), or "infinite"
  - names:
      - --allow-dynamic-mpd
    argument: ""
    description: 'Process dynamic DASH manifests (default) (Alias: --no-ignore-dynamic-mpd)'
  - names:
      - --ignore-dynamic-mpd
    argument: ""
    description: 'Do not process dynamic DASH manifests (Alias: --no-allow-dynamic-mpd)'
  - names:
      - --hls-split-discontinuity
    argument: ""
    description: Split HLS playlists to different formats at discontinuities such as ad breaks
  - names:
      - --no-hls-split-discontinuity
    argument: ""
    description: Do not split HLS playlists to different formats at discontinuities such as ad breaks (default)
  - names:
      - --extractor-args
    argument: IE_KEY:ARGS
    description: Pass ARGS arguments to the IE_KEY extractor. See "EXTRACTOR ARGUMENTS" for details. You can use this option multiple times to give arguments for different extractors
version: 2022.11.11
tldr: |
  > A youtube-dl fork with additional features and fixes.
  > Download videos from YouTube and other websites.
  > More information: <https://github.com/yt-dlp/yt-dlp>.

  - Download a video or playlist (with the default options from command below):

  `yt-dlp "{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}"`

  - Download a video with a defined format, in this case the best mp4 video available (default is "bv\*+ba/b"):

  `yt-dlp --format "{{bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4]}}" "{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}"`

  - Extract audio from videos (required ffmpeg or ffprobe):

  `yt-dlp --extract-audio "{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}"`

  - Specify audio format of extracted audio (the default is "best"):

  `yt-dlp --extract-audio --audio-format {{mp3}} "{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}"`

  - Specify audio quality of extracted audio (between 0 (best) and 10 (worst), default = 5):

  `yt-dlp --extract-audio --audio-format {{mp3}} --audio-quality {{0}} "{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}"`

  - Download all playlists of YouTube channel/user keeping each playlist in separate directory:

  `yt-dlp -o "{{%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s}}" "{{https://www.youtube.com/user/TheLinuxFoundation/playlists}}"`

  - Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home:

  `yt-dlp -u {{user}} -p {{password}} -P "{{~/MyVideos}}" -o "{{%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s}}" "{{https://www.udemy.com/java-tutorial}}"`

  - Download entire series season keeping each series and each season in separate directory under C:/MyVideos:

  `yt-dlp -P "{{C:/MyVideos}}" -o "{{%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s}}" "{{https://videomore.ru/kino_v_detalayah/5_sezon/367617}}"`
