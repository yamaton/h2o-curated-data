name: zig
description: zig
usage: zig [command] [options]
options:
  - names:
      - -h
      - --help
    argument: ""
    description: Print command-specific usage
subcommands:
  - name: build
    description: Build project from build.zig
    usage: ""
    options: []
  - name: init-exe
    description: Initialize a `zig build` application in the cwd
    usage: |-
      zig init-exe
      zig init-lib
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
  - name: init-lib
    description: Initialize a `zig build` library in the cwd
    usage: |-
      zig init-exe
      zig init-lib
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
  - name: ast-check
    description: Look for simple compile errors in any set of files
    usage: zig ast-check [file]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --color
        argument: ""
        description: Enable or disable colored error messages
      - names:
          - --color
        argument: auto|off|on
        description: Enable or disable colored error messages
      - names:
          - -t
        argument: ""
        description: (debug option) Output ZIR in text form to stdout
  - name: build-exe
    description: Create executable from source or object files
    usage: |-
      zig build-exe   [options] [files]
      zig build-lib   [options] [files]
      zig build-obj   [options] [files]
      zig test        [options] [files]
      zig run         [options] [files] [-- [args]]
      zig translate-c [options] [file]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --watch
        argument: ""
        description: Enable compiler REPL
      - names:
          - --color
        argument: '[auto|off|on]'
        description: Enable or disable colored error messages
      - names:
          - -femit-bin
        argument: '[=path]'
        description: (default) Output machine code
      - names:
          - -fno-emit-bin
        argument: ""
        description: Do not output machine code
      - names:
          - -femit-asm
        argument: '[=path]'
        description: Output .s (assembly code)
      - names:
          - -fno-emit-asm
        argument: ""
        description: (default) Do not output .s (assembly code)
      - names:
          - -femit-llvm-ir
        argument: '[=path]'
        description: Produce a .ll file with LLVM IR (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-ir
        argument: ""
        description: (default) Do not produce a .ll file with LLVM IR
      - names:
          - -femit-llvm-bc
        argument: '[=path]'
        description: Produce a LLVM module as a .bc file (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-bc
        argument: ""
        description: (default) Do not produce a LLVM module as a .bc file
      - names:
          - -femit-h
        argument: '[=path]'
        description: Generate a C header file (.h)
      - names:
          - -fno-emit-h
        argument: ""
        description: (default) Do not generate a C header file (.h)
      - names:
          - -femit-docs
        argument: '[=path]'
        description: Create a docs/ dir with html documentation
      - names:
          - -fno-emit-docs
        argument: ""
        description: (default) Do not produce docs/ dir with html documentation
      - names:
          - -femit-analysis
        argument: '[=path]'
        description: Write analysis JSON file with type information
      - names:
          - -fno-emit-analysis
        argument: ""
        description: (default) Do not write analysis JSON file with type information
      - names:
          - -femit-implib
        argument: '[=path]'
        description: (default) Produce an import .lib when building a Windows DLL
      - names:
          - -fno-emit-implib
        argument: ""
        description: Do not produce an import .lib when building a Windows DLL
      - names:
          - --show-builtin
        argument: ""
        description: Output the source of @import("builtin") then exit
      - names:
          - --cache-dir
        argument: '[path]'
        description: Override the local cache directory
      - names:
          - --global-cache-dir
        argument: '[path]'
        description: Override the global cache directory
      - names:
          - --zig-lib-dir
        argument: '[path]'
        description: Override path to Zig installation lib directory
      - names:
          - --enable-cache
        argument: ""
        description: Output to cache directory; print path to stdout
      - names:
          - -target
        argument: ""
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -target
        argument: name
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -mcpu
        argument: ""
        description: Specify target CPU and feature set
      - names:
          - -m
        argument: cpu
        description: Specify target CPU and feature set
      - names:
          - -mred-zone
        argument: ""
        description: Force-enable the "red-zone"
      - names:
          - -mno-red-zone
        argument: ""
        description: Force-disable the "red-zone"
      - names:
          - -fomit-frame-pointer
        argument: ""
        description: Omit the stack frame pointer
      - names:
          - -fno-omit-frame-pointer
        argument: ""
        description: Store the stack frame pointer
      - names:
          - -mexec-model
        argument: ""
        description: (WASI) Execution model
      - names:
          - -mexec-model
        argument: value
        description: (WASI) Execution model
      - names:
          - --name
        argument: ""
        description: Override root name (not a file path)
      - names:
          - --name
        argument: name
        description: Override root name (not a file path)
      - names:
          - -O
        argument: ""
        description: Choose what to optimize for
      - names:
          - -O
        argument: mode
        description: Choose what to optimize for
      - names:
          - --pkg-begin
        argument: ""
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-begin
        argument: name
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-end
        argument: ""
        description: Pop current pkg
      - names:
          - --main-pkg-path
        argument: ""
        description: Set the directory of the root package
      - names:
          - -fPIC
        argument: ""
        description: Force-enable Position Independent Code
      - names:
          - -fno-PIC
        argument: ""
        description: Force-disable Position Independent Code
      - names:
          - -fPIE
        argument: ""
        description: Force-enable Position Independent Executable
      - names:
          - -fno-PIE
        argument: ""
        description: Force-disable Position Independent Executable
      - names:
          - -flto
        argument: ""
        description: Force-enable Link Time Optimization (requires LLVM extensions)
      - names:
          - -fno-lto
        argument: ""
        description: Force-disable Link Time Optimization
      - names:
          - -fstack-check
        argument: ""
        description: Enable stack probing in unsafe builds
      - names:
          - -fno-stack-check
        argument: ""
        description: Disable stack probing in safe builds
      - names:
          - -fstack-protector
        argument: ""
        description: Enable stack protection in unsafe builds
      - names:
          - -fno-stack-protector
        argument: ""
        description: Disable stack protection in safe builds
      - names:
          - -fsanitize-c
        argument: ""
        description: Enable C undefined behavior detection in unsafe builds
      - names:
          - -fno-sanitize-c
        argument: ""
        description: Disable C undefined behavior detection in safe builds
      - names:
          - -fvalgrind
        argument: ""
        description: Include valgrind client requests in release builds
      - names:
          - -fno-valgrind
        argument: ""
        description: Omit valgrind client requests in debug builds
      - names:
          - -fsanitize-thread
        argument: ""
        description: Enable Thread Sanitizer
      - names:
          - -fno-sanitize-thread
        argument: ""
        description: Disable Thread Sanitizer
      - names:
          - -fdll-export-fns
        argument: ""
        description: Mark exported functions as DLL exports (Windows)
      - names:
          - -fno-dll-export-fns
        argument: ""
        description: Force-disable marking exported functions as DLL exports
      - names:
          - -funwind-tables
        argument: ""
        description: Always produce unwind table entries for all functions
      - names:
          - -fno-unwind-tables
        argument: ""
        description: Never produce unwind table entries
      - names:
          - -fLLVM
        argument: ""
        description: Force using LLVM as the codegen backend
      - names:
          - -fno-LLVM
        argument: ""
        description: Prevent using LLVM as the codegen backend
      - names:
          - -fClang
        argument: ""
        description: Force using Clang as the C/C++ compilation backend
      - names:
          - -fno-Clang
        argument: ""
        description: Prevent using Clang as the C/C++ compilation backend
      - names:
          - -freference-trace
        argument: ""
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -freference-trace
        argument: num
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -fno-reference-trace
        argument: ""
        description: Disable reference trace
      - names:
          - -fsingle-threaded
        argument: ""
        description: Code assumes there is only one thread
      - names:
          - -fno-single-threaded
        argument: ""
        description: Code may not assume there is only one thread
      - names:
          - -fbuiltin
        argument: ""
        description: Enable implicit builtin knowledge of functions
      - names:
          - -fno-builtin
        argument: ""
        description: Disable implicit builtin knowledge of functions
      - names:
          - -ffunction-sections
        argument: ""
        description: Places each function in a separate section
      - names:
          - -fno-function-sections
        argument: ""
        description: All functions go into same section
      - names:
          - -fstrip
        argument: ""
        description: Omit debug symbols
      - names:
          - -fno-strip
        argument: ""
        description: Keep debug symbols
      - names:
          - -fformatted-panics
        argument: ""
        description: Enable formatted safety panics
      - names:
          - -fno-formatted-panics
        argument: ""
        description: Disable formatted safety panics
      - names:
          - -ofmt
        argument: ""
        description: Override target object format
      - names:
          - -ofmt
        argument: mode
        description: Override target object format
      - names:
          - -idirafter
        argument: ""
        description: Add directory to AFTER include search path
      - names:
          - -idirafter
        argument: dir
        description: Add directory to AFTER include search path
      - names:
          - -isystem
        argument: ""
        description: '[dir] Add directory to SYSTEM include search path'
      - names:
          - -I
        argument: ""
        description: Add directory to include search path
      - names:
          - -Idir
        argument: ""
        description: Add directory to include search path
      - names:
          - --libc
        argument: ""
        description: Provide a file which specifies libc paths
      - names:
          - --libc
        argument: file
        description: Provide a file which specifies libc paths
      - names:
          - -cflags
          - --
        argument: ""
        description: Set extra flags for the next positional C source files
      - names:
          - -c
          - --
        argument: flags
        description: Set extra flags for the next positional C source files
      - names:
          - --needed-library
        argument: lib
        description: -L[d], --library-directory [d] Add a directory to the library search path
      - names:
          - --version-script
        argument: ""
        description: Provide a version .map file
      - names:
          - --version-script
        argument: path
        description: Provide a version .map file
      - names:
          - --dynamic-linker
        argument: ""
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --dynamic-linker
        argument: path
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --sysroot
        argument: ""
        description: Set the system root directory (usually /)
      - names:
          - --sysroot
        argument: path
        description: Set the system root directory (usually /)
      - names:
          - --version
        argument: ""
        description: Dynamic library semver
      - names:
          - --version
        argument: ver
        description: Dynamic library semver
      - names:
          - --entry
        argument: ""
        description: Set the entrypoint symbol name
      - names:
          - --entry
        argument: name
        description: Set the entrypoint symbol name
      - names:
          - -fsoname
        argument: ""
        description: Override the default SONAME value
      - names:
          - -fsoname
        argument: name
        description: Override the default SONAME value
      - names:
          - -fno-soname
        argument: ""
        description: Disable emitting a SONAME
      - names:
          - -fLLD
        argument: ""
        description: Force using LLD as the linker
      - names:
          - -fno-LLD
        argument: ""
        description: Prevent using LLD as the linker
      - names:
          - -fcompiler-rt
        argument: ""
        description: Always include compiler-rt symbols in output
      - names:
          - -fno-compiler-rt
        argument: ""
        description: Prevent including compiler-rt symbols in output
      - names:
          - -rdynamic
        argument: ""
        description: Add all symbols to the dynamic symbol table
      - names:
          - -rpath
        argument: ""
        description: Add directory to the runtime library search path
      - names:
          - -r
        argument: path
        description: Add directory to the runtime library search path
      - names:
          - -feach-lib-rpath
        argument: ""
        description: Ensure adding rpath for each used dynamic library
      - names:
          - -fno-each-lib-rpath
        argument: ""
        description: Prevent adding rpath for each used dynamic library
      - names:
          - -fallow-shlib-undefined
        argument: ""
        description: Allows undefined symbols in shared libraries
      - names:
          - -fno-allow-shlib-undefined
        argument: ""
        description: Disallows undefined symbols in shared libraries
      - names:
          - -fbuild-id
        argument: ""
        description: Helps coordinate stripped binaries with debug symbols
      - names:
          - -fno-build-id
        argument: ""
        description: (default) Saves a bit of time linking
      - names:
          - --eh-frame-hdr
        argument: ""
        description: Enable C++ exception handling by passing --eh-frame-hdr to linker
      - names:
          - --emit-relocs
        argument: ""
        description: Enable output of relocation sections for post build tools
      - names:
          - -z
        argument: ""
        description: Set linker extension flags
      - names:
          - -z
        argument: arg
        description: Set linker extension flags
      - names:
          - -dynamic
        argument: ""
        description: Force output to be dynamically linked
      - names:
          - -static
        argument: ""
        description: Force output to be statically linked
      - names:
          - -Bsymbolic
        argument: ""
        description: Bind global references locally
      - names:
          - --compress-debug-sections
        argument: ""
        description: Debug section compression settings
      - names:
          - --compress-debug-sections
        argument: e
        description: Debug section compression settings
      - names:
          - --gc-sections
        argument: ""
        description: Force removal of functions and data that are unreachable by the entry point or exported symbols
      - names:
          - --no-gc-sections
        argument: ""
        description: Don't force removal of unreachable functions and data
      - names:
          - --subsystem
        argument: ""
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --subsystem
        argument: subsystem
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --stack
        argument: ""
        description: Override default stack size
      - names:
          - --stack
        argument: size
        description: Override default stack size
      - names:
          - --image-base
        argument: ""
        description: Set base address for executable image
      - names:
          - --image-base
        argument: addr
        description: Set base address for executable image
      - names:
          - -weak-l
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak-llib
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak_library
        argument: lib
        description: -framework [name] (Darwin) link against framework
      - names:
          - -needed_framework
        argument: ""
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_framework
        argument: name
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_library
        argument: ""
        description: (Darwin) link against system library (even if unused)
      - names:
          - -needed_library
        argument: lib
        description: (Darwin) link against system library (even if unused)
      - names:
          - -weak_framework
        argument: ""
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -weak_framework
        argument: name
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -F
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -Fdir
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -install_name
        argument: ""
        description: (Darwin) add dylib's install name
      - names:
          - -install_name
        argument: value
        description: (Darwin) add dylib's install name
      - names:
          - --entitlements
        argument: ""
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - --entitlements
        argument: path
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - -pagezero_size
        argument: ""
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -pagezero_size
        argument: value
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -search_paths_first
        argument: ""
        description: (Darwin) search each dir in library search paths for `libx.dylib` then `libx.a`
      - names:
          - -search_dylibs_first
        argument: ""
        description: (Darwin) search `libx.dylib` in each dir in library search paths, then `libx.a`
      - names:
          - -headerpad
        argument: value
        description: (Darwin) set minimum space for future expansion of the load commands in hexadecimal notation
      - names:
          - -headerpad_max_install_names
        argument: ""
        description: (Darwin) set enough space as if all paths were MAXPATHLEN
      - names:
          - -dead_strip
        argument: ""
        description: (Darwin) remove functions and data that are unreachable by the entry point or exported symbols
      - names:
          - -dead_strip_dylibs
        argument: ""
        description: (Darwin) remove dylibs that are unreachable by the entry point or exported symbols
      - names:
          - --import-memory
        argument: ""
        description: (WebAssembly) import memory from the environment
      - names:
          - --import-table
        argument: ""
        description: (WebAssembly) import function table from the host environment
      - names:
          - --export-table
        argument: ""
        description: (WebAssembly) export function table to the host environment
      - names:
          - --initial-memory
        argument: ""
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --initial-memory
        argument: bytes
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --max-memory
        argument: ""
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --max-memory
        argument: bytes
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --shared-memory
        argument: ""
        description: (WebAssembly) use shared linear memory
      - names:
          - --global-base
        argument: ""
        description: (WebAssembly) where to start to place global data
      - names:
          - --global-base
        argument: addr
        description: (WebAssembly) where to start to place global data
      - names:
          - --export
        argument: ""
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --export
        argument: value
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --test-filter
        argument: '[text]'
        description: Skip tests that do not match filter
      - names:
          - --test-name-prefix
        argument: '[text]'
        description: Add prefix to all tests
      - names:
          - --test-cmd
        argument: '[arg]'
        description: Specify test execution command one arg at a time
      - names:
          - --test-cmd-bin
        argument: ""
        description: Appends test binary path to test cmd args
      - names:
          - --test-evented-io
        argument: ""
        description: Runs the test in evented I/O mode
      - names:
          - --test-no-exec
        argument: ""
        description: Compiles test binary without running it
      - names:
          - --test-runner
        argument: '[path]'
        description: Specify a custom test runner
      - names:
          - -ftime-report
        argument: ""
        description: Print timing diagnostics
      - names:
          - -fstack-report
        argument: ""
        description: Print stack size diagnostics
      - names:
          - --verbose-link
        argument: ""
        description: Display linker invocations
      - names:
          - --verbose-cc
        argument: ""
        description: Display C compiler invocations
      - names:
          - --verbose-air
        argument: ""
        description: Enable compiler debug output for Zig AIR
      - names:
          - --verbose-llvm-ir
        argument: ""
        description: Enable compiler debug output for LLVM IR
      - names:
          - --verbose-cimport
        argument: ""
        description: Enable compiler debug output for C imports
      - names:
          - --verbose-llvm-cpu-features
        argument: ""
        description: Enable compiler debug output for LLVM CPU features
      - names:
          - --debug-log
        argument: '[scope]'
        description: Enable printing debug/info log messages for scope
      - names:
          - --debug-compile-errors
        argument: ""
        description: Crash with helpful diagnostics at the first compile error
      - names:
          - --debug-link-snapshot
        argument: ""
        description: Enable dumping of the linker's state in JSON format
  - name: build-lib
    description: Create library from source or object files
    usage: |-
      zig build-exe   [options] [files]
      zig build-lib   [options] [files]
      zig build-obj   [options] [files]
      zig test        [options] [files]
      zig run         [options] [files] [-- [args]]
      zig translate-c [options] [file]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --watch
        argument: ""
        description: Enable compiler REPL
      - names:
          - --color
        argument: '[auto|off|on]'
        description: Enable or disable colored error messages
      - names:
          - -femit-bin
        argument: '[=path]'
        description: (default) Output machine code
      - names:
          - -fno-emit-bin
        argument: ""
        description: Do not output machine code
      - names:
          - -femit-asm
        argument: '[=path]'
        description: Output .s (assembly code)
      - names:
          - -fno-emit-asm
        argument: ""
        description: (default) Do not output .s (assembly code)
      - names:
          - -femit-llvm-ir
        argument: '[=path]'
        description: Produce a .ll file with LLVM IR (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-ir
        argument: ""
        description: (default) Do not produce a .ll file with LLVM IR
      - names:
          - -femit-llvm-bc
        argument: '[=path]'
        description: Produce a LLVM module as a .bc file (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-bc
        argument: ""
        description: (default) Do not produce a LLVM module as a .bc file
      - names:
          - -femit-h
        argument: '[=path]'
        description: Generate a C header file (.h)
      - names:
          - -fno-emit-h
        argument: ""
        description: (default) Do not generate a C header file (.h)
      - names:
          - -femit-docs
        argument: '[=path]'
        description: Create a docs/ dir with html documentation
      - names:
          - -fno-emit-docs
        argument: ""
        description: (default) Do not produce docs/ dir with html documentation
      - names:
          - -femit-analysis
        argument: '[=path]'
        description: Write analysis JSON file with type information
      - names:
          - -fno-emit-analysis
        argument: ""
        description: (default) Do not write analysis JSON file with type information
      - names:
          - -femit-implib
        argument: '[=path]'
        description: (default) Produce an import .lib when building a Windows DLL
      - names:
          - -fno-emit-implib
        argument: ""
        description: Do not produce an import .lib when building a Windows DLL
      - names:
          - --show-builtin
        argument: ""
        description: Output the source of @import("builtin") then exit
      - names:
          - --cache-dir
        argument: '[path]'
        description: Override the local cache directory
      - names:
          - --global-cache-dir
        argument: '[path]'
        description: Override the global cache directory
      - names:
          - --zig-lib-dir
        argument: '[path]'
        description: Override path to Zig installation lib directory
      - names:
          - --enable-cache
        argument: ""
        description: Output to cache directory; print path to stdout
      - names:
          - -target
        argument: ""
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -target
        argument: name
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -mcpu
        argument: ""
        description: Specify target CPU and feature set
      - names:
          - -m
        argument: cpu
        description: Specify target CPU and feature set
      - names:
          - -mred-zone
        argument: ""
        description: Force-enable the "red-zone"
      - names:
          - -mno-red-zone
        argument: ""
        description: Force-disable the "red-zone"
      - names:
          - -fomit-frame-pointer
        argument: ""
        description: Omit the stack frame pointer
      - names:
          - -fno-omit-frame-pointer
        argument: ""
        description: Store the stack frame pointer
      - names:
          - -mexec-model
        argument: ""
        description: (WASI) Execution model
      - names:
          - -mexec-model
        argument: value
        description: (WASI) Execution model
      - names:
          - --name
        argument: ""
        description: Override root name (not a file path)
      - names:
          - --name
        argument: name
        description: Override root name (not a file path)
      - names:
          - -O
        argument: ""
        description: Choose what to optimize for
      - names:
          - -O
        argument: mode
        description: Choose what to optimize for
      - names:
          - --pkg-begin
        argument: ""
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-begin
        argument: name
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-end
        argument: ""
        description: Pop current pkg
      - names:
          - --main-pkg-path
        argument: ""
        description: Set the directory of the root package
      - names:
          - -fPIC
        argument: ""
        description: Force-enable Position Independent Code
      - names:
          - -fno-PIC
        argument: ""
        description: Force-disable Position Independent Code
      - names:
          - -fPIE
        argument: ""
        description: Force-enable Position Independent Executable
      - names:
          - -fno-PIE
        argument: ""
        description: Force-disable Position Independent Executable
      - names:
          - -flto
        argument: ""
        description: Force-enable Link Time Optimization (requires LLVM extensions)
      - names:
          - -fno-lto
        argument: ""
        description: Force-disable Link Time Optimization
      - names:
          - -fstack-check
        argument: ""
        description: Enable stack probing in unsafe builds
      - names:
          - -fno-stack-check
        argument: ""
        description: Disable stack probing in safe builds
      - names:
          - -fstack-protector
        argument: ""
        description: Enable stack protection in unsafe builds
      - names:
          - -fno-stack-protector
        argument: ""
        description: Disable stack protection in safe builds
      - names:
          - -fsanitize-c
        argument: ""
        description: Enable C undefined behavior detection in unsafe builds
      - names:
          - -fno-sanitize-c
        argument: ""
        description: Disable C undefined behavior detection in safe builds
      - names:
          - -fvalgrind
        argument: ""
        description: Include valgrind client requests in release builds
      - names:
          - -fno-valgrind
        argument: ""
        description: Omit valgrind client requests in debug builds
      - names:
          - -fsanitize-thread
        argument: ""
        description: Enable Thread Sanitizer
      - names:
          - -fno-sanitize-thread
        argument: ""
        description: Disable Thread Sanitizer
      - names:
          - -fdll-export-fns
        argument: ""
        description: Mark exported functions as DLL exports (Windows)
      - names:
          - -fno-dll-export-fns
        argument: ""
        description: Force-disable marking exported functions as DLL exports
      - names:
          - -funwind-tables
        argument: ""
        description: Always produce unwind table entries for all functions
      - names:
          - -fno-unwind-tables
        argument: ""
        description: Never produce unwind table entries
      - names:
          - -fLLVM
        argument: ""
        description: Force using LLVM as the codegen backend
      - names:
          - -fno-LLVM
        argument: ""
        description: Prevent using LLVM as the codegen backend
      - names:
          - -fClang
        argument: ""
        description: Force using Clang as the C/C++ compilation backend
      - names:
          - -fno-Clang
        argument: ""
        description: Prevent using Clang as the C/C++ compilation backend
      - names:
          - -freference-trace
        argument: ""
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -freference-trace
        argument: num
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -fno-reference-trace
        argument: ""
        description: Disable reference trace
      - names:
          - -fsingle-threaded
        argument: ""
        description: Code assumes there is only one thread
      - names:
          - -fno-single-threaded
        argument: ""
        description: Code may not assume there is only one thread
      - names:
          - -fbuiltin
        argument: ""
        description: Enable implicit builtin knowledge of functions
      - names:
          - -fno-builtin
        argument: ""
        description: Disable implicit builtin knowledge of functions
      - names:
          - -ffunction-sections
        argument: ""
        description: Places each function in a separate section
      - names:
          - -fno-function-sections
        argument: ""
        description: All functions go into same section
      - names:
          - -fstrip
        argument: ""
        description: Omit debug symbols
      - names:
          - -fno-strip
        argument: ""
        description: Keep debug symbols
      - names:
          - -fformatted-panics
        argument: ""
        description: Enable formatted safety panics
      - names:
          - -fno-formatted-panics
        argument: ""
        description: Disable formatted safety panics
      - names:
          - -ofmt
        argument: ""
        description: Override target object format
      - names:
          - -ofmt
        argument: mode
        description: Override target object format
      - names:
          - -idirafter
        argument: ""
        description: Add directory to AFTER include search path
      - names:
          - -idirafter
        argument: dir
        description: Add directory to AFTER include search path
      - names:
          - -isystem
        argument: ""
        description: '[dir] Add directory to SYSTEM include search path'
      - names:
          - -I
        argument: ""
        description: Add directory to include search path
      - names:
          - -Idir
        argument: ""
        description: Add directory to include search path
      - names:
          - --libc
        argument: ""
        description: Provide a file which specifies libc paths
      - names:
          - --libc
        argument: file
        description: Provide a file which specifies libc paths
      - names:
          - -cflags
          - --
        argument: ""
        description: Set extra flags for the next positional C source files
      - names:
          - -c
          - --
        argument: flags
        description: Set extra flags for the next positional C source files
      - names:
          - --needed-library
        argument: lib
        description: -L[d], --library-directory [d] Add a directory to the library search path
      - names:
          - --version-script
        argument: ""
        description: Provide a version .map file
      - names:
          - --version-script
        argument: path
        description: Provide a version .map file
      - names:
          - --dynamic-linker
        argument: ""
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --dynamic-linker
        argument: path
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --sysroot
        argument: ""
        description: Set the system root directory (usually /)
      - names:
          - --sysroot
        argument: path
        description: Set the system root directory (usually /)
      - names:
          - --version
        argument: ""
        description: Dynamic library semver
      - names:
          - --version
        argument: ver
        description: Dynamic library semver
      - names:
          - --entry
        argument: ""
        description: Set the entrypoint symbol name
      - names:
          - --entry
        argument: name
        description: Set the entrypoint symbol name
      - names:
          - -fsoname
        argument: ""
        description: Override the default SONAME value
      - names:
          - -fsoname
        argument: name
        description: Override the default SONAME value
      - names:
          - -fno-soname
        argument: ""
        description: Disable emitting a SONAME
      - names:
          - -fLLD
        argument: ""
        description: Force using LLD as the linker
      - names:
          - -fno-LLD
        argument: ""
        description: Prevent using LLD as the linker
      - names:
          - -fcompiler-rt
        argument: ""
        description: Always include compiler-rt symbols in output
      - names:
          - -fno-compiler-rt
        argument: ""
        description: Prevent including compiler-rt symbols in output
      - names:
          - -rdynamic
        argument: ""
        description: Add all symbols to the dynamic symbol table
      - names:
          - -rpath
        argument: ""
        description: Add directory to the runtime library search path
      - names:
          - -r
        argument: path
        description: Add directory to the runtime library search path
      - names:
          - -feach-lib-rpath
        argument: ""
        description: Ensure adding rpath for each used dynamic library
      - names:
          - -fno-each-lib-rpath
        argument: ""
        description: Prevent adding rpath for each used dynamic library
      - names:
          - -fallow-shlib-undefined
        argument: ""
        description: Allows undefined symbols in shared libraries
      - names:
          - -fno-allow-shlib-undefined
        argument: ""
        description: Disallows undefined symbols in shared libraries
      - names:
          - -fbuild-id
        argument: ""
        description: Helps coordinate stripped binaries with debug symbols
      - names:
          - -fno-build-id
        argument: ""
        description: (default) Saves a bit of time linking
      - names:
          - --eh-frame-hdr
        argument: ""
        description: Enable C++ exception handling by passing --eh-frame-hdr to linker
      - names:
          - --emit-relocs
        argument: ""
        description: Enable output of relocation sections for post build tools
      - names:
          - -z
        argument: ""
        description: Set linker extension flags
      - names:
          - -z
        argument: arg
        description: Set linker extension flags
      - names:
          - -dynamic
        argument: ""
        description: Force output to be dynamically linked
      - names:
          - -static
        argument: ""
        description: Force output to be statically linked
      - names:
          - -Bsymbolic
        argument: ""
        description: Bind global references locally
      - names:
          - --compress-debug-sections
        argument: ""
        description: Debug section compression settings
      - names:
          - --compress-debug-sections
        argument: e
        description: Debug section compression settings
      - names:
          - --gc-sections
        argument: ""
        description: Force removal of functions and data that are unreachable by the entry point or exported symbols
      - names:
          - --no-gc-sections
        argument: ""
        description: Don't force removal of unreachable functions and data
      - names:
          - --subsystem
        argument: ""
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --subsystem
        argument: subsystem
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --stack
        argument: ""
        description: Override default stack size
      - names:
          - --stack
        argument: size
        description: Override default stack size
      - names:
          - --image-base
        argument: ""
        description: Set base address for executable image
      - names:
          - --image-base
        argument: addr
        description: Set base address for executable image
      - names:
          - -weak-l
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak-llib
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak_library
        argument: lib
        description: -framework [name] (Darwin) link against framework
      - names:
          - -needed_framework
        argument: ""
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_framework
        argument: name
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_library
        argument: ""
        description: (Darwin) link against system library (even if unused)
      - names:
          - -needed_library
        argument: lib
        description: (Darwin) link against system library (even if unused)
      - names:
          - -weak_framework
        argument: ""
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -weak_framework
        argument: name
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -F
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -Fdir
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -install_name
        argument: ""
        description: (Darwin) add dylib's install name
      - names:
          - -install_name
        argument: value
        description: (Darwin) add dylib's install name
      - names:
          - --entitlements
        argument: ""
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - --entitlements
        argument: path
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - -pagezero_size
        argument: ""
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -pagezero_size
        argument: value
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -search_paths_first
        argument: ""
        description: (Darwin) search each dir in library search paths for `libx.dylib` then `libx.a`
      - names:
          - -search_dylibs_first
        argument: ""
        description: (Darwin) search `libx.dylib` in each dir in library search paths, then `libx.a`
      - names:
          - -headerpad
        argument: value
        description: (Darwin) set minimum space for future expansion of the load commands in hexadecimal notation
      - names:
          - -headerpad_max_install_names
        argument: ""
        description: (Darwin) set enough space as if all paths were MAXPATHLEN
      - names:
          - -dead_strip
        argument: ""
        description: (Darwin) remove functions and data that are unreachable by the entry point or exported symbols
      - names:
          - -dead_strip_dylibs
        argument: ""
        description: (Darwin) remove dylibs that are unreachable by the entry point or exported symbols
      - names:
          - --import-memory
        argument: ""
        description: (WebAssembly) import memory from the environment
      - names:
          - --import-table
        argument: ""
        description: (WebAssembly) import function table from the host environment
      - names:
          - --export-table
        argument: ""
        description: (WebAssembly) export function table to the host environment
      - names:
          - --initial-memory
        argument: ""
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --initial-memory
        argument: bytes
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --max-memory
        argument: ""
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --max-memory
        argument: bytes
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --shared-memory
        argument: ""
        description: (WebAssembly) use shared linear memory
      - names:
          - --global-base
        argument: ""
        description: (WebAssembly) where to start to place global data
      - names:
          - --global-base
        argument: addr
        description: (WebAssembly) where to start to place global data
      - names:
          - --export
        argument: ""
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --export
        argument: value
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --test-filter
        argument: '[text]'
        description: Skip tests that do not match filter
      - names:
          - --test-name-prefix
        argument: '[text]'
        description: Add prefix to all tests
      - names:
          - --test-cmd
        argument: '[arg]'
        description: Specify test execution command one arg at a time
      - names:
          - --test-cmd-bin
        argument: ""
        description: Appends test binary path to test cmd args
      - names:
          - --test-evented-io
        argument: ""
        description: Runs the test in evented I/O mode
      - names:
          - --test-no-exec
        argument: ""
        description: Compiles test binary without running it
      - names:
          - --test-runner
        argument: '[path]'
        description: Specify a custom test runner
      - names:
          - -ftime-report
        argument: ""
        description: Print timing diagnostics
      - names:
          - -fstack-report
        argument: ""
        description: Print stack size diagnostics
      - names:
          - --verbose-link
        argument: ""
        description: Display linker invocations
      - names:
          - --verbose-cc
        argument: ""
        description: Display C compiler invocations
      - names:
          - --verbose-air
        argument: ""
        description: Enable compiler debug output for Zig AIR
      - names:
          - --verbose-llvm-ir
        argument: ""
        description: Enable compiler debug output for LLVM IR
      - names:
          - --verbose-cimport
        argument: ""
        description: Enable compiler debug output for C imports
      - names:
          - --verbose-llvm-cpu-features
        argument: ""
        description: Enable compiler debug output for LLVM CPU features
      - names:
          - --debug-log
        argument: '[scope]'
        description: Enable printing debug/info log messages for scope
      - names:
          - --debug-compile-errors
        argument: ""
        description: Crash with helpful diagnostics at the first compile error
      - names:
          - --debug-link-snapshot
        argument: ""
        description: Enable dumping of the linker's state in JSON format
  - name: build-obj
    description: Create object from source or object files
    usage: |-
      zig build-exe   [options] [files]
      zig build-lib   [options] [files]
      zig build-obj   [options] [files]
      zig test        [options] [files]
      zig run         [options] [files] [-- [args]]
      zig translate-c [options] [file]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --watch
        argument: ""
        description: Enable compiler REPL
      - names:
          - --color
        argument: '[auto|off|on]'
        description: Enable or disable colored error messages
      - names:
          - -femit-bin
        argument: '[=path]'
        description: (default) Output machine code
      - names:
          - -fno-emit-bin
        argument: ""
        description: Do not output machine code
      - names:
          - -femit-asm
        argument: '[=path]'
        description: Output .s (assembly code)
      - names:
          - -fno-emit-asm
        argument: ""
        description: (default) Do not output .s (assembly code)
      - names:
          - -femit-llvm-ir
        argument: '[=path]'
        description: Produce a .ll file with LLVM IR (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-ir
        argument: ""
        description: (default) Do not produce a .ll file with LLVM IR
      - names:
          - -femit-llvm-bc
        argument: '[=path]'
        description: Produce a LLVM module as a .bc file (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-bc
        argument: ""
        description: (default) Do not produce a LLVM module as a .bc file
      - names:
          - -femit-h
        argument: '[=path]'
        description: Generate a C header file (.h)
      - names:
          - -fno-emit-h
        argument: ""
        description: (default) Do not generate a C header file (.h)
      - names:
          - -femit-docs
        argument: '[=path]'
        description: Create a docs/ dir with html documentation
      - names:
          - -fno-emit-docs
        argument: ""
        description: (default) Do not produce docs/ dir with html documentation
      - names:
          - -femit-analysis
        argument: '[=path]'
        description: Write analysis JSON file with type information
      - names:
          - -fno-emit-analysis
        argument: ""
        description: (default) Do not write analysis JSON file with type information
      - names:
          - -femit-implib
        argument: '[=path]'
        description: (default) Produce an import .lib when building a Windows DLL
      - names:
          - -fno-emit-implib
        argument: ""
        description: Do not produce an import .lib when building a Windows DLL
      - names:
          - --show-builtin
        argument: ""
        description: Output the source of @import("builtin") then exit
      - names:
          - --cache-dir
        argument: '[path]'
        description: Override the local cache directory
      - names:
          - --global-cache-dir
        argument: '[path]'
        description: Override the global cache directory
      - names:
          - --zig-lib-dir
        argument: '[path]'
        description: Override path to Zig installation lib directory
      - names:
          - --enable-cache
        argument: ""
        description: Output to cache directory; print path to stdout
      - names:
          - -target
        argument: ""
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -target
        argument: name
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -mcpu
        argument: ""
        description: Specify target CPU and feature set
      - names:
          - -m
        argument: cpu
        description: Specify target CPU and feature set
      - names:
          - -mred-zone
        argument: ""
        description: Force-enable the "red-zone"
      - names:
          - -mno-red-zone
        argument: ""
        description: Force-disable the "red-zone"
      - names:
          - -fomit-frame-pointer
        argument: ""
        description: Omit the stack frame pointer
      - names:
          - -fno-omit-frame-pointer
        argument: ""
        description: Store the stack frame pointer
      - names:
          - -mexec-model
        argument: ""
        description: (WASI) Execution model
      - names:
          - -mexec-model
        argument: value
        description: (WASI) Execution model
      - names:
          - --name
        argument: ""
        description: Override root name (not a file path)
      - names:
          - --name
        argument: name
        description: Override root name (not a file path)
      - names:
          - -O
        argument: ""
        description: Choose what to optimize for
      - names:
          - -O
        argument: mode
        description: Choose what to optimize for
      - names:
          - --pkg-begin
        argument: ""
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-begin
        argument: name
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-end
        argument: ""
        description: Pop current pkg
      - names:
          - --main-pkg-path
        argument: ""
        description: Set the directory of the root package
      - names:
          - -fPIC
        argument: ""
        description: Force-enable Position Independent Code
      - names:
          - -fno-PIC
        argument: ""
        description: Force-disable Position Independent Code
      - names:
          - -fPIE
        argument: ""
        description: Force-enable Position Independent Executable
      - names:
          - -fno-PIE
        argument: ""
        description: Force-disable Position Independent Executable
      - names:
          - -flto
        argument: ""
        description: Force-enable Link Time Optimization (requires LLVM extensions)
      - names:
          - -fno-lto
        argument: ""
        description: Force-disable Link Time Optimization
      - names:
          - -fstack-check
        argument: ""
        description: Enable stack probing in unsafe builds
      - names:
          - -fno-stack-check
        argument: ""
        description: Disable stack probing in safe builds
      - names:
          - -fstack-protector
        argument: ""
        description: Enable stack protection in unsafe builds
      - names:
          - -fno-stack-protector
        argument: ""
        description: Disable stack protection in safe builds
      - names:
          - -fsanitize-c
        argument: ""
        description: Enable C undefined behavior detection in unsafe builds
      - names:
          - -fno-sanitize-c
        argument: ""
        description: Disable C undefined behavior detection in safe builds
      - names:
          - -fvalgrind
        argument: ""
        description: Include valgrind client requests in release builds
      - names:
          - -fno-valgrind
        argument: ""
        description: Omit valgrind client requests in debug builds
      - names:
          - -fsanitize-thread
        argument: ""
        description: Enable Thread Sanitizer
      - names:
          - -fno-sanitize-thread
        argument: ""
        description: Disable Thread Sanitizer
      - names:
          - -fdll-export-fns
        argument: ""
        description: Mark exported functions as DLL exports (Windows)
      - names:
          - -fno-dll-export-fns
        argument: ""
        description: Force-disable marking exported functions as DLL exports
      - names:
          - -funwind-tables
        argument: ""
        description: Always produce unwind table entries for all functions
      - names:
          - -fno-unwind-tables
        argument: ""
        description: Never produce unwind table entries
      - names:
          - -fLLVM
        argument: ""
        description: Force using LLVM as the codegen backend
      - names:
          - -fno-LLVM
        argument: ""
        description: Prevent using LLVM as the codegen backend
      - names:
          - -fClang
        argument: ""
        description: Force using Clang as the C/C++ compilation backend
      - names:
          - -fno-Clang
        argument: ""
        description: Prevent using Clang as the C/C++ compilation backend
      - names:
          - -freference-trace
        argument: ""
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -freference-trace
        argument: num
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -fno-reference-trace
        argument: ""
        description: Disable reference trace
      - names:
          - -fsingle-threaded
        argument: ""
        description: Code assumes there is only one thread
      - names:
          - -fno-single-threaded
        argument: ""
        description: Code may not assume there is only one thread
      - names:
          - -fbuiltin
        argument: ""
        description: Enable implicit builtin knowledge of functions
      - names:
          - -fno-builtin
        argument: ""
        description: Disable implicit builtin knowledge of functions
      - names:
          - -ffunction-sections
        argument: ""
        description: Places each function in a separate section
      - names:
          - -fno-function-sections
        argument: ""
        description: All functions go into same section
      - names:
          - -fstrip
        argument: ""
        description: Omit debug symbols
      - names:
          - -fno-strip
        argument: ""
        description: Keep debug symbols
      - names:
          - -fformatted-panics
        argument: ""
        description: Enable formatted safety panics
      - names:
          - -fno-formatted-panics
        argument: ""
        description: Disable formatted safety panics
      - names:
          - -ofmt
        argument: ""
        description: Override target object format
      - names:
          - -ofmt
        argument: mode
        description: Override target object format
      - names:
          - -idirafter
        argument: ""
        description: Add directory to AFTER include search path
      - names:
          - -idirafter
        argument: dir
        description: Add directory to AFTER include search path
      - names:
          - -isystem
        argument: ""
        description: '[dir] Add directory to SYSTEM include search path'
      - names:
          - -I
        argument: ""
        description: Add directory to include search path
      - names:
          - -Idir
        argument: ""
        description: Add directory to include search path
      - names:
          - --libc
        argument: ""
        description: Provide a file which specifies libc paths
      - names:
          - --libc
        argument: file
        description: Provide a file which specifies libc paths
      - names:
          - -cflags
          - --
        argument: ""
        description: Set extra flags for the next positional C source files
      - names:
          - -c
          - --
        argument: flags
        description: Set extra flags for the next positional C source files
      - names:
          - --needed-library
        argument: lib
        description: -L[d], --library-directory [d] Add a directory to the library search path
      - names:
          - --version-script
        argument: ""
        description: Provide a version .map file
      - names:
          - --version-script
        argument: path
        description: Provide a version .map file
      - names:
          - --dynamic-linker
        argument: ""
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --dynamic-linker
        argument: path
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --sysroot
        argument: ""
        description: Set the system root directory (usually /)
      - names:
          - --sysroot
        argument: path
        description: Set the system root directory (usually /)
      - names:
          - --version
        argument: ""
        description: Dynamic library semver
      - names:
          - --version
        argument: ver
        description: Dynamic library semver
      - names:
          - --entry
        argument: ""
        description: Set the entrypoint symbol name
      - names:
          - --entry
        argument: name
        description: Set the entrypoint symbol name
      - names:
          - -fsoname
        argument: ""
        description: Override the default SONAME value
      - names:
          - -fsoname
        argument: name
        description: Override the default SONAME value
      - names:
          - -fno-soname
        argument: ""
        description: Disable emitting a SONAME
      - names:
          - -fLLD
        argument: ""
        description: Force using LLD as the linker
      - names:
          - -fno-LLD
        argument: ""
        description: Prevent using LLD as the linker
      - names:
          - -fcompiler-rt
        argument: ""
        description: Always include compiler-rt symbols in output
      - names:
          - -fno-compiler-rt
        argument: ""
        description: Prevent including compiler-rt symbols in output
      - names:
          - -rdynamic
        argument: ""
        description: Add all symbols to the dynamic symbol table
      - names:
          - -rpath
        argument: ""
        description: Add directory to the runtime library search path
      - names:
          - -r
        argument: path
        description: Add directory to the runtime library search path
      - names:
          - -feach-lib-rpath
        argument: ""
        description: Ensure adding rpath for each used dynamic library
      - names:
          - -fno-each-lib-rpath
        argument: ""
        description: Prevent adding rpath for each used dynamic library
      - names:
          - -fallow-shlib-undefined
        argument: ""
        description: Allows undefined symbols in shared libraries
      - names:
          - -fno-allow-shlib-undefined
        argument: ""
        description: Disallows undefined symbols in shared libraries
      - names:
          - -fbuild-id
        argument: ""
        description: Helps coordinate stripped binaries with debug symbols
      - names:
          - -fno-build-id
        argument: ""
        description: (default) Saves a bit of time linking
      - names:
          - --eh-frame-hdr
        argument: ""
        description: Enable C++ exception handling by passing --eh-frame-hdr to linker
      - names:
          - --emit-relocs
        argument: ""
        description: Enable output of relocation sections for post build tools
      - names:
          - -z
        argument: ""
        description: Set linker extension flags
      - names:
          - -z
        argument: arg
        description: Set linker extension flags
      - names:
          - -dynamic
        argument: ""
        description: Force output to be dynamically linked
      - names:
          - -static
        argument: ""
        description: Force output to be statically linked
      - names:
          - -Bsymbolic
        argument: ""
        description: Bind global references locally
      - names:
          - --compress-debug-sections
        argument: ""
        description: Debug section compression settings
      - names:
          - --compress-debug-sections
        argument: e
        description: Debug section compression settings
      - names:
          - --gc-sections
        argument: ""
        description: Force removal of functions and data that are unreachable by the entry point or exported symbols
      - names:
          - --no-gc-sections
        argument: ""
        description: Don't force removal of unreachable functions and data
      - names:
          - --subsystem
        argument: ""
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --subsystem
        argument: subsystem
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --stack
        argument: ""
        description: Override default stack size
      - names:
          - --stack
        argument: size
        description: Override default stack size
      - names:
          - --image-base
        argument: ""
        description: Set base address for executable image
      - names:
          - --image-base
        argument: addr
        description: Set base address for executable image
      - names:
          - -weak-l
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak-llib
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak_library
        argument: lib
        description: -framework [name] (Darwin) link against framework
      - names:
          - -needed_framework
        argument: ""
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_framework
        argument: name
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_library
        argument: ""
        description: (Darwin) link against system library (even if unused)
      - names:
          - -needed_library
        argument: lib
        description: (Darwin) link against system library (even if unused)
      - names:
          - -weak_framework
        argument: ""
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -weak_framework
        argument: name
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -F
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -Fdir
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -install_name
        argument: ""
        description: (Darwin) add dylib's install name
      - names:
          - -install_name
        argument: value
        description: (Darwin) add dylib's install name
      - names:
          - --entitlements
        argument: ""
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - --entitlements
        argument: path
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - -pagezero_size
        argument: ""
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -pagezero_size
        argument: value
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -search_paths_first
        argument: ""
        description: (Darwin) search each dir in library search paths for `libx.dylib` then `libx.a`
      - names:
          - -search_dylibs_first
        argument: ""
        description: (Darwin) search `libx.dylib` in each dir in library search paths, then `libx.a`
      - names:
          - -headerpad
        argument: value
        description: (Darwin) set minimum space for future expansion of the load commands in hexadecimal notation
      - names:
          - -headerpad_max_install_names
        argument: ""
        description: (Darwin) set enough space as if all paths were MAXPATHLEN
      - names:
          - -dead_strip
        argument: ""
        description: (Darwin) remove functions and data that are unreachable by the entry point or exported symbols
      - names:
          - -dead_strip_dylibs
        argument: ""
        description: (Darwin) remove dylibs that are unreachable by the entry point or exported symbols
      - names:
          - --import-memory
        argument: ""
        description: (WebAssembly) import memory from the environment
      - names:
          - --import-table
        argument: ""
        description: (WebAssembly) import function table from the host environment
      - names:
          - --export-table
        argument: ""
        description: (WebAssembly) export function table to the host environment
      - names:
          - --initial-memory
        argument: ""
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --initial-memory
        argument: bytes
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --max-memory
        argument: ""
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --max-memory
        argument: bytes
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --shared-memory
        argument: ""
        description: (WebAssembly) use shared linear memory
      - names:
          - --global-base
        argument: ""
        description: (WebAssembly) where to start to place global data
      - names:
          - --global-base
        argument: addr
        description: (WebAssembly) where to start to place global data
      - names:
          - --export
        argument: ""
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --export
        argument: value
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --test-filter
        argument: '[text]'
        description: Skip tests that do not match filter
      - names:
          - --test-name-prefix
        argument: '[text]'
        description: Add prefix to all tests
      - names:
          - --test-cmd
        argument: '[arg]'
        description: Specify test execution command one arg at a time
      - names:
          - --test-cmd-bin
        argument: ""
        description: Appends test binary path to test cmd args
      - names:
          - --test-evented-io
        argument: ""
        description: Runs the test in evented I/O mode
      - names:
          - --test-no-exec
        argument: ""
        description: Compiles test binary without running it
      - names:
          - --test-runner
        argument: '[path]'
        description: Specify a custom test runner
      - names:
          - -ftime-report
        argument: ""
        description: Print timing diagnostics
      - names:
          - -fstack-report
        argument: ""
        description: Print stack size diagnostics
      - names:
          - --verbose-link
        argument: ""
        description: Display linker invocations
      - names:
          - --verbose-cc
        argument: ""
        description: Display C compiler invocations
      - names:
          - --verbose-air
        argument: ""
        description: Enable compiler debug output for Zig AIR
      - names:
          - --verbose-llvm-ir
        argument: ""
        description: Enable compiler debug output for LLVM IR
      - names:
          - --verbose-cimport
        argument: ""
        description: Enable compiler debug output for C imports
      - names:
          - --verbose-llvm-cpu-features
        argument: ""
        description: Enable compiler debug output for LLVM CPU features
      - names:
          - --debug-log
        argument: '[scope]'
        description: Enable printing debug/info log messages for scope
      - names:
          - --debug-compile-errors
        argument: ""
        description: Crash with helpful diagnostics at the first compile error
      - names:
          - --debug-link-snapshot
        argument: ""
        description: Enable dumping of the linker's state in JSON format
  - name: fmt
    description: Reformat Zig source into canonical form
    usage: zig fmt [file]...
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --color
        argument: '[auto|off|on]'
        description: Enable or disable colored error messages
      - names:
          - --stdin
        argument: ""
        description: Format code from stdin; output to stdout
      - names:
          - --check
        argument: ""
        description: List non-conforming files and exit with an error if the list is non-empty
      - names:
          - --ast-check
        argument: ""
        description: Run zig ast-check on every file
      - names:
          - --exclude
        argument: '[file]'
        description: Exclude file or directory from formatting
  - name: run
    description: Create executable and run immediately
    usage: |-
      zig build-exe   [options] [files]
      zig build-lib   [options] [files]
      zig build-obj   [options] [files]
      zig test        [options] [files]
      zig run         [options] [files] [-- [args]]
      zig translate-c [options] [file]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --watch
        argument: ""
        description: Enable compiler REPL
      - names:
          - --color
        argument: '[auto|off|on]'
        description: Enable or disable colored error messages
      - names:
          - -femit-bin
        argument: '[=path]'
        description: (default) Output machine code
      - names:
          - -fno-emit-bin
        argument: ""
        description: Do not output machine code
      - names:
          - -femit-asm
        argument: '[=path]'
        description: Output .s (assembly code)
      - names:
          - -fno-emit-asm
        argument: ""
        description: (default) Do not output .s (assembly code)
      - names:
          - -femit-llvm-ir
        argument: '[=path]'
        description: Produce a .ll file with LLVM IR (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-ir
        argument: ""
        description: (default) Do not produce a .ll file with LLVM IR
      - names:
          - -femit-llvm-bc
        argument: '[=path]'
        description: Produce a LLVM module as a .bc file (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-bc
        argument: ""
        description: (default) Do not produce a LLVM module as a .bc file
      - names:
          - -femit-h
        argument: '[=path]'
        description: Generate a C header file (.h)
      - names:
          - -fno-emit-h
        argument: ""
        description: (default) Do not generate a C header file (.h)
      - names:
          - -femit-docs
        argument: '[=path]'
        description: Create a docs/ dir with html documentation
      - names:
          - -fno-emit-docs
        argument: ""
        description: (default) Do not produce docs/ dir with html documentation
      - names:
          - -femit-analysis
        argument: '[=path]'
        description: Write analysis JSON file with type information
      - names:
          - -fno-emit-analysis
        argument: ""
        description: (default) Do not write analysis JSON file with type information
      - names:
          - -femit-implib
        argument: '[=path]'
        description: (default) Produce an import .lib when building a Windows DLL
      - names:
          - -fno-emit-implib
        argument: ""
        description: Do not produce an import .lib when building a Windows DLL
      - names:
          - --show-builtin
        argument: ""
        description: Output the source of @import("builtin") then exit
      - names:
          - --cache-dir
        argument: '[path]'
        description: Override the local cache directory
      - names:
          - --global-cache-dir
        argument: '[path]'
        description: Override the global cache directory
      - names:
          - --zig-lib-dir
        argument: '[path]'
        description: Override path to Zig installation lib directory
      - names:
          - --enable-cache
        argument: ""
        description: Output to cache directory; print path to stdout
      - names:
          - -target
        argument: ""
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -target
        argument: name
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -mcpu
        argument: ""
        description: Specify target CPU and feature set
      - names:
          - -m
        argument: cpu
        description: Specify target CPU and feature set
      - names:
          - -mred-zone
        argument: ""
        description: Force-enable the "red-zone"
      - names:
          - -mno-red-zone
        argument: ""
        description: Force-disable the "red-zone"
      - names:
          - -fomit-frame-pointer
        argument: ""
        description: Omit the stack frame pointer
      - names:
          - -fno-omit-frame-pointer
        argument: ""
        description: Store the stack frame pointer
      - names:
          - -mexec-model
        argument: ""
        description: (WASI) Execution model
      - names:
          - -mexec-model
        argument: value
        description: (WASI) Execution model
      - names:
          - --name
        argument: ""
        description: Override root name (not a file path)
      - names:
          - --name
        argument: name
        description: Override root name (not a file path)
      - names:
          - -O
        argument: ""
        description: Choose what to optimize for
      - names:
          - -O
        argument: mode
        description: Choose what to optimize for
      - names:
          - --pkg-begin
        argument: ""
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-begin
        argument: name
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-end
        argument: ""
        description: Pop current pkg
      - names:
          - --main-pkg-path
        argument: ""
        description: Set the directory of the root package
      - names:
          - -fPIC
        argument: ""
        description: Force-enable Position Independent Code
      - names:
          - -fno-PIC
        argument: ""
        description: Force-disable Position Independent Code
      - names:
          - -fPIE
        argument: ""
        description: Force-enable Position Independent Executable
      - names:
          - -fno-PIE
        argument: ""
        description: Force-disable Position Independent Executable
      - names:
          - -flto
        argument: ""
        description: Force-enable Link Time Optimization (requires LLVM extensions)
      - names:
          - -fno-lto
        argument: ""
        description: Force-disable Link Time Optimization
      - names:
          - -fstack-check
        argument: ""
        description: Enable stack probing in unsafe builds
      - names:
          - -fno-stack-check
        argument: ""
        description: Disable stack probing in safe builds
      - names:
          - -fstack-protector
        argument: ""
        description: Enable stack protection in unsafe builds
      - names:
          - -fno-stack-protector
        argument: ""
        description: Disable stack protection in safe builds
      - names:
          - -fsanitize-c
        argument: ""
        description: Enable C undefined behavior detection in unsafe builds
      - names:
          - -fno-sanitize-c
        argument: ""
        description: Disable C undefined behavior detection in safe builds
      - names:
          - -fvalgrind
        argument: ""
        description: Include valgrind client requests in release builds
      - names:
          - -fno-valgrind
        argument: ""
        description: Omit valgrind client requests in debug builds
      - names:
          - -fsanitize-thread
        argument: ""
        description: Enable Thread Sanitizer
      - names:
          - -fno-sanitize-thread
        argument: ""
        description: Disable Thread Sanitizer
      - names:
          - -fdll-export-fns
        argument: ""
        description: Mark exported functions as DLL exports (Windows)
      - names:
          - -fno-dll-export-fns
        argument: ""
        description: Force-disable marking exported functions as DLL exports
      - names:
          - -funwind-tables
        argument: ""
        description: Always produce unwind table entries for all functions
      - names:
          - -fno-unwind-tables
        argument: ""
        description: Never produce unwind table entries
      - names:
          - -fLLVM
        argument: ""
        description: Force using LLVM as the codegen backend
      - names:
          - -fno-LLVM
        argument: ""
        description: Prevent using LLVM as the codegen backend
      - names:
          - -fClang
        argument: ""
        description: Force using Clang as the C/C++ compilation backend
      - names:
          - -fno-Clang
        argument: ""
        description: Prevent using Clang as the C/C++ compilation backend
      - names:
          - -freference-trace
        argument: ""
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -freference-trace
        argument: num
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -fno-reference-trace
        argument: ""
        description: Disable reference trace
      - names:
          - -fsingle-threaded
        argument: ""
        description: Code assumes there is only one thread
      - names:
          - -fno-single-threaded
        argument: ""
        description: Code may not assume there is only one thread
      - names:
          - -fbuiltin
        argument: ""
        description: Enable implicit builtin knowledge of functions
      - names:
          - -fno-builtin
        argument: ""
        description: Disable implicit builtin knowledge of functions
      - names:
          - -ffunction-sections
        argument: ""
        description: Places each function in a separate section
      - names:
          - -fno-function-sections
        argument: ""
        description: All functions go into same section
      - names:
          - -fstrip
        argument: ""
        description: Omit debug symbols
      - names:
          - -fno-strip
        argument: ""
        description: Keep debug symbols
      - names:
          - -fformatted-panics
        argument: ""
        description: Enable formatted safety panics
      - names:
          - -fno-formatted-panics
        argument: ""
        description: Disable formatted safety panics
      - names:
          - -ofmt
        argument: ""
        description: Override target object format
      - names:
          - -ofmt
        argument: mode
        description: Override target object format
      - names:
          - -idirafter
        argument: ""
        description: Add directory to AFTER include search path
      - names:
          - -idirafter
        argument: dir
        description: Add directory to AFTER include search path
      - names:
          - -isystem
        argument: ""
        description: '[dir] Add directory to SYSTEM include search path'
      - names:
          - -I
        argument: ""
        description: Add directory to include search path
      - names:
          - -Idir
        argument: ""
        description: Add directory to include search path
      - names:
          - --libc
        argument: ""
        description: Provide a file which specifies libc paths
      - names:
          - --libc
        argument: file
        description: Provide a file which specifies libc paths
      - names:
          - -cflags
          - --
        argument: ""
        description: Set extra flags for the next positional C source files
      - names:
          - -c
          - --
        argument: flags
        description: Set extra flags for the next positional C source files
      - names:
          - --needed-library
        argument: lib
        description: -L[d], --library-directory [d] Add a directory to the library search path
      - names:
          - --version-script
        argument: ""
        description: Provide a version .map file
      - names:
          - --version-script
        argument: path
        description: Provide a version .map file
      - names:
          - --dynamic-linker
        argument: ""
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --dynamic-linker
        argument: path
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --sysroot
        argument: ""
        description: Set the system root directory (usually /)
      - names:
          - --sysroot
        argument: path
        description: Set the system root directory (usually /)
      - names:
          - --version
        argument: ""
        description: Dynamic library semver
      - names:
          - --version
        argument: ver
        description: Dynamic library semver
      - names:
          - --entry
        argument: ""
        description: Set the entrypoint symbol name
      - names:
          - --entry
        argument: name
        description: Set the entrypoint symbol name
      - names:
          - -fsoname
        argument: ""
        description: Override the default SONAME value
      - names:
          - -fsoname
        argument: name
        description: Override the default SONAME value
      - names:
          - -fno-soname
        argument: ""
        description: Disable emitting a SONAME
      - names:
          - -fLLD
        argument: ""
        description: Force using LLD as the linker
      - names:
          - -fno-LLD
        argument: ""
        description: Prevent using LLD as the linker
      - names:
          - -fcompiler-rt
        argument: ""
        description: Always include compiler-rt symbols in output
      - names:
          - -fno-compiler-rt
        argument: ""
        description: Prevent including compiler-rt symbols in output
      - names:
          - -rdynamic
        argument: ""
        description: Add all symbols to the dynamic symbol table
      - names:
          - -rpath
        argument: ""
        description: Add directory to the runtime library search path
      - names:
          - -r
        argument: path
        description: Add directory to the runtime library search path
      - names:
          - -feach-lib-rpath
        argument: ""
        description: Ensure adding rpath for each used dynamic library
      - names:
          - -fno-each-lib-rpath
        argument: ""
        description: Prevent adding rpath for each used dynamic library
      - names:
          - -fallow-shlib-undefined
        argument: ""
        description: Allows undefined symbols in shared libraries
      - names:
          - -fno-allow-shlib-undefined
        argument: ""
        description: Disallows undefined symbols in shared libraries
      - names:
          - -fbuild-id
        argument: ""
        description: Helps coordinate stripped binaries with debug symbols
      - names:
          - -fno-build-id
        argument: ""
        description: (default) Saves a bit of time linking
      - names:
          - --eh-frame-hdr
        argument: ""
        description: Enable C++ exception handling by passing --eh-frame-hdr to linker
      - names:
          - --emit-relocs
        argument: ""
        description: Enable output of relocation sections for post build tools
      - names:
          - -z
        argument: ""
        description: Set linker extension flags
      - names:
          - -z
        argument: arg
        description: Set linker extension flags
      - names:
          - -dynamic
        argument: ""
        description: Force output to be dynamically linked
      - names:
          - -static
        argument: ""
        description: Force output to be statically linked
      - names:
          - -Bsymbolic
        argument: ""
        description: Bind global references locally
      - names:
          - --compress-debug-sections
        argument: ""
        description: Debug section compression settings
      - names:
          - --compress-debug-sections
        argument: e
        description: Debug section compression settings
      - names:
          - --gc-sections
        argument: ""
        description: Force removal of functions and data that are unreachable by the entry point or exported symbols
      - names:
          - --no-gc-sections
        argument: ""
        description: Don't force removal of unreachable functions and data
      - names:
          - --subsystem
        argument: ""
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --subsystem
        argument: subsystem
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --stack
        argument: ""
        description: Override default stack size
      - names:
          - --stack
        argument: size
        description: Override default stack size
      - names:
          - --image-base
        argument: ""
        description: Set base address for executable image
      - names:
          - --image-base
        argument: addr
        description: Set base address for executable image
      - names:
          - -weak-l
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak-llib
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak_library
        argument: lib
        description: -framework [name] (Darwin) link against framework
      - names:
          - -needed_framework
        argument: ""
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_framework
        argument: name
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_library
        argument: ""
        description: (Darwin) link against system library (even if unused)
      - names:
          - -needed_library
        argument: lib
        description: (Darwin) link against system library (even if unused)
      - names:
          - -weak_framework
        argument: ""
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -weak_framework
        argument: name
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -F
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -Fdir
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -install_name
        argument: ""
        description: (Darwin) add dylib's install name
      - names:
          - -install_name
        argument: value
        description: (Darwin) add dylib's install name
      - names:
          - --entitlements
        argument: ""
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - --entitlements
        argument: path
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - -pagezero_size
        argument: ""
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -pagezero_size
        argument: value
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -search_paths_first
        argument: ""
        description: (Darwin) search each dir in library search paths for `libx.dylib` then `libx.a`
      - names:
          - -search_dylibs_first
        argument: ""
        description: (Darwin) search `libx.dylib` in each dir in library search paths, then `libx.a`
      - names:
          - -headerpad
        argument: value
        description: (Darwin) set minimum space for future expansion of the load commands in hexadecimal notation
      - names:
          - -headerpad_max_install_names
        argument: ""
        description: (Darwin) set enough space as if all paths were MAXPATHLEN
      - names:
          - -dead_strip
        argument: ""
        description: (Darwin) remove functions and data that are unreachable by the entry point or exported symbols
      - names:
          - -dead_strip_dylibs
        argument: ""
        description: (Darwin) remove dylibs that are unreachable by the entry point or exported symbols
      - names:
          - --import-memory
        argument: ""
        description: (WebAssembly) import memory from the environment
      - names:
          - --import-table
        argument: ""
        description: (WebAssembly) import function table from the host environment
      - names:
          - --export-table
        argument: ""
        description: (WebAssembly) export function table to the host environment
      - names:
          - --initial-memory
        argument: ""
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --initial-memory
        argument: bytes
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --max-memory
        argument: ""
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --max-memory
        argument: bytes
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --shared-memory
        argument: ""
        description: (WebAssembly) use shared linear memory
      - names:
          - --global-base
        argument: ""
        description: (WebAssembly) where to start to place global data
      - names:
          - --global-base
        argument: addr
        description: (WebAssembly) where to start to place global data
      - names:
          - --export
        argument: ""
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --export
        argument: value
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --test-filter
        argument: '[text]'
        description: Skip tests that do not match filter
      - names:
          - --test-name-prefix
        argument: '[text]'
        description: Add prefix to all tests
      - names:
          - --test-cmd
        argument: '[arg]'
        description: Specify test execution command one arg at a time
      - names:
          - --test-cmd-bin
        argument: ""
        description: Appends test binary path to test cmd args
      - names:
          - --test-evented-io
        argument: ""
        description: Runs the test in evented I/O mode
      - names:
          - --test-no-exec
        argument: ""
        description: Compiles test binary without running it
      - names:
          - --test-runner
        argument: '[path]'
        description: Specify a custom test runner
      - names:
          - -ftime-report
        argument: ""
        description: Print timing diagnostics
      - names:
          - -fstack-report
        argument: ""
        description: Print stack size diagnostics
      - names:
          - --verbose-link
        argument: ""
        description: Display linker invocations
      - names:
          - --verbose-cc
        argument: ""
        description: Display C compiler invocations
      - names:
          - --verbose-air
        argument: ""
        description: Enable compiler debug output for Zig AIR
      - names:
          - --verbose-llvm-ir
        argument: ""
        description: Enable compiler debug output for LLVM IR
      - names:
          - --verbose-cimport
        argument: ""
        description: Enable compiler debug output for C imports
      - names:
          - --verbose-llvm-cpu-features
        argument: ""
        description: Enable compiler debug output for LLVM CPU features
      - names:
          - --debug-log
        argument: '[scope]'
        description: Enable printing debug/info log messages for scope
      - names:
          - --debug-compile-errors
        argument: ""
        description: Crash with helpful diagnostics at the first compile error
      - names:
          - --debug-link-snapshot
        argument: ""
        description: Enable dumping of the linker's state in JSON format
  - name: test
    description: Create and run a test build
    usage: |-
      zig build-exe   [options] [files]
      zig build-lib   [options] [files]
      zig build-obj   [options] [files]
      zig test        [options] [files]
      zig run         [options] [files] [-- [args]]
      zig translate-c [options] [file]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --watch
        argument: ""
        description: Enable compiler REPL
      - names:
          - --color
        argument: '[auto|off|on]'
        description: Enable or disable colored error messages
      - names:
          - -femit-bin
        argument: '[=path]'
        description: (default) Output machine code
      - names:
          - -fno-emit-bin
        argument: ""
        description: Do not output machine code
      - names:
          - -femit-asm
        argument: '[=path]'
        description: Output .s (assembly code)
      - names:
          - -fno-emit-asm
        argument: ""
        description: (default) Do not output .s (assembly code)
      - names:
          - -femit-llvm-ir
        argument: '[=path]'
        description: Produce a .ll file with LLVM IR (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-ir
        argument: ""
        description: (default) Do not produce a .ll file with LLVM IR
      - names:
          - -femit-llvm-bc
        argument: '[=path]'
        description: Produce a LLVM module as a .bc file (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-bc
        argument: ""
        description: (default) Do not produce a LLVM module as a .bc file
      - names:
          - -femit-h
        argument: '[=path]'
        description: Generate a C header file (.h)
      - names:
          - -fno-emit-h
        argument: ""
        description: (default) Do not generate a C header file (.h)
      - names:
          - -femit-docs
        argument: '[=path]'
        description: Create a docs/ dir with html documentation
      - names:
          - -fno-emit-docs
        argument: ""
        description: (default) Do not produce docs/ dir with html documentation
      - names:
          - -femit-analysis
        argument: '[=path]'
        description: Write analysis JSON file with type information
      - names:
          - -fno-emit-analysis
        argument: ""
        description: (default) Do not write analysis JSON file with type information
      - names:
          - -femit-implib
        argument: '[=path]'
        description: (default) Produce an import .lib when building a Windows DLL
      - names:
          - -fno-emit-implib
        argument: ""
        description: Do not produce an import .lib when building a Windows DLL
      - names:
          - --show-builtin
        argument: ""
        description: Output the source of @import("builtin") then exit
      - names:
          - --cache-dir
        argument: '[path]'
        description: Override the local cache directory
      - names:
          - --global-cache-dir
        argument: '[path]'
        description: Override the global cache directory
      - names:
          - --zig-lib-dir
        argument: '[path]'
        description: Override path to Zig installation lib directory
      - names:
          - --enable-cache
        argument: ""
        description: Output to cache directory; print path to stdout
      - names:
          - -target
        argument: ""
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -target
        argument: name
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -mcpu
        argument: ""
        description: Specify target CPU and feature set
      - names:
          - -m
        argument: cpu
        description: Specify target CPU and feature set
      - names:
          - -mred-zone
        argument: ""
        description: Force-enable the "red-zone"
      - names:
          - -mno-red-zone
        argument: ""
        description: Force-disable the "red-zone"
      - names:
          - -fomit-frame-pointer
        argument: ""
        description: Omit the stack frame pointer
      - names:
          - -fno-omit-frame-pointer
        argument: ""
        description: Store the stack frame pointer
      - names:
          - -mexec-model
        argument: ""
        description: (WASI) Execution model
      - names:
          - -mexec-model
        argument: value
        description: (WASI) Execution model
      - names:
          - --name
        argument: ""
        description: Override root name (not a file path)
      - names:
          - --name
        argument: name
        description: Override root name (not a file path)
      - names:
          - -O
        argument: ""
        description: Choose what to optimize for
      - names:
          - -O
        argument: mode
        description: Choose what to optimize for
      - names:
          - --pkg-begin
        argument: ""
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-begin
        argument: name
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-end
        argument: ""
        description: Pop current pkg
      - names:
          - --main-pkg-path
        argument: ""
        description: Set the directory of the root package
      - names:
          - -fPIC
        argument: ""
        description: Force-enable Position Independent Code
      - names:
          - -fno-PIC
        argument: ""
        description: Force-disable Position Independent Code
      - names:
          - -fPIE
        argument: ""
        description: Force-enable Position Independent Executable
      - names:
          - -fno-PIE
        argument: ""
        description: Force-disable Position Independent Executable
      - names:
          - -flto
        argument: ""
        description: Force-enable Link Time Optimization (requires LLVM extensions)
      - names:
          - -fno-lto
        argument: ""
        description: Force-disable Link Time Optimization
      - names:
          - -fstack-check
        argument: ""
        description: Enable stack probing in unsafe builds
      - names:
          - -fno-stack-check
        argument: ""
        description: Disable stack probing in safe builds
      - names:
          - -fstack-protector
        argument: ""
        description: Enable stack protection in unsafe builds
      - names:
          - -fno-stack-protector
        argument: ""
        description: Disable stack protection in safe builds
      - names:
          - -fsanitize-c
        argument: ""
        description: Enable C undefined behavior detection in unsafe builds
      - names:
          - -fno-sanitize-c
        argument: ""
        description: Disable C undefined behavior detection in safe builds
      - names:
          - -fvalgrind
        argument: ""
        description: Include valgrind client requests in release builds
      - names:
          - -fno-valgrind
        argument: ""
        description: Omit valgrind client requests in debug builds
      - names:
          - -fsanitize-thread
        argument: ""
        description: Enable Thread Sanitizer
      - names:
          - -fno-sanitize-thread
        argument: ""
        description: Disable Thread Sanitizer
      - names:
          - -fdll-export-fns
        argument: ""
        description: Mark exported functions as DLL exports (Windows)
      - names:
          - -fno-dll-export-fns
        argument: ""
        description: Force-disable marking exported functions as DLL exports
      - names:
          - -funwind-tables
        argument: ""
        description: Always produce unwind table entries for all functions
      - names:
          - -fno-unwind-tables
        argument: ""
        description: Never produce unwind table entries
      - names:
          - -fLLVM
        argument: ""
        description: Force using LLVM as the codegen backend
      - names:
          - -fno-LLVM
        argument: ""
        description: Prevent using LLVM as the codegen backend
      - names:
          - -fClang
        argument: ""
        description: Force using Clang as the C/C++ compilation backend
      - names:
          - -fno-Clang
        argument: ""
        description: Prevent using Clang as the C/C++ compilation backend
      - names:
          - -freference-trace
        argument: ""
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -freference-trace
        argument: num
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -fno-reference-trace
        argument: ""
        description: Disable reference trace
      - names:
          - -fsingle-threaded
        argument: ""
        description: Code assumes there is only one thread
      - names:
          - -fno-single-threaded
        argument: ""
        description: Code may not assume there is only one thread
      - names:
          - -fbuiltin
        argument: ""
        description: Enable implicit builtin knowledge of functions
      - names:
          - -fno-builtin
        argument: ""
        description: Disable implicit builtin knowledge of functions
      - names:
          - -ffunction-sections
        argument: ""
        description: Places each function in a separate section
      - names:
          - -fno-function-sections
        argument: ""
        description: All functions go into same section
      - names:
          - -fstrip
        argument: ""
        description: Omit debug symbols
      - names:
          - -fno-strip
        argument: ""
        description: Keep debug symbols
      - names:
          - -fformatted-panics
        argument: ""
        description: Enable formatted safety panics
      - names:
          - -fno-formatted-panics
        argument: ""
        description: Disable formatted safety panics
      - names:
          - -ofmt
        argument: ""
        description: Override target object format
      - names:
          - -ofmt
        argument: mode
        description: Override target object format
      - names:
          - -idirafter
        argument: ""
        description: Add directory to AFTER include search path
      - names:
          - -idirafter
        argument: dir
        description: Add directory to AFTER include search path
      - names:
          - -isystem
        argument: ""
        description: '[dir] Add directory to SYSTEM include search path'
      - names:
          - -I
        argument: ""
        description: Add directory to include search path
      - names:
          - -Idir
        argument: ""
        description: Add directory to include search path
      - names:
          - --libc
        argument: ""
        description: Provide a file which specifies libc paths
      - names:
          - --libc
        argument: file
        description: Provide a file which specifies libc paths
      - names:
          - -cflags
          - --
        argument: ""
        description: Set extra flags for the next positional C source files
      - names:
          - -c
          - --
        argument: flags
        description: Set extra flags for the next positional C source files
      - names:
          - --needed-library
        argument: lib
        description: -L[d], --library-directory [d] Add a directory to the library search path
      - names:
          - --version-script
        argument: ""
        description: Provide a version .map file
      - names:
          - --version-script
        argument: path
        description: Provide a version .map file
      - names:
          - --dynamic-linker
        argument: ""
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --dynamic-linker
        argument: path
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --sysroot
        argument: ""
        description: Set the system root directory (usually /)
      - names:
          - --sysroot
        argument: path
        description: Set the system root directory (usually /)
      - names:
          - --version
        argument: ""
        description: Dynamic library semver
      - names:
          - --version
        argument: ver
        description: Dynamic library semver
      - names:
          - --entry
        argument: ""
        description: Set the entrypoint symbol name
      - names:
          - --entry
        argument: name
        description: Set the entrypoint symbol name
      - names:
          - -fsoname
        argument: ""
        description: Override the default SONAME value
      - names:
          - -fsoname
        argument: name
        description: Override the default SONAME value
      - names:
          - -fno-soname
        argument: ""
        description: Disable emitting a SONAME
      - names:
          - -fLLD
        argument: ""
        description: Force using LLD as the linker
      - names:
          - -fno-LLD
        argument: ""
        description: Prevent using LLD as the linker
      - names:
          - -fcompiler-rt
        argument: ""
        description: Always include compiler-rt symbols in output
      - names:
          - -fno-compiler-rt
        argument: ""
        description: Prevent including compiler-rt symbols in output
      - names:
          - -rdynamic
        argument: ""
        description: Add all symbols to the dynamic symbol table
      - names:
          - -rpath
        argument: ""
        description: Add directory to the runtime library search path
      - names:
          - -r
        argument: path
        description: Add directory to the runtime library search path
      - names:
          - -feach-lib-rpath
        argument: ""
        description: Ensure adding rpath for each used dynamic library
      - names:
          - -fno-each-lib-rpath
        argument: ""
        description: Prevent adding rpath for each used dynamic library
      - names:
          - -fallow-shlib-undefined
        argument: ""
        description: Allows undefined symbols in shared libraries
      - names:
          - -fno-allow-shlib-undefined
        argument: ""
        description: Disallows undefined symbols in shared libraries
      - names:
          - -fbuild-id
        argument: ""
        description: Helps coordinate stripped binaries with debug symbols
      - names:
          - -fno-build-id
        argument: ""
        description: (default) Saves a bit of time linking
      - names:
          - --eh-frame-hdr
        argument: ""
        description: Enable C++ exception handling by passing --eh-frame-hdr to linker
      - names:
          - --emit-relocs
        argument: ""
        description: Enable output of relocation sections for post build tools
      - names:
          - -z
        argument: ""
        description: Set linker extension flags
      - names:
          - -z
        argument: arg
        description: Set linker extension flags
      - names:
          - -dynamic
        argument: ""
        description: Force output to be dynamically linked
      - names:
          - -static
        argument: ""
        description: Force output to be statically linked
      - names:
          - -Bsymbolic
        argument: ""
        description: Bind global references locally
      - names:
          - --compress-debug-sections
        argument: ""
        description: Debug section compression settings
      - names:
          - --compress-debug-sections
        argument: e
        description: Debug section compression settings
      - names:
          - --gc-sections
        argument: ""
        description: Force removal of functions and data that are unreachable by the entry point or exported symbols
      - names:
          - --no-gc-sections
        argument: ""
        description: Don't force removal of unreachable functions and data
      - names:
          - --subsystem
        argument: ""
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --subsystem
        argument: subsystem
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --stack
        argument: ""
        description: Override default stack size
      - names:
          - --stack
        argument: size
        description: Override default stack size
      - names:
          - --image-base
        argument: ""
        description: Set base address for executable image
      - names:
          - --image-base
        argument: addr
        description: Set base address for executable image
      - names:
          - -weak-l
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak-llib
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak_library
        argument: lib
        description: -framework [name] (Darwin) link against framework
      - names:
          - -needed_framework
        argument: ""
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_framework
        argument: name
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_library
        argument: ""
        description: (Darwin) link against system library (even if unused)
      - names:
          - -needed_library
        argument: lib
        description: (Darwin) link against system library (even if unused)
      - names:
          - -weak_framework
        argument: ""
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -weak_framework
        argument: name
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -F
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -Fdir
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -install_name
        argument: ""
        description: (Darwin) add dylib's install name
      - names:
          - -install_name
        argument: value
        description: (Darwin) add dylib's install name
      - names:
          - --entitlements
        argument: ""
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - --entitlements
        argument: path
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - -pagezero_size
        argument: ""
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -pagezero_size
        argument: value
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -search_paths_first
        argument: ""
        description: (Darwin) search each dir in library search paths for `libx.dylib` then `libx.a`
      - names:
          - -search_dylibs_first
        argument: ""
        description: (Darwin) search `libx.dylib` in each dir in library search paths, then `libx.a`
      - names:
          - -headerpad
        argument: value
        description: (Darwin) set minimum space for future expansion of the load commands in hexadecimal notation
      - names:
          - -headerpad_max_install_names
        argument: ""
        description: (Darwin) set enough space as if all paths were MAXPATHLEN
      - names:
          - -dead_strip
        argument: ""
        description: (Darwin) remove functions and data that are unreachable by the entry point or exported symbols
      - names:
          - -dead_strip_dylibs
        argument: ""
        description: (Darwin) remove dylibs that are unreachable by the entry point or exported symbols
      - names:
          - --import-memory
        argument: ""
        description: (WebAssembly) import memory from the environment
      - names:
          - --import-table
        argument: ""
        description: (WebAssembly) import function table from the host environment
      - names:
          - --export-table
        argument: ""
        description: (WebAssembly) export function table to the host environment
      - names:
          - --initial-memory
        argument: ""
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --initial-memory
        argument: bytes
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --max-memory
        argument: ""
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --max-memory
        argument: bytes
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --shared-memory
        argument: ""
        description: (WebAssembly) use shared linear memory
      - names:
          - --global-base
        argument: ""
        description: (WebAssembly) where to start to place global data
      - names:
          - --global-base
        argument: addr
        description: (WebAssembly) where to start to place global data
      - names:
          - --export
        argument: ""
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --export
        argument: value
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --test-filter
        argument: '[text]'
        description: Skip tests that do not match filter
      - names:
          - --test-name-prefix
        argument: '[text]'
        description: Add prefix to all tests
      - names:
          - --test-cmd
        argument: '[arg]'
        description: Specify test execution command one arg at a time
      - names:
          - --test-cmd-bin
        argument: ""
        description: Appends test binary path to test cmd args
      - names:
          - --test-evented-io
        argument: ""
        description: Runs the test in evented I/O mode
      - names:
          - --test-no-exec
        argument: ""
        description: Compiles test binary without running it
      - names:
          - --test-runner
        argument: '[path]'
        description: Specify a custom test runner
      - names:
          - -ftime-report
        argument: ""
        description: Print timing diagnostics
      - names:
          - -fstack-report
        argument: ""
        description: Print stack size diagnostics
      - names:
          - --verbose-link
        argument: ""
        description: Display linker invocations
      - names:
          - --verbose-cc
        argument: ""
        description: Display C compiler invocations
      - names:
          - --verbose-air
        argument: ""
        description: Enable compiler debug output for Zig AIR
      - names:
          - --verbose-llvm-ir
        argument: ""
        description: Enable compiler debug output for LLVM IR
      - names:
          - --verbose-cimport
        argument: ""
        description: Enable compiler debug output for C imports
      - names:
          - --verbose-llvm-cpu-features
        argument: ""
        description: Enable compiler debug output for LLVM CPU features
      - names:
          - --debug-log
        argument: '[scope]'
        description: Enable printing debug/info log messages for scope
      - names:
          - --debug-compile-errors
        argument: ""
        description: Crash with helpful diagnostics at the first compile error
      - names:
          - --debug-link-snapshot
        argument: ""
        description: Enable dumping of the linker's state in JSON format
  - name: translate-c
    description: Convert C code to Zig code
    usage: |-
      zig build-exe   [options] [files]
      zig build-lib   [options] [files]
      zig build-obj   [options] [files]
      zig test        [options] [files]
      zig run         [options] [files] [-- [args]]
      zig translate-c [options] [file]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --watch
        argument: ""
        description: Enable compiler REPL
      - names:
          - --color
        argument: '[auto|off|on]'
        description: Enable or disable colored error messages
      - names:
          - -femit-bin
        argument: '[=path]'
        description: (default) Output machine code
      - names:
          - -fno-emit-bin
        argument: ""
        description: Do not output machine code
      - names:
          - -femit-asm
        argument: '[=path]'
        description: Output .s (assembly code)
      - names:
          - -fno-emit-asm
        argument: ""
        description: (default) Do not output .s (assembly code)
      - names:
          - -femit-llvm-ir
        argument: '[=path]'
        description: Produce a .ll file with LLVM IR (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-ir
        argument: ""
        description: (default) Do not produce a .ll file with LLVM IR
      - names:
          - -femit-llvm-bc
        argument: '[=path]'
        description: Produce a LLVM module as a .bc file (requires LLVM extensions)
      - names:
          - -fno-emit-llvm-bc
        argument: ""
        description: (default) Do not produce a LLVM module as a .bc file
      - names:
          - -femit-h
        argument: '[=path]'
        description: Generate a C header file (.h)
      - names:
          - -fno-emit-h
        argument: ""
        description: (default) Do not generate a C header file (.h)
      - names:
          - -femit-docs
        argument: '[=path]'
        description: Create a docs/ dir with html documentation
      - names:
          - -fno-emit-docs
        argument: ""
        description: (default) Do not produce docs/ dir with html documentation
      - names:
          - -femit-analysis
        argument: '[=path]'
        description: Write analysis JSON file with type information
      - names:
          - -fno-emit-analysis
        argument: ""
        description: (default) Do not write analysis JSON file with type information
      - names:
          - -femit-implib
        argument: '[=path]'
        description: (default) Produce an import .lib when building a Windows DLL
      - names:
          - -fno-emit-implib
        argument: ""
        description: Do not produce an import .lib when building a Windows DLL
      - names:
          - --show-builtin
        argument: ""
        description: Output the source of @import("builtin") then exit
      - names:
          - --cache-dir
        argument: '[path]'
        description: Override the local cache directory
      - names:
          - --global-cache-dir
        argument: '[path]'
        description: Override the global cache directory
      - names:
          - --zig-lib-dir
        argument: '[path]'
        description: Override path to Zig installation lib directory
      - names:
          - --enable-cache
        argument: ""
        description: Output to cache directory; print path to stdout
      - names:
          - -target
        argument: ""
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -target
        argument: name
        description: <arch><sub>-<os>-<abi> see the targets command
      - names:
          - -mcpu
        argument: ""
        description: Specify target CPU and feature set
      - names:
          - -m
        argument: cpu
        description: Specify target CPU and feature set
      - names:
          - -mred-zone
        argument: ""
        description: Force-enable the "red-zone"
      - names:
          - -mno-red-zone
        argument: ""
        description: Force-disable the "red-zone"
      - names:
          - -fomit-frame-pointer
        argument: ""
        description: Omit the stack frame pointer
      - names:
          - -fno-omit-frame-pointer
        argument: ""
        description: Store the stack frame pointer
      - names:
          - -mexec-model
        argument: ""
        description: (WASI) Execution model
      - names:
          - -mexec-model
        argument: value
        description: (WASI) Execution model
      - names:
          - --name
        argument: ""
        description: Override root name (not a file path)
      - names:
          - --name
        argument: name
        description: Override root name (not a file path)
      - names:
          - -O
        argument: ""
        description: Choose what to optimize for
      - names:
          - -O
        argument: mode
        description: Choose what to optimize for
      - names:
          - --pkg-begin
        argument: ""
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-begin
        argument: name
        description: '[path] Make pkg available to import and push current pkg'
      - names:
          - --pkg-end
        argument: ""
        description: Pop current pkg
      - names:
          - --main-pkg-path
        argument: ""
        description: Set the directory of the root package
      - names:
          - -fPIC
        argument: ""
        description: Force-enable Position Independent Code
      - names:
          - -fno-PIC
        argument: ""
        description: Force-disable Position Independent Code
      - names:
          - -fPIE
        argument: ""
        description: Force-enable Position Independent Executable
      - names:
          - -fno-PIE
        argument: ""
        description: Force-disable Position Independent Executable
      - names:
          - -flto
        argument: ""
        description: Force-enable Link Time Optimization (requires LLVM extensions)
      - names:
          - -fno-lto
        argument: ""
        description: Force-disable Link Time Optimization
      - names:
          - -fstack-check
        argument: ""
        description: Enable stack probing in unsafe builds
      - names:
          - -fno-stack-check
        argument: ""
        description: Disable stack probing in safe builds
      - names:
          - -fstack-protector
        argument: ""
        description: Enable stack protection in unsafe builds
      - names:
          - -fno-stack-protector
        argument: ""
        description: Disable stack protection in safe builds
      - names:
          - -fsanitize-c
        argument: ""
        description: Enable C undefined behavior detection in unsafe builds
      - names:
          - -fno-sanitize-c
        argument: ""
        description: Disable C undefined behavior detection in safe builds
      - names:
          - -fvalgrind
        argument: ""
        description: Include valgrind client requests in release builds
      - names:
          - -fno-valgrind
        argument: ""
        description: Omit valgrind client requests in debug builds
      - names:
          - -fsanitize-thread
        argument: ""
        description: Enable Thread Sanitizer
      - names:
          - -fno-sanitize-thread
        argument: ""
        description: Disable Thread Sanitizer
      - names:
          - -fdll-export-fns
        argument: ""
        description: Mark exported functions as DLL exports (Windows)
      - names:
          - -fno-dll-export-fns
        argument: ""
        description: Force-disable marking exported functions as DLL exports
      - names:
          - -funwind-tables
        argument: ""
        description: Always produce unwind table entries for all functions
      - names:
          - -fno-unwind-tables
        argument: ""
        description: Never produce unwind table entries
      - names:
          - -fLLVM
        argument: ""
        description: Force using LLVM as the codegen backend
      - names:
          - -fno-LLVM
        argument: ""
        description: Prevent using LLVM as the codegen backend
      - names:
          - -fClang
        argument: ""
        description: Force using Clang as the C/C++ compilation backend
      - names:
          - -fno-Clang
        argument: ""
        description: Prevent using Clang as the C/C++ compilation backend
      - names:
          - -freference-trace
        argument: ""
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -freference-trace
        argument: num
        description: How many lines of reference trace should be shown per compile error
      - names:
          - -fno-reference-trace
        argument: ""
        description: Disable reference trace
      - names:
          - -fsingle-threaded
        argument: ""
        description: Code assumes there is only one thread
      - names:
          - -fno-single-threaded
        argument: ""
        description: Code may not assume there is only one thread
      - names:
          - -fbuiltin
        argument: ""
        description: Enable implicit builtin knowledge of functions
      - names:
          - -fno-builtin
        argument: ""
        description: Disable implicit builtin knowledge of functions
      - names:
          - -ffunction-sections
        argument: ""
        description: Places each function in a separate section
      - names:
          - -fno-function-sections
        argument: ""
        description: All functions go into same section
      - names:
          - -fstrip
        argument: ""
        description: Omit debug symbols
      - names:
          - -fno-strip
        argument: ""
        description: Keep debug symbols
      - names:
          - -fformatted-panics
        argument: ""
        description: Enable formatted safety panics
      - names:
          - -fno-formatted-panics
        argument: ""
        description: Disable formatted safety panics
      - names:
          - -ofmt
        argument: ""
        description: Override target object format
      - names:
          - -ofmt
        argument: mode
        description: Override target object format
      - names:
          - -idirafter
        argument: ""
        description: Add directory to AFTER include search path
      - names:
          - -idirafter
        argument: dir
        description: Add directory to AFTER include search path
      - names:
          - -isystem
        argument: ""
        description: '[dir] Add directory to SYSTEM include search path'
      - names:
          - -I
        argument: ""
        description: Add directory to include search path
      - names:
          - -Idir
        argument: ""
        description: Add directory to include search path
      - names:
          - --libc
        argument: ""
        description: Provide a file which specifies libc paths
      - names:
          - --libc
        argument: file
        description: Provide a file which specifies libc paths
      - names:
          - -cflags
          - --
        argument: ""
        description: Set extra flags for the next positional C source files
      - names:
          - -c
          - --
        argument: flags
        description: Set extra flags for the next positional C source files
      - names:
          - --needed-library
        argument: lib
        description: -L[d], --library-directory [d] Add a directory to the library search path
      - names:
          - --version-script
        argument: ""
        description: Provide a version .map file
      - names:
          - --version-script
        argument: path
        description: Provide a version .map file
      - names:
          - --dynamic-linker
        argument: ""
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --dynamic-linker
        argument: path
        description: Set the dynamic interpreter path (usually ld.so)
      - names:
          - --sysroot
        argument: ""
        description: Set the system root directory (usually /)
      - names:
          - --sysroot
        argument: path
        description: Set the system root directory (usually /)
      - names:
          - --version
        argument: ""
        description: Dynamic library semver
      - names:
          - --version
        argument: ver
        description: Dynamic library semver
      - names:
          - --entry
        argument: ""
        description: Set the entrypoint symbol name
      - names:
          - --entry
        argument: name
        description: Set the entrypoint symbol name
      - names:
          - -fsoname
        argument: ""
        description: Override the default SONAME value
      - names:
          - -fsoname
        argument: name
        description: Override the default SONAME value
      - names:
          - -fno-soname
        argument: ""
        description: Disable emitting a SONAME
      - names:
          - -fLLD
        argument: ""
        description: Force using LLD as the linker
      - names:
          - -fno-LLD
        argument: ""
        description: Prevent using LLD as the linker
      - names:
          - -fcompiler-rt
        argument: ""
        description: Always include compiler-rt symbols in output
      - names:
          - -fno-compiler-rt
        argument: ""
        description: Prevent including compiler-rt symbols in output
      - names:
          - -rdynamic
        argument: ""
        description: Add all symbols to the dynamic symbol table
      - names:
          - -rpath
        argument: ""
        description: Add directory to the runtime library search path
      - names:
          - -r
        argument: path
        description: Add directory to the runtime library search path
      - names:
          - -feach-lib-rpath
        argument: ""
        description: Ensure adding rpath for each used dynamic library
      - names:
          - -fno-each-lib-rpath
        argument: ""
        description: Prevent adding rpath for each used dynamic library
      - names:
          - -fallow-shlib-undefined
        argument: ""
        description: Allows undefined symbols in shared libraries
      - names:
          - -fno-allow-shlib-undefined
        argument: ""
        description: Disallows undefined symbols in shared libraries
      - names:
          - -fbuild-id
        argument: ""
        description: Helps coordinate stripped binaries with debug symbols
      - names:
          - -fno-build-id
        argument: ""
        description: (default) Saves a bit of time linking
      - names:
          - --eh-frame-hdr
        argument: ""
        description: Enable C++ exception handling by passing --eh-frame-hdr to linker
      - names:
          - --emit-relocs
        argument: ""
        description: Enable output of relocation sections for post build tools
      - names:
          - -z
        argument: ""
        description: Set linker extension flags
      - names:
          - -z
        argument: arg
        description: Set linker extension flags
      - names:
          - -dynamic
        argument: ""
        description: Force output to be dynamically linked
      - names:
          - -static
        argument: ""
        description: Force output to be statically linked
      - names:
          - -Bsymbolic
        argument: ""
        description: Bind global references locally
      - names:
          - --compress-debug-sections
        argument: ""
        description: Debug section compression settings
      - names:
          - --compress-debug-sections
        argument: e
        description: Debug section compression settings
      - names:
          - --gc-sections
        argument: ""
        description: Force removal of functions and data that are unreachable by the entry point or exported symbols
      - names:
          - --no-gc-sections
        argument: ""
        description: Don't force removal of unreachable functions and data
      - names:
          - --subsystem
        argument: ""
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --subsystem
        argument: subsystem
        description: (Windows) /SUBSYSTEM:<subsystem> to the linker
      - names:
          - --stack
        argument: ""
        description: Override default stack size
      - names:
          - --stack
        argument: size
        description: Override default stack size
      - names:
          - --image-base
        argument: ""
        description: Set base address for executable image
      - names:
          - --image-base
        argument: addr
        description: Set base address for executable image
      - names:
          - -weak-l
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak-llib
        argument: ""
        description: (Darwin) link against system library and mark it and all referenced symbols as weak
      - names:
          - -weak_library
        argument: lib
        description: -framework [name] (Darwin) link against framework
      - names:
          - -needed_framework
        argument: ""
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_framework
        argument: name
        description: (Darwin) link against framework (even if unused)
      - names:
          - -needed_library
        argument: ""
        description: (Darwin) link against system library (even if unused)
      - names:
          - -needed_library
        argument: lib
        description: (Darwin) link against system library (even if unused)
      - names:
          - -weak_framework
        argument: ""
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -weak_framework
        argument: name
        description: (Darwin) link against framework and mark it and all referenced symbols as weak
      - names:
          - -F
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -Fdir
        argument: ""
        description: (Darwin) add search path for frameworks
      - names:
          - -install_name
        argument: ""
        description: (Darwin) add dylib's install name
      - names:
          - -install_name
        argument: value
        description: (Darwin) add dylib's install name
      - names:
          - --entitlements
        argument: ""
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - --entitlements
        argument: path
        description: (Darwin) add path to entitlements file for embedding in code signature
      - names:
          - -pagezero_size
        argument: ""
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -pagezero_size
        argument: value
        description: (Darwin) size of the __PAGEZERO segment in hexadecimal notation
      - names:
          - -search_paths_first
        argument: ""
        description: (Darwin) search each dir in library search paths for `libx.dylib` then `libx.a`
      - names:
          - -search_dylibs_first
        argument: ""
        description: (Darwin) search `libx.dylib` in each dir in library search paths, then `libx.a`
      - names:
          - -headerpad
        argument: value
        description: (Darwin) set minimum space for future expansion of the load commands in hexadecimal notation
      - names:
          - -headerpad_max_install_names
        argument: ""
        description: (Darwin) set enough space as if all paths were MAXPATHLEN
      - names:
          - -dead_strip
        argument: ""
        description: (Darwin) remove functions and data that are unreachable by the entry point or exported symbols
      - names:
          - -dead_strip_dylibs
        argument: ""
        description: (Darwin) remove dylibs that are unreachable by the entry point or exported symbols
      - names:
          - --import-memory
        argument: ""
        description: (WebAssembly) import memory from the environment
      - names:
          - --import-table
        argument: ""
        description: (WebAssembly) import function table from the host environment
      - names:
          - --export-table
        argument: ""
        description: (WebAssembly) export function table to the host environment
      - names:
          - --initial-memory
        argument: ""
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --initial-memory
        argument: bytes
        description: (WebAssembly) initial size of the linear memory
      - names:
          - --max-memory
        argument: ""
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --max-memory
        argument: bytes
        description: (WebAssembly) maximum size of the linear memory
      - names:
          - --shared-memory
        argument: ""
        description: (WebAssembly) use shared linear memory
      - names:
          - --global-base
        argument: ""
        description: (WebAssembly) where to start to place global data
      - names:
          - --global-base
        argument: addr
        description: (WebAssembly) where to start to place global data
      - names:
          - --export
        argument: ""
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --export
        argument: value
        description: (WebAssembly) Force a symbol to be exported
      - names:
          - --test-filter
        argument: '[text]'
        description: Skip tests that do not match filter
      - names:
          - --test-name-prefix
        argument: '[text]'
        description: Add prefix to all tests
      - names:
          - --test-cmd
        argument: '[arg]'
        description: Specify test execution command one arg at a time
      - names:
          - --test-cmd-bin
        argument: ""
        description: Appends test binary path to test cmd args
      - names:
          - --test-evented-io
        argument: ""
        description: Runs the test in evented I/O mode
      - names:
          - --test-no-exec
        argument: ""
        description: Compiles test binary without running it
      - names:
          - --test-runner
        argument: '[path]'
        description: Specify a custom test runner
      - names:
          - -ftime-report
        argument: ""
        description: Print timing diagnostics
      - names:
          - -fstack-report
        argument: ""
        description: Print stack size diagnostics
      - names:
          - --verbose-link
        argument: ""
        description: Display linker invocations
      - names:
          - --verbose-cc
        argument: ""
        description: Display C compiler invocations
      - names:
          - --verbose-air
        argument: ""
        description: Enable compiler debug output for Zig AIR
      - names:
          - --verbose-llvm-ir
        argument: ""
        description: Enable compiler debug output for LLVM IR
      - names:
          - --verbose-cimport
        argument: ""
        description: Enable compiler debug output for C imports
      - names:
          - --verbose-llvm-cpu-features
        argument: ""
        description: Enable compiler debug output for LLVM CPU features
      - names:
          - --debug-log
        argument: '[scope]'
        description: Enable printing debug/info log messages for scope
      - names:
          - --debug-compile-errors
        argument: ""
        description: Crash with helpful diagnostics at the first compile error
      - names:
          - --debug-link-snapshot
        argument: ""
        description: Enable dumping of the linker's state in JSON format
  - name: ar
    description: Use Zig as a drop-in archiver
    usage: |-
      ar [options] [-]<operation>[modifiers] [relpos] [count] <archive> [files]
      ar -M [<mri-script]
    options:
      - names:
          - --format
        argument: ""
        description: '- archive format to create'
      - names:
          - --plugin
        argument: <string>
        description: '- ignored for compatibility'
      - names:
          - -h
          - --help
        argument: ""
        description: '- display this help and exit'
      - names:
          - --output
        argument: ""
        description: '- the directory to extract archive members to'
      - names:
          - --rsp-quoting
        argument: ""
        description: '- quoting style for response files'
      - names:
          - --thin
        argument: ""
        description: '- create a thin archive'
      - names:
          - --version
        argument: ""
        description: '- print the version and exit'
      - names:
          - -X
        argument: '{32|64|32_64|any}'
        description: '- object mode (only for AIX OS)'
  - name: cc
    description: Use Zig as a drop-in C compiler
    usage: zig [options] file...
    options:
      - names:
          - -#
        argument: '##'
        description: Print (but do not run) the commands to run for this compilation
      - names:
          - --amdgpu-arch-tool
        argument: <value>
        description: Tool used for detecting AMD GPU arch in the system.
      - names:
          - --analyzer-output
        argument: <value>
        description: Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
      - names:
          - --analyze
        argument: ""
        description: Run the static analyzer
      - names:
          - -arcmt-migrate-emit-errors
        argument: ""
        description: Emit ARC errors even if the migrator can fix them
      - names:
          - -arcmt-migrate-report-output
        argument: <value>
        description: Output path for the plist report
      - names:
          - -B
        argument: <prefix>
        description: Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
      - names:
          - -b
        argument: <arg>
        description: Pass -b <arg> to the linker on AIX (only).
      - names:
          - -CC
        argument: ""
        description: Include comments from within macros in preprocessed output
      - names:
          - -cl-denorms-are-zero
        argument: ""
        description: OpenCL only. Allow denormals to be flushed to zero.
      - names:
          - -cl-ext
        argument: <value>
        description: OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
      - names:
          - -cl-fast-relaxed-math
        argument: ""
        description: OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
      - names:
          - -cl-finite-math-only
        argument: ""
        description: OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
      - names:
          - -cl-fp32-correctly-rounded-divide-sqrt
        argument: ""
        description: OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
      - names:
          - -cl-kernel-arg-info
        argument: ""
        description: OpenCL only. Generate kernel argument metadata.
      - names:
          - -cl-mad-enable
        argument: ""
        description: OpenCL only. Allow use of less precise MAD computations in the generated binary.
      - names:
          - -cl-no-signed-zeros
        argument: ""
        description: OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
      - names:
          - -cl-no-stdinc
        argument: ""
        description: OpenCL only. Disables all standard includes containing non-native compiler types and functions.
      - names:
          - -cl-opt-disable
        argument: ""
        description: OpenCL only. This option disables all optimizations. By default optimizations are enabled.
      - names:
          - -cl-single-precision-constant
        argument: ""
        description: OpenCL only. Treat double precision floating-point constant as single precision constant.
      - names:
          - -cl-std
        argument: <value>
        description: OpenCL language standard to compile for.
      - names:
          - -cl-strict-aliasing
        argument: ""
        description: OpenCL only. This option is added for compatibility with OpenCL 1.0.
      - names:
          - -cl-uniform-work-group-size
        argument: ""
        description: OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
      - names:
          - -cl-unsafe-math-optimizations
        argument: ""
        description: OpenCL only. Allow unsafe floating-point optimizations. Also implies -cl-no-signed-zeros and -cl-mad-enable.
      - names:
          - --config
        argument: <value>
        description: Specifies configuration file
      - names:
          - --cuda-compile-host-device
        argument: ""
        description: Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
      - names:
          - --cuda-device-only
        argument: ""
        description: Compile CUDA code for device only
      - names:
          - --cuda-feature
        argument: <value>
        description: Manually specify the CUDA feature to use
      - names:
          - --cuda-host-only
        argument: ""
        description: Compile CUDA code for host only. Has no effect on non-CUDA compilations.
      - names:
          - --cuda-include-ptx
        argument: <value>
        description: Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
      - names:
          - --cuda-noopt-device-debug
        argument: ""
        description: Enable device-side debug info generation. Disables ptxas optimizations.
      - names:
          - --cuda-path-ignore-env
        argument: ""
        description: Ignore environment variables to detect CUDA installation
      - names:
          - --cuda-path
        argument: <value>
        description: CUDA installation path
      - names:
          - -cuid
        argument: <value>
        description: An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
      - names:
          - -cxx-isystem
        argument: <directory>
        description: Add directory to the C++ SYSTEM include search path
      - names:
          - -C
        argument: ""
        description: Include comments in preprocessed output
      - names:
          - -c
        argument: ""
        description: Only run preprocess, compile, and assemble steps
      - names:
          - -darwin-target-variant-triple
        argument: <value>
        description: Specify the darwin target variant triple
      - names:
          - -darwin-target-variant
        argument: <value>
        description: Generate code for an additional runtime variant of the deployment target
      - names:
          - -dD
        argument: ""
        description: Print macro definitions in -E mode in addition to normal output
      - names:
          - -dependency-dot
        argument: <value>
        description: Filename to write DOT-formatted header dependencies to
      - names:
          - -dependency-file
        argument: <value>
        description: Filename (or -) to write dependency output to
      - names:
          - -dI
        argument: ""
        description: Print include directives in -E mode in addition to normal output
      - names:
          - -dM
        argument: ""
        description: Print macro definitions in -E mode instead of normal output
      - names:
          - -dsym-dir
        argument: <dir>
        description: Directory to output dSYM's (if any) to
      - names:
          - -D
        argument: <macro>=<value>
        description: Define <macro> to <value> (or 1 if <value> omitted)
      - names:
          - -emit-ast
        argument: ""
        description: Emit Clang AST files for source inputs
      - names:
          - -emit-interface-stubs
        argument: ""
        description: Generate Interface Stub Files.
      - names:
          - -emit-llvm
        argument: ""
        description: Use the LLVM representation for assembler and object files
      - names:
          - -emit-merged-ifs
        argument: ""
        description: Generate Interface Stub Files, emit merged text not binary.
      - names:
          - --emit-static-lib
        argument: ""
        description: Enable linker job to emit a static library.
      - names:
          - -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
        argument: ""
        description: Trivial automatic variable initialization to zero is only here for benchmarks, it'll eventually be removed, and I'm OK with that because I'm only using it to benchmark
      - names:
          - --end-no-unused-arguments
        argument: ""
        description: Start emitting warnings for unused driver arguments
      - names:
          - -extract-api
        argument: ""
        description: Extract API information
      - names:
          - -E
        argument: ""
        description: Only run the preprocessor
      - names:
          - -faapcs-bitfield-load
        argument: ""
        description: Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
      - names:
          - -faapcs-bitfield-width
        argument: ""
        description: Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
      - names:
          - -faddrsig
        argument: ""
        description: Emit an address-significance table
      - names:
          - -falign-loops
        argument: <N>
        description: N must be a power of two. Align loops to the boundary
      - names:
          - -faligned-allocation
        argument: ""
        description: Enable C++17 aligned allocation functions
      - names:
          - -fallow-editor-placeholders
        argument: ""
        description: Treat editor placeholders as valid source code
      - names:
          - -faltivec-src-compat
        argument: <value>
        description: Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
      - names:
          - -fansi-escape-codes
        argument: ""
        description: Use ANSI escape codes for diagnostics
      - names:
          - -fapple-kext
        argument: ""
        description: Use Apple's kernel extensions ABI
      - names:
          - -fapple-link-rtlib
        argument: ""
        description: Force linking the clang builtins runtime library
      - names:
          - -fapple-pragma-pack
        argument: ""
        description: 'Enable Apple gcc-compatible #pragma pack handling'
      - names:
          - -fapplication-extension
        argument: ""
        description: Restrict code to those available for App Extensions
      - names:
          - -fapprox-func
        argument: ""
        description: Allow certain math function calls to be replaced with an approximately equivalent calculation
      - names:
          - -fasync-exceptions
        argument: ""
        description: Enable EH Asynchronous exceptions
      - names:
          - -fbasic-block-sections
        argument: <value>
        description: Place each function's basic blocks in unique sections (ELF Only)
      - names:
          - -fbinutils-version
        argument: <major.minor>
        description: Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
      - names:
          - -fblocks
        argument: ""
        description: Enable the 'blocks' language feature
      - names:
          - -fborland-extensions
        argument: ""
        description: Accept non-standard constructs supported by the Borland compiler
      - names:
          - -fbuild-session-file
        argument: <file>
        description: Use the last modification time of <file> as the build session timestamp
      - names:
          - -fbuild-session-timestamp
        argument: <time since Epoch in seconds>
        description: Time when the current build session started
      - names:
          - -fbuiltin-module-map
        argument: ""
        description: Load the clang builtins module map file.
      - names:
          - -fc++-abi
        argument: <value>
        description: C++ ABI to use. This will override the target C++ ABI.
      - names:
          - -fcall-saved-x10
        argument: ""
        description: Make the x10 register call-saved (AArch64 only)
      - names:
          - -fcall-saved-x11
        argument: ""
        description: Make the x11 register call-saved (AArch64 only)
      - names:
          - -fcall-saved-x12
        argument: ""
        description: Make the x12 register call-saved (AArch64 only)
      - names:
          - -fcall-saved-x13
        argument: ""
        description: Make the x13 register call-saved (AArch64 only)
      - names:
          - -fcall-saved-x14
        argument: ""
        description: Make the x14 register call-saved (AArch64 only)
      - names:
          - -fcall-saved-x15
        argument: ""
        description: Make the x15 register call-saved (AArch64 only)
      - names:
          - -fcall-saved-x18
        argument: ""
        description: Make the x18 register call-saved (AArch64 only)
      - names:
          - -fcall-saved-x8
        argument: ""
        description: Make the x8 register call-saved (AArch64 only)
      - names:
          - -fcall-saved-x9
        argument: ""
        description: Make the x9 register call-saved (AArch64 only)
      - names:
          - -fcf-protection
        argument: <value>
        description: Instrument control-flow architecture protection
      - names:
          - -fcf-protection
        argument: ""
        description: Enable cf-protection in 'full' mode
      - names:
          - -fchar8_t
        argument: ""
        description: Enable C++ builtin type char8_t
      - names:
          - -fclang-abi-compat
        argument: <version>
        description: Attempt to match the ABI of Clang <version>
      - names:
          - -fcolor-diagnostics
        argument: ""
        description: Enable colors in diagnostics
      - names:
          - -fcomment-block-commands
        argument: <arg>
        description: Treat each comma separated argument in <arg> as a documentation comment block command
      - names:
          - -fcommon
        argument: ""
        description: Place uninitialized global variables in a common block
      - names:
          - -fcomplete-member-pointers
        argument: ""
        description: Require member pointer base types to be complete if they would be significant under the Microsoft ABI
      - names:
          - -fconvergent-functions
        argument: ""
        description: Assume functions may be convergent
      - names:
          - -fcoroutines-ts
        argument: ""
        description: Enable support for the C++ Coroutines TS
      - names:
          - -fcoverage-compilation-dir
        argument: <value>
        description: The compilation directory to embed in the coverage mapping.
      - names:
          - -fcoverage-mapping
        argument: ""
        description: Generate coverage mapping to enable code coverage analysis
      - names:
          - -fcoverage-prefix-map
        argument: <value>
        description: remap file source paths in coverage mapping
      - names:
          - -fcrash-diagnostics-dir
        argument: <dir>
        description: Put crash-report files in <dir>
      - names:
          - -fcs-profile-generate
        argument: <directory>
        description: Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
      - names:
          - -fcuda-approx-transcendentals
        argument: ""
        description: Use approximate transcendental functions
      - names:
          - -fcuda-short-ptr
        argument: ""
        description: Use 32-bit pointers for accessing const/local/shared address spaces
      - names:
          - -fcxx-exceptions
        argument: ""
        description: Enable C++ exceptions
      - names:
          - -fcxx-modules
        argument: ""
        description: Enable modules for C++
      - names:
          - -fdata-sections
        argument: ""
        description: Place each data in its own section
      - names:
          - -fdebug-compilation-dir
        argument: <value>
        description: The compilation directory to embed in the debug info
      - names:
          - -fdebug-default-version
        argument: <value>
        description: Default DWARF version to use, if a -g option caused DWARF debug info to be produced
      - names:
          - -fdebug-info-for-profiling
        argument: ""
        description: Emit extra debug info to make sample profile more accurate
      - names:
          - -fdebug-macro
        argument: ""
        description: Emit macro debug information
      - names:
          - -fdebug-prefix-map
        argument: <value>
        description: remap file source paths in debug info
      - names:
          - -fdebug-ranges-base-address
        argument: ""
        description: Use DWARF base address selection entries in .debug_ranges
      - names:
          - -fdebug-types-section
        argument: ""
        description: Place debug types in their own section (ELF Only)
      - names:
          - -fdeclspec
        argument: ""
        description: Allow __declspec as a keyword
      - names:
          - -fdelayed-template-parsing
        argument: ""
        description: Parse templated function definitions at the end of the translation unit
      - names:
          - -fdelete-null-pointer-checks
        argument: ""
        description: Treat usage of null pointers as undefined behavior (default)
      - names:
          - -fdiagnostics-absolute-paths
        argument: ""
        description: Print absolute paths in diagnostics
      - names:
          - -fdiagnostics-hotness-threshold
        argument: <value>
        description: Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
      - names:
          - -fdiagnostics-misexpect-tolerance
        argument: <value>
        description: Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected.
      - names:
          - -fdiagnostics-parseable-fixits
        argument: ""
        description: Print fix-its in machine parseable form
      - names:
          - -fdiagnostics-print-source-range-info
        argument: ""
        description: Print source range spans in numeric form
      - names:
          - -fdiagnostics-show-hotness
        argument: ""
        description: Enable profile hotness information in diagnostic line
      - names:
          - -fdiagnostics-show-note-include-stack
        argument: ""
        description: Display include stacks for diagnostic notes
      - names:
          - -fdiagnostics-show-option
        argument: ""
        description: Print option name with mappable diagnostics
      - names:
          - -fdiagnostics-show-template-tree
        argument: ""
        description: Print a template comparison tree for differing templates
      - names:
          - -fdigraphs
        argument: ""
        description: Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
      - names:
          - -fdirect-access-external-data
        argument: ""
        description: Don't use GOT indirection to reference external data symbols
      - names:
          - -fdiscard-value-names
        argument: ""
        description: Discard value names in LLVM IR
      - names:
          - -fdollars-in-identifiers
        argument: ""
        description: Allow '$' in identifiers
      - names:
          - -fdouble-square-bracket-attributes
        argument: ""
        description: Enable '[[]]' attributes in all C and C++ language modes
      - names:
          - -fdriver-only
        argument: ""
        description: Only run the driver.
      - names:
          - -fdwarf-exceptions
        argument: ""
        description: Use DWARF style exceptions
      - names:
          - -feliminate-unused-debug-types
        argument: ""
        description: Do not emit debug info for defined but unused types
      - names:
          - -fembed-bitcode-marker
        argument: ""
        description: Embed placeholder LLVM IR data as a marker
      - names:
          - -fembed-bitcode
        argument: <option>
        description: Embed LLVM bitcode
      - names:
          - -fembed-bitcode
        argument: ""
        description: Embed LLVM IR bitcode as data
      - names:
          - -fembed-offload-object
        argument: <value>
        description: Embed Offloading device-side binary into host object file as a section.
      - names:
          - -femit-all-decls
        argument: ""
        description: Emit all declarations, even if unused
      - names:
          - -femit-dwarf-unwind
        argument: <value>
        description: When to emit DWARF unwind (EH frame) info
      - names:
          - -femulated-tls
        argument: ""
        description: Use emutls functions to access thread_local variables
      - names:
          - -fenable-matrix
        argument: ""
        description: Enable matrix data type and related builtin functions
      - names:
          - -fexceptions
        argument: ""
        description: Enable support for exception handling
      - names:
          - -fexperimental-library
        argument: ""
        description: Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
      - names:
          - -fexperimental-new-constant-interpreter
        argument: ""
        description: Enable the experimental new constant interpreter
      - names:
          - -fexperimental-relative-c++-abi-vtables
        argument: ""
        description: Use the experimental C++ class ABI for classes with virtual tables
      - names:
          - -fexperimental-strict-floating-point
        argument: ""
        description: Enables experimental strict floating point in LLVM.
      - names:
          - -fextend-arguments
        argument: <value>
        description: Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
      - names:
          - -ffast-math
        argument: ""
        description: Allow aggressive, lossy floating-point optimizations
      - names:
          - -ffile-compilation-dir
        argument: <value>
        description: The compilation directory to embed in the debug info and coverage mapping.
      - names:
          - -ffile-prefix-map
        argument: <value>
        description: remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
      - names:
          - -ffile-reproducible
        argument: ""
        description: Use the target's platform-specific path separator character when expanding the __FILE__ macro
      - names:
          - -ffine-grained-bitfield-accesses
        argument: ""
        description: Use separate accesses for consecutive bitfield runs with legal widths and alignments.
      - names:
          - -ffinite-loops
        argument: ""
        description: Assume all loops are finite.
      - names:
          - -ffixed-a0
        argument: ""
        description: Reserve the a0 register (M68k only)
      - names:
          - -ffixed-a1
        argument: ""
        description: Reserve the a1 register (M68k only)
      - names:
          - -ffixed-a2
        argument: ""
        description: Reserve the a2 register (M68k only)
      - names:
          - -ffixed-a3
        argument: ""
        description: Reserve the a3 register (M68k only)
      - names:
          - -ffixed-a4
        argument: ""
        description: Reserve the a4 register (M68k only)
      - names:
          - -ffixed-a5
        argument: ""
        description: Reserve the a5 register (M68k only)
      - names:
          - -ffixed-a6
        argument: ""
        description: Reserve the a6 register (M68k only)
      - names:
          - -ffixed-d0
        argument: ""
        description: Reserve the d0 register (M68k only)
      - names:
          - -ffixed-d1
        argument: ""
        description: Reserve the d1 register (M68k only)
      - names:
          - -ffixed-d2
        argument: ""
        description: Reserve the d2 register (M68k only)
      - names:
          - -ffixed-d3
        argument: ""
        description: Reserve the d3 register (M68k only)
      - names:
          - -ffixed-d4
        argument: ""
        description: Reserve the d4 register (M68k only)
      - names:
          - -ffixed-d5
        argument: ""
        description: Reserve the d5 register (M68k only)
      - names:
          - -ffixed-d6
        argument: ""
        description: Reserve the d6 register (M68k only)
      - names:
          - -ffixed-d7
        argument: ""
        description: Reserve the d7 register (M68k only)
      - names:
          - -ffixed-point
        argument: ""
        description: Enable fixed point types
      - names:
          - -ffixed-r19
        argument: ""
        description: Reserve register r19 (Hexagon only)
      - names:
          - -ffixed-r9
        argument: ""
        description: Reserve the r9 register (ARM only)
      - names:
          - -ffixed-x10
        argument: ""
        description: Reserve the x10 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x11
        argument: ""
        description: Reserve the x11 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x12
        argument: ""
        description: Reserve the x12 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x13
        argument: ""
        description: Reserve the x13 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x14
        argument: ""
        description: Reserve the x14 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x15
        argument: ""
        description: Reserve the x15 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x16
        argument: ""
        description: Reserve the x16 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x17
        argument: ""
        description: Reserve the x17 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x18
        argument: ""
        description: Reserve the x18 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x19
        argument: ""
        description: Reserve the x19 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x1
        argument: ""
        description: Reserve the x1 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x20
        argument: ""
        description: Reserve the x20 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x21
        argument: ""
        description: Reserve the x21 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x22
        argument: ""
        description: Reserve the x22 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x23
        argument: ""
        description: Reserve the x23 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x24
        argument: ""
        description: Reserve the x24 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x25
        argument: ""
        description: Reserve the x25 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x26
        argument: ""
        description: Reserve the x26 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x27
        argument: ""
        description: Reserve the x27 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x28
        argument: ""
        description: Reserve the x28 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x29
        argument: ""
        description: Reserve the x29 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x2
        argument: ""
        description: Reserve the x2 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x30
        argument: ""
        description: Reserve the x30 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x31
        argument: ""
        description: Reserve the x31 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x3
        argument: ""
        description: Reserve the x3 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x4
        argument: ""
        description: Reserve the x4 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x5
        argument: ""
        description: Reserve the x5 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x6
        argument: ""
        description: Reserve the x6 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x7
        argument: ""
        description: Reserve the x7 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x8
        argument: ""
        description: Reserve the x8 register (AArch64/RISC-V only)
      - names:
          - -ffixed-x9
        argument: ""
        description: Reserve the x9 register (AArch64/RISC-V only)
      - names:
          - -fforce-dwarf-frame
        argument: ""
        description: Always emit a debug frame section
      - names:
          - -fforce-emit-vtables
        argument: ""
        description: Emits more virtual tables to improve devirtualization
      - names:
          - -fforce-enable-int128
        argument: ""
        description: Enable support for int128_t type
      - names:
          - -ffp-contract
        argument: <value>
        description: 'Form fused FP ops (e.g. FMAs): fast (fuses across statements disregarding pragmas) | on (only fuses in the same statement unless dictated by pragmas) | off (never fuses) | fast-honor-pragmas (fuses across statements unless diectated by pragmas). Default is ''fast'' for CUDA, ''fast-honor-pragmas'' for HIP, and ''on'' otherwise.'
      - names:
          - -ffp-eval-method
        argument: <value>
        description: Specifies the evaluation method to use for floating-point arithmetic.
      - names:
          - -ffp-exception-behavior
        argument: <value>
        description: Specifies the exception behavior of floating-point operations.
      - names:
          - -ffp-model
        argument: <value>
        description: Controls the semantics of floating-point calculations.
      - names:
          - -ffreestanding
        argument: ""
        description: Assert that the compilation takes place in a freestanding environment
      - names:
          - -ffuchsia-api-level
        argument: <value>
        description: Set Fuchsia API level
      - names:
          - -ffunction-sections
        argument: ""
        description: Place each function in its own section
      - names:
          - -fglobal-isel
        argument: ""
        description: Enables the global instruction selector
      - names:
          - -fgnu-keywords
        argument: ""
        description: Allow GNU-extension keywords regardless of language standard
      - names:
          - -fgnu-runtime
        argument: ""
        description: Generate output compatible with the standard GNU Objective-C runtime
      - names:
          - -fgnu89-inline
        argument: ""
        description: Use the gnu89 inline semantics
      - names:
          - -fgnuc-version
        argument: <value>
        description: Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
      - names:
          - -fgpu-allow-device-init
        argument: ""
        description: Allow device side init function in HIP (experimental)
      - names:
          - -fgpu-default-stream
        argument: <value>
        description: Specify default stream. The default value is 'legacy'. (HIP only)
      - names:
          - -fgpu-defer-diag
        argument: ""
        description: Defer host/device related diagnostic messages for CUDA/HIP
      - names:
          - -fgpu-flush-denormals-to-zero
        argument: ""
        description: Flush denormal floating point values to zero in CUDA/HIP device mode.
      - names:
          - -fgpu-rdc
        argument: ""
        description: Generate relocatable device code, also known as separate compilation mode
      - names:
          - -fgpu-sanitize
        argument: ""
        description: Enable sanitizer for AMDGPU target
      - names:
          - -fhip-fp32-correctly-rounded-divide-sqrt
        argument: ""
        description: Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
      - names:
          - -fhip-kernel-arg-name
        argument: ""
        description: Specify that kernel argument names are preserved (HIP only)
      - names:
          - -fhip-new-launch-api
        argument: ""
        description: Use new kernel launching API for HIP
      - names:
          - -fignore-exceptions
        argument: ""
        description: Enable support for ignoring exception handling constructs
      - names:
          - -fimplicit-module-maps
        argument: ""
        description: Implicitly search the file system for module map files.
      - names:
          - -finline-functions
        argument: ""
        description: Inline suitable functions
      - names:
          - -finline-hint-functions
        argument: ""
        description: Inline functions which are (explicitly or implicitly) marked inline
      - names:
          - -finput-charset
        argument: <value>
        description: Specify the default character set for source files
      - names:
          - -finstrument-function-entry-bare
        argument: ""
        description: Instrument function entry only, after inlining, without arguments to the instrumentation call
      - names:
          - -finstrument-functions-after-inlining
        argument: ""
        description: Like -finstrument-functions, but insert the calls after inlining
      - names:
          - -finstrument-functions
        argument: ""
        description: Generate calls to instrument function entry and exit
      - names:
          - -fintegrated-as
        argument: ""
        description: Enable the integrated assembler
      - names:
          - -fintegrated-cc1
        argument: ""
        description: Run cc1 in-process
      - names:
          - -fintegrated-objemitter
        argument: ""
        description: Use internal machine object code emitter.
      - names:
          - -fjmc
        argument: ""
        description: Enable just-my-code debugging
      - names:
          - -fjump-tables
        argument: ""
        description: Use jump tables for lowering switches
      - names:
          - -fkeep-static-consts
        argument: ""
        description: Keep static const variables if unused
      - names:
          - -flax-vector-conversions
        argument: <value>
        description: Enable implicit vector bit-casts
      - names:
          - -flto-jobs
        argument: <value>
        description: Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
      - names:
          - -flto
        argument: auto
        description: Enable LTO in 'full' mode
      - names:
          - -flto
        argument: jobserver
        description: Enable LTO in 'full' mode
      - names:
          - -flto
        argument: <value>
        description: Set LTO mode
      - names:
          - -flto
        argument: ""
        description: Enable LTO in 'full' mode
      - names:
          - -fmacro-prefix-map
        argument: <value>
        description: remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
      - names:
          - -fmath-errno
        argument: ""
        description: Require math functions to indicate errors by setting errno
      - names:
          - -fmax-tokens
        argument: <value>
        description: Max total number of preprocessed tokens for -Wmax-tokens.
      - names:
          - -fmax-type-align
        argument: <value>
        description: Specify the maximum alignment to enforce on pointers lacking an explicit alignment
      - names:
          - -fmemory-profile
        argument: <directory>
        description: Enable heap memory profiling and dump results into <directory>
      - names:
          - -fmemory-profile
        argument: ""
        description: Enable heap memory profiling
      - names:
          - -fmerge-all-constants
        argument: ""
        description: Allow merging of constants
      - names:
          - -fmessage-length
        argument: <value>
        description: Format message diagnostics so that they fit within N columns
      - names:
          - -fminimize-whitespace
        argument: ""
        description: Minimize whitespace when emitting preprocessor output
      - names:
          - -fmodule-file
        argument: '[<name>=]<file>'
        description: Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
      - names:
          - -fmodule-header
        argument: <kind>
        description: Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
      - names:
          - -fmodule-header
        argument: ""
        description: Build a C++20 Header Unit from a header.
      - names:
          - -fmodule-map-file
        argument: <file>
        description: Load this module map file
      - names:
          - -fmodule-name
        argument: <name>
        description: Specify the name of the module to build
      - names:
          - -fmodules-cache-path
        argument: <directory>
        description: Specify the module cache path
      - names:
          - -fmodules-decluse
        argument: ""
        description: Require declaration of modules used within a module
      - names:
          - -fmodules-disable-diagnostic-validation
        argument: ""
        description: Disable validation of the diagnostic options when loading the module
      - names:
          - -fmodules-ignore-macro
        argument: <value>
        description: Ignore the definition of the given macro when building and loading modules
      - names:
          - -fmodules-prune-after
        argument: <seconds>
        description: Specify the interval (in seconds) after which a module file will be considered unused
      - names:
          - -fmodules-prune-interval
        argument: <seconds>
        description: Specify the interval (in seconds) between attempts to prune the module cache
      - names:
          - -fmodules-search-all
        argument: ""
        description: Search even non-imported modules to resolve references
      - names:
          - -fmodules-strict-decluse
        argument: ""
        description: Like -fmodules-decluse but requires all headers to be in modules
      - names:
          - -fmodules-ts
        argument: ""
        description: Enable support for the C++ Modules TS
      - names:
          - -fmodules-user-build-path
        argument: <directory>
        description: Specify the module user build path
      - names:
          - -fmodules-validate-input-files-content
        argument: ""
        description: Validate PCM input files based on content if mtime differs
      - names:
          - -fmodules-validate-once-per-build-session
        argument: ""
        description: Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
      - names:
          - -fmodules-validate-system-headers
        argument: ""
        description: Validate the system headers that a module depends on when loading the module
      - names:
          - -fmodules
        argument: ""
        description: Enable the 'modules' language feature
      - names:
          - -fms-compatibility-version
        argument: <value>
        description: Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
      - names:
          - -fms-compatibility
        argument: ""
        description: Enable full Microsoft Visual C++ compatibility
      - names:
          - -fms-extensions
        argument: ""
        description: Accept some non-standard constructs supported by the Microsoft compiler
      - names:
          - -fms-hotpatch
        argument: ""
        description: Ensure that all functions can be hotpatched at runtime
      - names:
          - -fmsc-version
        argument: <value>
        description: Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
      - names:
          - -fnew-alignment
        argument: <align>
        description: Specifies the largest alignment guaranteed by '::operator new(size_t)'
      - names:
          - -fnew-infallible
        argument: ""
        description: Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
      - names:
          - -fno-aapcs-bitfield-width
        argument: ""
        description: Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
      - names:
          - -fno-access-control
        argument: ""
        description: Disable C++ access control
      - names:
          - -fno-addrsig
        argument: ""
        description: Don't emit an address-significance table
      - names:
          - -fno-assume-sane-operator-new
        argument: ""
        description: Don't assume that C++'s global operator new can't alias any pointer
      - names:
          - -fno-autolink
        argument: ""
        description: Disable generation of linker directives for automatic library linking
      - names:
          - -fno-builtin-
        argument: <value>
        description: Disable implicit builtin knowledge of a specific function
      - names:
          - -fno-builtin
        argument: ""
        description: Disable implicit builtin knowledge of functions
      - names:
          - -fno-c++-static-destructors
        argument: ""
        description: Disable C++ static destructor registration
      - names:
          - -fno-char8_t
        argument: ""
        description: Disable C++ builtin type char8_t
      - names:
          - -fno-color-diagnostics
        argument: ""
        description: Disable colors in diagnostics
      - names:
          - -fno-common
        argument: ""
        description: Compile common globals like normal definitions
      - names:
          - -fno-complete-member-pointers
        argument: ""
        description: Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
      - names:
          - -fno-constant-cfstrings
        argument: ""
        description: Disable creation of CodeFoundation-type constant strings
      - names:
          - -fno-coverage-mapping
        argument: ""
        description: Disable code coverage analysis
      - names:
          - -fno-crash-diagnostics
        argument: ""
        description: Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
      - names:
          - -fno-cuda-approx-transcendentals
        argument: ""
        description: Don't use approximate transcendental functions
      - names:
          - -fno-cxx-modules
        argument: ""
        description: Disable modules for C++
      - names:
          - -fno-debug-macro
        argument: ""
        description: Do not emit macro debug information
      - names:
          - -fno-declspec
        argument: ""
        description: Disallow __declspec as a keyword
      - names:
          - -fno-delayed-template-parsing
        argument: ""
        description: Disable delayed template parsing
      - names:
          - -fno-delete-null-pointer-checks
        argument: ""
        description: Do not treat usage of null pointers as undefined behavior
      - names:
          - -fno-diagnostics-fixit-info
        argument: ""
        description: Do not include fixit information in diagnostics
      - names:
          - -fno-digraphs
        argument: ""
        description: Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
      - names:
          - -fno-direct-access-external-data
        argument: ""
        description: Use GOT indirection to reference external data symbols
      - names:
          - -fno-discard-value-names
        argument: ""
        description: Do not discard value names in LLVM IR
      - names:
          - -fno-dollars-in-identifiers
        argument: ""
        description: Disallow '$' in identifiers
      - names:
          - -fno-double-square-bracket-attributes
        argument: ""
        description: Disable '[[]]' attributes in all C and C++ language modes
      - names:
          - -fno-elide-constructors
        argument: ""
        description: Disable C++ copy constructor elision
      - names:
          - -fno-elide-type
        argument: ""
        description: Do not elide types when printing diagnostics
      - names:
          - -fno-eliminate-unused-debug-types
        argument: ""
        description: Emit debug info for defined but unused types
      - names:
          - -fno-exceptions
        argument: ""
        description: Disable support for exception handling
      - names:
          - -fno-experimental-relative-c++-abi-vtables
        argument: ""
        description: Do not use the experimental C++ class ABI for classes with virtual tables
      - names:
          - -fno-file-reproducible
        argument: ""
        description: Use the host's platform-specific path separator character when expanding the __FILE__ macro
      - names:
          - -fno-fine-grained-bitfield-accesses
        argument: ""
        description: Use large-integer access for consecutive bitfield runs.
      - names:
          - -fno-finite-loops
        argument: ""
        description: Do not assume that any loop is finite.
      - names:
          - -fno-fixed-point
        argument: ""
        description: Disable fixed point types
      - names:
          - -fno-force-enable-int128
        argument: ""
        description: Disable support for int128_t type
      - names:
          - -fno-global-isel
        argument: ""
        description: Disables the global instruction selector
      - names:
          - -fno-gnu-inline-asm
        argument: ""
        description: Disable GNU style inline asm
      - names:
          - -fno-gpu-allow-device-init
        argument: ""
        description: Don't allow device side init function in HIP (experimental)
      - names:
          - -fno-gpu-defer-diag
        argument: ""
        description: Don't defer host/device related diagnostic messages for CUDA/HIP
      - names:
          - -fno-hip-fp32-correctly-rounded-divide-sqrt
        argument: ""
        description: Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
      - names:
          - -fno-hip-kernel-arg-name
        argument: ""
        description: Don't specify that kernel argument names are preserved (HIP only)
      - names:
          - -fno-hip-new-launch-api
        argument: ""
        description: Don't use new kernel launching API for HIP
      - names:
          - -fno-integrated-as
        argument: ""
        description: Disable the integrated assembler
      - names:
          - -fno-integrated-cc1
        argument: ""
        description: Spawn a separate process for each cc1
      - names:
          - -fno-integrated-objemitter
        argument: ""
        description: Use external machine object code emitter.
      - names:
          - -fno-jump-tables
        argument: ""
        description: Do not use jump tables for lowering switches
      - names:
          - -fno-keep-static-consts
        argument: ""
        description: Don't keep static const variables if unused
      - names:
          - -fno-knr-functions
        argument: ""
        description: Disable support for K&R C function declarations
      - names:
          - -fno-lto
        argument: ""
        description: Disable LTO mode (default)
      - names:
          - -fno-memory-profile
        argument: ""
        description: Disable heap memory profiling
      - names:
          - -fno-merge-all-constants
        argument: ""
        description: Disallow merging of constants
      - names:
          - -fno-new-infallible
        argument: ""
        description: Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
      - names:
          - -fno-objc-infer-related-result-type
        argument: ""
        description: do not infer Objective-C related result type based on method family
      - names:
          - -fno-offload-lto
        argument: ""
        description: Disable LTO mode (default) for offload compilation
      - names:
          - -fno-openmp-extensions
        argument: ""
        description: Disable all Clang extensions for OpenMP directives and clauses
      - names:
          - -fno-openmp-new-driver
        argument: ""
        description: Don't use the new driver for OpenMP offloading.
      - names:
          - -fno-operator-names
        argument: ""
        description: Do not treat C++ operator name keywords as synonyms for operators
      - names:
          - -fno-optimize-sibling-calls
        argument: ""
        description: Disable tail call optimization, keeping the call stack accurate
      - names:
          - -fno-pch-codegen
        argument: ""
        description: Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
      - names:
          - -fno-pch-debuginfo
        argument: ""
        description: Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
      - names:
          - -fno-plt
        argument: ""
        description: Use GOT indirection instead of PLT to make external function calls (x86 only)
      - names:
          - -fno-preserve-as-comments
        argument: ""
        description: Do not preserve comments in inline assembly
      - names:
          - -fno-profile-generate
        argument: ""
        description: Disable generation of profile instrumentation.
      - names:
          - -fno-profile-instr-generate
        argument: ""
        description: Disable generation of profile instrumentation.
      - names:
          - -fno-profile-instr-use
        argument: ""
        description: Disable using instrumentation data for profile-guided optimization
      - names:
          - -fno-pseudo-probe-for-profiling
        argument: ""
        description: Do not emit pseudo probes for sample profiling
      - names:
          - -fno-register-global-dtors-with-atexit
        argument: ""
        description: Don't use atexit or __cxa_atexit to register global destructors
      - names:
          - -fno-rtlib-add-rpath
        argument: ""
        description: Do not add -rpath with architecture-specific resource directory to the linker flags
      - names:
          - -fno-rtti-data
        argument: ""
        description: Disable generation of RTTI data
      - names:
          - -fno-rtti
        argument: ""
        description: Disable generation of rtti information
      - names:
          - -fno-sanitize-address-globals-dead-stripping
        argument: ""
        description: Disable linker dead stripping of globals in AddressSanitizer
      - names:
          - -fno-sanitize-address-outline-instrumentation
        argument: ""
        description: Use default code inlining logic for the address sanitizer
      - names:
          - -fno-sanitize-address-poison-custom-array-cookie
        argument: ""
        description: Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
      - names:
          - -fno-sanitize-address-use-after-scope
        argument: ""
        description: Disable use-after-scope detection in AddressSanitizer
      - names:
          - -fno-sanitize-address-use-odr-indicator
        argument: ""
        description: Disable ODR indicator globals
      - names:
          - -fno-sanitize-cfi-canonical-jump-tables
        argument: ""
        description: Do not make the jump table addresses canonical in the symbol table
      - names:
          - -fno-sanitize-cfi-cross-dso
        argument: ""
        description: Disable control flow integrity (CFI) checks for cross-DSO calls.
      - names:
          - -fno-sanitize-coverage
        argument: <value>
        description: Disable features of coverage instrumentation for Sanitizers
      - names:
          - -fno-sanitize-hwaddress-experimental-aliasing
        argument: ""
        description: Disable aliasing mode in HWAddressSanitizer
      - names:
          - -fno-sanitize-ignorelist
        argument: ""
        description: Don't use ignorelist file for sanitizers
      - names:
          - -fno-sanitize-memory-param-retval
        argument: ""
        description: Disable detection of uninitialized parameters and return values
      - names:
          - -fno-sanitize-memory-track-origins
        argument: ""
        description: Disable origins tracking in MemorySanitizer
      - names:
          - -fno-sanitize-memory-use-after-dtor
        argument: ""
        description: Disable use-after-destroy detection in MemorySanitizer
      - names:
          - -fno-sanitize-recover
        argument: <value>
        description: Disable recovery for specified sanitizers
      - names:
          - -fno-sanitize-stats
        argument: ""
        description: Disable sanitizer statistics gathering.
      - names:
          - -fno-sanitize-thread-atomics
        argument: ""
        description: Disable atomic operations instrumentation in ThreadSanitizer
      - names:
          - -fno-sanitize-thread-func-entry-exit
        argument: ""
        description: Disable function entry/exit instrumentation in ThreadSanitizer
      - names:
          - -fno-sanitize-thread-memory-access
        argument: ""
        description: Disable memory access instrumentation in ThreadSanitizer
      - names:
          - -fno-sanitize-trap
        argument: <value>
        description: Disable trapping for specified sanitizers
      - names:
          - -fno-sanitize-trap
        argument: ""
        description: Disable trapping for all sanitizers
      - names:
          - -fno-short-wchar
        argument: ""
        description: Force wchar_t to be an unsigned int
      - names:
          - -fno-show-column
        argument: ""
        description: Do not include column number on diagnostics
      - names:
          - -fno-show-source-location
        argument: ""
        description: Do not include source location information with diagnostics
      - names:
          - -fno-signed-char
        argument: ""
        description: char is unsigned
      - names:
          - -fno-signed-zeros
        argument: ""
        description: Allow optimizations that ignore the sign of floating point zeros
      - names:
          - -fno-spell-checking
        argument: ""
        description: Disable spell-checking
      - names:
          - -fno-split-machine-functions
        argument: ""
        description: Disable late function splitting using profile information (x86 ELF)
      - names:
          - -fno-split-stack
        argument: ""
        description: Wouldn't use segmented stack
      - names:
          - -fno-stack-clash-protection
        argument: ""
        description: Disable stack clash protection
      - names:
          - -fno-stack-protector
        argument: ""
        description: Disable the use of stack protectors
      - names:
          - -fno-standalone-debug
        argument: ""
        description: Limit debug information produced to reduce size of debug binary
      - names:
          - -fno-strict-float-cast-overflow
        argument: ""
        description: Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
      - names:
          - -fno-strict-return
        argument: ""
        description: Don't treat control flow paths that fall off the end of a non-void function as unreachable
      - names:
          - -fno-sycl
        argument: ""
        description: Disables SYCL kernels compilation for device
      - names:
          - -fno-temp-file
        argument: ""
        description: Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
      - names:
          - -fno-threadsafe-statics
        argument: ""
        description: Do not emit code to make initialization of local statics thread safe
      - names:
          - -fno-trigraphs
        argument: ""
        description: Do not process trigraph sequences
      - names:
          - -fno-unique-section-names
        argument: ""
        description: Don't use unique names for text and data sections
      - names:
          - -fno-unroll-loops
        argument: ""
        description: Turn off loop unroller
      - names:
          - -fno-use-cxa-atexit
        argument: ""
        description: Don't use __cxa_atexit for calling destructors
      - names:
          - -fno-use-init-array
        argument: ""
        description: Use .ctors/.dtors instead of .init_array/.fini_array
      - names:
          - -fno-visibility-inlines-hidden-static-local-var
        argument: ""
        description: Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
      - names:
          - -fno-xray-function-index
        argument: ""
        description: Omit function index section at the expense of single-function patching performance
      - names:
          - -fno-zero-initialized-in-bss
        argument: ""
        description: Don't place zero initialized data in BSS
      - names:
          - -fobjc-arc-exceptions
        argument: ""
        description: Use EH-safe code when synthesizing retains and releases in -fobjc-arc
      - names:
          - -fobjc-arc
        argument: ""
        description: Synthesize retain and release calls for Objective-C pointers
      - names:
          - -fobjc-disable-direct-methods-for-testing
        argument: ""
        description: Ignore attribute objc_direct so that direct methods can be tested
      - names:
          - -fobjc-encode-cxx-class-template-spec
        argument: ""
        description: Fully encode c++ class template specialization
      - names:
          - -fobjc-exceptions
        argument: ""
        description: Enable Objective-C exceptions
      - names:
          - -fobjc-runtime
        argument: <value>
        description: Specify the target Objective-C runtime kind and version
      - names:
          - -fobjc-weak
        argument: ""
        description: Enable ARC-style weak references in Objective-C
      - names:
          - -foffload-lto
        argument: <value>
        description: Set LTO mode for offload compilation
      - names:
          - -foffload-lto
        argument: ""
        description: Enable LTO in 'full' mode for offload compilation
      - names:
          - -fopenmp-extensions
        argument: ""
        description: Enable all Clang extensions for OpenMP directives and clauses
      - names:
          - -fopenmp-implicit-rpath
        argument: ""
        description: Set rpath on OpenMP executables
      - names:
          - -fopenmp-new-driver
        argument: ""
        description: Use the new driver for OpenMP offloading.
      - names:
          - -fopenmp-offload-mandatory
        argument: ""
        description: Do not create a host fallback if offloading to the device fails.
      - names:
          - -fopenmp-simd
        argument: ""
        description: Emit OpenMP code only for SIMD-based constructs.
      - names:
          - -fopenmp-target-debug
        argument: ""
        description: Enable debugging in the OpenMP offloading device RTL
      - names:
          - -fopenmp-targets
        argument: <value>
        description: Specify comma-separated list of triples OpenMP offloading targets to be supported
      - names:
          - -fopenmp-version
        argument: <value>
        description: Set OpenMP version (e.g. 45 for OpenMP 4.5, 50 for OpenMP 5.0). Default value is 50.
      - names:
          - -fopenmp
        argument: ""
        description: Parse OpenMP pragmas and generate parallel code.
      - names:
          - -foptimization-record-file
        argument: <file>
        description: Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
      - names:
          - -foptimization-record-passes
        argument: <regex>
        description: Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
      - names:
          - -forder-file-instrumentation
        argument: ""
        description: Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
      - names:
          - -fpack-struct
        argument: <value>
        description: Specify the default maximum struct packing alignment
      - names:
          - -fpascal-strings
        argument: ""
        description: Recognize and construct Pascal-style string literals
      - names:
          - -fpass-plugin
        argument: <dsopath>
        description: Load pass plugin from a dynamic shared object file (only with new pass manager).
      - names:
          - -fpatchable-function-entry
        argument: <N,M>
        description: Generate M NOPs before function entry and N-M NOPs after function entry
      - names:
          - -fpcc-struct-return
        argument: ""
        description: Override the default ABI to return all structs on the stack
      - names:
          - -fpch-codegen
        argument: ""
        description: Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
      - names:
          - -fpch-debuginfo
        argument: ""
        description: Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
      - names:
          - -fpch-instantiate-templates
        argument: ""
        description: Instantiate templates already while building a PCH
      - names:
          - -fpch-validate-input-files-content
        argument: ""
        description: Validate PCH input files based on content if mtime differs
      - names:
          - -fplugin-arg-
        argument: <name>-<arg>
        description: Pass <arg> to plugin <name>
      - names:
          - -fplugin
        argument: <dsopath>
        description: Load the named plugin (dynamic shared object)
      - names:
          - -fprebuilt-implicit-modules
        argument: ""
        description: Look up implicit modules in the prebuilt module path
      - names:
          - -fprebuilt-module-path
        argument: <directory>
        description: Specify the prebuilt module path
      - names:
          - -fproc-stat-report
        argument: <value>
        description: Save subprocess statistics to the given file
      - names:
          - -fproc-stat-report
        argument: <value>
        description: Print subprocess statistics
      - names:
          - -fprofile-exclude-files
        argument: <value>
        description: Instrument only functions from files where names don't match all the regexes separated by a semi-colon
      - names:
          - -fprofile-filter-files
        argument: <value>
        description: Instrument only functions from files where names match any regex separated by a semi-colon
      - names:
          - -fprofile-function-groups
        argument: <N>
        description: Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
      - names:
          - -fprofile-generate
        argument: <directory>
        description: Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
      - names:
          - -fprofile-generate
        argument: ""
        description: Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
      - names:
          - -fprofile-instr-generate
        argument: <file>
        description: Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
      - names:
          - -fprofile-instr-generate
        argument: ""
        description: Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
      - names:
          - -fprofile-instr-use
        argument: <value>
        description: Use instrumentation data for profile-guided optimization
      - names:
          - -fprofile-list
        argument: <value>
        description: Filename defining the list of functions/files to instrument
      - names:
          - -fprofile-remapping-file
        argument: <file>
        description: Use the remappings described in <file> to match the profile data against names in the program
      - names:
          - -fprofile-sample-accurate
        argument: ""
        description: Specifies that the sample profile is accurate
      - names:
          - -fprofile-sample-use
        argument: <value>
        description: Enable sample-based profile guided optimizations
      - names:
          - -fprofile-selected-function-group
        argument: <i>
        description: Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
      - names:
          - -fprofile-update
        argument: <method>
        description: Set update method of profile counters
      - names:
          - -fprofile-use
        argument: <pathname>
        description: Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
      - names:
          - -fprotect-parens
        argument: ""
        description: Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
      - names:
          - -fpseudo-probe-for-profiling
        argument: ""
        description: Emit pseudo probes for sample profiling
      - names:
          - -frandomize-layout-seed-file
        argument: <file>
        description: File holding the seed used by the randomize structure layout feature
      - names:
          - -frandomize-layout-seed
        argument: <seed>
        description: The seed used by the randomize structure layout feature
      - names:
          - -freciprocal-math
        argument: ""
        description: Allow division operations to be reassociated
      - names:
          - -freg-struct-return
        argument: ""
        description: Override the default ABI to return small structs in registers
      - names:
          - -fregister-global-dtors-with-atexit
        argument: ""
        description: Use atexit or __cxa_atexit to register global destructors
      - names:
          - -frelaxed-template-template-args
        argument: ""
        description: Enable C++17 relaxed template template argument matching
      - names:
          - -freroll-loops
        argument: ""
        description: Turn on loop reroller
      - names:
          - -fropi
        argument: ""
        description: Generate read-only position independent code (ARM only)
      - names:
          - -frtlib-add-rpath
        argument: ""
        description: Add -rpath with architecture-specific resource directory to the linker flags
      - names:
          - -frwpi
        argument: ""
        description: Generate read-write position independent code (ARM only)
      - names:
          - -fsanitize-address-destructor
        argument: <value>
        description: Set destructor type used in ASan instrumentation
      - names:
          - -fsanitize-address-field-padding
        argument: <value>
        description: Level of field padding for AddressSanitizer
      - names:
          - -fsanitize-address-globals-dead-stripping
        argument: ""
        description: Enable linker dead stripping of globals in AddressSanitizer
      - names:
          - -fsanitize-address-outline-instrumentation
        argument: ""
        description: Always generate function calls for address sanitizer instrumentation
      - names:
          - -fsanitize-address-poison-custom-array-cookie
        argument: ""
        description: Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
      - names:
          - -fsanitize-address-use-after-return
        argument: <mode>
        description: Select the mode of detecting stack use-after-return in AddressSanitizer
      - names:
          - -fsanitize-address-use-after-scope
        argument: ""
        description: Enable use-after-scope detection in AddressSanitizer
      - names:
          - -fsanitize-address-use-odr-indicator
        argument: ""
        description: Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
      - names:
          - -fsanitize-blacklist
        argument: <value>
        description: Alias for -fsanitize-ignorelist=
      - names:
          - -fsanitize-cfi-canonical-jump-tables
        argument: ""
        description: Make the jump table addresses canonical in the symbol table
      - names:
          - -fsanitize-cfi-cross-dso
        argument: ""
        description: Enable control flow integrity (CFI) checks for cross-DSO calls.
      - names:
          - -fsanitize-cfi-icall-generalize-pointers
        argument: ""
        description: Generalize pointers in CFI indirect call type signature checks
      - names:
          - -fsanitize-coverage-allowlist
        argument: <value>
        description: Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
      - names:
          - -fsanitize-coverage-blacklist
        argument: <value>
        description: Deprecated, use -fsanitize-coverage-ignorelist= instead
      - names:
          - -fsanitize-coverage-ignorelist
        argument: <value>
        description: Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
      - names:
          - -fsanitize-coverage-whitelist
        argument: <value>
        description: Deprecated, use -fsanitize-coverage-allowlist= instead
      - names:
          - -fsanitize-coverage
        argument: <value>
        description: Specify the type of coverage instrumentation for Sanitizers
      - names:
          - -fsanitize-hwaddress-abi
        argument: <value>
        description: Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
      - names:
          - -fsanitize-hwaddress-experimental-aliasing
        argument: ""
        description: Enable aliasing mode in HWAddressSanitizer
      - names:
          - -fsanitize-ignorelist
        argument: <value>
        description: Path to ignorelist file for sanitizers
      - names:
          - -fsanitize-memory-param-retval
        argument: ""
        description: Enable detection of uninitialized parameters and return values
      - names:
          - -fsanitize-memory-track-origins
        argument: <value>
        description: Enable origins tracking in MemorySanitizer
      - names:
          - -fsanitize-memory-track-origins
        argument: ""
        description: Enable origins tracking in MemorySanitizer
      - names:
          - -fsanitize-memory-use-after-dtor
        argument: ""
        description: Enable use-after-destroy detection in MemorySanitizer
      - names:
          - -fsanitize-memtag-mode
        argument: <value>
        description: Set default MTE mode to 'sync' (default) or 'async'
      - names:
          - -fsanitize-recover
        argument: <value>
        description: Enable recovery for specified sanitizers
      - names:
          - -fsanitize-stats
        argument: ""
        description: Enable sanitizer statistics gathering.
      - names:
          - -fsanitize-system-blacklist
        argument: <value>
        description: Alias for -fsanitize-system-ignorelist=
      - names:
          - -fsanitize-system-ignorelist
        argument: <value>
        description: Path to system ignorelist file for sanitizers
      - names:
          - -fsanitize-thread-atomics
        argument: ""
        description: Enable atomic operations instrumentation in ThreadSanitizer (default)
      - names:
          - -fsanitize-thread-func-entry-exit
        argument: ""
        description: Enable function entry/exit instrumentation in ThreadSanitizer (default)
      - names:
          - -fsanitize-thread-memory-access
        argument: ""
        description: Enable memory access instrumentation in ThreadSanitizer (default)
      - names:
          - -fsanitize-trap
        argument: <value>
        description: Enable trapping for specified sanitizers
      - names:
          - -fsanitize-trap
        argument: ""
        description: Enable trapping for all sanitizers
      - names:
          - -fsanitize-undefined-strip-path-components
        argument: <number>
        description: Strip (or keep only, if negative) a given number of path components when emitting check metadata.
      - names:
          - -fsanitize
        argument: <check>
        description: Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
      - names:
          - -fsave-optimization-record
        argument: <format>
        description: Generate an optimization record file in a specific format
      - names:
          - -fsave-optimization-record
        argument: ""
        description: Generate a YAML optimization record file
      - names:
          - -fseh-exceptions
        argument: ""
        description: Use SEH style exceptions
      - names:
          - -fshort-enums
        argument: ""
        description: Allocate to an enum type only as many bytes as it needs for the declared range of possible values
      - names:
          - -fshort-wchar
        argument: ""
        description: Force wchar_t to be a short unsigned int
      - names:
          - -fshow-overloads
        argument: <value>
        description: Which overload candidates to show when overload resolution fails. Defaults to 'all'
      - names:
          - -fshow-skipped-includes
        argument: ""
        description: Show skipped includes in -H output.
      - names:
          - -fsigned-char
        argument: ""
        description: char is signed
      - names:
          - -fsized-deallocation
        argument: ""
        description: Enable C++14 sized global deallocation functions
      - names:
          - -fsjlj-exceptions
        argument: ""
        description: Use SjLj style exceptions
      - names:
          - -fslp-vectorize
        argument: ""
        description: Enable the superword-level parallelism vectorization passes
      - names:
          - -fsplit-dwarf-inlining
        argument: ""
        description: Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
      - names:
          - -fsplit-lto-unit
        argument: ""
        description: Enables splitting of the LTO unit
      - names:
          - -fsplit-machine-functions
        argument: ""
        description: Enable late function splitting using profile information (x86 ELF)
      - names:
          - -fsplit-stack
        argument: ""
        description: Use segmented stack
      - names:
          - -fstack-clash-protection
        argument: ""
        description: Enable stack clash protection
      - names:
          - -fstack-protector-all
        argument: ""
        description: Enable stack protectors for all functions
      - names:
          - -fstack-protector-strong
        argument: ""
        description: Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
      - names:
          - -fstack-protector
        argument: ""
        description: 'Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function''s return address. The reference stack guard value is stored in a global variable.'
      - names:
          - -fstack-size-section
        argument: ""
        description: Emit section containing metadata on function stack sizes
      - names:
          - -fstack-usage
        argument: ""
        description: Emit .su file containing information on function stack sizes
      - names:
          - -fstandalone-debug
        argument: ""
        description: Emit full debug info for all types used by the program
      - names:
          - -fstrict-enums
        argument: ""
        description: Enable optimizations based on the strict definition of an enum's value range
      - names:
          - -fstrict-flex-arrays
        argument: <n>
        description: Enable optimizations based on the strict definition of flexible arrays
      - names:
          - -fstrict-float-cast-overflow
        argument: ""
        description: Assume that overflowing float-to-int casts are undefined (default)
      - names:
          - -fstrict-vtable-pointers
        argument: ""
        description: Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
      - names:
          - -fswift-async-fp
        argument: <option>
        description: Control emission of Swift async extended frame info
      - names:
          - -fsycl
        argument: ""
        description: Enables SYCL kernels compilation for device
      - names:
          - -fsystem-module
        argument: ""
        description: Build this module as a system module. Only used with -emit-module
      - names:
          - -fthin-link-bitcode
        argument: <value>
        description: Write minimized bitcode to <file> for the ThinLTO thin link only
      - names:
          - -fthinlto-index
        argument: <value>
        description: Perform ThinLTO importing using provided function summary index
      - names:
          - -ftime-report
        argument: <value>
        description: '(For new pass manager) ''per-pass'': one report for each pass; ''per-pass-run'': one report for each pass invocation'
      - names:
          - -ftime-trace-granularity
        argument: <value>
        description: Minimum time granularity (in microseconds) traced by time profiler
      - names:
          - -ftime-trace
        argument: <value>
        description: Turn on time profiler. Generates JSON file based on output filename. Specify the path which stores the tracing output file.
      - names:
          - -ftime-trace
        argument: ""
        description: Turn on time profiler. Generates JSON file based on output filename.
      - names:
          - -ftrap-function
        argument: <value>
        description: Issue call to specified function rather than a trap instruction
      - names:
          - -ftrapv-handler
        argument: <function name>
        description: Specify the function to be called on overflow
      - names:
          - -ftrapv
        argument: ""
        description: Trap on integer overflow
      - names:
          - -ftrigraphs
        argument: ""
        description: Process trigraph sequences
      - names:
          - -ftrivial-auto-var-init-stop-after
        argument: <value>
        description: Stop initializing trivial automatic stack variables after the specified number of instances
      - names:
          - -ftrivial-auto-var-init
        argument: <value>
        description: Initialize trivial automatic stack variables. Defaults to 'uninitialized'
      - names:
          - -funique-basic-block-section-names
        argument: ""
        description: Use unique names for basic block sections (ELF Only)
      - names:
          - -funique-internal-linkage-names
        argument: ""
        description: Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
      - names:
          - -funroll-loops
        argument: ""
        description: Turn on loop unroller
      - names:
          - -fuse-cuid
        argument: <value>
        description: 'Method to generate ID''s for compilation units for single source offloading languages CUDA and HIP: ''hash'' (ID''s generated by hashing file path and command line options) | ''random'' (ID''s generated as random numbers) | ''none'' (disabled). Default is ''hash''. This option will be overridden by option ''-cuid=[ID]'' if it is specified.'
      - names:
          - -fuse-line-directives
        argument: ""
        description: 'Use #line in preprocessed output'
      - names:
          - -fvalidate-ast-input-files-content
        argument: ""
        description: Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
      - names:
          - -fveclib
        argument: <value>
        description: Use the given vector functions library
      - names:
          - -fvectorize
        argument: ""
        description: Enable the loop vectorization passes
      - names:
          - -fverbose-asm
        argument: ""
        description: Generate verbose assembly output
      - names:
          - -fvirtual-function-elimination
        argument: ""
        description: Enables dead virtual function elimination optimization. Requires -flto=full
      - names:
          - -fvisibility-dllexport
        argument: <value>
        description: The visibility for dllexport definitions [-fvisibility-from-dllstorageclass]
      - names:
          - -fvisibility-externs-dllimport
        argument: <value>
        description: The visibility for dllimport external declarations [-fvisibility-from-dllstorageclass]
      - names:
          - -fvisibility-externs-nodllstorageclass
        argument: <value>
        description: The visibility for external declarations without an explicit DLL dllstorageclass [-fvisibility-from-dllstorageclass]
      - names:
          - -fvisibility-from-dllstorageclass
        argument: ""
        description: Set the visibility of symbols in the generated code from their DLL storage class
      - names:
          - -fvisibility-global-new-delete-hidden
        argument: ""
        description: Give global C++ operator new and delete declarations hidden visibility
      - names:
          - -fvisibility-inlines-hidden-static-local-var
        argument: ""
        description: When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
      - names:
          - -fvisibility-inlines-hidden
        argument: ""
        description: Give inline C++ member functions hidden visibility by default
      - names:
          - -fvisibility-ms-compat
        argument: ""
        description: Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
      - names:
          - -fvisibility-nodllstorageclass
        argument: <value>
        description: The visibility for definitions without an explicit DLL export class [-fvisibility-from-dllstorageclass]
      - names:
          - -fvisibility
        argument: <value>
        description: Set the default symbol visibility for all global declarations
      - names:
          - -fwasm-exceptions
        argument: ""
        description: Use WebAssembly style exceptions
      - names:
          - -fwhole-program-vtables
        argument: ""
        description: Enables whole-program vtable optimization. Requires -flto
      - names:
          - -fwrapv
        argument: ""
        description: Treat signed integer overflow as two's complement
      - names:
          - -fwritable-strings
        argument: ""
        description: Store string literals as writable data
      - names:
          - -fxl-pragma-pack
        argument: ""
        description: 'Enable IBM XL #pragma pack handling'
      - names:
          - -fxray-always-emit-customevents
        argument: ""
        description: Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
      - names:
          - -fxray-always-emit-typedevents
        argument: ""
        description: Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
      - names:
          - -fxray-always-instrument
        argument: <value>
        description: 'DEPRECATED: Filename defining the whitelist for imbuing the ''always instrument'' XRay attribute.'
      - names:
          - -fxray-attr-list
        argument: <value>
        description: Filename defining the list of functions/types for imbuing XRay attributes.
      - names:
          - -fxray-function-groups
        argument: <value>
        description: Only instrument 1 of N groups
      - names:
          - -fxray-ignore-loops
        argument: ""
        description: Don't instrument functions with loops unless they also meet the minimum function size
      - names:
          - -fxray-instruction-threshold
        argument: <value>
        description: Sets the minimum function size to instrument with XRay
      - names:
          - -fxray-instrumentation-bundle
        argument: <value>
        description: 'Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is ''all''. ''function'' includes both ''function-entry'' and ''function-exit''.'
      - names:
          - -fxray-instrument
        argument: ""
        description: Generate XRay instrumentation sleds on function entry and exit
      - names:
          - -fxray-link-deps
        argument: ""
        description: Tells clang to add the link dependencies for XRay.
      - names:
          - -fxray-modes
        argument: <value>
        description: List of modes to link in by default into XRay instrumented binaries.
      - names:
          - -fxray-never-instrument
        argument: <value>
        description: 'DEPRECATED: Filename defining the whitelist for imbuing the ''never instrument'' XRay attribute.'
      - names:
          - -fxray-selected-function-group
        argument: <value>
        description: When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
      - names:
          - -fzero-call-used-regs
        argument: <value>
        description: Clear call-used registers upon function return (AArch64/x86 only)
      - names:
          - -fzvector
        argument: ""
        description: Enable System z vector language extension
      - names:
          - -F
        argument: <value>
        description: Add directory to framework include search path
      - names:
          - --gcc-toolchain
        argument: <value>
        description: 'Search for GCC installation in the specified directory on targets which commonly use GCC. The directory usually contains ''lib{,32,64}/gcc{,-cross}/$triple'' and ''include''. If specified, sysroot is skipped for GCC detection. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation'
      - names:
          - -gcodeview-ghash
        argument: ""
        description: Emit type record hashes in a .debug$H section
      - names:
          - -gcodeview
        argument: ""
        description: Generate CodeView debug information
      - names:
          - -gdwarf-2
        argument: ""
        description: Generate source-level debug information with dwarf version 2
      - names:
          - -gdwarf-3
        argument: ""
        description: Generate source-level debug information with dwarf version 3
      - names:
          - -gdwarf-4
        argument: ""
        description: Generate source-level debug information with dwarf version 4
      - names:
          - -gdwarf-5
        argument: ""
        description: Generate source-level debug information with dwarf version 5
      - names:
          - -gdwarf32
        argument: ""
        description: Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
      - names:
          - -gdwarf64
        argument: ""
        description: Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
      - names:
          - -gdwarf
        argument: ""
        description: Generate source-level debug information with the default dwarf version
      - names:
          - -gembed-source
        argument: ""
        description: Embed source text in DWARF debug sections
      - names:
          - -gen-reproducer
        argument: <value>
        description: 'Emit reproducer on (option: off, crash (default), error, always)'
      - names:
          - -gline-directives-only
        argument: ""
        description: Emit debug line info directives only
      - names:
          - -gline-tables-only
        argument: ""
        description: Emit debug line number tables only
      - names:
          - -gmodules
        argument: ""
        description: Generate debug info with external references to clang modules or precompiled headers
      - names:
          - -gno-embed-source
        argument: ""
        description: Restore the default behavior of not embedding source text in DWARF debug sections
      - names:
          - -gno-inline-line-tables
        argument: ""
        description: Don't emit inline line tables.
      - names:
          - --gpu-bundle-output
        argument: ""
        description: Bundle output files of HIP device compilation
      - names:
          - --gpu-instrument-lib
        argument: <value>
        description: Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
      - names:
          - --gpu-max-threads-per-block
        argument: <value>
        description: Default max threads per block for kernel launch bounds for HIP
      - names:
          - -gsplit-dwarf
        argument: <value>
        description: Set DWARF fission mode
      - names:
          - -gz
        argument: <value>
        description: DWARF debug sections compression type
      - names:
          - -G
        argument: <size>
        description: Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
      - names:
          - -g
        argument: ""
        description: Generate source-level debug information
      - names:
          - --help-hidden
        argument: ""
        description: Display help for hidden options
      - names:
          - -help
        argument: ""
        description: Display available options
      - names:
          - --hip-device-lib
        argument: <value>
        description: HIP device library
      - names:
          - --hip-link
        argument: ""
        description: Link clang-offload-bundler bundles for HIP
      - names:
          - --hip-path
        argument: <value>
        description: HIP runtime installation path, used for finding HIP version and adding HIP include path.
      - names:
          - --hip-version
        argument: <value>
        description: HIP version in the format of major.minor.patch
      - names:
          - --hipspv-pass-plugin
        argument: <dsopath>
        description: path to a pass plugin for HIP to SPIR-V passes.
      - names:
          - -H
        argument: ""
        description: Show header includes and nesting depth
      - names:
          - -I-
        argument: ""
        description: Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
      - names:
          - -ibuiltininc
        argument: ""
        description: 'Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it'
      - names:
          - -idirafter
        argument: <value>
        description: Add directory to AFTER include search path
      - names:
          - -iframeworkwithsysroot
        argument: <directory>
        description: Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
      - names:
          - -iframework
        argument: <value>
        description: Add directory to SYSTEM framework search path
      - names:
          - -imacros
        argument: <file>
        description: Include macros from file before parsing
      - names:
          - -include-pch
        argument: <file>
        description: Include precompiled header file
      - names:
          - -include
        argument: <file>
        description: Include file before parsing
      - names:
          - -index-header-map
        argument: ""
        description: Make the next included directory (-I or -F) an indexer header map
      - names:
          - -iprefix
        argument: <dir>
        description: Set the -iwithprefix/-iwithprefixbefore prefix
      - names:
          - -iquote
        argument: <directory>
        description: Add directory to QUOTE include search path
      - names:
          - -isysroot
        argument: <dir>
        description: Set the system root directory (usually /)
      - names:
          - -isystem-after
        argument: <directory>
        description: Add directory to end of the SYSTEM include search path
      - names:
          - -isystem
        argument: <directory>
        description: Add directory to SYSTEM include search path
      - names:
          - -ivfsoverlay
        argument: <value>
        description: Overlay the virtual filesystem described by file over the real file system
      - names:
          - -iwithprefixbefore
        argument: <dir>
        description: Set directory to include search path with prefix
      - names:
          - -iwithprefix
        argument: <dir>
        description: Set directory to SYSTEM include search path with prefix
      - names:
          - -iwithsysroot
        argument: <directory>
        description: Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
      - names:
          - -I
        argument: <dir>
        description: Add directory to the end of the list of include search paths
      - names:
          - --libomptarget-amdgcn-bc-path
        argument: <value>
        description: Path to libomptarget-amdgcn bitcode library
      - names:
          - --libomptarget-amdgpu-bc-path
        argument: <value>
        description: Path to libomptarget-amdgcn bitcode library
      - names:
          - --libomptarget-nvptx-bc-path
        argument: <value>
        description: Path to libomptarget-nvptx bitcode library
      - names:
          - -L
        argument: <dir>
        description: Add directory to library search path
      - names:
          - -mabi
        argument: quadword-atomics
        description: Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
      - names:
          - -mabi
        argument: vec-default
        description: Enable the default Altivec ABI on AIX (AIX only). Uses only volatile vector registers.
      - names:
          - -mabi
        argument: vec-extabi
        description: Enable the extended Altivec ABI on AIX (AIX only). Uses volatile and nonvolatile vector registers
      - names:
          - -mabicalls
        argument: ""
        description: Enable SVR4-style position-independent code (Mips only)
      - names:
          - -maix-struct-return
        argument: ""
        description: Return all structs in memory (PPC32 only)
      - names:
          - -malign-branch-boundary
        argument: <value>
        description: Specify the boundary's size to align branches
      - names:
          - -malign-branch
        argument: <value>
        description: Specify types of branches to align
      - names:
          - -malign-double
        argument: ""
        description: Align doubles to two words in structs (x86 only)
      - names:
          - -mamdgpu-ieee
        argument: ""
        description: Sets the IEEE bit in the expected default floating point mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
      - names:
          - -mbackchain
        argument: ""
        description: Link stack frames through backchain on System Z
      - names:
          - -mbranch-protection
        argument: <value>
        description: Enforce targets of indirect branches and function returns
      - names:
          - -mbranches-within-32B-boundaries
        argument: ""
        description: Align selected branches (fused, jcc, jmp) within 32-byte boundary
      - names:
          - -mcmodel
        argument: medany
        description: Equivalent to -mcmodel=medium, compatible with RISC-V gcc.
      - names:
          - -mcmodel
        argument: medlow
        description: Equivalent to -mcmodel=small, compatible with RISC-V gcc.
      - names:
          - -mcmse
        argument: ""
        description: Allow use of CMSE (Armv8-M Security Extensions)
      - names:
          - -mcode-object-v3
        argument: ""
        description: Legacy option to specify code object ABI V3 (AMDGPU only)
      - names:
          - -mcode-object-version
        argument: <value>
        description: Specify code object ABI version. Defaults to 4. (AMDGPU only)
      - names:
          - -mcrc
        argument: ""
        description: Allow use of CRC instructions (ARM/Mips only)
      - names:
          - -mcumode
        argument: ""
        description: Specify CU wavefront execution mode (AMDGPU only)
      - names:
          - -mdefault-visibility-export-mapping
        argument: <value>
        description: Mapping between default visibility and export
      - names:
          - -mdouble
        argument: <n
        description: Force double to be <n> bits
      - names:
          - -MD
        argument: ""
        description: Write a depfile containing user and system headers
      - names:
          - -meabi
        argument: <value>
        description: Set EABI type. Default depends on triple)
      - names:
          - -membedded-data
        argument: ""
        description: Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
      - names:
          - -menable-experimental-extensions
        argument: ""
        description: Enable use of experimental RISC-V extensions.
      - names:
          - -menable-unsafe-fp-math
        argument: ""
        description: Allow unsafe floating-point math optimizations which may decrease precision
      - names:
          - -mexec-model
        argument: <value>
        description: Execution model (WebAssembly only)
      - names:
          - -mexecute-only
        argument: ""
        description: Disallow generation of data access to code sections (ARM only)
      - names:
          - -mextern-sdata
        argument: ""
        description: Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
      - names:
          - -mfentry
        argument: ""
        description: Insert calls to fentry at function entry (x86/SystemZ only)
      - names:
          - -mfix-cmse-cve-2021-35465
        argument: ""
        description: Work around VLLDM erratum CVE-2021-35465 (ARM only)
      - names:
          - -mfix-cortex-a53-835769
        argument: ""
        description: Workaround Cortex-A53 erratum 835769 (AArch64 only)
      - names:
          - -mfix-cortex-a57-aes-1742098
        argument: ""
        description: Work around Cortex-A57 Erratum 1742098 (ARM only)
      - names:
          - -mfix-cortex-a72-aes-1655431
        argument: ""
        description: Work around Cortex-A72 Erratum 1655431 (ARM only)
      - names:
          - -mfp32
        argument: ""
        description: Use 32-bit floating point registers (MIPS only)
      - names:
          - -mfp64
        argument: ""
        description: Use 64-bit floating point registers (MIPS only)
      - names:
          - -mframe-chain
        argument: <value>
        description: Select the frame chain model used to emit frame records (Arm only).
      - names:
          - -mfunction-return
        argument: <value>
        description: Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
      - names:
          - -MF
        argument: <file>
        description: Write depfile output from -MMD, -MD, -MM, or -M to <file>
      - names:
          - -mgeneral-regs-only
        argument: ""
        description: Generate code which only uses the general purpose registers (AArch64/x86 only)
      - names:
          - -mglobal-merge
        argument: ""
        description: Enable merging of globals
      - names:
          - -mgpopt
        argument: ""
        description: Use GP relative accesses for symbols known to be in a small data section (MIPS)
      - names:
          - -MG
        argument: ""
        description: Add missing headers to depfile
      - names:
          - -mharden-sls
        argument: <value>
        description: 'Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)'
      - names:
          - -mhvx-ieee-fp
        argument: ""
        description: Enable Hexagon HVX IEEE floating-point
      - names:
          - -mhvx-length
        argument: <value>
        description: Set Hexagon Vector Length
      - names:
          - -mhvx-qfloat
        argument: ""
        description: Enable Hexagon HVX QFloat instructions
      - names:
          - -mhvx
        argument: <value>
        description: Enable Hexagon Vector eXtensions
      - names:
          - -mhvx
        argument: ""
        description: Enable Hexagon Vector eXtensions
      - names:
          - -miamcu
        argument: ""
        description: Use Intel MCU ABI
      - names:
          - -mibt-seal
        argument: ""
        description: Optimize fcf-protection=branch/full (requires LTO).
      - names:
          - -mignore-xcoff-visibility
        argument: ""
        description: Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
      - names:
          - --migrate
        argument: ""
        description: Run the migrator
      - names:
          - -mincremental-linker-compatible
        argument: ""
        description: (integrated-as) Emit an object file which can be used with an incremental linker
      - names:
          - -mindirect-jump
        argument: <value>
        description: Change indirect jump instructions to inhibit speculation
      - names:
          - -mios-version-min
        argument: <value>
        description: Set iOS deployment target
      - names:
          - -MJ
        argument: <value>
        description: Write a compilation database entry per input
      - names:
          - -mllvm
        argument: <value>
        description: Additional arguments to forward to LLVM's option processing
      - names:
          - -mlocal-sdata
        argument: ""
        description: Extend the -G behaviour to object local data (MIPS)
      - names:
          - -mlong-calls
        argument: ""
        description: Generate branches with extended addressability, usually via indirect jumps.
      - names:
          - -mlong-double-128
        argument: ""
        description: Force long double to be 128 bits
      - names:
          - -mlong-double-64
        argument: ""
        description: Force long double to be 64 bits
      - names:
          - -mlong-double-80
        argument: ""
        description: Force long double to be 80 bits, padded to 128 bits for storage
      - names:
          - -mlvi-cfi
        argument: ""
        description: Enable only control-flow mitigations for Load Value Injection (LVI)
      - names:
          - -mlvi-hardening
        argument: ""
        description: Enable all mitigations for Load Value Injection (LVI)
      - names:
          - -mmacos-version-min
        argument: <value>
        description: Set macOS deployment target
      - names:
          - -mmadd4
        argument: ""
        description: Enable the generation of 4-operand madd.s, madd.d and related instructions.
      - names:
          - -mmark-bti-property
        argument: ""
        description: Add .note.gnu.property with BTI to assembly files (AArch64 only)
      - names:
          - -MMD
        argument: ""
        description: Write a depfile containing user headers
      - names:
          - -mmemops
        argument: ""
        description: Enable generation of memop instructions
      - names:
          - -mmlir
        argument: <value>
        description: Additional arguments to forward to MLIR's option processing
      - names:
          - -mms-bitfields
        argument: ""
        description: Set the default structure layout to be compatible with the Microsoft compiler standard
      - names:
          - -mmsa
        argument: ""
        description: Enable MSA ASE (MIPS only)
      - names:
          - -mmt
        argument: ""
        description: Enable MT ASE (MIPS only)
      - names:
          - -MM
        argument: ""
        description: Like -MMD, but also implies -E and writes to stdout by default
      - names:
          - -mno-abicalls
        argument: ""
        description: Disable SVR4-style position-independent code (Mips only)
      - names:
          - -mno-bti-at-return-twice
        argument: ""
        description: Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
      - names:
          - -mno-code-object-v3
        argument: ""
        description: Legacy option to specify code object ABI V2 (AMDGPU only)
      - names:
          - -mno-crc
        argument: ""
        description: Disallow use of CRC instructions (Mips only)
      - names:
          - -mno-cumode
        argument: ""
        description: Specify WGP wavefront execution mode (AMDGPU only)
      - names:
          - -mno-embedded-data
        argument: ""
        description: Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
      - names:
          - -mno-execute-only
        argument: ""
        description: Allow generation of data access to code sections (ARM only)
      - names:
          - -mno-extern-sdata
        argument: ""
        description: Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
      - names:
          - -mno-fix-cmse-cve-2021-35465
        argument: ""
        description: Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
      - names:
          - -mno-fix-cortex-a53-835769
        argument: ""
        description: Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
      - names:
          - -mno-fix-cortex-a57-aes-1742098
        argument: ""
        description: Don't work around Cortex-A57 Erratum 1742098 (ARM only)
      - names:
          - -mno-fix-cortex-a72-aes-1655431
        argument: ""
        description: Don't work around Cortex-A72 Erratum 1655431 (ARM only)
      - names:
          - -mno-global-merge
        argument: ""
        description: Disable merging of globals
      - names:
          - -mno-gpopt
        argument: ""
        description: Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
      - names:
          - -mno-hvx-ieee-fp
        argument: ""
        description: Disable Hexagon HVX IEEE floating-point
      - names:
          - -mno-hvx-qfloat
        argument: ""
        description: Disable Hexagon HVX QFloat instructions
      - names:
          - -mno-hvx
        argument: ""
        description: Disable Hexagon Vector eXtensions
      - names:
          - -mno-implicit-float
        argument: ""
        description: Don't generate implicit floating point instructions
      - names:
          - -mno-incremental-linker-compatible
        argument: ""
        description: (integrated-as) Emit an object file which cannot be used with an incremental linker
      - names:
          - -mno-local-sdata
        argument: ""
        description: Do not extend the -G behaviour to object local data (MIPS)
      - names:
          - -mno-long-calls
        argument: ""
        description: Restore the default behaviour of not generating long calls
      - names:
          - -mno-lvi-cfi
        argument: ""
        description: Disable control-flow mitigations for Load Value Injection (LVI)
      - names:
          - -mno-lvi-hardening
        argument: ""
        description: Disable mitigations for Load Value Injection (LVI)
      - names:
          - -mno-madd4
        argument: ""
        description: Disable the generation of 4-operand madd.s, madd.d and related instructions.
      - names:
          - -mno-memops
        argument: ""
        description: Disable generation of memop instructions
      - names:
          - -mno-movt
        argument: ""
        description: Disallow use of movt/movw pairs (ARM only)
      - names:
          - -mno-ms-bitfields
        argument: ""
        description: Do not set the default structure layout to be compatible with the Microsoft compiler standard
      - names:
          - -mno-msa
        argument: ""
        description: Disable MSA ASE (MIPS only)
      - names:
          - -mno-mt
        argument: ""
        description: Disable MT ASE (MIPS only)
      - names:
          - -mno-neg-immediates
        argument: ""
        description: Disallow converting instructions with negative immediates to their negation or inversion.
      - names:
          - -mno-nvj
        argument: ""
        description: Disable generation of new-value jumps
      - names:
          - -mno-nvs
        argument: ""
        description: Disable generation of new-value stores
      - names:
          - -mno-outline-atomics
        argument: ""
        description: Don't generate local calls to out-of-line atomic operations
      - names:
          - -mno-outline
        argument: ""
        description: Disable function outlining (AArch64 only)
      - names:
          - -mno-packets
        argument: ""
        description: Disable generation of instruction packets
      - names:
          - -mno-relax
        argument: ""
        description: Disable linker relaxation
      - names:
          - -mno-restrict-it
        argument: ""
        description: Allow generation of complex IT blocks.
      - names:
          - -mno-save-restore
        argument: ""
        description: Disable using library calls for save and restore
      - names:
          - -mno-seses
        argument: ""
        description: Disable speculative execution side effect suppression (SESES)
      - names:
          - -mno-stack-arg-probe
        argument: ""
        description: Disable stack probes which are enabled by default
      - names:
          - -mno-tgsplit
        argument: ""
        description: Disable threadgroup split execution mode (AMDGPU only)
      - names:
          - -mno-tls-direct-seg-refs
        argument: ""
        description: Disable direct TLS access through segment registers
      - names:
          - -mno-unaligned-access
        argument: ""
        description: Force all memory accesses to be aligned (AArch32/AArch64 only)
      - names:
          - -mno-wavefrontsize64
        argument: ""
        description: Specify wavefront size 32 mode (AMDGPU only)
      - names:
          - -mnocrc
        argument: ""
        description: Disallow use of CRC instructions (ARM only)
      - names:
          - -mnop-mcount
        argument: ""
        description: Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
      - names:
          - -mnvj
        argument: ""
        description: Enable generation of new-value jumps
      - names:
          - -mnvs
        argument: ""
        description: Enable generation of new-value stores
      - names:
          - -module-dependency-dir
        argument: <value>
        description: Directory to dump module dependencies to
      - names:
          - -module-file-info
        argument: ""
        description: Provide information about a particular module file
      - names:
          - -momit-leaf-frame-pointer
        argument: ""
        description: Omit frame pointer setup for leaf functions
      - names:
          - -moutline-atomics
        argument: ""
        description: Generate local calls to out-of-line atomic operations
      - names:
          - -moutline
        argument: ""
        description: Enable function outlining (AArch64 only)
      - names:
          - -mpacked-stack
        argument: ""
        description: Use packed stack layout (SystemZ only).
      - names:
          - -mpackets
        argument: ""
        description: Enable generation of instruction packets
      - names:
          - -mpad-max-prefix-size
        argument: <value>
        description: Specify maximum number of prefixes to use for padding
      - names:
          - -mprefer-vector-width
        argument: <value>
        description: Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
      - names:
          - -MP
        argument: ""
        description: Create phony target for each dependency (other than main file)
      - names:
          - -mqdsp6-compat
        argument: ""
        description: Enable hexagon-qdsp6 backward compatibility
      - names:
          - -MQ
        argument: <value>
        description: Specify name of main file output to quote in depfile
      - names:
          - -mrecord-mcount
        argument: ""
        description: Generate a __mcount_loc section entry for each __fentry__ call.
      - names:
          - -mrelax-all
        argument: ""
        description: (integrated-as) Relax all machine instructions
      - names:
          - -mrelax
        argument: ""
        description: Enable linker relaxation
      - names:
          - -mrestrict-it
        argument: ""
        description: Disallow generation of complex IT blocks.
      - names:
          - -mrtd
        argument: ""
        description: Make StdCall calling convention the default
      - names:
          - -msave-restore
        argument: ""
        description: Enable using library calls for save and restore
      - names:
          - -mseses
        argument: ""
        description: Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
      - names:
          - -msign-return-address
        argument: <value>
        description: Select return address signing scope
      - names:
          - -mskip-rax-setup
        argument: ""
        description: Skip setting up RAX register when passing variable arguments (x86 only)
      - names:
          - -msmall-data-limit
        argument: <value>
        description: Put global and static data smaller than the limit into a special section
      - names:
          - -msoft-float
        argument: ""
        description: Use software floating point
      - names:
          - -mstack-alignment
        argument: <value>
        description: Set the stack alignment
      - names:
          - -mstack-arg-probe
        argument: ""
        description: Enable stack probes
      - names:
          - -mstack-probe-size
        argument: <value>
        description: Set the stack probe size
      - names:
          - -mstack-protector-guard-offset
        argument: <value>
        description: Use the given offset for addressing the stack-protector guard
      - names:
          - -mstack-protector-guard-reg
        argument: <value>
        description: Use the given reg for addressing the stack-protector guard
      - names:
          - -mstack-protector-guard-symbol
        argument: <value>
        description: Use the given symbol for addressing the stack-protector guard
      - names:
          - -mstack-protector-guard
        argument: <value>
        description: Use the given guard (global, tls) for addressing the stack-protector guard
      - names:
          - -mstackrealign
        argument: ""
        description: Force realign the stack at entry to every function
      - names:
          - -msve-vector-bits
        argument: <value>
        description: Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
      - names:
          - -msvr4-struct-return
        argument: ""
        description: Return small structs in registers (PPC32 only)
      - names:
          - -mtargetos
        argument: <value>
        description: Set the deployment target to be the specified OS and OS version
      - names:
          - -mtgsplit
        argument: ""
        description: Enable threadgroup split execution mode (AMDGPU only)
      - names:
          - -mthread-model
        argument: <value>
        description: The thread model to use. Defaults to 'posix')
      - names:
          - -mtls-direct-seg-refs
        argument: ""
        description: Enable direct TLS access through segment registers (default)
      - names:
          - -mtls-size
        argument: <value>
        description: 'Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)'
      - names:
          - -mtp
        argument: <value>
        description: Thread pointer access method (AArch32/AArch64 only)
      - names:
          - -mtune
        argument: <value>
        description: Only supported on X86, RISC-V and SystemZ. Otherwise accepted for compatibility with GCC.
      - names:
          - -MT
        argument: <value>
        description: Specify name of main file output in depfile
      - names:
          - -munaligned-access
        argument: ""
        description: Allow memory accesses to be unaligned (AArch32/AArch64 only)
      - names:
          - -munsafe-fp-atomics
        argument: ""
        description: Enable unsafe floating point atomic instructions (AMDGPU only)
      - names:
          - -mvscale-max
        argument: <value>
        description: Specify the vscale maximum. Defaults to the vector length agnostic value of "0". (AArch64 only)
      - names:
          - -mvscale-min
        argument: <value>
        description: Specify the vscale minimum. Defaults to "1". (AArch64 only)
      - names:
          - -MV
        argument: ""
        description: Use NMake/Jom format for the depfile
      - names:
          - -mwavefrontsize64
        argument: ""
        description: Specify wavefront size 64 mode (AMDGPU only)
      - names:
          - -M
        argument: ""
        description: Like -MD, but also implies -E and writes to stdout by default
      - names:
          - --no-cuda-include-ptx
        argument: <value>
        description: Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
      - names:
          - --no-cuda-version-check
        argument: ""
        description: Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
      - names:
          - --no-gpu-bundle-output
        argument: ""
        description: Do not bundle output files of HIP device compilation
      - names:
          - -no-hip-rt
        argument: ""
        description: Do not link against HIP runtime libraries
      - names:
          - --no-offload-arch
        argument: <value>
        description: Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
      - names:
          - --no-offload-new-driver
        argument: ""
        description: Don't Use the new driver for offloading compilation.
      - names:
          - --no-system-header-prefix
        argument: <prefix>
        description: 'Treat all #include paths starting with <prefix> as not including a system header.'
      - names:
          - -nobuiltininc
        argument: ""
        description: 'Disable builtin #include directories'
      - names:
          - -nogpuinc
        argument: ""
        description: Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
      - names:
          - -nogpulib
        argument: ""
        description: Do not link device library for CUDA/HIP device compilation
      - names:
          - -nohipwrapperinc
        argument: ""
        description: Do not include the default HIP wrapper headers and include paths
      - names:
          - -nostdinc++
        argument: ""
        description: 'Disable standard #include directories for the C++ standard library'
      - names:
          - -ObjC++
        argument: ""
        description: Treat source input files as Objective-C++ inputs
      - names:
          - -objcmt-allowlist-dir-path
        argument: <value>
        description: Only modify files with a filename contained in the provided directory path
      - names:
          - -objcmt-atomic-property
        argument: ""
        description: Make migration to 'atomic' properties
      - names:
          - -objcmt-migrate-all
        argument: ""
        description: Enable migration to modern ObjC
      - names:
          - -objcmt-migrate-annotation
        argument: ""
        description: Enable migration to property and method annotations
      - names:
          - -objcmt-migrate-designated-init
        argument: ""
        description: Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
      - names:
          - -objcmt-migrate-instancetype
        argument: ""
        description: Enable migration to infer instancetype for method result type
      - names:
          - -objcmt-migrate-literals
        argument: ""
        description: Enable migration to modern ObjC literals
      - names:
          - -objcmt-migrate-ns-macros
        argument: ""
        description: Enable migration to NS_ENUM/NS_OPTIONS macros
      - names:
          - -objcmt-migrate-property-dot-syntax
        argument: ""
        description: Enable migration of setter/getter messages to property-dot syntax
      - names:
          - -objcmt-migrate-property
        argument: ""
        description: Enable migration to modern ObjC property
      - names:
          - -objcmt-migrate-protocol-conformance
        argument: ""
        description: Enable migration to add protocol conformance on classes
      - names:
          - -objcmt-migrate-readonly-property
        argument: ""
        description: Enable migration to modern ObjC readonly property
      - names:
          - -objcmt-migrate-readwrite-property
        argument: ""
        description: Enable migration to modern ObjC readwrite property
      - names:
          - -objcmt-migrate-subscripting
        argument: ""
        description: Enable migration to modern ObjC subscripting
      - names:
          - -objcmt-ns-nonatomic-iosonly
        argument: ""
        description: Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
      - names:
          - -objcmt-returns-innerpointer-property
        argument: ""
        description: Enable migration to annotate property with NS_RETURNS_INNER_POINTER
      - names:
          - -objcmt-whitelist-dir-path
        argument: <value>
        description: Alias for -objcmt-allowlist-dir-path
      - names:
          - -ObjC
        argument: ""
        description: Treat source input files as Objective-C inputs
      - names:
          - -object-file-name
        argument: <file>
        description: Set the output <file> for debug infos
      - names:
          - --offload-arch
        argument: <value>
        description: CUDA offloading device architecture (e.g. sm_35), or HIP offloading target ID in the form of a device architecture followed by target ID features delimited by a colon. Each target ID feature is a pre-defined string followed by a plus or minus sign (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
      - names:
          - --offload-device-only
        argument: ""
        description: Only compile for the offloading device.
      - names:
          - --offload-host-device
        argument: ""
        description: Only compile for the offloading host.
      - names:
          - --offload-host-only
        argument: ""
        description: Only compile for the offloading host.
      - names:
          - --offload-link
        argument: ""
        description: Use the new offloading linker to perform the link job.
      - names:
          - --offload-new-driver
        argument: ""
        description: Use the new driver for offloading compilation.
      - names:
          - --offload
        argument: <value>
        description: Specify comma-separated list of offloading target triples (CUDA and HIP only)
      - names:
          - -o
        argument: <file>
        description: Write output to <file>
      - names:
          - -pedantic
        argument: ""
        description: Warn on language extensions
      - names:
          - -pg
        argument: ""
        description: Enable mcount instrumentation
      - names:
          - -pipe
        argument: ""
        description: Use pipes between commands, when possible
      - names:
          - --precompile
        argument: ""
        description: Only precompile the input
      - names:
          - -print-diagnostic-options
        argument: ""
        description: Print all of Clang's warning options
      - names:
          - -print-effective-triple
        argument: ""
        description: Print the effective target triple
      - names:
          - -print-file-name
        argument: <file>
        description: Print the full library path of <file>
      - names:
          - -print-ivar-layout
        argument: ""
        description: Enable Objective-C Ivar layout bitmap print trace
      - names:
          - -print-libgcc-file-name
        argument: ""
        description: Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
      - names:
          - -print-multiarch
        argument: ""
        description: Print the multiarch target triple
      - names:
          - -print-prog-name
        argument: <name>
        description: Print the full program path of <name>
      - names:
          - -print-resource-dir
        argument: ""
        description: Print the resource directory pathname
      - names:
          - -print-rocm-search-dirs
        argument: ""
        description: Print the paths used for finding ROCm installation
      - names:
          - -print-runtime-dir
        argument: ""
        description: Print the directory pathname containing clangs runtime libraries
      - names:
          - -print-search-dirs
        argument: ""
        description: Print the paths used for finding libraries and programs
      - names:
          - -print-supported-cpus
        argument: ""
        description: Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
      - names:
          - -print-target-triple
        argument: ""
        description: Print the normalized target triple
      - names:
          - -print-targets
        argument: ""
        description: Print the registered targets
      - names:
          - -pthread
        argument: ""
        description: Support POSIX threads in generated code
      - names:
          - --ptxas-path
        argument: <value>
        description: Path to ptxas (used for compiling CUDA code)
      - names:
          - -P
        argument: ""
        description: Disable linemarker output in -E mode
      - names:
          - -Qn
        argument: ""
        description: Do not emit metadata containing compiler name and version
      - names:
          - -Qunused-arguments
        argument: ""
        description: Don't emit warning for unused driver arguments
      - names:
          - -Qy
        argument: ""
        description: Emit metadata containing compiler name and version
      - names:
          - -relocatable-pch
        argument: ""
        description: Whether to build a relocatable precompiled header
      - names:
          - -rewrite-legacy-objc
        argument: ""
        description: Rewrite Legacy Objective-C source to C++
      - names:
          - -rewrite-objc
        argument: ""
        description: Rewrite Objective-C source to C++
      - names:
          - --rocm-device-lib-path
        argument: <value>
        description: ROCm device library path. Alternative to rocm-path.
      - names:
          - --rocm-path
        argument: <value>
        description: ROCm installation path, used for finding and automatically linking required bitcode libraries.
      - names:
          - -Rpass-analysis
        argument: <value>
        description: Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
      - names:
          - -Rpass-missed
        argument: <value>
        description: Report missed transformations by optimization passes whose name matches the given POSIX regular expression
      - names:
          - -Rpass
        argument: <value>
        description: Report transformations performed by optimization passes whose name matches the given POSIX regular expression
      - names:
          - -rtlib
        argument: <value>
        description: Compiler runtime library to use
      - names:
          - -R
        argument: <remark>
        description: Enable the specified remark
      - names:
          - -save-stats
        argument: <value>
        description: Save llvm statistics.
      - names:
          - -save-stats
        argument: ""
        description: Save llvm statistics.
      - names:
          - -save-temps
        argument: <value>
        description: Save intermediate compilation results.
      - names:
          - -save-temps
        argument: ""
        description: Save intermediate compilation results
      - names:
          - -serialize-diagnostics
        argument: <value>
        description: Serialize compiler diagnostics to a file
      - names:
          - -shared-libsan
        argument: ""
        description: Dynamically link the sanitizer runtime
      - names:
          - --start-no-unused-arguments
        argument: ""
        description: Don't emit warnings about unused arguments for the following arguments
      - names:
          - -static-libsan
        argument: ""
        description: Statically link the sanitizer runtime
      - names:
          - -static-openmp
        argument: ""
        description: Use the static host OpenMP runtime while linking.
      - names:
          - -std
        argument: <value>
        description: Language standard to compile for
      - names:
          - -stdlib++-isystem
        argument: <directory>
        description: Use directory as the C++ standard library include path
      - names:
          - -stdlib
        argument: <value>
        description: C++ standard library to use
      - names:
          - -sycl-std
        argument: <value>
        description: SYCL language standard to compile for.
      - names:
          - --system-header-prefix
        argument: <prefix>
        description: 'Treat all #include paths starting with <prefix> as including a system header.'
      - names:
          - -S
        argument: ""
        description: Only run preprocess and compilation steps
      - names:
          - --target
        argument: <value>
        description: Generate code for the given target
      - names:
          - -Tbss
        argument: <addr>
        description: Set starting address of BSS to <addr>
      - names:
          - -Tdata
        argument: <addr>
        description: Set starting address of DATA to <addr>
      - names:
          - -time
        argument: ""
        description: Time individual commands
      - names:
          - -traditional-cpp
        argument: ""
        description: Enable some traditional CPP emulation
      - names:
          - -trigraphs
        argument: ""
        description: Process trigraph sequences
      - names:
          - -Ttext
        argument: <addr>
        description: Set starting address of TEXT to <addr>
      - names:
          - -T
        argument: <script>
        description: Specify <script> as linker script
      - names:
          - -undef
        argument: ""
        description: undef all system defines
      - names:
          - -unwindlib
        argument: <value>
        description: Unwind library to use
      - names:
          - -U
        argument: <macro>
        description: Undefine macro <macro>
      - names:
          - --verify-debug-info
        argument: ""
        description: Verify the binary representation of debug output
      - names:
          - -verify-pch
        argument: ""
        description: Load and verify that a pre-compiled header file is not stale
      - names:
          - --version
        argument: ""
        description: Print version information
      - names:
          - -v
        argument: ""
        description: Show commands to run and use verbose output
      - names:
          - -Wdeprecated
        argument: ""
        description: Enable warnings for deprecated constructs and define __DEPRECATED
      - names:
          - -working-directory
        argument: <value>
        description: Resolve file paths relative to the specified directory
      - names:
          - -W
        argument: <warning>
        description: Enable the specified warning
      - names:
          - -w
        argument: ""
        description: Suppress all warnings
      - names:
          - -Xanalyzer
        argument: <arg>
        description: Pass <arg> to the static analyzer
      - names:
          - -Xarch_device
        argument: <arg>
        description: Pass <arg> to the CUDA/HIP device compilation
      - names:
          - -Xarch_host
        argument: <arg>
        description: Pass <arg> to the CUDA/HIP host compilation
      - names:
          - -Xassembler
        argument: <arg>
        description: Pass <arg> to the assembler
      - names:
          - -Xclang
        argument: <arg>
        description: Pass <arg> to the clang compiler
      - names:
          - -Xcuda-fatbinary
        argument: <arg>
        description: Pass <arg> to fatbinary invocation
      - names:
          - -Xcuda-ptxas
        argument: <arg>
        description: Pass <arg> to the ptxas assembler
      - names:
          - -Xlinker
        argument: <arg>
        description: Pass <arg> to the linker
      - names:
          - -Xoffload-linker
        argument: <triple> <arg>
        description: Pass <arg> to the offload linkers or the ones idenfied by -<triple>
      - names:
          - -Xopenmp-target
        argument: <triple> <arg>
        description: Pass <arg> to the target offloading toolchain identified by <triple>.
      - names:
          - -Xopenmp-target
        argument: <arg>
        description: Pass <arg> to the target offloading toolchain.
      - names:
          - -Xpreprocessor
        argument: <arg>
        description: Pass <arg> to the preprocessor
      - names:
          - -x
        argument: <language>
        description: Treat subsequent input files as having type <language>
      - names:
          - -z
        argument: <arg>
        description: Pass -z <arg> to the linker
  - name: dlltool
    description: Use Zig as a drop-in dlltool.exe
    usage: llvm-dlltool [options] file...
    options:
      - names:
          - -D
        argument: <value>
        description: Specify the input DLL Name
      - names:
          - -D
        argument: <value>
        description: Specify the input DLL Name   -d <value> Input .def File
      - names:
          - -d
        argument: <value>
        description: Input .def File
      - names:
          - -f
        argument: <value>
        description: Assembler Flags
      - names:
          - -k
        argument: ""
        description: Kill @n Symbol from export
      - names:
          - -l
        argument: <value>
        description: Generate an import lib
      - names:
          - -l
        argument: <value>
        description: Generate an import lib   -m <value> Set target machine
      - names:
          - -m
        argument: <value>
        description: Set target machine
      - names:
          - -S
        argument: <value>
        description: Assembler
  - name: lib
    description: Use Zig as a drop-in lib.exe
    usage: zig [command] [options]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print command-specific usage
    subcommands:
      - name: build
        description: Build project from build.zig
        usage: llvm-lib [options] file...
        options: []
      - name: init-exe
        description: Initialize a `zig build` application in the cwd
        usage: llvm-lib [options] file...
        options: []
      - name: init-lib
        description: Initialize a `zig build` library in the cwd
        usage: llvm-lib [options] file...
        options: []
      - name: ast-check
        description: Look for simple compile errors in any set of files
        usage: llvm-lib [options] file...
        options: []
      - name: build-exe
        description: Create executable from source or object files
        usage: llvm-lib [options] file...
        options: []
      - name: build-lib
        description: Create library from source or object files
        usage: llvm-lib [options] file...
        options: []
      - name: build-obj
        description: Create object from source or object files
        usage: llvm-lib [options] file...
        options: []
      - name: fmt
        description: Reformat Zig source into canonical form
        usage: llvm-lib [options] file...
        options: []
      - name: run
        description: Create executable and run immediately
        usage: llvm-lib [options] file...
        options: []
      - name: test
        description: Create and run a test build
        usage: llvm-lib [options] file...
        options: []
      - name: translate-c
        description: Convert C code to Zig code
        usage: llvm-lib [options] file...
        options: []
      - name: ar
        description: Use Zig as a drop-in archiver
        usage: llvm-lib [options] file...
        options: []
      - name: cc
        description: Use Zig as a drop-in C compiler
        usage: llvm-lib [options] file...
        options: []
      - name: dlltool
        description: Use Zig as a drop-in dlltool.exe
        usage: llvm-lib [options] file...
        options: []
      - name: ranlib
        description: Use Zig as a drop-in ranlib
        usage: llvm-lib [options] file...
        options: []
      - name: objcopy
        description: Use Zig as a drop-in objcopy
        usage: llvm-lib [options] file...
        options: []
      - name: env
        description: Print lib path, std path, cache directory, and version
        usage: llvm-lib [options] file...
        options: []
      - name: libc
        description: Display native libc paths file or validate one
        usage: llvm-lib [options] file...
        options: []
      - name: targets
        description: List available compilation targets
        usage: llvm-lib [options] file...
        options: []
      - name: version
        description: Print version number and exit
        usage: llvm-lib [options] file...
        options: []
      - name: zen
        description: Print Zen of Zig and exit
        usage: llvm-lib [options] file...
        options: []
  - name: ranlib
    description: Use Zig as a drop-in ranlib
    usage: ranlib <archive-file>
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: '- Display available options'
      - names:
          - -v
          - --version
        argument: ""
        description: '- Display the version of this program'
      - names:
          - -D
        argument: ""
        description: '- Use zero for timestamps and uids/gids (default)'
      - names:
          - -U
        argument: ""
        description: '- Use actual timestamps and uids/gids'
  - name: objcopy
    description: Use Zig as a drop-in objcopy
    usage: zig objcopy [options] input output
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - --output-target
        argument: <value>
        description: Format of the output file
      - names:
          - -O
        argument: <value>
        description: Alias for --output-target
      - names:
          - --only-section
        argument: <section>
        description: Remove all but <section>
      - names:
          - -j
        argument: <value>
        description: Alias for --only-section
      - names:
          - --pad-to
        argument: <addr>
        description: Pad the last section up to address <addr>
  - name: env
    description: Print lib path, std path, cache directory, and version
    usage: ""
    options: []
  - name: help
    description: Print this help and exit
    usage: ""
    options: []
  - name: libc
    description: Display native libc paths file or validate one
    usage: zig libc
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print this help and exit
      - names:
          - -target
        argument: '[name]'
        description: <arch><sub>-<os>-<abi> see the targets command
  - name: targets
    description: List available compilation targets
    usage: ""
    options: []
  - name: version
    description: Print version number and exit
    usage: zig [command] [options]
    options:
      - names:
          - -h
          - --help
        argument: ""
        description: Print command-specific usage
  - name: zen
    description: Print Zen of Zig and exit
    usage: ""
    options: []
version: 0.11.0-dev.944+a193ec432
tldr: |
  > The Zig compiler and toolchain.
  > More information: <https://ziglang.org>.

  - Compile the project in the current directory:

  `zig build`

  - Compile and run the project in the current directory:

  `zig build run`

  - Initialize a `zig build` application:

  `zig init-exe`

  - Initialize a `zig build` library:

  `zig init-lib`

  - Create and run a test build:

  `zig test {{path/to/file.zig}}`

  - Reformat Zig source into canonical form:

  `zig fmt {{path/to/file.zig}}`

  - Use Zig as a drop-in C compiler:

  `zig cc {{path/to/file.c}}`

  - Use Zig as a drop-in C++ compiler:

  `zig c++ {{path/to/file.cpp}}`
