#compdef _adb adb

# Auto-generated with h2o

    function _adb_devices {
        _arguments \
            '-l[Show long output]' \
            "*: :_files"

    }

    function _adb_help {
        _arguments \
            "*: :_files"

    }

    function _adb_version {
        _arguments \
            "*: :_files"

    }

    function _adb_connect {
        _arguments \
            "*: :_files"

    }

    function _adb_diconnect {
        _arguments \
            "*: :_files"

    }

    function _adb_forward {
        _arguments \
            '--list[list all forward socket connections]' \
            '--no-rebind[Don'\''t rebind]' \
            '--remove[remove specific forward socket connection]' \
            '--remove-all[remove all forward socket connections]' \
            "*: :_files"

    }

    function _adb_ppp {
        _arguments \
            "*: :_files"

    }

    function _adb_reverse {
        _arguments \
            '--list[list all reverse socket connections from device]' \
            '--no-rebind[Don'\''t rebind]' \
            '--remove[remove specific reverse socket connection]' \
            '--remove-all[remove all reverse socket connections from device]' \
            "*: :_files"

    }

    function _adb_push {
        _arguments \
            '--sync[only push files that are newer on the host than the device]' \
            "*: :_files"

    }

    function _adb_pull {
        _arguments \
            '-a[preserve file timestamp and mode]' \
            "*: :_files"

    }

    function _adb_sync {
        _arguments \
            '-l[list but don'\''t copy]' \
            "*: :_files"

    }

    function _adb_shell {
        _arguments \
            '-e[choose escape character, or "none"; default '\''~'\'']' \
            '-n[don'\''t read from stdin]' \
            '-T[disable PTY allocation]' \
            '-t[force PTY allocation]' \
            '-x[disable remote exit codes and stdout/stderr separation]' \
            "*: :_files"

    }

    function _adb_emu {
        _arguments \
            "*: :_files"

    }

    function _adb_install {
        _arguments \
            '-l[forward lock application]' \
            '-r[replace existing application]' \
            '-t[allow test packages]' \
            '-s[install application on sdcard]' \
            '-d[allow version code downgrade (debuggable packages only)]' \
            '-p[partial application install (install-multiple only)]' \
            '-g[grant all runtime permissions]' \
            "*: :_files"

    }

    function _adb_install-multiple {
        _arguments \
            '-l[forward lock application]' \
            '-r[replace existing application]' \
            '-t[allow test packages]' \
            '-s[install application on sdcard]' \
            '-d[allow version code downgrade (debuggable packages only)]' \
            '-p[partial application install (install-multiple only)]' \
            '-g[grant all runtime permissions]' \
            "*: :_files"

    }

    function _adb_uninstall {
        _arguments \
            '-k[keep the data and cache directories]' \
            "*: :_files"

    }

    function _adb_bugreport {
        _arguments \
            "*: :_files"

    }

    function _adb_jdwp {
        _arguments \
            "*: :_files"

    }

    function _adb_logcat {
        _arguments \
            "*: :_files"

    }

    function _adb_disable-verify {
        _arguments \
            "*: :_files"

    }

    function _adb_enable-verify {
        _arguments \
            "*: :_files"

    }

    function _adb_keygen {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-device {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-usb-device {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-local-device {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-recovery {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-usb-recovery {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-local-recovery {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-sideload {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-usb-sideload {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-local-sideload {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-bootloader {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-usb-bootloader {
        _arguments \
            "*: :_files"

    }

    function _adb_wait-for-local-bootloader {
        _arguments \
            "*: :_files"

    }

    function _adb_get-state {
        _arguments \
            "*: :_files"

    }

    function _adb_get-serialno {
        _arguments \
            "*: :_files"

    }

    function _adb_get-devpath {
        _arguments \
            "*: :_files"

    }

    function _adb_remount {
        _arguments \
            "*: :_files"

    }

    function _adb_reboot {
        _arguments \
            "*: :_files"

    }

    function _adb_sideload {
        _arguments \
            "*: :_files"

    }

    function _adb_root {
        _arguments \
            "*: :_files"

    }

    function _adb_unroot {
        _arguments \
            "*: :_files"

    }

    function _adb_usb {
        _arguments \
            "*: :_files"

    }

    function _adb_tcpip {
        _arguments \
            "*: :_files"

    }

    function _adb_start-server {
        _arguments \
            "*: :_files"

    }

    function _adb_kill-server {
        _arguments \
            "*: :_files"

    }

    function _adb_reconnect {
        _arguments \
            "*: :_files"

    }


function _adb {
    local line state

    function _commands {
        local -a commands
        commands=(
            'devices:list connected devices'
            'help:show this help message'
            'version:show version num'
            'connect:connect to a device via TCP/IP'
            'diconnect:disconnect from given TCP/IP device \[default port=5555\], or all'
            'forward:forward socket connection using'
            'ppp:run PPP over USB'
            'reverse:reverse socket connection'
            'push:copy local files/directories to device'
            'pull:copy files/dirs from device'
            'sync:sync a local build from $ANDROID_PRODUCT_OUT to the device (default all)'
            'shell:run remote shell command (interactive shell if no command given)'
            'emu:run emulator console command'
            'install:push package to the device and install them'
            'install-multiple:push packages to the device and install them'
            'uninstall:remove this app package from the device'
            'bugreport:write bugreport to given PATH'
            'jdwp:list pids of processes hosting a JDWP transport'
            'logcat:show device log'
            'disable-verify:disable dm-verity checking on userdebug builds'
            'enable-verify:re-enable dm-verity checking on userdebug builds'
            'keygen:generate adb public/private key; private key stored in FILE, public key stored in FILE.pub (existing files overwritten)'
            'wait-for-device:wait for device to be in the given state (device)'
            'wait-for-usb-device:wait for device to be in the given state (device)'
            'wait-for-local-device:wait for device to be in the given state (device)'
            'wait-for-recovery:wait for device to be in the given state (recovery)'
            'wait-for-usb-recovery:wait for device to be in the given state (recovery)'
            'wait-for-local-recovery:wait for device to be in the given state (recovery)'
            'wait-for-sideload:wait for device to be in the given state (sideload)'
            'wait-for-usb-sideload:wait for device to be in the given state (sideload)'
            'wait-for-local-sideload:wait for device to be in the given state (sideload)'
            'wait-for-bootloader:wait for device to be in the given state (bootloader)'
            'wait-for-usb-bootloader:wait for device to be in the given state (bootloader)'
            'wait-for-local-bootloader:wait for device to be in the given state (bootloader)'
            'get-state:print offline | bootloader | device'
            'get-serialno:print <serial-number>'
            'get-devpath:print <device-path>'
            'remount:remount /system, /vendor, and /oem partitions read-write'
            'reboot:reboot the device; defaults to booting system image but supports bootloader and recovery too. sideload reboots into recovery and automatically starts sideload mode, sideload-auto-reboot is the same but reboots after sideloading.'
            'sideload:sideload the given full OTA package'
            'root:restart adbd with root permissions'
            'unroot:restart adbd without root permissions'
            'usb:restart adb server listening on USB'
            'tcpip:restart adb server listening on TCP on PORT'
            'start-server:ensure that there is a server running'
            'kill-server:kill the server if it is running'
            'reconnect:kick connection from host side to force reconnect'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (devices)
            _adb_devices
            ;;

        (help)
            _adb_help
            ;;

        (version)
            _adb_version
            ;;

        (connect)
            _adb_connect
            ;;

        (diconnect)
            _adb_diconnect
            ;;

        (forward)
            _adb_forward
            ;;

        (ppp)
            _adb_ppp
            ;;

        (reverse)
            _adb_reverse
            ;;

        (push)
            _adb_push
            ;;

        (pull)
            _adb_pull
            ;;

        (sync)
            _adb_sync
            ;;

        (shell)
            _adb_shell
            ;;

        (emu)
            _adb_emu
            ;;

        (install)
            _adb_install
            ;;

        (install-multiple)
            _adb_install-multiple
            ;;

        (uninstall)
            _adb_uninstall
            ;;

        (bugreport)
            _adb_bugreport
            ;;

        (jdwp)
            _adb_jdwp
            ;;

        (logcat)
            _adb_logcat
            ;;

        (disable-verify)
            _adb_disable-verify
            ;;

        (enable-verify)
            _adb_enable-verify
            ;;

        (keygen)
            _adb_keygen
            ;;

        (wait-for-device)
            _adb_wait-for-device
            ;;

        (wait-for-usb-device)
            _adb_wait-for-usb-device
            ;;

        (wait-for-local-device)
            _adb_wait-for-local-device
            ;;

        (wait-for-recovery)
            _adb_wait-for-recovery
            ;;

        (wait-for-usb-recovery)
            _adb_wait-for-usb-recovery
            ;;

        (wait-for-local-recovery)
            _adb_wait-for-local-recovery
            ;;

        (wait-for-sideload)
            _adb_wait-for-sideload
            ;;

        (wait-for-usb-sideload)
            _adb_wait-for-usb-sideload
            ;;

        (wait-for-local-sideload)
            _adb_wait-for-local-sideload
            ;;

        (wait-for-bootloader)
            _adb_wait-for-bootloader
            ;;

        (wait-for-usb-bootloader)
            _adb_wait-for-usb-bootloader
            ;;

        (wait-for-local-bootloader)
            _adb_wait-for-local-bootloader
            ;;

        (get-state)
            _adb_get-state
            ;;

        (get-serialno)
            _adb_get-serialno
            ;;

        (get-devpath)
            _adb_get-devpath
            ;;

        (remount)
            _adb_remount
            ;;

        (reboot)
            _adb_reboot
            ;;

        (sideload)
            _adb_sideload
            ;;

        (root)
            _adb_root
            ;;

        (unroot)
            _adb_unroot
            ;;

        (usb)
            _adb_usb
            ;;

        (tcpip)
            _adb_tcpip
            ;;

        (start-server)
            _adb_start-server
            ;;

        (kill-server)
            _adb_kill-server
            ;;

        (reconnect)
            _adb_reconnect
            ;;

        esac
        ;;
     esac

}

