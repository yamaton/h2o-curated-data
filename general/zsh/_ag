#compdef _ag ag

# Auto-generated with h2o


function _ag {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--ackmate[Print results in AckMate-parseable format]' \
        {-A,--after}'[Print lines after match (Default: 2)]' \
        {-B,--before}'[Print lines before match (Default: 2)]' \
        '--break[Print newlines between matches in different files (Enabled by default)]' \
        '--nobreak[Print newlines between matches in different files (Enabled by default)]' \
        {-c,--count}'[Only print the number of matches in each file. (This often differs from the number of matching lines)]' \
        '--color[Print color codes in results (Enabled by default)]' \
        '--nocolor[Print color codes in results (Enabled by default)]' \
        '--color-line-number[Color codes for line numbers (Default: 1;33)]' \
        '--color-match[Color codes for result match numbers (Default: 30;43)]' \
        '--color-path[Color codes for path names (Default: 1;32)]' \
        '--column[Print column numbers in results]' \
        '--filename[Print file names (Enabled unless searching a single file)]' \
        '--nofilename[Print file names (Enabled unless searching a single file)]' \
        {-H,--heading}'[Print file names before each file'\''s matches (Enabled by default)]' \
        '--noheading[Print file names before each file'\''s matches (Enabled by default)]' \
        {-C,--context}'[Print lines before and after matches (Default: 2)]' \
        '--group[Same as --\[no\]break --\[no\]heading]' \
        '--nogroup[Same as --\[no\]break --\[no\]heading]' \
        {-g,--filename-pattern}'[Print filenames matching PATTERN]' \
        {-L,--files-without-matches}'[Only print filenames that don'\''t contain matches]' \
        '--print-all-files[Print headings for all files searched, even those that don'\''t contain matches]' \
        '--numbers[Print line numbers. Default is to omit line numbers when searching streams]' \
        '--nonumbers[Print line numbers. Default is to omit line numbers when searching streams]' \
        {-o,--only-matching}'[Prints only the matching part of the lines]' \
        '--print-long-lines[Print matches on very long lines (Default: >2k characters)]' \
        '--passthrough[When searching a stream, print all lines even if they don'\''t match]' \
        '--silent[Suppress all log messages, including errors]' \
        '--stats[Print stats (files scanned, time taken, etc.)]' \
        '--stats-only[Print stats and nothing else. (Same as --count when searching a single file)]' \
        '--vimgrep[Print results like vim'\''s :vimgrep /pattern/g would (it reports every match on the line)]' \
        {-0,--null,--print0}'[Separate filenames with null (for '\''xargs -0'\'')]' \
        {-a,--all-types}'[Search all files (doesn'\''t include hidden files or patterns from ignore files)]' \
        {-D,--debug}'[Ridiculous debugging (probably not useful)]' \
        '--depth[Search up to NUM directories deep (Default: 25)]' \
        {-f,--follow}'[Follow symlinks]' \
        {-F,--fixed-strings}'[Alias for --literal for compatibility with grep]' \
        {-G,--file-search-regex}'[PATTERN Limit search to filenames matching PATTERN]' \
        '--hidden[Search hidden files (obeys .*ignore files)]' \
        {-i,--ignore-case}'[Match case insensitively]' \
        '--ignore[Ignore files/directories matching PATTERN (literal file/directory names also allowed)]' \
        '--ignore-dir[Alias for --ignore for compatibility with ack.]' \
        {-m,--max-count}'[Skip the rest of a file after NUM matches (Default: 10,000)]' \
        '--one-device[Don'\''t follow links to other devices.]' \
        {-p,--path-to-ignore}'[Use .ignore file at STRING]' \
        {-Q,--literal}'[Don'\''t parse PATTERN as a regular expression]' \
        {-s,--case-sensitive}'[Match case sensitively]' \
        {-S,--smart-case}'[Match case insensitively unless PATTERN contains uppercase characters (Enabled by default)]' \
        '--search-binary[Search binary files for matches]' \
        {-t,--all-text}'[Search all text files (doesn'\''t include hidden files)]' \
        {-u,--unrestricted}'[Search all files (ignore .ignore, .gitignore, etc.; searches binary and hidden files as well)]' \
        {-U,--skip-vcs-ignores}'[Ignore VCS ignore files (.gitignore, .hgignore; still obey .ignore)]' \
        {-v,--invert-match,-w,--word-regexp}'[Only match whole words]' \
        {-W,--width}'[Truncate match lines after NUM characters]' \
        {-z,--search-zip}'[Search contents of compressed (e.g., gzip) files]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

