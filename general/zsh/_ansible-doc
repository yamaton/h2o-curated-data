#compdef _ansible-doc ansible-doc

# Auto-generated with h2o


function _ansible-doc {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--metadata-dump[**For internal use only** Dump json metadata for all entries, ignores other options.]' \
        '--no-fail-on-errors[**For internal use only** Only used for --metadata-dump. Do not fail on errors. Report the error message in the JSON instead.]' \
        '--playbook-dir[Since this tool does not use playbooks, use this as a substitute playbook directory. This sets the relative path for many features including roles/ group_vars/ etc.]':file:_files \
        '--version[show program'\''s version number, config file location, configured module search path, module location, executable location and exit]' \
        {-F,--list_files}'[Show plugin names and their source files without summaries (implies --list). A supplied argument will be used for filtering, can be a namespace or full collection name.]' \
        {-M,--module-path}'[prepend colon-separated path(s) to module library (default={{ ANSIBLE_HOME ~ "/plugins/modules:/usr/share/ansible/plugins/modules" }})]':file:_files \
        {-e,--entry-point}'[Select the entry point for role(s).]' \
        {-h,--help}'[show this help message and exit]' \
        {-j,--json}'[Change output into json format.]' \
        {-l,--list}'[List available plugins. A supplied argument will be used for filtering, can be a namespace or full collection name.]' \
        {-r,--roles-path}'[The path to the directory containing your roles.]':file:_files \
        {-s,--snippet}'[Show playbook snippet for these plugin types: inventory, lookup, module]' \
        {-t,--type}'[Choose which plugin type (defaults to "module"). Available plugin types are : ('\''become'\'', '\''cache'\'', '\''callback'\'', '\''cliconf'\'', '\''connection'\'', '\''httpapi'\'', '\''inventory'\'', '\''lookup'\'', '\''netconf'\'', '\''shell'\'', '\''vars'\'', '\''module'\'', '\''strategy'\'', '\''test'\'', '\''filter'\'', '\''role'\'', '\''keyword'\'')]' \
        {-v,--verbose}'[Causes Ansible to print more debug messages. Adding multiple -v will increase the verbosity, the builtin plugins currently evaluate up to -vvvvvv. A reasonable level to start is -vvv, connection debugging might require -vvvv.]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

