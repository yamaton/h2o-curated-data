#compdef _ansible-pull ansible-pull

# Auto-generated with h2o


function _ansible-pull {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--accept-host-key[adds the hostkey for the repo url if not already added]' \
        {--ask-vault-password,--ask-vault-pass}'[ask for vault password]' \
        {--become-password-file,--become-pass-file}'[Become password file]':file:_files \
        '--check[don'\''t make any changes; instead, try to predict some of the changes that may occur]' \
        '--clean[modified files in the working repository will be discarded]' \
        {--connection-password-file,--conn-pass-file}'[Connection password file]':file:_files \
        '--diff[when changing (small) files and templates, show the differences in those files; works great with --check]' \
        '--full[Do a full clone, instead of a shallow one.]' \
        '--list-hosts[outputs a list of matching hosts; does not execute anything else]' \
        '--purge[purge checkout after playbook run]' \
        '--skip-tags[only run plays and tasks whose tags do not match these values]' \
        '--track-subs[submodules will track the latest changes. This is equivalent to specifying the --remote flag to git submodule update]' \
        '--vault-id[the vault identity to use]' \
        {--vault-password-file,--vault-pass-file}'[vault password file]':file:_files \
        '--verify-commit[verify GPG signature of checked out commit, if it fails abort running the playbook. This needs the corresponding VCS module to support such an operation]' \
        '--version[show program'\''s version number, config file location, configured module search path, module location, executable location and exit]' \
        {-C,--checkout}'[branch/tag/commit to checkout. Defaults to behavior of repository module.]' \
        {-K,--ask-become-pass}'[ask for privilege escalation password]' \
        {-M,--module-path}'[prepend colon-separated path(s) to module library (default={{ ANSIBLE_HOME ~ "/plugins/modules:/usr/share/ansible/plugins/modules" }})]':file:_files \
        {-U,--url}'[URL of the playbook repository]' \
        {-d,--directory}'[absolute path of repository checkout directory (relative paths are not supported)]' \
        {-e,--extra-vars}'[set additional variables as key=value or YAML/JSON, if filename prepend with @]' \
        {-f,--force}'[run the playbook even if the repository could not be updated]' \
        {-h,--help}'[show this help message and exit]' \
        {-i,--inventory,--inventory-file}'[specify inventory host path or comma separated host list. --inventory-file is deprecated]' \
        {-k,--ask-pass}'[ask for connection password]' \
        {-l,--limit}'[further limit selected hosts to an additional pattern]' \
        {-m,--module-name}'[Repository module name, which ansible will use to check out the repo. Choices are ('\''git'\'', '\''subversion'\'', '\''hg'\'', '\''bzr'\''). Default is git.]' \
        {-o,--only-if-changed}'[only run the playbook if the repository has been updated]' \
        {-s,--sleep}'[sleep for random interval (between 0 and n number of seconds) before starting. This is a useful way to disperse git requests]' \
        {-t,--tags}'[only run plays and tasks tagged with these values]' \
        {-v,--verbose}'[Causes Ansible to print more debug messages. Adding multiple -v will increase the verbosity, the builtin plugins currently evaluate up to -vvvvvv. A reasonable level to start is -vvv, connection debugging might require -vvvv.]' \
        {--private-key,--key-file}'[use this file to authenticate the connection]':file:_files \
        '--scp-extra-args[specify extra arguments to pass to scp only (e.g. -l)]' \
        '--sftp-extra-args[specify extra arguments to pass to sftp only (e.g. -f, -l)]' \
        '--ssh-common-args[specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)]' \
        '--ssh-extra-args[specify extra arguments to pass to ssh only (e.g. -R)]' \
        {-T,--timeout}'[override the connection timeout in seconds (default=10)]' \
        {-c,--connection}'[connection type to use (default=smart)]' \
        {-u,--user}'[connect as this user (default=None)]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

