#compdef _arduino-cli arduino-cli

# Auto-generated with h2o

    function _arduino-cli_board {
        _arguments \
            {-h,--help}'[help for board]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_burn-bootloader {
        _arguments \
            '--discovery-timeout[Max time to wait for port discovery, e.g.: 30s, 1m (default 5s)]' \
            {-b,--fqbn}'[Fully Qualified Board Name, e.g.: arduino:avr:uno]' \
            {-h,--help}'[help for burn-bootloader]' \
            {-p,--port}'[Upload port address, e.g.: COM3 or /dev/ttyACM2]' \
            {-P,--programmer}'[Programmer to use, e.g: atmel_ice]' \
            {-l,--protocol}'[Upload port protocol, e.g: serial]' \
            {-t,--verify}'[Verify uploaded binary after the upload.]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_cache {
        _arguments \
            {-h,--help}'[help for cache]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_compile {
        _arguments \
            '--build-cache-path[Builds of '\''core.a'\'' are saved into this path to be cached and reused.]' \
            '--build-path[Path where to save compiled files. If omitted, a directory will be created in the default temporary path of your OS.]' \
            '--build-property[Override a build property with a custom value. Can be used multiple times for multiple properties.]' \
            '--clean[Optional, cleanup the build folder and do not use any cached build.]' \
            '--discovery-timeout[Max time to wait for port discovery, e.g.: 30s, 1m (default 5s)]' \
            {-e,--export-binaries}'[If set built binaries will be exported to the sketch folder.]' \
            {-b,--fqbn}'[Fully Qualified Board Name, e.g.: arduino:avr:uno]' \
            {-h,--help}'[help for compile]' \
            '--libraries[List of custom libraries dir paths separated by commas. Or can be used multiple times for multiple libraries dir paths.]' \
            '--library[List of paths to libraries root folders. Libraries set this way have top priority in case of conflicts. Can be used multiple times for different libraries.]' \
            '--only-compilation-database[Just produce the compilation database, without actually compiling. All build commands are skipped except pre* hooks.]' \
            '--optimize-for-debug[Optional, optimize compile output for debugging, rather than for release.]' \
            '--output-dir[Save build artifacts in this directory.]' \
            {-p,--port}'[Upload port address, e.g.: COM3 or /dev/ttyACM2]' \
            '--preprocess[Print preprocessed code to stdout instead of compiling.]' \
            {-P,--programmer}'[Programmer to use, e.g: atmel_ice]' \
            {-l,--protocol}'[Upload port protocol, e.g: serial]' \
            '--quiet[Optional, suppresses almost every output.]' \
            '--show-properties[Show all build properties used instead of compiling.]' \
            {-u,--upload}'[Upload the binary after the compilation.]' \
            {-t,--verify}'[Verify uploaded binary after the upload.]' \
            '--vid-pid[When specified, VID/PID specific build properties are used, if board supports them.]' \
            '--warnings[Optional, can be: none, default, more, all. Used to tell gcc which warning level to use (-W flag). (default "none")]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_completion {
        _arguments \
            {-h,--help}'[help for completion]' \
            '--no-descriptions[Disable completion description for shells that support it]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_config {
        _arguments \
            {-h,--help}'[help for config]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_core {
        _arguments \
            {-h,--help}'[help for core]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_daemon {
        _arguments \
            '--daemonize[Do not terminate daemon process if the parent process dies]' \
            '--debug[Enable debug logging of gRPC calls]' \
            '--debug-filter[Display only the provided gRPC calls]' \
            {-h,--help}'[help for daemon]' \
            '--ip[The IP address the daemon will listen to (default "127.0.0.1")]' \
            '--port[The TCP port the daemon will listen to]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_debug {
        _arguments \
            '--discovery-timeout[Max time to wait for port discovery, e.g.: 30s, 1m (default 5s)]' \
            {-b,--fqbn}'[Fully Qualified Board Name, e.g.: arduino:avr:uno]' \
            {-h,--help}'[help for debug]' \
            {-I,--info}'[Show metadata about the debug session instead of starting the debugger.]' \
            '--input-dir[Directory containing binaries for debug.]' \
            '--interpreter[Debug interpreter e.g.: console, mi, mi1, mi2, mi3 (default "console")]' \
            {-p,--port}'[Upload port address, e.g.: COM3 or /dev/ttyACM2]' \
            {-P,--programmer}'[Programmer to use, e.g: atmel_ice]' \
            {-l,--protocol}'[Upload port protocol, e.g: serial]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_lib {
        _arguments \
            {-h,--help}'[help for lib]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_monitor {
        _arguments \
            {-c,--config}'[Configuration of the port.]' \
            '--describe[Show all the settings of the communication port.]' \
            '--discovery-timeout[Max time to wait for port discovery, e.g.: 30s, 1m (default 5s)]' \
            {-b,--fqbn}'[Fully Qualified Board Name, e.g.: arduino:avr:uno]' \
            {-h,--help}'[help for monitor]' \
            {-p,--port}'[Upload port address, e.g.: COM3 or /dev/ttyACM2]' \
            {-l,--protocol}'[Upload port protocol, e.g: serial]' \
            {-q,--quiet}'[Run in silent mode, show only monitor input and output.]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_outdated {
        _arguments \
            {-h,--help}'[help for outdated]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_sketch {
        _arguments \
            {-h,--help}'[help for sketch]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_update {
        _arguments \
            {-h,--help}'[help for update]' \
            '--show-outdated[Show outdated cores and libraries after index update]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_upgrade {
        _arguments \
            {-h,--help}'[help for upgrade]' \
            '--run-post-install[Force run of post-install scripts (if the CLI is not running interactively).]' \
            '--skip-post-install[Force skip of post-install scripts (if the CLI is running interactively).]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_upload {
        _arguments \
            '--discovery-timeout[Max time to wait for port discovery, e.g.: 30s, 1m (default 5s)]' \
            {-b,--fqbn}'[Fully Qualified Board Name, e.g.: arduino:avr:uno]' \
            {-h,--help}'[help for upload]' \
            '--input-dir[Directory containing binaries to upload.]' \
            {-i,--input-file}'[Binary file to upload.]' \
            {-p,--port}'[Upload port address, e.g.: COM3 or /dev/ttyACM2]' \
            {-P,--programmer}'[Programmer to use, e.g: atmel_ice]' \
            {-l,--protocol}'[Upload port protocol, e.g: serial]' \
            {-t,--verify}'[Verify uploaded binary after the upload.]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }

    function _arduino-cli_version {
        _arguments \
            {-h,--help}'[help for version]' \
            '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
            '--config-file[The custom config file (if not specified the default will be used).]' \
            '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
            '--log-file[Path to the file where logs will be written.]' \
            '--log-format[The output format for the logs, can be: text, json]' \
            '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
            '--no-color[Disable colored output.]' \
            {-v,--verbose}'[Print the logs on the standard output.]' \
            "*: :_files"

    }


function _arduino-cli {
    local line state

    function _commands {
        local -a commands
        commands=(
            'board:Arduino board commands.'
            'burn-bootloader:Upload the bootloader.'
            'cache:Arduino cache commands.'
            'compile:Compiles Arduino sketches.'
            'completion:Generates completion scripts'
            'config:Arduino configuration commands.'
            'core:Arduino core operations.'
            'daemon:Run as a daemon on port: 50051'
            'debug:Debug Arduino sketches.'
            'lib:Arduino commands about libraries.'
            'monitor:Open a communication port with a board.'
            'outdated:Lists cores and libraries that can be upgraded'
            'sketch:Arduino CLI sketch commands.'
            'update:Updates the index of cores and libraries'
            'upgrade:Upgrades installed cores and libraries.'
            'upload:Upload Arduino sketches.'
            'version:Shows version number of Arduino CLI.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--additional-urls[Comma-separated list of additional URLs for the Boards Manager.]' \
        '--config-file[The custom config file (if not specified the default will be used).]' \
        '--format[The output format for the logs, can be: text, json, jsonmini, yaml (default "text")]' \
        {-h,--help}'[help for arduino-cli]' \
        '--log-file[Path to the file where logs will be written.]' \
        '--log-format[The output format for the logs, can be: text, json]' \
        '--log-level[Messages with this level and above will be logged. Valid levels are: trace, debug, info, warn, error, fatal, panic]' \
        '--no-color[Disable colored output.]' \
        {-v,--verbose}'[Print the logs on the standard output.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (board)
            _arduino-cli_board
            ;;

        (burn-bootloader)
            _arduino-cli_burn-bootloader
            ;;

        (cache)
            _arduino-cli_cache
            ;;

        (compile)
            _arduino-cli_compile
            ;;

        (completion)
            _arduino-cli_completion
            ;;

        (config)
            _arduino-cli_config
            ;;

        (core)
            _arduino-cli_core
            ;;

        (daemon)
            _arduino-cli_daemon
            ;;

        (debug)
            _arduino-cli_debug
            ;;

        (lib)
            _arduino-cli_lib
            ;;

        (monitor)
            _arduino-cli_monitor
            ;;

        (outdated)
            _arduino-cli_outdated
            ;;

        (sketch)
            _arduino-cli_sketch
            ;;

        (update)
            _arduino-cli_update
            ;;

        (upgrade)
            _arduino-cli_upgrade
            ;;

        (upload)
            _arduino-cli_upload
            ;;

        (version)
            _arduino-cli_version
            ;;

        esac
        ;;
     esac

}

