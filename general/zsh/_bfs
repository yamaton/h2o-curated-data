#compdef _bfs bfs

# Auto-generated with h2o


function _bfs {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-H[Follow symbolic links on the command line, but not while searching]' \
        '-L[Follow all symbolic links]' \
        '-P[Never follow symbolic links (the default)]' \
        '-E[Use extended regular expressions (same as -regextype posix-extended)]' \
        '-X[Filter out files with non-xargs-safe names]' \
        '-d[Search in post-order (same as -depth)]' \
        '-x[Don'\''t descend into other mount points (same as -xdev)]' \
        '-f[Treat PATH as a path to search (useful if begins with a dash)]':file:_files \
        '-D[Turn on a debugging flag (see -D help)]' \
        '-ON[Enable optimization level N (default: 3)]' \
        '-S[Use breadth-first/depth-first/iterative deepening search (default: -S bfs)]' \
        '-not[expression expression]' \
        {-color,-nocolor}'[Turn colors on or off (default: -color if outputting to a terminal, -nocolor otherwise)]' \
        '-daystart[Measure times relative to the start of today]' \
        '-depth[Search in post-order (descendents first)]' \
        '-follow[Follow all symbolic links (same as -L)]' \
        {-ignore_readdir_race,-noignore_readdir_race}'[Whether to report an error if bfs detects that the file tree is modified during the search (default: -noignore_readdir_race)]' \
        {-maxdepth,-mindepth}'[Ignore files deeper/shallower than N]' \
        '-mount[Don'\''t descend into other mount points (same as -xdev for now, but will skip mount points entirely in the future)]' \
        '-noleaf[Ignored; for compatibility with GNU find]' \
        '-regextype[Use TYPE-flavored regexes (default: posix-basic; see -regextype help)]' \
        '-unique[Skip any files that have already been seen]' \
        {-warn,-nowarn}'[Turn on or off warnings about the command line]' \
        '-xdev[Don'\''t descend into other mount points]' \
        '-acl[Find files with a non-trivial Access Control List]' \
        '-newer[Find files accessed/Birthed/changed/modified more recently than FILE was modified]':file:_files \
        '-aBcmnewer[Find files accessed/Birthed/changed/modified more recently than FILE was modified]':file:_files \
        '-capable[Find files with POSIX.1e capabilities set]' \
        '-depth[Find files with depth N]' \
        '-empty[Find empty files/directories]' \
        {-executable,-readable,-writable}'[Find files the current user can execute/read/write]' \
        {-false,-true}'[Always false/true]' \
        '-fstype[Find files on file systems with the given TYPE]' \
        {-gid,-uid}'[Find files owned by group/user ID N]' \
        {-group,-user}'[Find files owned by the group/user NAME]' \
        {-ilname,-iname,-ipath,-iregex,-iwholename}'[Case-insensitive versions of -lname/-name/-path/-regex/-wholename]' \
        '-inum[Find files with inode number N]' \
        '-links[Find files with N hard links]' \
        '-lname[Find symbolic links whose target matches the GLOB]' \
        '-name[Find files whose name matches the GLOB]' \
        '-newer[Find files newer than FILE]':file:_files \
        '-newerXY[Find files whose X time is newer than the Y time of REFERENCE. X and Y can be any of \[aBcm\].]' \
        {-nogroup,-nouser}'[Find files owned by nonexistent groups/users]' \
        {-path,-wholename}'[Find files whose entire path matches the GLOB]' \
        '-perm[Find files with a matching mode]' \
        '-regex[Find files whose entire path matches the regular expression REGEX]' \
        '-samefile[Find hard links to FILE]':file:_files \
        '-size[Find files with the given size, in 1-byte characters, 2-byte words, 512-byte blocks (default), or kiB/MiB/GiB/TiB/PiB]' \
        '-sparse[Find files that occupy fewer disk blocks than expected]' \
        '-type[Find files of the given type]' \
        '-used[Find files last accessed N days after they were changed]' \
        '-xattr[Find files with extended attributes]' \
        '-xtype[Find files of the given type, following links when -type would not, and vice versa]' \
        {-delete,-rm}'[Delete any found files (implies -depth)]' \
        '-exec[Execute a command]' \
        '-ok[Prompt the user whether to execute a command]' \
        {-execdir,-okdir}'[Like -exec/-ok, but run the command in the same directory as the found file(s)]' \
        '-exit[Exit immediately with the given status (0 if unspecified)]' \
        {-fls,-fprint,-fprint0,-fprintf}'[Like -ls/-print/-print0/-printf, but write to FILE instead of standard output]':file:_files \
        '-ls[List files like ls -dils]' \
        '-nohidden[Filter out hidden files and directories]' \
        '-print[Print the path to the found file]' \
        '-print0[Like -print, but use the null character ('\''\0'\'') as a separator rather than newlines]' \
        '-printf[Print according to a format string (see man find). The additional format directives %w and %Wk for printing file birth times are supported.]' \
        '-printx[Like -print, but escape whitespace and quotation characters, to make the output safe for xargs. Consider using -print0 and xargs -0 instead.]' \
        '-prune[Don'\''t descend into this directory]' \
        '-quit[Quit immediately]' \
        '-version[Print version information]' \
        '-help[Print this help message]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

