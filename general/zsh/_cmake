#compdef _cmake cmake

# Generated with h2o 0.1.18


function _cmake {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-S[Path to root directory of the CMake project to build.]:file:_files' \
        '-B[Path to directory which CMake will use as the root of build directory.]:file:_files' \
        '-C[Pre-load a script to populate the cache.]' \
        '(-D -D)'{-D,-D}'[Create or update a CMake CACHE entry.]' \
        '-U[Remove matching entries from CMake CACHE.]' \
        '-G[Specify a build system generator.]' \
        '-T[Toolset specification for the generator, if supported.]' \
        '-A[Specify platform name if supported by generator.]' \
        '-Wno-dev[Suppress developer warnings.]' \
        '-Wdev[Enable developer warnings.]' \
        '-Werror[Make developer warnings errors.]' \
        '-Wno-error[Make developer warnings not errors.]' \
        '-Wdeprecated[Enable deprecated functionality warnings.]' \
        '-Wno-deprecated[Suppress deprecated functionality warnings.]' \
        '-Werror[Make deprecated macro and function warnings errors.]' \
        '-Wno-error[Make deprecated macro and function warnings not errors.]' \
        '-L[List non-advanced cached variables.]' \
        '-N[View mode only.]' \
        '--graphviz[Generate graphviz of dependencies, see CMakeGraphVizOptions for more.]:file:_files' \
        '--system-information[Dump information about this system.]:file:_files' \
        '--log-level[Set the log level.]' \
        '--debug-trycompile[Do not delete the try_compile() build tree.  Only useful on one try_compile() at a time.]' \
        '--debug-output[Put cmake in a debug mode.]' \
        '--trace[Put cmake in trace mode.]' \
        '--trace-expand[Put cmake in trace mode.]' \
        '--trace-source[Put cmake in trace mode, but output only lines of a specified file.]:file:_files' \
        '--trace-redirect[Put cmake in trace mode and redirect trace output to a file instead of stderr.]:file:_files' \
        '--warn-uninitialized[Warn about uninitialized values.]' \
        '--warn-unused-vars[Warn about unused variables.]' \
        '--no-warn-unused-cli[Don’t warn about command line options.]' \
        '--check-system-vars[Find problems with variable usage in system files.]' \
        '--build[Project binary directory to be built.  This is required and must be first.]' \
        '(--parallel -j)'{--parallel,-j}'[The  maximum number of concurrent processes to use when building.  If <jobs> is omitted the native build tool’s default number is used.]' \
        '(--target -t)'{--target,-t}'[Build <tgt> instead of the default target.  Multiple targets may be given, separated by spaces.]' \
        '--config[For multi-configuration tools, choose configuration <cfg>.]' \
        '--clean-first[Build target clean first, then build.  (To clean only, use --target clean.)]' \
        '--use-stderr[Ignored.      Behavior is default in CMake >= 3.0.]' \
        '(--verbose -v)'{--verbose,-v}'[Enable verbose output - if supported - including the build commands to be executed.]' \
        '--[Pass remaining options to the native tool.]' \
        '--install[Project binary directory to install. This is required and must be first.]' \
        '--config[For multi-configuration generators, choose configuration <cfg>.]' \
        '--component[Component-based install. Only install component <comp>.]' \
        '--prefix[Override the installation prefix, CMAKE_INSTALL_PREFIX.]' \
        '--strip[Strip before installing.]' \
        '(-v --verbose)'{-v,--verbose}'[Enable verbose output.]' \
        '(--help -help -usage -h -H)'{--help,-help,-usage,-h,-H}'[Print usage information and exit.]' \
        '(--version -version)'{--version,-version}'[Show program name/version banner and exit.]' \
        '--help-full[Print all help manuals and exit.]' \
        '--help-manual[\[<f>\]   Print one help manual and exit.]' \
        '--help-manual[Print one help manual and exit.]' \
        '--help-manual[Print one help manual and exit.]' \
        '--help-manual-list[List help manuals available and exit.]' \
        '--help-command[\[<f>\]   Print help for one command and exit.]' \
        '--help-command[Print help for one command and exit.]' \
        '--help-command[Print help for one command and exit.]' \
        '--help-command-list[List commands with help available and exit.]' \
        '--help-commands[Print cmake-commands manual and exit.]' \
        '--help-module[\[<f>\]   Print help for one module and exit.]' \
        '--help-module[Print help for one module and exit.]' \
        '--help-module[Print help for one module and exit.]' \
        '--help-module-list[List modules with help available and exit.]' \
        '--help-modules[Print cmake-modules manual and exit.]' \
        '--help-policy[\[<f>\]   Print help for one policy and exit.]' \
        '--help-policy[Print help for one policy and exit.]' \
        '--help-policy[Print help for one policy and exit.]' \
        '--help-policy-list[List policies with help available and exit.]' \
        '--help-policies[Print cmake-policies manual and exit.]' \
        '--help-property[\[<f>\]   Print help for one property and exit.]' \
        '--help-property[Print help for one property and exit.]' \
        '--help-property[Print help for one property and exit.]' \
        '--help-property-list[List properties with help available and exit.]' \
        '--help-properties[Print cmake-properties manual and exit.]' \
        '--help-variable[\[<f>\]   Print help for one variable and exit.]' \
        '--help-variable[Print help for one variable and exit.]' \
        '--help-variable[Print help for one variable and exit.]' \
        '--help-variable-list[List variables with help available and exit.]' \
        '--help-variables[Print cmake-variables manual and exit.]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

