#compdef _diff diff

# Generated with h2o 0.1.18


function _diff {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--normal[output a normal diff (the default)]' \
        '(-q --brief)'{-q,--brief}'[report only when files differ]' \
        '(-s --report-identical-files)'{-s,--report-identical-files}'[report when two files are the same]' \
        '(-c -C --context)'{-c,-C,--context}'[output NUM (default 3) lines of copied context]' \
        '(-u -U --unified)'{-u,-U,--unified}'[output NUM (default 3) lines of unified context]' \
        '(-e --ed)'{-e,--ed}'[output an ed script]' \
        '(-n --rcs)'{-n,--rcs}'[output an RCS format diff]' \
        '(-y --side-by-side)'{-y,--side-by-side}'[output in two columns]' \
        '(-W --width)'{-W,--width}'[output at most NUM (default 130) print columns]' \
        '--left-column[output only the left column of common lines]' \
        '--suppress-common-lines[do not output common lines]' \
        '(-p --show-c-function)'{-p,--show-c-function}'[show which C function each change is in]' \
        '(-F --show-function-line)'{-F,--show-function-line}'[show the most recent line matching RE]' \
        '--label[use LABEL instead of file name and timestamp (can be repeated)]' \
        '(-t --expand-tabs)'{-t,--expand-tabs}'[expand tabs to spaces in output]' \
        '(-T --initial-tab)'{-T,--initial-tab}'[make tabs line up by prepending a tab]' \
        '--tabsize[tab stops every NUM (default 8) print columns]' \
        '--suppress-blank-empty[suppress space or tab before empty output lines]' \
        '(-l --paginate)'{-l,--paginate}'[pass output through '\''pr'\'' to paginate it]' \
        '(-r --recursive)'{-r,--recursive}'[recursively compare any subdirectories found]' \
        '--no-dereference[don'\''t follow symbolic links]' \
        '(-N --new-file)'{-N,--new-file}'[treat absent files as empty]' \
        '--unidirectional-new-file[treat absent first files as empty]' \
        '--ignore-file-name-case[ignore case when comparing file names]' \
        '--no-ignore-file-name-case[consider case when comparing file names]' \
        '(-x --exclude)'{-x,--exclude}'[exclude files that match PAT]' \
        '(-X --exclude-from)'{-X,--exclude-from}'[exclude files that match any pattern in FILE]' \
        '(-S --starting-file)'{-S,--starting-file}'[start with FILE when comparing directories]' \
        '--from-file[compare FILE1 to all operands; FILE1 can be a directory]' \
        '--to-file[compare all operands to FILE2; FILE2 can be a directory]' \
        '(-i --ignore-case)'{-i,--ignore-case}'[ignore case differences in file contents]' \
        '(-E --ignore-tab-expansion)'{-E,--ignore-tab-expansion}'[ignore changes due to tab expansion]' \
        '(-Z --ignore-trailing-space)'{-Z,--ignore-trailing-space}'[ignore white space at line end]' \
        '(-b --ignore-space-change)'{-b,--ignore-space-change}'[ignore changes in the amount of white space]' \
        '(-w --ignore-all-space)'{-w,--ignore-all-space}'[ignore all white space]' \
        '(-B --ignore-blank-lines)'{-B,--ignore-blank-lines}'[ignore changes where lines are all blank]' \
        '(-I --ignore-matching-lines)'{-I,--ignore-matching-lines}'[ignore changes where all lines match RE]' \
        '(-a --text)'{-a,--text}'[treat all files as text]' \
        '--strip-trailing-cr[strip trailing carriage return on input]' \
        '(-D --ifdef)'{-D,--ifdef}'[output merged file with '\''#ifdef NAME'\'' diffs]' \
        '--GTYPE-group-format[format GTYPE input groups with GFMT]' \
        '--line-format[format all input lines with LFMT]' \
        '--LTYPE-line-format[format LTYPE input lines with LFMT]' \
        '(-d --minimal)'{-d,--minimal}'[try hard to find a smaller set of changes]' \
        '--horizon-lines[keep NUM lines of the common prefix and suffix]' \
        '--speed-large-files[assume large files and many scattered small changes]' \
        '--color[colorize the output; WHEN can be '\''never'\'', '\''always'\'', or '\''auto'\'' (the default)]' \
        '--palette[the colors to use when --color is active; PALETTE is a colon-separated list of terminfo capabilities]' \
        '--help[display this help and exit]' \
        '(-v --version)'{-v,--version}'[output version information and exit]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

