#compdef _ffprobe ffprobe

# Generated with h2o 0.1.18


function _ffprobe {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-L[Show license.]' \
        '(-h -? -help --help)'{-h,-?,-help,--help}'[Show help. An optional parameter may be specified to print help about a specific item. If no argument is specified, only basic (non advanced) tool options are shown.]' \
        '-version[Show version.]' \
        '-formats[Show available formats (including devices).]' \
        '-demuxers[Show available demuxers.]' \
        '-muxers[Show available muxers.]' \
        '-devices[Show available devices.]' \
        '-codecs[Show all codecs known to libavcodec.]' \
        '-decoders[Show available decoders.]' \
        '-encoders[Show all available encoders.]' \
        '-bsfs[Show available bitstream filters.]' \
        '-protocols[Show available protocols.]' \
        '-filters[Show available libavfilter filters.]' \
        '-pix_fmts[Show available pixel formats.]' \
        '-sample_fmts[Show available sample formats.]' \
        '-layouts[Show channel names and standard channel layouts.]' \
        '-colors[Show recognized color names.]' \
        '-sources[Show autodetected sources of the input device.  Some devices may provide system-dependent source names that cannot be autodetected.  The returned list cannot be assumed to be always complete.]' \
        '-sinks[Show autodetected sinks of the output device.  Some devices may provide system-dependent sink names that cannot be autodetected.  The returned list cannot be assumed to be always complete.]' \
        '(-loglevel -v)'{-loglevel,-v}'[Set logging level and flags used by the library.]' \
        '-report[Dump full command line and log output to a file named "program-YYYYMMDD-HHMMSS.log" in the current directory.  This file can be useful for bug reports.  It also implies "-loglevel debug".]' \
        '-hide_banner[Suppress printing banner.]' \
        '-cpuflags[Allows setting and clearing cpu flags. This option is intended for testing. Do not use it unless you know what you'\''re doing.]' \
        '-cpuflags[Allows setting and clearing cpu flags. This option is intended for testing. Do not use it unless you know what you'\''re doing.]' \
        '-f[Force format to use.]' \
        '-unit[Show the unit of the displayed values.]' \
        '-prefix[Use SI prefixes for the displayed values.  Unless the "-byte_binary_prefix" option is used all the prefixes are decimal.]' \
        '-byte_binary_prefix[Force the use of binary prefixes for byte values.]' \
        '-sexagesimal[Use sexagesimal format HH:MM:SS.MICROSECONDS for time values.]' \
        '-pretty[Prettify the format of the displayed values, it corresponds to the options "-unit -prefix -byte_binary_prefix -sexagesimal".]' \
        '(-of -print_format)'{-of,-print_format}'[Set the output printing format.]' \
        '-sections[Print sections structure and section information, and exit. The output is not meant to be parsed by a machine.]' \
        '-select_streams[Select only the streams specified by stream_specifier. This option affects only the options related to streams (e.g. "show_streams", "show_packets", etc.).]' \
        '-show_data[Show payload data, as a hexadecimal and ASCII dump. Coupled with -show_packets, it will dump the packets'\'' data. Coupled with -show_streams, it will dump the codec extradata.]' \
        '-show_data_hash[Show a hash of payload data, for packets with -show_packets and for codec extradata with -show_streams.]' \
        '-show_error[Show information about the error found when trying to probe the input.]' \
        '-show_format[Show information about the container format of the input multimedia stream.]' \
        '-show_format_entry[Like -show_format, but only prints the specified entry of the container format information, rather than all. This option may be given more than once, then all specified entries will be shown.]' \
        '-show_entries[Set list of entries to show.]' \
        '-show_packets[Show information about each packet contained in the input multimedia stream.]' \
        '-show_frames[Show information about each frame and subtitle contained in the input multimedia stream.]' \
        '-show_log[Show logging information from the decoder about each frame according to the value set in loglevel, (see "-loglevel"). This option requires "-show_frames".]' \
        '-show_streams[Show information about each media stream contained in the input multimedia stream.]' \
        '-show_programs[Show information about programs and their streams contained in the input multimedia stream.]' \
        '-show_chapters[Show information about chapters stored in the format.]' \
        '-count_frames[Count the number of frames per stream and report it in the corresponding stream section.]' \
        '-count_packets[Count the number of packets per stream and report it in the corresponding stream section.]' \
        '-read_intervals[Read only the specified intervals. read_intervals must be a sequence of interval specifications separated by ",". ffprobe will seek to the interval starting point, and will continue reading from that.]' \
        '(-show_private_data -private)'{-show_private_data,-private}'[Show private data, that is data depending on the format of the particular shown element.  This option is enabled by default, but you may need to disable it for specific uses, for example when creating XSD-compliant XML output.]' \
        '-show_program_version[Show information related to program version.]' \
        '-show_library_versions[Show information related to library versions.]' \
        '-show_versions[Show information related to program and library versions. This is the equivalent of setting both -show_program_version and -show_library_versions options.]' \
        '-show_pixel_formats[Show information about all pixel formats supported by FFmpeg.]' \
        '-bitexact[Force bitexact output, useful to produce output which is not dependent on the specific build.]' \
        '-i[Read input_url.]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

