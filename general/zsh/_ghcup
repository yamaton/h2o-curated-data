#compdef _ghcup ghcup

# Auto-generated with h2o

    function _ghcup_tui {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_install {
        _arguments \
            {-p,--platform}'[Override for platform (triple matching ghc tarball names), e.g. x86_64-fedora27-linux]' \
            {-u,--url}'[Install the specified version from this bindist]' \
            '--set[Set as active version after install]' \
            {-i,--isolate}'[install in an isolated dir instead of the default one]':file:_files \
            {-f,--force}'[Force install]' \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_set {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_unset {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_rm {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_list {
        _arguments \
            {-t,--tool}'[Tool to list versions for. Default is all]' \
            {-c,--show-criteria}'[Show only installed/set/available tool versions]' \
            {-r,--raw-format}'[More machine-parsable format]' \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_upgrade {
        _arguments \
            {-i,--inplace}'[Upgrade ghcup in-place]' \
            {-t,--target}'[Absolute filepath to write ghcup into]':file:_files \
            {-f,--force}'[Force update]' \
            '--fail-if-shadowed[Fails after upgrading if the upgraded ghcup binary is shadowed by something else in PATH (useful for CI)]' \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_compile {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_whereis {
        _arguments \
            {-d,--directory}'[return directory of the binary instead of the binary location]' \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_prefetch {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_gc {
        _arguments \
            {-o,--ghc-old}'[Remove GHC versions marked as '\''old'\'']' \
            {-p,--profiling-libs}'[Remove profiling libs of GHC versions]' \
            {-s,--share-dir}'[Remove GHC share directories (documentation)]' \
            {-h,--hls-no-ghc}'[Remove HLS versions that don'\''t have a corresponding installed GHC version]' \
            {-c,--cache}'[GC the GHCup cache]' \
            {-t,--tmpdirs}'[Remove tmpdir leftovers]' \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_run {
        _arguments \
            {-a,--append}'[Append bin/ dir to PATH instead of prepending (this means that e.g. a system installation may take precedence)]' \
            {-i,--install}'[Install the tool, if missing]' \
            '--ghc[The ghc version]' \
            '--cabal[The cabal version]' \
            '--hls[The HLS version]' \
            '--stack[The stack version]' \
            {-b,--bindir}'[directory where to create the tool symlinks (default: newly created system temp dir)]':file:_files \
            {-q,--quick}'[Avoid any expensive work (such as downloads, version/tag resolution etc.). Disables --install.]' \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_debug-info {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_tool-requirements {
        _arguments \
            {-r,--raw-format}'[machine-parsable format]' \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_changelog {
        _arguments \
            {-o,--open}'[xdg-open the changelog url]' \
            {-t,--tool}'[Open changelog for given tool (default: ghc)]' \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_config {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }

    function _ghcup_nuke {
        _arguments \
            {-h,--help}'[Show this help text]' \
            "*: :_files"

    }


function _ghcup {
    local line state

    function _commands {
        local -a commands
        commands=(
            'tui:Start the interactive GHCup UI'
            'install:Install or update GHC/cabal/HLS/stack'
            'set:Set currently active GHC/cabal version'
            'unset:Unset currently active GHC/cabal version'
            'rm:Remove a GHC/cabal/HLS/stack version'
            'list:Show available GHCs and other tools'
            'upgrade:Upgrade ghcup'
            'compile:Compile a tool from source'
            'whereis:Find a tools location'
            'prefetch:Prefetch assets'
            'gc:Garbage collection'
            'run:Run a command with the given tool in PATH'
            'debug-info:Show debug info'
            'tool-requirements:Show the requirements for ghc/cabal'
            'changelog:Find/show changelog'
            'config:Show or set config'
            'nuke:Completely remove ghcup from your system'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-v,--verbose}'[Enable verbosity (default: disabled)]' \
        {-c,--cache}'[Cache downloads in ~/.ghcup/cache (default: disabled)]' \
        {-n,--no-verify}'[Disable tarball checksum verification (default: enabled)]' \
        '--keep[Keep build directories? (default: errors)]' \
        '--downloader[Downloader to use (default: curl)]' \
        {-o,--offline}'[Don'\''t do any network calls, trying cached assets and failing if missing.]' \
        '--gpg[GPG verification (default: none)]' \
        {-h,--help}'[Show this help text]' \
        '--version[Show version]' \
        '--numeric-version[Show the numeric version (for use in scripts)]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (tui)
            _ghcup_tui
            ;;

        (install)
            _ghcup_install
            ;;

        (set)
            _ghcup_set
            ;;

        (unset)
            _ghcup_unset
            ;;

        (rm)
            _ghcup_rm
            ;;

        (list)
            _ghcup_list
            ;;

        (upgrade)
            _ghcup_upgrade
            ;;

        (compile)
            _ghcup_compile
            ;;

        (whereis)
            _ghcup_whereis
            ;;

        (prefetch)
            _ghcup_prefetch
            ;;

        (gc)
            _ghcup_gc
            ;;

        (run)
            _ghcup_run
            ;;

        (debug-info)
            _ghcup_debug-info
            ;;

        (tool-requirements)
            _ghcup_tool-requirements
            ;;

        (changelog)
            _ghcup_changelog
            ;;

        (config)
            _ghcup_config
            ;;

        (nuke)
            _ghcup_nuke
            ;;

        esac
        ;;
     esac

}

