#compdef _grex grex

# Auto-generated with h2o


function _grex {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-f,--file}'[Reads test cases on separate lines from a file.]':file:_files \
        {-d,--digits}'[Converts any Unicode decimal digit to \d.]' \
        {-D,--non-digits}'[Converts any character which is not a Unicode decimal digit to \D.]' \
        {-s,--spaces}'[Converts any Unicode whitespace character to \s.]' \
        {-S,--non-spaces}'[Converts any character which is not a Unicode whitespace character to \S]' \
        {-w,--words}'[Converts any Unicode word character to \w.]' \
        {-W,--non-words}'[Converts any character which is not a Unicode word character to \W.]' \
        {-e,--escape}'[Replaces all non-ASCII characters with unicode escape sequences]' \
        '--with-surrogates[Converts astral code points to surrogate pairs if --escape is set]' \
        {-r,--repetitions}'[Detects repeated non-overlapping substrings and converts them to {min,max} quantifier notation]' \
        '--min-repetitions[Specifies the minimum quantity of substring repetitions to be converted if --repetitions is set]' \
        '--min-substring-length[Specifies the minimum length a repeated substring must have in order to be converted if --repetitions is set]' \
        '--no-anchors[Removes the caret and dollar sign anchors from the resulting regular expression.]' \
        '--no-end-anchor[Removes the dollar sign anchor `$` from the resulting regular expression.]' \
        '--no-start-anchor[Removes the caret anchor `^` from the resulting regular expression.]' \
        {-x,--verbose}'[Produces a nicer-looking regular expression in verbose mode]' \
        {-c,--colorize}'[Provides syntax highlighting for the resulting regular expression]' \
        {-i,--ignore-case}'[Performs case-insensitive matching, letters match both upper and lower case]' \
        {-g,--capture-groups}'[Replaces non-capturing groups with capturing ones]' \
        {-h,--help}'[Print help information]' \
        {-v,--version}'[Print version information]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

