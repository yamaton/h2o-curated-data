#compdef _gzip gzip

# Auto-generated with h2o


function _gzip {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-c,--stdout}'[write on standard output, keep original files unchanged]' \
        {-d,--decompress,-f,--force}'[force overwrite of output file and compress links]' \
        {-h,--help}'[give this help]' \
        {-k,--keep}'[keep (don'\''t delete) input files]' \
        {-l,--list}'[list compressed file contents]' \
        {-L,--license}'[display software license]' \
        {-n,--no-name}'[do not save or restore the original name and timestamp]' \
        {-N,--name}'[save or restore the original name and timestamp]' \
        {-q,--quiet}'[suppress all warnings]' \
        {-r,--recursive}'[operate recursively on directories]' \
        '--rsyncable[make rsync-friendly archive]' \
        {-S,--suffix}'[use suffix SUF on compressed files]' \
        '--synchronous[synchronous output (safer if system crashes, but slower)]' \
        {-t,--test}'[test compressed file integrity]' \
        {-v,--verbose}'[verbose mode]' \
        {-V,--version}'[display version number]' \
        {-1,--fast}'[compress faster]' \
        {-9,--best}'[compress better]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

