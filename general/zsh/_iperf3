#compdef _iperf3 iperf3

# Auto-generated with h2o


function _iperf3 {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-p,--port}'[server port to listen on/connect to]' \
        {-f,--format}'[format to report: Kbits, Mbits, Gbits, Tbits]' \
        {-i,--interval}'[seconds between periodic throughput reports]' \
        {-F,--file}'[xmit/recv the specified file]' \
        {-A,--affinity}'[set CPU affinity]' \
        {-B,--bind}'[bind to the interface associated with the address <host>]' \
        {-V,--verbose}'[more detailed output]' \
        {-J,--json}'[output in JSON format]' \
        '--logfile[send output to a log file]' \
        '--forceflush[force flushing output at every interval]' \
        '--timestamps[emit a timestamp at the start of each output line (using optional format string as per strftime(3))]' \
        {-d,--debug}'[emit debugging output]' \
        {-v,--version}'[show version information and quit]' \
        {-h,--help}'[show this message and quit]' \
        {-s,--server}'[run in server mode]' \
        {-D,--daemon}'[run the server as a daemon]' \
        {-I,--pidfile}'[write PID file]':file:_files \
        {-1,--one-off}'[handle one client connection then exit]' \
        '--server-bitrate-limit[server'\''s total bit rate limit (default 0 = no limit) (optional slash and number of secs interval for averaging total data rate. Default is 5 seconds)]' \
        '--rsa-private-key-path[path to the RSA private key used to decrypt authentication credentials]' \
        '--authorized-users-path[path to the configuration file containing user credentials]' \
        {-c,--client}'[run in client mode, connecting to <host>]' \
        '--sctp[use SCTP rather than TCP]' \
        {-X,--xbind}'[bind SCTP association to links]' \
        '--nstreams[number of SCTP streams]' \
        {-u,--udp}'[use UDP rather than TCP]' \
        '--connect-timeout[timeout for control connection setup (ms)]' \
        {-b,--bitrate}'[target bitrate in bits/sec (0 for unlimited) (default 1 Mbit/sec for UDP, unlimited for TCP) (optional slash and packet count for burst mode)]' \
        '--pacing-timer[set the timing for pacing, in microseconds (default 1000)]' \
        '--fq-rate[enable fair-queuing based socket pacing in bits/sec (Linux only)]' \
        {-t,--time}'[time in seconds to transmit for (default 10 secs)]' \
        {-n,--bytes}'[number of bytes to transmit (instead of -t)]' \
        {-k,--blockcount}'[number of blocks (packets) to transmit (instead of -t or -n)]' \
        {-l,--length}'[length of buffer to read or write (default 128 KB for TCP, dynamic or 1460 for UDP)]' \
        '--cport[bind to a specific client port (TCP and UDP, default: ephemeral port)]' \
        {-P,--parallel}'[number of parallel client streams to run]' \
        {-R,--reverse}'[run in reverse mode (server sends, client receives)]' \
        '--bidir[run in bidirectional mode. Client and server send and receive data.]' \
        {-w,--window}'[set window size / socket buffer size]' \
        {-C,--congestion}'[set TCP congestion control algorithm (Linux and FreeBSD only)]' \
        {-M,--set-mss}'[set TCP/SCTP maximum segment size (MTU - 40 bytes)]' \
        {-N,--no-delay}'[set TCP/SCTP no delay, disabling Nagle'\''s Algorithm]' \
        {-4,--version4}'[only use IPv4]' \
        {-6,--version6}'[only use IPv6]' \
        {-S,--tos}'[set the IP type of service, 0-255. The usual prefixes for octal and hex can be used, i.e. 52, 064 and 0x34 all specify the same value.]' \
        '--dscp[set the IP dscp value, either 0-63 or symbolic. Numeric values can be specified in decimal, octal and hex (see --tos above).]' \
        {-L,--flowlabel}'[set the IPv6 flow label (only supported on Linux)]' \
        {-Z,--zerocopy}'[use a '\''zero copy'\'' method of sending data]' \
        {-O,--omit}'[omit the first n seconds]' \
        {-T,--title}'[prefix every output line with this string]' \
        '--extra-data[data string to include in client and server JSON]' \
        '--get-server-output[get results from server]' \
        '--udp-counters-64bit[use 64-bit counters in UDP test packets]' \
        '--repeating-payload[use repeating pattern in payload, instead of randomized payload (like in iperf2)]' \
        '--username[username for authentication]' \
        '--rsa-public-key-path[path to the RSA public key used to encrypt authentication credentials]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

