#compdef _join join

# Auto-generated with h2o


function _join {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-a[also print unpairable lines from file FILENUM, where FILENUM is 1 or 2, corresponding to FILE1 or FILE2]':file:_files \
        '-e[replace missing input fields with EMPTY]' \
        {-i,--ignore-case}'[ignore differences in case when comparing fields]' \
        '-j[equivalent to '\''-1 FIELD -2 FIELD'\'']' \
        '-o[obey FORMAT while constructing output line]' \
        '-t[use CHAR as input and output field separator]' \
        '-v[like -a FILENUM, but suppress joined output lines]':file:_files \
        '-1[join on this FIELD of file 1]' \
        '-2[join on this FIELD of file 2]' \
        '--check-order[check that the input is correctly sorted, even if all input lines are pairable]' \
        '--nocheck-order[do not check that the input is correctly sorted]' \
        '--header[treat the first line in each file as field headers, print them without trying to pair them]' \
        {-z,--zero-terminated}'[line delimiter is NUL, not newline]' \
        '--help[display this help and exit]' \
        '--version[output version information and exit]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

