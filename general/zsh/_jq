#compdef _jq jq

# Generated with h2o 0.1.18


function _jq {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-c[compact instead of pretty-printed output;]' \
        '-n[use `null` as the single input value;]' \
        '-e[set the exit status code based on the output;]' \
        '-s[read (slurp) all inputs into an array; apply filter to it;]' \
        '-r[output raw strings, not JSON texts;]' \
        '-R[read raw strings, not JSON texts;]' \
        '-C[colorize JSON;]' \
        '-M[monochrome (don'\''t colorize JSON);]' \
        '-S[sort keys of objects on output;]' \
        '--tab[use tabs for indentation;]' \
        '--arg[set variable $a to value <v>;]' \
        '--argjson[set variable $a to JSON value <v>;]' \
        '--slurpfile[set variable $a to an array of JSON texts read from <f>;]' \
        '--rawfile[set variable $a to a string consisting of the contents of <f>;]' \
        '--args[remaining arguments are string arguments, not files;]' \
        '--jsonargs[remaining arguments are JSON arguments, not files;]' \
        '--[terminates argument processing;]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

