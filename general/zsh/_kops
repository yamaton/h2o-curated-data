#compdef _kops kops

# Auto-generated with h2o

    function _kops_completion {
        _arguments \
            {-h,--help}'[help for completion]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_create {
        _arguments \
            {-f,--filename}'[Filename to use to create the resource]' \
            {-h,--help}'[help for create]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_delete {
        _arguments \
            {-f,--filename}'[Filename to use to delete the resource]' \
            {-h,--help}'[help for delete]' \
            {-y,--yes}'[Specify --yes to immediately delete the resource]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_distrust {
        _arguments \
            {-h,--help}'[help for distrust]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_edit {
        _arguments \
            {-h,--help}'[help for edit]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_export {
        _arguments \
            {-h,--help}'[help for export]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_get {
        _arguments \
            {-h,--help}'[help for get]' \
            {-o,--output}'[output format. One of: table, yaml, json (default "table")]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_help {
        _arguments \
            {-h,--help}'[help for help]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_promote {
        _arguments \
            {-h,--help}'[help for promote]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_replace {
        _arguments \
            {-f,--filename}'[A list of one or more files separated by a comma.]' \
            '--force[Force any changes, which will also create any non-existing resource]' \
            {-h,--help}'[help for replace]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_rolling-update {
        _arguments \
            {-h,--help}'[help for rolling-update]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_toolbox {
        _arguments \
            {-h,--help}'[help for toolbox]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_trust {
        _arguments \
            {-h,--help}'[help for trust]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_update {
        _arguments \
            {-h,--help}'[help for update]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_upgrade {
        _arguments \
            {-h,--help}'[help for upgrade]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_validate {
        _arguments \
            {-h,--help}'[help for validate]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }

    function _kops_version {
        _arguments \
            {-h,--help}'[help for version]' \
            '--server[show the kOps version that made the last change to the state store.]' \
            '--short[only print the main kOps version. Useful for scripting.]' \
            '--config[yaml config file (default is $HOME/.kops.yaml)]' \
            '--name[Name of cluster. Overrides KOPS_CLUSTER_NAME environment variable]' \
            '--state[Location of state storage (kops '\''config'\'' file). Overrides KOPS_STATE_STORE environment variable]' \
            {-v,--v}'[number for the log level verbosity]' \
            "*: :_files"

    }


function _kops {
    local line state

    function _commands {
        local -a commands
        commands=(
            'completion:Generate the autocompletion script for the specified shell'
            'create:Create a resource by command line, filename or stdin.'
            'delete:Delete clusters, instancegroups, instances, and secrets.'
            'distrust:Distrust keypairs.'
            'edit:Edit clusters and other resources.'
            'export:Export configuration.'
            'get:Get one or many resources.'
            'help:Help about any command'
            'promote:Promote a resource.'
            'replace:Replace cluster resources.'
            'rolling-update:Rolling update a cluster.'
            'toolbox:Miscellaneous, infrequently used commands.'
            'trust:Trust keypairs.'
            'update:Update a cluster.'
            'upgrade:Upgrade a kubernetes cluster.'
            'validate:Validate a kOps cluster.'
            'version:Print the kOps version information.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (completion)
            _kops_completion
            ;;

        (create)
            _kops_create
            ;;

        (delete)
            _kops_delete
            ;;

        (distrust)
            _kops_distrust
            ;;

        (edit)
            _kops_edit
            ;;

        (export)
            _kops_export
            ;;

        (get)
            _kops_get
            ;;

        (help)
            _kops_help
            ;;

        (promote)
            _kops_promote
            ;;

        (replace)
            _kops_replace
            ;;

        (rolling-update)
            _kops_rolling-update
            ;;

        (toolbox)
            _kops_toolbox
            ;;

        (trust)
            _kops_trust
            ;;

        (update)
            _kops_update
            ;;

        (upgrade)
            _kops_upgrade
            ;;

        (validate)
            _kops_validate
            ;;

        (version)
            _kops_version
            ;;

        esac
        ;;
     esac

}

