#compdef _make make

# Auto-generated with h2o


function _make {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-b,-m}'[Ignored for compatibility.]' \
        {-B,--always-make}'[Unconditionally make all targets.]' \
        {-C,--directory}'[Change to DIRECTORY before doing anything.]':file:_files \
        '-d[Print lots of debugging information.]' \
        '--debug[Print various types of debugging information.]' \
        {-e,--environment-overrides}'[Environment variables override makefiles.]' \
        {-E,--eval}'[Evaluate STRING as a makefile statement.]' \
        {-f,--file,--makefile}'[Read FILE as a makefile.]':file:_files \
        {-h,--help}'[Print this message and exit.]' \
        {-i,--ignore-errors}'[Ignore errors from recipes.]' \
        {-I,--include-dir}'[Search DIRECTORY for included makefiles.]':file:_files \
        {-j,--jobs}'[Allow N jobs at once; infinite jobs with no arg.]' \
        {-k,--keep-going}'[Keep going when some targets can'\''t be made.]' \
        {-l,--load-average,--max-load}'[Don'\''t start multiple jobs unless load is below N.]' \
        {-L,--check-symlink-times}'[Use the latest mtime between symlinks and target.]' \
        {-n,--just-print,--dry-run,--recon}'[Don'\''t actually run any recipe; just print them.]' \
        {-o,--old-file,--assume-old}'[Consider FILE to be very old and don'\''t remake it.]':file:_files \
        {-O,--output-sync}'[Synchronize output of parallel jobs by TYPE.]' \
        {-p,--print-data-base}'[Print make'\''s internal database.]' \
        {-q,--question}'[Run no recipe; exit status says if up to date.]' \
        {-r,--no-builtin-rules}'[Disable the built-in implicit rules.]' \
        {-R,--no-builtin-variables}'[Disable the built-in variable settings.]' \
        {-s,--silent,--quiet}'[Don'\''t echo recipes.]' \
        '--no-silent[Echo recipes (disable --silent mode).]' \
        {-S,--no-keep-going,--stop}'[Turns off -k.]' \
        {-t,--touch}'[Touch targets instead of remaking them.]' \
        '--trace[Print tracing information.]' \
        {-v,--version}'[Print the version number of make and exit.]' \
        {-w,--print-directory}'[Print the current directory.]' \
        '--no-print-directory[Turn off -w, even if it was turned on implicitly.]' \
        {-W,--what-if,--new-file,--assume-new}'[Consider FILE to be infinitely new.]':file:_files \
        '--warn-undefined-variables[Warn when an undefined variable is referenced.]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

