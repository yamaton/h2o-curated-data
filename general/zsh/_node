#compdef _node node

# Generated with h2o 0.1.18


function _node {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-[script read from stdin (default if no file name is provided, interactive mode if a tty)]' \
        '--[indicate the end of node options]' \
        '--abort-on-uncaught-exception[aborting instead of exiting causes a core file to be generated for analysis]' \
        '(-c --check)'{-c,--check}'[syntax check script without executing]' \
        '--completion-bash[print source-able bash completion script]' \
        '(-C --conditions)'{-C,--conditions}'[additional user conditions for conditional exports and imports]' \
        '--cpu-prof[Start the V8 CPU profiler on start up, and write the CPU profile to disk before exit. If --cpu-prof-dir is not specified, write the profile to the current working directory.]' \
        '--cpu-prof-dir[Directory where the V8 profiles generated by --cpu-prof will be placed. Does not affect --prof.]' \
        '--cpu-prof-interval[specified sampling interval in microseconds for the V8 CPU profile generated with --cpu-prof. (default: 1000)]' \
        '--cpu-prof-name[specified file name of the V8 CPU profile generated with --cpu-prof]' \
        '--diagnostic-dir[set dir for all output files (default: current working directory)]' \
        '--disable-proto[disable Object.prototype.__proto__]' \
        '--disallow-code-generation-from-strings[disallow eval and friends]' \
        '--enable-fips[enable FIPS crypto at startup]' \
        '--enable-source-maps[Source Map V3 support for stack traces]' \
        '(-e --eval)'{-e,--eval}'[evaluate script]' \
        '--experimental-import-meta-resolve[experimental ES Module import.meta.resolve() support]' \
        '--experimental-json-modules[experimental JSON interop support for the ES Module loader]' \
        '(--loader --experimental-loader)'{--loader,--experimental-loader}'[use the specified module as a custom loader]' \
        '--experimental-policy[use the specified file as a security policy]' \
        '--experimental-repl-await[experimental await keyword support in REPL]' \
        '(--es-module-specifier-resolution --experimental-specifier-resolution)'{--es-module-specifier-resolution,--experimental-specifier-resolution}'[Select extension resolution algorithm for es modules; either '\''explicit'\'' (default) or '\''node'\'']' \
        '--experimental-vm-modules[experimental ES Module support in vm module]' \
        '--experimental-wasi-unstable-preview1[experimental WASI support]' \
        '--experimental-wasm-modules[eexperimental ES Module support for webassembly modules]' \
        '--force-context-aware[disable loading non-context-aware addons]' \
        '--force-fips[force FIPS crypto (cannot be disabled)]' \
        '--frozen-intrinsics[experimental frozen intrinsics support]' \
        '--heap-prof[Start the V8 heap profiler on start up, and write the heap profile to disk before exit. If --heap-prof-dir is not specified, write the profile to the current working directory.]' \
        '--heap-prof-dir[Directory where the V8 heap profiles generated by --heap-prof will be placed.]' \
        '--heap-prof-interval[specified sampling interval in bytes for the V8 heap profile generated with --heap-prof. (default: 512 * 1024)]' \
        '--heap-prof-name[specified file name of the V8 heap profile generated with --heap-prof]' \
        '--heapsnapshot-near-heap-limit[Generate heap snapshots whenever V8 is approaching the heap limit. No more than the specified number of heap snapshots will be generated.]' \
        '--heapsnapshot-signal[Generate heap snapshot on specified signal]' \
        '(-h --help)'{-h,--help}'[print node command line options (currently set)]' \
        '--huge-max-old-generation-size[increase default maximum heap size on machines with 16GB memory or more]' \
        '--icu-data-dir[set ICU data load path to dir (overrides NODE_ICU_DATA) (note: linked-in ICU data is present)]' \
        '--input-type[set module type for string input]' \
        '--insecure-http-parser[use an insecure HTTP parser that accepts invalid HTTP headers]' \
        '--inspect[activate inspector on host:port (default: 127.0.0.1:9229)]' \
        '--inspect-brk[activate inspector on host:port and break at start of user script]' \
        '(--debug-port --inspect-port)'{--debug-port,--inspect-port}'[set host:port for inspector]' \
        '--inspect-publish-uid[comma separated list of destinations for inspector uid(default: stderr,http)]' \
        '(-i --interactive)'{-i,--interactive}'[always enter the REPL even if stdin does not appear to be a terminal]' \
        '--interpreted-frames-native-stack[help system profilers to translate JavaScript interpreted frames]' \
        '--jitless[disable runtime allocation of executable memory]' \
        '--max-http-header-size[set the maximum size of HTTP headers (default: 16384 (16KB))]' \
        '--no-deprecation[silence deprecation warnings]' \
        '--no-force-async-hooks-checks[disable checks for async_hooks]' \
        '--no-warnings[silence all process warnings]' \
        '--node-memory-debug[Run with extra debug checks for memory leaks in Node.js itself]' \
        '--openssl-config[load OpenSSL configuration from the specified file (overrides OPENSSL_CONF)]' \
        '--pending-deprecation[emit pending deprecation warnings]' \
        '--policy-integrity[ensure the security policy contents match the specified integrity]' \
        '--preserve-symlinks[preserve symbolic links when resolving]' \
        '--preserve-symlinks-main[preserve symbolic links when resolving the main module]' \
        '(-p --print)'{-p,--print}'[evaluate script and print result]' \
        '--prof[Generate V8 profiler output.]' \
        '--prof-process[process V8 profiler output generated using --prof]' \
        '--redirect-warnings[write warnings to file instead of stderr]' \
        '--report-compact[output compact single-line JSON]' \
        '(--report-directory --report-dir)'{--report-directory,--report-dir}'[define custom report pathname. (default: current working directory)]' \
        '--report-filename[define custom report file name. (default: YYYYMMDD.HHMMSS.PID.SEQUENCE#.txt)]' \
        '--report-on-fatalerror[generate diagnostic report on fatal (internal) errors]' \
        '--report-on-signal[generate diagnostic report upon receiving signals]' \
        '--report-signal[causes diagnostic report to be produced on provided signal, unsupported in Windows. (default: SIGUSR2)]' \
        '--report-uncaught-exception[generate diagnostic report on uncaught exceptions]' \
        '(-r --require)'{-r,--require}'[module to preload (option can be repeated)]' \
        '--secure-heap[total size of the OpenSSL secure heap]' \
        '--secure-heap-min[minimum allocation size from the OpenSSL secure heap]' \
        '--throw-deprecation[throw an exception on deprecations]' \
        '--title[the process title to use on startup]' \
        '--tls-cipher-list[use an alternative default TLS cipher list]' \
        '--tls-keylog[log TLS decryption keys to named file for traffic analysis]' \
        '--tls-max-v1.2[set default TLS maximum to TLSv1.2 (default: TLSv1.3)]' \
        '--tls-max-v1.3[set default TLS maximum to TLSv1.3 (default: TLSv1.3)]' \
        '--tls-min-v1.0[set default TLS minimum to TLSv1.0 (default: TLSv1.2)]' \
        '--tls-min-v1.1[set default TLS minimum to TLSv1.1 (default: TLSv1.2)]' \
        '--tls-min-v1.2[set default TLS minimum to TLSv1.2 (default: TLSv1.2)]' \
        '--tls-min-v1.3[set default TLS minimum to TLSv1.3 (default: TLSv1.2)]' \
        '--trace-atomics-wait[trace Atomics.wait() operations]' \
        '--trace-deprecation[show stack traces on deprecations]' \
        '--trace-event-categories[comma separated list of trace event categories to record]' \
        '--trace-event-file-pattern[Template string specifying the filepath for the trace-events data, it supports ${rotation} and ${pid}.]' \
        '--trace-exit[show stack trace when an environment exits]' \
        '--trace-sigint[enable printing JavaScript stacktrace on SIGINT]' \
        '--trace-sync-io[show stack trace when use of sync IO is detected after the first tick]' \
        '--trace-tls[prints TLS packet trace information to stderr]' \
        '--trace-uncaught[show stack traces for the `throw` behind uncaught exceptions]' \
        '--trace-warnings[show stack traces on process warnings]' \
        '--track-heap-objects[track heap object allocations for heap snapshots]' \
        '--unhandled-rejections[define unhandled rejections behavior. Options are '\''strict'\'' (always raise an error), '\''throw'\'' (raise an error unless '\''unhandledRejection'\'' hook is set), '\''warn'\'' (log a warning), '\''none'\'' (silence warnings), '\''warn-with-error-code'\'' (log a warning and set exit code 1 unless '\''unhandledRejection'\'' hook is set). (default: throw)]' \
        '--use-bundled-ca[use bundled CA store (default)]' \
        '--use-largepages[Map the Node.js static code to large pages. Options are '\''off'\'' (the default value, meaning do not map), '\''on'\'' (map and ignore failure, reporting it to stderr), or '\''silent'\'' (map and silently ignore failure)]' \
        '--use-openssl-ca[use OpenSSL'\''s default CA store]' \
        '--v8-options[print V8 command line options]' \
        '--v8-pool-size[set V8'\''s thread pool size]' \
        '(-v --version)'{-v,--version}'[print Node.js version]' \
        '--zero-fill-buffers[automatically zero-fill all newly allocated Buffer and SlowBuffer instances]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

