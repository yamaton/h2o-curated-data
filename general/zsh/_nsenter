#compdef _nsenter nsenter

# Auto-generated with h2o


function _nsenter {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-a,--all}'[enter all namespaces]' \
        {-t,--target}'[target process to get namespaces from]' \
        {-m,--mount}'[enter mount namespace]':file:_files \
        {-u,--uts}'[enter UTS namespace (hostname etc)]':file:_files \
        {-i,--ipc}'[enter System V IPC namespace]':file:_files \
        {-n,--net}'[enter network namespace]':file:_files \
        {-p,--pid}'[enter pid namespace]':file:_files \
        {-C,--cgroup}'[enter cgroup namespace]':file:_files \
        {-U,--user}'[enter user namespace]':file:_files \
        {-T,--time}'[enter time namespace]':file:_files \
        {-S,--setuid}'[set uid in entered namespace]' \
        {-G,--setgid}'[set gid in entered namespace]' \
        '--preserve-credentials[do not touch uids or gids]' \
        {-w,--wd}'[set the working directory]':file:_files \
        {-F,--no-fork}'[do not fork before exec'\''ing <program>]' \
        {-Z,--follow-context}'[set SELinux context according to --target PID]' \
        {-h,--help}'[display this help]' \
        {-V,--version}'[display version]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

