#compdef _perl perl

# Auto-generated with h2o


function _perl {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-0[specify record separator (\0, if no argument)]' \
        '-a[autosplit mode with -n or -p (splits $_ into @F)]' \
        '-C[enables the listed Unicode features]' \
        '-c[check syntax only (runs BEGIN and CHECK blocks)]' \
        '-d[run program under debugger]' \
        '-D[set debugging flags (argument is a bit mask or alphabets)]' \
        '-e[one line of program (several -e'\''s allowed, omit programfile)]' \
        '-E[like -e, but enables all optional features]' \
        '-f[don'\''t do $sitelib/sitecustomize.pl at startup]' \
        '-F[split() pattern for -a switch (//'\''s are optional)]' \
        '-i[edit <> files in place (makes backup if extension supplied)]' \
        '-Idirectory[specify @INC/#include directory (several -I'\''s allowed)]' \
        '-l[enable line ending processing, specifies line terminator]' \
        '-m[execute "use module..." before executing program]' \
        '-M[execute "no module..." before executing program]' \
        '-n[assume "while (<>) { ... }" loop around program]' \
        '-p[assume loop like -n but print line also, like sed]' \
        '-s[enable rudimentary parsing for switches after programfile]' \
        '-S[look for programfile using PATH environment variable]' \
        '-t[enable tainting warnings]' \
        '-T[enable tainting checks]' \
        '-u[dump core after parsing program]' \
        '-U[allow unsafe operations]' \
        '-v[print version, patchlevel and license]' \
        '-V[print configuration summary (or a single Config.pm variable)]' \
        '-w[enable many useful warnings]' \
        '-W[enable all warnings]' \
        '-x[ignore text before #!perl line (optionally cd to directory)]':file:_files \
        '-X[disable all warnings]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

