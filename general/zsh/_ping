#compdef _ping ping

# Auto-generated with h2o


function _ping {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-a[use audible ping]' \
        '-A[use adaptive ping]' \
        '-B[sticky source address]' \
        '-c[stop after <count> replies]' \
        '-D[print timestamps]' \
        '-d[use SO_DEBUG socket option]' \
        '-f[flood ping]' \
        '-h[print help and exit]' \
        '-I[either interface name or address]' \
        '-i[seconds between sending each packet]' \
        '-L[suppress loopback of multicast packets]' \
        '-l[send <preload> number of packages while waiting replies]' \
        '-m[tag the packets going out]' \
        '-M[define mtu discovery, can be one of <do|dont|want>]' \
        '-n[no dns name resolution]' \
        '-O[report outstanding replies]' \
        '-p[contents of padding byte]' \
        '-q[quiet output]' \
        '-Q[use quality of service <tclass> bits]' \
        '-s[use <size> as number of data bytes to be sent]' \
        '-S[use <size> as SO_SNDBUF socket option value]' \
        '-t[define time to live]' \
        '-U[print user-to-user latency]' \
        '-v[verbose output]' \
        '-V[print version and exit]' \
        '-w[reply wait <deadline> in seconds]' \
        '-W[time to wait for response]' \
        '-4[use IPv4]' \
        '-b[allow pinging broadcast]' \
        '-R[record route]' \
        '-T[define timestamp, can be one of <tsonly|tsandaddr|tsprespec>]' \
        '-6[use IPv6]' \
        '-F[define flow label, default is random]' \
        '-N[use icmp6 node info query, try <help> as argument]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

