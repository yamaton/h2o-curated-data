#compdef _pip pip

# Generated with h2o 0.1.18

    function _pip_install {
        _arguments \
            '-[sing requirement specifiers.]' \
            '(-r --requirement)'{-r,--requirement}'[Install from the given requirements file. This option can be used multiple times.]:file:_files' \
            '(-c --constraint)'{-c,--constraint}'[Constrain versions using the given constraints file. This option can be used multiple times.]:file:_files' \
            '--no-deps[Don'\''t install package dependencies.]' \
            '--pre[Include pre-release and development versions. By default, pip only finds stable versions.]' \
            '(-e --editable)'{-e,--editable}'[Install a project in editable mode (i.e. setuptools "develop mode") from a local project path or a VCS url.]:file:_files' \
            '(-t --target)'{-t,--target}'[Install packages into <dir>. By default this will not replace existing files/folders in <dir>. Use --upgrade to replace existing packages in <dir> with new versions.]' \
            '--platform[Only use wheels compatible with <platform>. Defaults to the platform of the running system. Use this option multiple times to specify multiple platforms supported by the target interpreter.]' \
            '--python-version[The Python interpreter version to use for wheel and "Requires-Python" compatibility checks. Defaults to a version derived from the running interpreter. The version can be specified using up to three dot-separated integers (e.g. "3" for 3.0.0, "3.7" for 3.7.0, or "3.7.3"). A majorminor version can also be given as a string without dots (e.g. "37" for 3.7.0).]' \
            '--implementation[Only use wheels compatible with Python implementation <implementation>, e.g. '\''pp'\'', '\''jy'\'', '\''cp'\'',  or '\''ip'\''. If not specified, then the current interpreter implementation is used.  Use '\''py'\'' to force implementation-agnostic wheels.]' \
            '--abi[Only use wheels compatible with Python abi <abi>, e.g. '\''pypy_41'\''. If not specified, then the current interpreter abi tag is used. Use this option multiple times to specify multiple abis supported by the target interpreter. Generally you will need to specify --implementation, --platform, and --pythonversion when using this option.]' \
            '--user[Install to the Python user install directory for your platform. Typically ~/.local/, or %APPDATA%\Python on Windows. (See the Python documentation for site.USER_BASE for full details.)]' \
            '--root[Install everything relative to this alternate root directory.]' \
            '--prefix[Installation prefix where lib, bin and other top-level folders are placed]' \
            '--src[Directory to check out editable projects into. The default in a virtualenv is "<venv path>/src". The default for global installs is "<current dir>/src".]' \
            '(-U --upgrade)'{-U,--upgrade}'[Upgrade all specified packages to the newest available version. The handling of dependencies depends on the upgrade-strategy used.]' \
            '--upgrade-strategy[Determines how dependency upgrading should be handled \[default: only-if-needed\]. "eager" dependencies are upgraded regardless of whether the currently installed version satisfies the requirements of the upgraded package(s). "onlyif-needed" -  are upgraded only when they do not satisfy the requirements of the upgraded package(s).]' \
            '--force-reinstall[Reinstall all packages even if they are already up-to-date.]' \
            '(-I --ignore-installed)'{-I,--ignore-installed}'[Ignore the installed packages, overwriting them. This can break your system if the existing package is of a different version or was installed with a different package manager!]' \
            '--ignore-requires-python[Ignore the Requires-Python information.]' \
            '--no-build-isolation[Disable isolation when building a modern source distribution. Build dependencies specified by PEP 518 must be already installed if this option is used.]' \
            '--use-pep517[Use PEP 517 for building source distributions (use --no-use-pep517 to force legacy behaviour).]' \
            '--install-option[Extra arguments to be supplied to the setup.py install command (use like --install-option="-install-scripts=/usr/local/bin"). Use multiple --install-option options to pass multiple options to setup.py install. If you are using an option with a directory path, be sure to use absolute path.]' \
            '--global-option[Extra global options to be supplied to the setup.py call before the install or bdist_wheel command.]' \
            '--compile[Compile Python source files to bytecode]' \
            '--no-compile[Do not compile Python source files to bytecode]' \
            '--no-warn-script-location[Do not warn when installing scripts outside PATH]' \
            '--no-warn-conflicts[Do not warn about broken dependencies]' \
            '--no-binary[Do not use binary packages. Can be supplied multiple times, and each time adds to the existing value. Accepts either ":all:" to disable all binary packages, ":none:" to empty the set (notice the colons), or one or more package names with commas between them (no colons). Note that some packages are tricky to compile and may fail to install when this option is used on them.]' \
            '--only-binary[Do not use source packages. Can be supplied multiple times, and each time adds to the existing value. Accepts either ":all:" to disable all source packages, ":none:" to empty the set, or one or more package names with commas between them. Packages without binary distributions will fail to install when this option is used on them.]' \
            '--prefer-binary[Prefer older binary packages over newer source packages.]' \
            '--require-hashes[Require a hash to check each requirement against, for repeatable installs. This option is implied when any package in a requirements file has a --hash option.]' \
            '--progress-bar[Specify type of progress to be displayed \[off|on|ascii|pretty|emoji\] (default: on)]' \
            '--no-clean[Don'\''t clean up build directories.]' \
            '(-i --index-url)'{-i,--index-url}'[Base URL of the Python Package Index (default https://pypi.org/simple). This should point to a repository compliant with PEP 503 (the simple repository API) or a local directory laid out in the same format.]' \
            '--extra-index-url[Extra URLs of package indexes to use in addition to --index-url. Should follow the same rules as --index-url.]' \
            '--no-index[Ignore package index (only looking at --findlinks URLs instead).]' \
            '(-f --find-links)'{-f,--find-links}'[If a URL or path to an html file, then parse for links to archives such as sdist (.tar.gz) or wheel (.whl) files. If a local path or file:// URL that'\''s a directory,  then look for archives in the directory listing. Links to VCS project URLs are not supported.]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_download {
        _arguments \
            '-[sing requirement specifiers.]' \
            '(-c --constraint)'{-c,--constraint}'[Constrain versions using the given constraints file. This option can be used multiple times.]:file:_files' \
            '(-r --requirement)'{-r,--requirement}'[Install from the given requirements file. This option can be used multiple times.]:file:_files' \
            '--no-deps[Don'\''t install package dependencies.]' \
            '--global-option[Extra global options to be supplied to the setup.py call before the install or bdist_wheel command.]' \
            '--no-binary[Do not use binary packages. Can be supplied multiple times, and each time adds to the existing value. Accepts either ":all:" to disable all binary packages, ":none:" to empty the set (notice the colons), or one or more package names with commas between them (no colons). Note that some packages are tricky to compile and may fail to install when this option is used on them.]' \
            '--only-binary[Do not use source packages. Can be supplied multiple times, and each time adds to the existing value. Accepts either ":all:" to disable all source packages, ":none:" to empty the set, or one or more package names with commas between them. Packages without binary distributions will fail to install when this option is used on them.]' \
            '--prefer-binary[Prefer older binary packages over newer source packages.]' \
            '--src[Directory to check out editable projects into. The default in a virtualenv is "<venv path>/src". The default for global installs is "<current dir>/src".]' \
            '--pre[Include pre-release and development versions. By default, pip only finds stable versions.]' \
            '--require-hashes[Require a hash to check each requirement against, for repeatable installs. This option is implied when any package in a requirements file has a --hash option.]' \
            '--progress-bar[Specify type of progress to be displayed \[off|on|ascii|pretty|emoji\] (default: on)]' \
            '--no-build-isolation[Disable isolation when building a modern source distribution. Build dependencies specified by PEP 518 must be already installed if this option is used.]' \
            '--use-pep517[Use PEP 517 for building source distributions (use --no-use-pep517 to force legacy behaviour).]' \
            '--ignore-requires-python[Ignore the Requires-Python information.]' \
            '(-d --dest)'{-d,--dest}'[Download packages into <dir>.]' \
            '--platform[Only use wheels compatible with <platform>. Defaults to the platform of the running system. Use this option multiple times to specify multiple platforms supported by the target interpreter.]' \
            '--python-version[The Python interpreter version to use for wheel and "Requires-Python" compatibility checks. Defaults to a version derived from the running interpreter. The version can be specified using up to three dot-separated integers (e.g. "3" for 3.0.0, "3.7" for 3.7.0, or "3.7.3"). A majorminor version can also be given as a string without dots (e.g. "37" for 3.7.0).]' \
            '--implementation[Only use wheels compatible with Python implementation <implementation>, e.g. '\''pp'\'', '\''jy'\'', '\''cp'\'',  or '\''ip'\''. If not specified, then the current interpreter implementation is used.  Use '\''py'\'' to force implementation-agnostic wheels.]' \
            '--abi[Only use wheels compatible with Python abi <abi>, e.g. '\''pypy_41'\''. If not specified, then the current interpreter abi tag is used. Use this option multiple times to specify multiple abis supported by the target interpreter. Generally you will need to specify --implementation, --platform, and --pythonversion when using this option.]' \
            '--no-clean[Don'\''t clean up build directories.]' \
            '(-i --index-url)'{-i,--index-url}'[Base URL of the Python Package Index (default https://pypi.org/simple). This should point to a repository compliant with PEP 503 (the simple repository API) or a local directory laid out in the same format.]' \
            '--extra-index-url[Extra URLs of package indexes to use in addition to --index-url. Should follow the same rules as --index-url.]' \
            '--no-index[Ignore package index (only looking at --findlinks URLs instead).]' \
            '(-f --find-links)'{-f,--find-links}'[If a URL or path to an html file, then parse for links to archives such as sdist (.tar.gz) or wheel (.whl) files. If a local path or file:// URL that'\''s a directory,  then look for archives in the directory listing. Links to VCS project URLs are not supported.]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_uninstall {
        _arguments \
            '-[stalled with ``python setup.py install``, which]' \
            '-[by ``python setup.py develop``.]' \
            '(-r --requirement)'{-r,--requirement}'[Uninstall all the packages listed in the given requirements file.  This option can be used multiple times.]:file:_files' \
            '(-y --yes)'{-y,--yes}'[Don'\''t ask for confirmation of uninstall deletions.]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_freeze {
        _arguments \
            '(-r --requirement)'{-r,--requirement}'[Use the order in the given requirements file and its comments when generating output. This option can be used multiple times.]:file:_files' \
            '(-f --find-links)'{-f,--find-links}'[URL for finding packages, which will be added to the output.]' \
            '(-l --local)'{-l,--local}'[If in a virtualenv that has global access, do not output globally-installed packages.]' \
            '--user[Only output packages installed in user-site.]' \
            '--path[Restrict to the specified installation path for listing packages (can be used multiple times).]:file:_files' \
            '--all[Do not skip these packages in the output: pip, wheel, setuptools, distribute]' \
            '--exclude-editable[Exclude editable package from output.]' \
            '--exclude[Exclude specified package from the output]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_list {
        _arguments \
            '(-o --outdated)'{-o,--outdated}'[List outdated packages]' \
            '(-u --uptodate)'{-u,--uptodate}'[List uptodate packages]' \
            '(-e --editable)'{-e,--editable}'[List editable projects.]' \
            '(-l --local)'{-l,--local}'[If in a virtualenv that has global access, do not list globally-installed packages.]' \
            '--user[Only output packages installed in user-site.]' \
            '--path[Restrict to the specified installation path for listing packages (can be used multiple times).]:file:_files' \
            '--pre[Include pre-release and development versions. By default, pip only finds stable versions.]' \
            '--format[Select the output format among: columns (default), freeze, or json]' \
            '--not-required[List packages that are not dependencies of installed packages.]' \
            '--exclude-editable[Exclude editable package from output.]' \
            '--include-editable[Include editable package from output.]' \
            '--exclude[Exclude specified package from the output]' \
            '(-i --index-url)'{-i,--index-url}'[Base URL of the Python Package Index (default https://pypi.org/simple). This should point to a repository compliant with PEP 503 (the simple repository API) or a local directory laid out in the same format.]' \
            '--extra-index-url[Extra URLs of package indexes to use in addition to --index-url. Should follow the same rules as --index-url.]' \
            '--no-index[Ignore package index (only looking at --findlinks URLs instead).]' \
            '(-f --find-links)'{-f,--find-links}'[If a URL or path to an html file, then parse for links to archives such as sdist (.tar.gz) or wheel (.whl) files. If a local path or file:// URL that'\''s a directory,  then look for archives in the directory listing. Links to VCS project URLs are not supported.]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_show {
        _arguments \
            '(-f --files)'{-f,--files}'[Show the full list of installed files for each package.]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_check {
        _arguments \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_config {
        _arguments \
            '--editor[Editor to use to edit the file. Uses VISUAL or EDITOR environment variables if not provided.]' \
            '--global[Use the system-wide configuration file only]' \
            '--user[Use the user configuration file only]' \
            '--site[Use the current environment configuration file only]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_search {
        _arguments \
            '(-i --index)'{-i,--index}'[Base URL of Python Package Index (default https://pypi.org/pypi)]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_cache {
        _arguments \
            '(- - -)'{-,-,-}'[ckages stored in the cache.]' \
            '-[package from the cache.]' \
            '-[om the cache.]' \
            '--format[Select the output format among: human (default) or abspath]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_wheel {
        _arguments \
            '(-w --wheel-dir)'{-w,--wheel-dir}'[Build wheels into <dir>, where the default is the current working directory.]' \
            '--no-binary[Do not use binary packages. Can be supplied multiple times, and each time adds to the existing value. Accepts either ":all:" to disable all binary packages, ":none:" to empty the set (notice the colons), or one or more package names with commas between them (no colons). Note that some packages are tricky to compile and may fail to install when this option is used on them.]' \
            '--only-binary[Do not use source packages. Can be supplied multiple times, and each time adds to the existing value. Accepts either ":all:" to disable all source packages, ":none:" to empty the set, or one or more package names with commas between them. Packages without binary distributions will fail to install when this option is used on them.]' \
            '--prefer-binary[Prefer older binary packages over newer source packages.]' \
            '--no-build-isolation[Disable isolation when building a modern source distribution. Build dependencies specified by PEP 518 must be already installed if this option is used.]' \
            '--use-pep517[Use PEP 517 for building source distributions (use --no-use-pep517 to force legacy behaviour).]' \
            '(-c --constraint)'{-c,--constraint}'[Constrain versions using the given constraints file. This option can be used multiple times.]:file:_files' \
            '(-e --editable)'{-e,--editable}'[Install a project in editable mode (i.e. setuptools "develop mode") from a local project path or a VCS url.]:file:_files' \
            '(-r --requirement)'{-r,--requirement}'[Install from the given requirements file. This option can be used multiple times.]:file:_files' \
            '--src[Directory to check out editable projects into. The default in a virtualenv is "<venv path>/src". The default for global installs is "<current dir>/src".]' \
            '--ignore-requires-python[Ignore the Requires-Python information.]' \
            '--no-deps[Don'\''t install package dependencies.]' \
            '--progress-bar[Specify type of progress to be displayed \[off|on|ascii|pretty|emoji\] (default: on)]' \
            '--no-verify[Don'\''t verify if built wheel is valid.]' \
            '--build-option[Extra arguments to be supplied to '\''setup.py bdist_wheel'\''.]' \
            '--global-option[Extra global options to be supplied to the setup.py call before the install or bdist_wheel command.]' \
            '--pre[Include pre-release and development versions. By default, pip only finds stable versions.]' \
            '--require-hashes[Require a hash to check each requirement against, for repeatable installs. This option is implied when any package in a requirements file has a --hash option.]' \
            '--no-clean[Don'\''t clean up build directories.]' \
            '(-i --index-url)'{-i,--index-url}'[Base URL of the Python Package Index (default https://pypi.org/simple). This should point to a repository compliant with PEP 503 (the simple repository API) or a local directory laid out in the same format.]' \
            '--extra-index-url[Extra URLs of package indexes to use in addition to --index-url. Should follow the same rules as --index-url.]' \
            '--no-index[Ignore package index (only looking at --findlinks URLs instead).]' \
            '(-f --find-links)'{-f,--find-links}'[If a URL or path to an html file, then parse for links to archives such as sdist (.tar.gz) or wheel (.whl) files. If a local path or file:// URL that'\''s a directory,  then look for archives in the directory listing. Links to VCS project URLs are not supported.]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_hash {
        _arguments \
            '(-a --algorithm)'{-a,--algorithm}'[The hash algorithm to use: one of sha256, sha384, sha512]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_completion {
        _arguments \
            '(-b --bash)'{-b,--bash}'[Emit completion code for bash]' \
            '(-z --zsh)'{-z,--zsh}'[Emit completion code for zsh]' \
            '(-f --fish)'{-f,--fish}'[Emit completion code for fish]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_debug {
        _arguments \
            '--platform[Only use wheels compatible with <platform>. Defaults to the platform of the running system. Use this option multiple times to specify multiple platforms supported by the target interpreter.]' \
            '--python-version[The Python interpreter version to use for wheel and "Requires-Python" compatibility checks. Defaults to a version derived from the running interpreter. The version can be specified using up to three dot-separated integers (e.g. "3" for 3.0.0, "3.7" for 3.7.0, or "3.7.3"). A majorminor version can also be given as a string without dots (e.g. "37" for 3.7.0).]' \
            '--implementation[Only use wheels compatible with Python implementation <implementation>, e.g. '\''pp'\'', '\''jy'\'', '\''cp'\'',  or '\''ip'\''. If not specified, then the current interpreter implementation is used.  Use '\''py'\'' to force implementation-agnostic wheels.]' \
            '--abi[Only use wheels compatible with Python abi <abi>, e.g. '\''pypy_41'\''. If not specified, then the current interpreter abi tag is used. Use this option multiple times to specify multiple abis supported by the target interpreter. Generally you will need to specify --implementation, --platform, and --pythonversion when using this option.]' \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }

    function _pip_help {
        _arguments \
            '(-h --help)'{-h,--help}'[Show help.]' \
            '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
            '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
            '(-V --version)'{-V,--version}'[Show version and exit.]' \
            '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
            '--log[Path to a verbose appending log.]:file:_files' \
            '--no-input[Disable prompting for input.]' \
            '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
            '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
            '--timeout[Set the socket timeout (default 15 seconds).]' \
            '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
            '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
            '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
            '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
            '--cache-dir[Store the cache data in <dir>.]' \
            '--no-cache-dir[Disable the cache.]' \
            '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
            '--no-color[Suppress colored output.]' \
            '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
            '--use-feature[Enable new functionality, that may be backward incompatible.]' \
            '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
            "*: :_files"

    }


function _pip {
    local line state

    function _commands {
        local -a commands
        commands=(
            'install:Install packages.'
            'download:Download packages.'
            'uninstall:Uninstall packages.'
            'freeze:Output installed packages in requirements format.'
            'list:List installed packages.'
            'show:Show information about installed packages.'
            'check:Verify installed packages have compatible dependencies.'
            'config:Manage local and global configuration.'
            'search:Search PyPI for packages.'
            'cache:Inspect and manage pip'\''s wheel cache.'
            'wheel:Build wheels from your requirements.'
            'hash:Compute hashes of package archives.'
            'completion:A helper command used for command completion.'
            'debug:Show information useful for debugging.'
            'help:Show help for commands.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '(-h --help)'{-h,--help}'[Show help.]' \
        '--isolated[Run pip in an isolated mode, ignoring environment variables and user configuration.]' \
        '(-v --verbose)'{-v,--verbose}'[Give more output. Option is additive, and can be used up to 3 times.]' \
        '(-V --version)'{-V,--version}'[Show version and exit.]' \
        '(-q --quiet)'{-q,--quiet}'[Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).]' \
        '--log[Path to a verbose appending log.]:file:_files' \
        '--no-input[Disable prompting for input.]' \
        '--proxy[Specify a proxy in the form \[user:passwd@\]proxy.server:port.]' \
        '--retries[Maximum number of retries each connection should attempt (default 5 times).]' \
        '--timeout[Set the socket timeout (default 15 seconds).]' \
        '--exists-action[Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.]' \
        '--trusted-host[Mark this host or host:port pair as trusted, even though it does not have valid or any HTTPS.]' \
        '--cert[Path to PEM-encoded CA certificate bundle. If provided, overrides the default. See '\''SSL Certificate Verification'\'' in pip documentation for more information.]:file:_files' \
        '--client-cert[Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.]:file:_files' \
        '--cache-dir[Store the cache data in <dir>.]' \
        '--no-cache-dir[Disable the cache.]' \
        '--disable-pip-version-check[Don'\''t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.]' \
        '--no-color[Suppress colored output.]' \
        '--no-python-version-warning[Silence deprecation warnings for upcoming unsupported Pythons.]' \
        '--use-feature[Enable new functionality, that may be backward incompatible.]' \
        '--use-deprecated[Enable deprecated functionality, that will be removed in the future.]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (install)
            _pip_install
            ;;

        (download)
            _pip_download
            ;;

        (uninstall)
            _pip_uninstall
            ;;

        (freeze)
            _pip_freeze
            ;;

        (list)
            _pip_list
            ;;

        (show)
            _pip_show
            ;;

        (check)
            _pip_check
            ;;

        (config)
            _pip_config
            ;;

        (search)
            _pip_search
            ;;

        (cache)
            _pip_cache
            ;;

        (wheel)
            _pip_wheel
            ;;

        (hash)
            _pip_hash
            ;;

        (completion)
            _pip_completion
            ;;

        (debug)
            _pip_debug
            ;;

        (help)
            _pip_help
            ;;

        esac
        ;;
     esac

}

