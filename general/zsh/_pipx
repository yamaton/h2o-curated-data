#compdef _pipx pipx

# Auto-generated with h2o

    function _pipx_install {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            '--include-deps[Include apps of dependent packages]' \
            {--verbose,--force,-f}'[Modify existing virtual environment and files in PIPX_BIN_DIR]' \
            '--suffix[Optional suffix for virtual environment and executable names. NOTE: The suffix feature is experimental and subject to change.]' \
            '--python[The Python executable used to create the Virtual Environment and run the associated app/apps. Must be v3.6+.]' \
            '--system-site-packages[Give the virtual environment access to the system site-packages dir.]' \
            {--index-url,-i}'[Base URL of Python Package Index]' \
            {--editable,-e}'[Install a project in editable mode]' \
            '--pip-args[Arbitrary pip arguments to pass directly to pip install/upgrade commands]' \
            "*: :_files"

    }

    function _pipx_inject {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            '--include-apps[Add apps from the injected packages onto your PATH]' \
            '--include-deps[Include apps of dependent packages]' \
            '--system-site-packages[Give the virtual environment access to the system site-packages dir.]' \
            {--index-url,-i}'[Base URL of Python Package Index]' \
            {--editable,-e}'[Install a project in editable mode]' \
            '--pip-args[Arbitrary pip arguments to pass directly to pip install/upgrade commands]' \
            {--force,-f}'[Modify existing virtual environment and files in PIPX_BIN_DIR]' \
            "*: :_files"

    }

    function _pipx_upgrade {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            '--include-injected[Also upgrade packages injected into the main app'\''s environment]' \
            {--force,-f}'[Modify existing virtual environment and files in PIPX_BIN_DIR]' \
            '--system-site-packages[Give the virtual environment access to the system site-packages dir.]' \
            {--index-url,-i}'[Base URL of Python Package Index]' \
            {--editable,-e}'[Install a project in editable mode]' \
            '--pip-args[Arbitrary pip arguments to pass directly to pip install/upgrade commands]' \
            "*: :_files"

    }

    function _pipx_upgrade-all {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            '--include-injected[Also upgrade packages injected into the main app'\''s environment]' \
            '--skip[skip these packages]' \
            {--force,-f}'[Modify existing virtual environment and files in PIPX_BIN_DIR]' \
            "*: :_files"

    }

    function _pipx_uninstall {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            "*: :_files"

    }

    function _pipx_uninstall-all {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            "*: :_files"

    }

    function _pipx_reinstall {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            '--python[The Python executable used to recreate the Virtual Environment and run the associated app/apps. Must be v3.6+.]' \
            "*: :_files"

    }

    function _pipx_reinstall-all {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            '--python[The Python executable used to recreate the Virtual Environment and run the associated app/apps. Must be v3.6+.]' \
            '--skip[skip these packages]' \
            "*: :_files"

    }

    function _pipx_list {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            '--include-injected[Show packages injected into the main app'\''s environment]' \
            '--json[Output rich data in json format.]' \
            '--short[List packages only.]' \
            "*: :_files"

    }

    function _pipx_run {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            '--no-cache[Do not re-use cached virtual environment if it exists]' \
            '--pypackages[Require app to be run from local __pypackages__ directory]' \
            '--spec[The package name or specific installation source passed to pip. Runs `pip install -U SPEC`. For example `--spec mypackage==2.0.0` or `--spec git+https://github.com/user/repo.git@branch`]' \
            {--verbose,--python}'[The Python version to run package'\''s CLI app with. Must be v3.6+.]' \
            '--system-site-packages[Give the virtual environment access to the system site-packages dir.]' \
            {--index-url,-i}'[Base URL of Python Package Index]' \
            {--editable,-e}'[Install a project in editable mode]' \
            '--pip-args[Arbitrary pip arguments to pass directly to pip install/upgrade commands]' \
            "*: :_files"

    }

    function _pipx_runpip {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            "*: :_files"

    }

    function _pipx_ensurepath {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            {--force,-f}'[Add text to your shell'\''s config file even if it looks like your PATH already contains paths to pipx and pipx-install apps.]' \
            "*: :_files"

    }

    function _pipx_environment {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            {--value,-v}'[Print the value of the variable.]' \
            "*: :_files"

    }

    function _pipx_completions {
        _arguments \
            {-h,--help}'[show this help message and exit]' \
            "*: :_files"

    }


function _pipx {
    local line state

    function _commands {
        local -a commands
        commands=(
            'install:Install a package'
            'inject:Install packages into an existing Virtual Environment'
            'upgrade:Upgrade a package'
            'upgrade-all:Upgrade all packages. Runs `pip install -U <pkgname>` for each package.'
            'uninstall:Uninstall a package'
            'uninstall-all:Uninstall all packages'
            'reinstall:Reinstall a package'
            'reinstall-all:Reinstall all packages'
            'list:List installed packages'
            'run:Download the latest version of a package to a temporary virtual environment, then run an app from it. Also compatible with local `__pypackages__` directory (experimental).'
            'runpip:Run pip in an existing pipx-managed Virtual Environment'
            'ensurepath:Ensure directories necessary for pipx operation are in your PATH environment variable.'
            'environment:Print a list of variables used in pipx.constants.'
            'completions:Print instructions on enabling shell completions for pipx'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[show this help message and exit]' \
        '--version[Print version and exit]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (install)
            _pipx_install
            ;;

        (inject)
            _pipx_inject
            ;;

        (upgrade)
            _pipx_upgrade
            ;;

        (upgrade-all)
            _pipx_upgrade-all
            ;;

        (uninstall)
            _pipx_uninstall
            ;;

        (uninstall-all)
            _pipx_uninstall-all
            ;;

        (reinstall)
            _pipx_reinstall
            ;;

        (reinstall-all)
            _pipx_reinstall-all
            ;;

        (list)
            _pipx_list
            ;;

        (run)
            _pipx_run
            ;;

        (runpip)
            _pipx_runpip
            ;;

        (ensurepath)
            _pipx_ensurepath
            ;;

        (environment)
            _pipx_environment
            ;;

        (completions)
            _pipx_completions
            ;;

        esac
        ;;
     esac

}

