#compdef _ps ps

# Auto-generated with h2o


function _ps {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-A,-e}'[all processes]' \
        '-a[all with tty, except session leaders]' \
        '-d[all except session leaders]' \
        {-N,--deselect}'[negate selection]' \
        '-C[command name]' \
        {-G,--Group}'[real group id or name]' \
        {-g,--group}'[session or effective group name]' \
        {-p,--pid}'[process id]' \
        '--ppid[parent process id]' \
        {-q,--quick-pid}'[process id (quick mode)]' \
        {-s,--sid}'[session id]' \
        {-t,--tty}'[terminal]' \
        {-u,--user}'[effective user id or name]' \
        {-U,--User}'[real user id or name]' \
        '-F[extra full]' \
        '-f[full-format, including command lines]' \
        '-H[show process hierarchy]' \
        '-j[jobs format]' \
        '-l[long format]' \
        '-M[add security data (for SELinux)]' \
        '-O[preloaded with default columns]' \
        {-o,--format}'[user-defined format]' \
        '-y[do not show flags, show rss vs. addr (used with -l)]' \
        '--context[display security context (for SELinux)]' \
        '--headers[repeat header lines, one per page]' \
        '--no-headers[do not print header at all]' \
        {--cols,--columns}'[, --width <num> set screen width]' \
        {--rows,--lines}'[set screen height]' \
        '-L[possibly with LWP and NLWP columns]' \
        '-m[after processes]' \
        '-T[possibly with SPID column]' \
        '-c[show scheduling class with -l option]' \
        '--sort[specify sort order as: \[+|-\]key\[,\[+|-\]key\[,...\]\]]' \
        '--cumulative[include some dead child process data]' \
        '-y[do not show flags, show rss (only with -l)]' \
        {-V,--version}'[display version information and exit]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

