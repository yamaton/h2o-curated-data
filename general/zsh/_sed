#compdef _sed sed

# Auto-generated with h2o


function _sed {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-n,--quiet,--silent}'[suppress automatic printing of pattern space]' \
        '--debug[annotate program execution]' \
        {-e,--expression}'[add the script to the commands to be executed]' \
        {-f,--file}'[add the contents of script-file to the commands to be executed]':file:_files \
        '--follow-symlinks[follow symlinks when processing in place]' \
        {-i,--in-place}'[edit files in place (makes backup if SUFFIX supplied)]' \
        {-l,--line-length}'[specify the desired line-wrap length for the `l'\'' command]' \
        '--posix[disable all GNU extensions.]' \
        {-E,-r,--regexp-extended}'[use extended regular expressions in the script (for portability use POSIX -E).]' \
        {-s,--separate}'[consider files as separate rather than as a single, continuous long stream.]' \
        '--sandbox[operate in sandbox mode (disable e/r/w commands).]' \
        {-u,--unbuffered}'[load minimal amounts of data from the input files and flush the output buffers more often]' \
        {-z,--null-data}'[separate lines by NUL characters]' \
        '--help[display this help and exit]' \
        '--version[output version information and exit]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

