#compdef _uniq uniq

# Generated with h2o 0.1.18


function _uniq {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '(-c --count)'{-c,--count}'[prefix lines by the number of occurrences]' \
        '(-d --repeated)'{-d,--repeated}'[only print duplicate lines, one for each group]' \
        '-D[print all duplicate lines]' \
        '--all-repeated[like -D, but allow separating groups with an empty line; METHOD={none(default),prepend,separate}]' \
        '(-f --skip-fields)'{-f,--skip-fields}'[avoid comparing the first N fields]' \
        '--group[show all items, separating groups with an empty line; METHOD={separate(default),prepend,append,both}]' \
        '(-i --ignore-case)'{-i,--ignore-case}'[ignore differences in case when comparing]' \
        '(-s --skip-chars)'{-s,--skip-chars}'[avoid comparing the first N characters]' \
        '(-u --unique)'{-u,--unique}'[only print unique lines]' \
        '(-z --zero-terminated)'{-z,--zero-terminated}'[line delimiter is NUL, not newline]' \
        '(-w --check-chars)'{-w,--check-chars}'[compare no more than N characters in lines]' \
        '--help[display this help and exit]' \
        '--version[output version information and exit]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

