#compdef _unshare unshare

# Auto-generated with h2o


function _unshare {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-m,--mount}'[unshare mounts namespace]':file:_files \
        {-u,--uts}'[unshare UTS namespace (hostname etc)]':file:_files \
        {-i,--ipc}'[unshare System V IPC namespace]':file:_files \
        {-n,--net}'[unshare network namespace]':file:_files \
        {-p,--pid}'[unshare pid namespace]':file:_files \
        {-U,--user}'[unshare user namespace]':file:_files \
        {-C,--cgroup}'[unshare cgroup namespace]':file:_files \
        {-T,--time}'[unshare time namespace]':file:_files \
        {-f,--fork}'[fork before launching <program>]' \
        '--map-user[map current user to uid (implies --user)]' \
        '--map-group[map current group to gid (implies --user)]' \
        {-r,--map-root-user}'[map current user to root (implies --user)]' \
        {-c,--map-current-user}'[map current user to itself (implies --user)]' \
        '--kill-child[when dying, kill the forked child (implies --fork) defaults to SIGKILL]' \
        '--mount-proc[mount proc filesystem first (implies --mount)]':file:_files \
        '--propagation[modify mount propagation in mount namespace]' \
        '--setgroups[control the setgroups syscall in user namespaces]' \
        '--keep-caps[retain capabilities granted in user namespaces]' \
        {-R,--root}'[run the command with root directory set to <dir>]':file:_files \
        {-w,--wd}'[change working directory to <dir>]':file:_files \
        {-S,--setuid}'[set uid in entered namespace]' \
        {-G,--setgid}'[set gid in entered namespace]' \
        '--monotonic[set clock monotonic offset (seconds) in time namespaces]' \
        '--boottime[set clock boottime offset (seconds) in time namespaces]' \
        {-h,--help}'[display this help]' \
        {-V,--version}'[display version]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

