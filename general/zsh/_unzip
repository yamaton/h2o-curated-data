#compdef _unzip unzip

# Auto-generated with h2o


function _unzip {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '-p[extract files to pipe, no messages]' \
        '-l[list files (short format)]' \
        '-f[freshen existing files, create none]' \
        '-t[test compressed archive data]' \
        '-u[update files, create if necessary]' \
        '-z[display archive comment only]' \
        '-v[list verbosely/show version info]' \
        '-T[timestamp archive to latest]' \
        '-x[exclude files that follow (in xlist)]' \
        '-d[extract files into exdir]' \
        '-n[never overwrite existing files]' \
        '-q[quiet mode (-qq => quieter)]' \
        '-o[overwrite files WITHOUT prompting]' \
        '-a[auto-convert any text files]' \
        '-j[junk paths (do not make directories)]' \
        '-aa[treat ALL files as text]' \
        '-U[use escapes for all non-ASCII Unicode]' \
        '-UU[ignore any Unicode fields]' \
        '-C[match filenames case-insensitively]' \
        '-L[make (some) names lowercase]' \
        '-X[restore UID/GID info]' \
        '-V[retain VMS version numbers]' \
        '-K[keep setuid/setgid/tacky permissions]' \
        '-M[pipe through "more" pager]' \
        '-O[specify a character encoding for DOS, Windows and OS/2 archives]' \
        '-I[specify a character encoding for UNIX and other archives]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

