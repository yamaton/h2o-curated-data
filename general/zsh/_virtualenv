#compdef _virtualenv virtualenv

# Auto-generated with h2o


function _virtualenv {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--version[display the version of the virtualenv package and its location, then exit]' \
        '--with-traceback[on failure also display the stacktrace internals of virtualenv (default: False)]' \
        '--read-only-app-data[use app data folder in read-only mode (write operations will fail with error) (default: False)]' \
        '--app-data[a data folder used as cache by the virtualenv (default: ~/.local/share/virtualenv)]' \
        '--reset-app-data[start with empty app data folder (default: False)]' \
        '--upgrade-embed-wheels[trigger a manual update of the embedded wheels (default: False)]' \
        {-h,--help}'[show this help message and exit]' \
        {-v,--verbose}'[increase verbosity (default: 2)]' \
        {-q,--quiet}'[decrease verbosity (default: 0)]' \
        '--discovery[interpreter discovery method (default: builtin)]' \
        {-p,--python}'[interpreter based on what to create environment (path/identifier) - by default use the interpreter where the tool is installed - first found wins (default: \[\])]' \
        '--try-first-with[try first these interpreters before starting the discovery (default: \[\])]' \
        '--creator[create environment via (builtin = cpython3-posix) (default: builtin)]' \
        '--clear[remove the destination directory if exist before starting (will overwrite files otherwise) (default: False)]' \
        '--no-vcs-ignore[don'\''t create VCS ignore directive in the destination directory (default: False)]' \
        '--system-site-packages[give the virtual environment access to the system site-packages dir (default: False)]' \
        '--symlinks[try to use symlinks rather than copies, when symlinks are not the default for the platform (default: True)]' \
        {--copies,--always-copy}'[try to use copies rather than symlinks, even when symlinks are the default for the platform (default: False)]' \
        '--seeder[seed packages install method (default: app-data)]' \
        {--no-seed,--without-pip}'[do not install seed packages (default: False)]' \
        {--no-download,--never-download}'[pass to disable download of the latest pip/setuptools/wheel from PyPI (default: True)]' \
        '--download[pass to enable download of the latest pip/setuptools/wheel from PyPI (default: False)]' \
        '--extra-search-dir[a path containing wheels to extend the internal wheel list (can be set 1+ times) (default: \[\])]' \
        '--pip[version of pip to install as seed: embed, bundle or exact version (default: bundle)]' \
        '--setuptools[version of setuptools to install as seed: embed, bundle or exact version (default: bundle)]' \
        '--wheel[version of wheel to install as seed: embed, bundle or exact version (default: bundle)]' \
        '--no-pip[do not install pip (default: False)]' \
        '--no-setuptools[do not install setuptools (default: False)]' \
        '--no-wheel[do not install wheel (default: False)]' \
        '--no-periodic-update[disable the periodic (once every 14 days) update of the embedded wheels (default: False)]' \
        '--symlink-app-data[symlink the python packages from the app-data folder (requires seed pip>=19.3) (default: False)]' \
        '--activators[activators to generate - default is all supported (default: bash,cshell,fish,nushell,powershell,python)]' \
        '--prompt[provides an alternative prompt prefix for this environment (value of . means name of the current working directory) (default: None)]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

