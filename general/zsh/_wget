#compdef _wget wget

# Auto-generated with h2o


function _wget {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-V,--version}'[display the version of Wget and exit]' \
        {-h,--help}'[print this help]' \
        {-b,--background}'[go to background after startup]' \
        {-e,--execute}'[execute a `.wgetrc'\''-style command]' \
        {-o,--output-file}'[log messages to FILE]':file:_files \
        {-a,--append-output}'[append messages to FILE]':file:_files \
        {-d,--debug}'[print lots of debugging information]' \
        {-q,--quiet}'[quiet (no output)]' \
        {-v,--verbose}'[be verbose (this is the default)]' \
        {-nv,--no-verbose}'[turn off verboseness, without being quiet]' \
        '--report-speed[output bandwidth as TYPE. TYPE can be bits]' \
        {-i,--input-file}'[download URLs found in local or external FILE]':file:_files \
        {-F,--force-html}'[treat input file as HTML]' \
        {-B,--base}'[resolves HTML input-file links (-i -F) relative to URL]' \
        '--config[specify config file to use]':file:_files \
        '--no-config[do not read any config file]' \
        '--rejected-log[log reasons for URL rejection to FILE]':file:_files \
        {-t,--tries}'[set number of retries to NUMBER (0 unlimits)]' \
        '--retry-connrefused[retry even if connection is refused]' \
        '--retry-on-http-error[comma-separated list of HTTP errors to retry]' \
        {-O,--output-document}'[write documents to FILE]':file:_files \
        {-nc,--no-clobber}'[skip downloads that would download to existing files (overwriting them)]' \
        '--no-netrc[don'\''t try to obtain credentials from .netrc]' \
        {-c,--continue}'[resume getting a partially-downloaded file]' \
        '--start-pos[start downloading from zero-based position OFFSET]' \
        '--progress[select progress gauge type]' \
        '--show-progress[display the progress bar in any verbosity mode]' \
        {-N,--timestamping}'[don'\''t re-retrieve files unless newer than local]' \
        '--no-if-modified-since[don'\''t use conditional if-modified-since get requests in timestamping mode]' \
        '--no-use-server-timestamps[don'\''t set the local file'\''s timestamp by the one on the server]' \
        {-S,--server-response}'[print server response]' \
        '--spider[don'\''t download anything]' \
        {-T,--timeout}'[set all timeout values to SECONDS]' \
        '--dns-timeout[set the DNS lookup timeout to SECS]' \
        '--connect-timeout[set the connect timeout to SECS]' \
        '--read-timeout[set the read timeout to SECS]' \
        {-w,--wait}'[wait SECONDS between retrievals]' \
        '--waitretry[wait 1..SECONDS between retries of a retrieval]' \
        '--random-wait[wait from 0.5*WAIT...1.5*WAIT secs between retrievals]' \
        '--no-proxy[explicitly turn off proxy]' \
        {-Q,--quota}'[set retrieval quota to NUMBER]' \
        '--bind-address[bind to ADDRESS (hostname or IP) on local host]' \
        '--limit-rate[limit download rate to RATE]' \
        '--no-dns-cache[disable caching DNS lookups]' \
        '--restrict-file-names[restrict chars in file names to ones OS allows]' \
        '--ignore-case[ignore case when matching files/directories]' \
        {-4,--inet4-only}'[connect only to IPv4 addresses]' \
        {-6,--inet6-only}'[connect only to IPv6 addresses]' \
        '--prefer-family[connect first to addresses of specified family, one of IPv6, IPv4, or none]' \
        '--user[set both ftp and http user to USER]' \
        '--password[set both ftp and http password to PASS]' \
        '--ask-password[prompt for passwords]' \
        '--use-askpass[specify credential handler for requesting username and password. If no COMMAND is specified the WGET_ASKPASS or the SSH_ASKPASS environment variable is used.]' \
        '--no-iri[turn off IRI support]' \
        '--local-encoding[use ENC as the local encoding for IRIs]' \
        '--remote-encoding[use ENC as the default remote encoding]' \
        '--unlink[remove file before clobber]' \
        '--xattr[turn on storage of metadata in extended file attributes]' \
        {-nd,--no-directories}'[don'\''t create directories]' \
        {-x,--force-directories}'[force creation of directories]' \
        {-nH,--no-host-directories}'[don'\''t create host directories]' \
        '--protocol-directories[use protocol name in directories]' \
        {-P,--directory-prefix}'[save files to PREFIX/..]' \
        '--cut-dirs[ignore NUMBER remote directory components]' \
        '--http-user[set http user to USER]' \
        '--http-password[set http password to PASS]' \
        '--no-cache[disallow server-cached data]' \
        '--default-page[change the default page name (normally this is '\''index.html'\''.)]' \
        {-E,--adjust-extension}'[save HTML/CSS documents with proper extensions]' \
        '--ignore-length[ignore '\''Content-Length'\'' header field]' \
        '--header[insert STRING among the headers]' \
        '--compression[choose compression, one of auto, gzip and none. (default: none)]' \
        '--max-redirect[maximum redirections allowed per page]' \
        '--proxy-user[set USER as proxy username]' \
        '--proxy-password[set PASS as proxy password]' \
        '--referer[include '\''Referer: URL'\'' header in HTTP request]' \
        '--save-headers[save the HTTP headers to file]' \
        {-U,--user-agent}'[identify as AGENT instead of Wget/VERSION]' \
        '--no-http-keep-alive[disable HTTP keep-alive (persistent connections)]' \
        '--no-cookies[don'\''t use cookies]' \
        '--load-cookies[load cookies from FILE before session]':file:_files \
        '--save-cookies[save cookies to FILE after session]':file:_files \
        '--keep-session-cookies[load and save session (non-permanent) cookies]' \
        '--post-data[use the POST method; send STRING as the data]' \
        '--post-file[use the POST method; send contents of FILE]':file:_files \
        '--method[use method "HTTPMethod" in the request]' \
        '--body-data[send STRING as data. --method MUST be set]' \
        '--body-file[send contents of FILE. --method MUST be set]':file:_files \
        '--content-disposition[honor the Content-Disposition header when choosing local file names (EXPERIMENTAL)]' \
        '--content-on-error[output the received content on server errors]' \
        '--auth-no-challenge[send Basic HTTP authentication information without first waiting for the server'\''s challenge]' \
        '--secure-protocol[choose secure protocol, one of auto, SSLv2, SSLv3, TLSv1, TLSv1_1, TLSv1_2 and PFS]' \
        '--https-only[only follow secure HTTPS links]' \
        '--no-check-certificate[don'\''t validate the server'\''s certificate]' \
        '--certificate[client certificate file]':file:_files \
        '--certificate-type[client certificate type, PEM or DER]' \
        '--private-key[private key file]':file:_files \
        '--private-key-type[private key type, PEM or DER]' \
        '--ca-certificate[file with the bundle of CAs]':file:_files \
        '--ca-directory[directory where hash list of CAs is stored]':file:_files \
        '--crl-file[file with bundle of CRLs]':file:_files \
        '--pinnedpubkey[Public key (PEM/DER) file, or any number of base64 encoded sha256 hashes preceded by '\''sha256//'\'' and separated by '\'';'\'', to verify peer against]':file:_files \
        '--random-file[file with random data for seeding the SSL PRNG]':file:_files \
        '--ciphers[Set the priority string (GnuTLS) or cipher list string (OpenSSL) directly. Use with care. This option overrides --secure-protocol. The format and syntax of this string depend on the specific SSL/TLS engine.]' \
        '--no-hsts[disable HSTS]' \
        '--hsts-file[path of HSTS database (will override default)]' \
        '--ftp-user[set ftp user to USER]' \
        '--ftp-password[set ftp password to PASS]' \
        '--no-remove-listing[don'\''t remove '\''.listing'\'' files]' \
        '--no-glob[turn off FTP file name globbing]' \
        '--no-passive-ftp[disable the "passive" transfer mode]' \
        '--preserve-permissions[preserve remote file permissions]' \
        '--retr-symlinks[when recursing, get linked-to files (not dir)]' \
        '--ftps-implicit[use implicit FTPS (default port is 990)]' \
        '--ftps-resume-ssl[resume the SSL/TLS session started in the control connection when opening a data connection]' \
        '--ftps-clear-data-connection[cipher the control channel only; all the data will be in plaintext]' \
        '--ftps-fallback-to-ftp[fall back to FTP if FTPS is not supported in the target server]' \
        '--warc-file[save request/response data to a .warc.gz file]':file:_files \
        '--warc-header[insert STRING into the warcinfo record]' \
        '--warc-max-size[set maximum size of WARC files to NUMBER]' \
        '--warc-cdx[write CDX index files]' \
        '--warc-dedup[do not store records listed in this CDX file]':file:_files \
        '--no-warc-compression[do not compress WARC files with GZIP]' \
        '--no-warc-digests[do not calculate SHA1 digests]' \
        '--no-warc-keep-log[do not store the log file in a WARC record]' \
        '--warc-tempdir[location for temporary files created by the WARC writer]':file:_files \
        {-r,--recursive}'[specify recursive download]' \
        {-l,--level}'[maximum recursion depth (inf or 0 for infinite)]' \
        '--delete-after[delete files locally after downloading them]' \
        {-k,--convert-links}'[make links in downloaded HTML or CSS point to local files]' \
        '--convert-file-only[convert the file part of the URLs only (usually known as the basename)]' \
        '--backups[before writing file X, rotate up to N backup files]' \
        {-K,--backup-converted}'[before converting file X, back up as X.orig]' \
        {-m,--mirror}'[shortcut for -N -r -l inf --no-remove-listing]' \
        {-p,--page-requisites}'[get all images, etc. needed to display HTML page]' \
        '--strict-comments[turn on strict (SGML) handling of HTML comments]' \
        {-A,--accept}'[comma-separated list of accepted extensions]' \
        {-R,--reject}'[comma-separated list of rejected extensions]' \
        '--accept-regex[regex matching accepted URLs]' \
        '--reject-regex[regex matching rejected URLs]' \
        '--regex-type[regex type (posix)]' \
        {-D,--domains}'[comma-separated list of accepted domains]' \
        '--exclude-domains[comma-separated list of rejected domains]' \
        '--follow-ftp[follow FTP links from HTML documents]' \
        '--follow-tags[comma-separated list of followed HTML tags]' \
        '--ignore-tags[comma-separated list of ignored HTML tags]' \
        {-H,--span-hosts}'[go to foreign hosts when recursive]' \
        {-L,--relative}'[follow relative links only]' \
        {-I,--include-directories}'[list of allowed directories]' \
        '--trust-server-names[use the name specified by the redirection URL'\''s last component]' \
        {-X,--exclude-directories}'[list of excluded directories]' \
        {-np,--no-parent}'[don'\''t ascend to the parent directory]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

