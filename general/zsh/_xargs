#compdef _xargs xargs

# Generated with h2o 0.1.18


function _xargs {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '(-0 --null)'{-0,--null}'[items are separated by a null, not whitespace; disables quote and backslash processing and logical EOF processing]' \
        '(-a --arg-file)'{-a,--arg-file}'[read arguments from FILE, not standard input]' \
        '(-d --delimiter)'{-d,--delimiter}'[items in input stream are separated by CHARACTER, not by whitespace; disables quote and backslash processing and logical EOF processing]' \
        '-E[set logical EOF string; if END occurs as a line of input, the rest of the input is ignored (ignored if -0 or -d was specified)]' \
        '(-e --eof)'{-e,--eof}'[equivalent to -E END if END is specified; otherwise, there is no end-of-file string]' \
        '-I[same as --replace=R]' \
        '(-i --replace)'{-i,--replace}'[replace R in INITIAL-ARGS with names read from standard input; if R is unspecified, assume {}]' \
        '(-L --max-lines)'{-L,--max-lines}'[use at most MAX-LINES non-blank input lines per command line]' \
        '-l[similar to -L but defaults to at most one nonblank input line if MAX-LINES is not specified]' \
        '(-n --max-args)'{-n,--max-args}'[use at most MAX-ARGS arguments per command line]' \
        '(-o --open-tty)'{-o,--open-tty}'[Reopen stdin as /dev/tty in the child process before executing the command; useful to run an interactive application.]' \
        '(-P --max-procs)'{-P,--max-procs}'[run at most MAX-PROCS processes at a time]' \
        '(-p --interactive)'{-p,--interactive}'[prompt before running commands]' \
        '--process-slot-var[set environment variable VAR in child processes]' \
        '(-r --no-run-if-empty)'{-r,--no-run-if-empty}'[if there are no arguments, then do not run COMMAND; if this option is not given, COMMAND will be run at least once]' \
        '(-s --max-chars)'{-s,--max-chars}'[limit length of command line to MAX-CHARS]' \
        '--show-limits[show limits on command-line length]' \
        '(-t --verbose)'{-t,--verbose}'[print commands before executing them]' \
        '(-x --exit)'{-x,--exit}'[exit if the size (see -s) is exceeded]' \
        '--help[display this help and exit]' \
        '--version[output version information and exit]' \
        '1: :_commands' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

