#compdef _xz xz

# Auto-generated with h2o


function _xz {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-z,--compress}'[force compression]' \
        {-d,--decompress}'[force decompression]' \
        {-t,--test}'[test compressed file integrity]' \
        {-l,--list}'[list information about .xz files]' \
        {-k,--keep}'[keep (don'\''t delete) input files]' \
        {-f,--force}'[force overwrite of output file and (de)compress links]' \
        {-c,--stdout}'[write to standard output and don'\''t delete input files]' \
        {-0,-1,-2,-3,-4,-5,-6,-7,-8,-9}'[compression preset; default is 6; take compressor *and* decompressor memory usage into account before using 7-9!]' \
        {-e,--extreme}'[try to improve compression ratio by using more CPU time; does not affect decompressor memory requirements]' \
        {-T,--threads}'[use at most NUM threads; the default is 1; set to 0 to use as many threads as there are processor cores]' \
        {-q,--quiet}'[suppress warnings; specify twice to suppress errors too]' \
        {-v,--verbose}'[be verbose; specify twice for even more verbose]' \
        {-h,--help}'[display this short help and exit]' \
        {-H,--long-help}'[display the long help (lists also the advanced options)]' \
        {-V,--version}'[display the version number and exit]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

