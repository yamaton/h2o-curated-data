#compdef _yarn yarn

# Auto-generated with h2o

    function _yarn_access {
        _arguments \
            "*: :_files"

    }

    function _yarn_add {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-W,--ignore-workspace-root-check}'[required to run yarn add inside a workspace root]' \
            {-D,--dev}'[save package to your `devDependencies`]' \
            {-P,--peer}'[save package to your `peerDependencies`]' \
            {-O,--optional}'[save package to your `optionalDependencies`]' \
            {-E,--exact}'[install exact version]' \
            {-T,--tilde}'[install most recent release with the same minor version]' \
            {-A,--audit}'[Run vulnerability audit on installed packages]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_audit {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--summary[Only print the summary.]' \
            '--groups[Only audit dependencies from listed groups. Default: devDependencies, dependencies, optionalDependencies (default: devDependencies,dependencies,optionalDependencies)]' \
            '--level[Only print advisories with severity greater than or equal to one of the following: info|low|moderate|high|critical. Default: info (default: info)]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_autoclean {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-I,--init}'[Create ".yarnclean" file with the default entries.]' \
            {-F,--force}'[Run autoclean using the existing ".yarnclean" file.]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_bin {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_cache {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--pattern[filter cached packages by pattern]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_check {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {--integrity,--verify-tree,-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_config {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_create {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_exec {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_generate-lock-entry {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--use-manifest[description]' \
            '--resolved[description]' \
            '--registry[description]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_global {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--prefix[bin prefix to use to install binaries]' \
            '--latest[upgrade to the latest version of packages]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_help {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_import {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_info {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_init {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-y,--yes}'[use default options]' \
            {-p,--private}'[use default options and private true]' \
            {-i,--install}'[install a specific Yarn release]' \
            '-2[generates the project using Yarn 2]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_install {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-A,--audit}'[Run vulnerability audit on installed packages]' \
            {-g,--global}'[DEPRECATED]' \
            {-S,--save}'[DEPRECATED - save package to your `dependencies`]' \
            {-D,--save-dev}'[DEPRECATED - save package to your `devDependencies`]' \
            {-P,--save-peer}'[DEPRECATED - save package to your `peerDependencies`]' \
            {-O,--save-optional}'[DEPRECATED - save package to your `optionalDependencies`]' \
            {-E,--save-exact}'[DEPRECATED]' \
            {-T,--save-tilde}'[DEPRECATED]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_licenses {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_link {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_list {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--depth[Limit the depth of the shown dependencies]' \
            '--pattern[Filter dependencies by pattern]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_login {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_logout {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_node {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--into[Sets the cwd to the specified location]':file:_files \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_outdated {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_owner {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_pack {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-f,--filename}'[filename]':file:_files \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_policies {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_publish {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--new-version[new version]' \
            '--major[auto-increment major version number]' \
            '--minor[auto-increment minor version number]' \
            '--patch[auto-increment patch version number]' \
            '--premajor[auto-increment premajor version number]' \
            '--preminor[auto-increment preminor version number]' \
            '--prepatch[auto-increment prepatch version number]' \
            '--prerelease[auto-increment prerelease version number]' \
            '--preid[add a custom identifier to the prerelease]' \
            '--message[message]' \
            '--no-git-tag-version[no git tag version]' \
            '--no-commit-hooks[bypass git hooks when committing new version]' \
            '--access[access]' \
            '--tag[tag]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_remove {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-W,--ignore-workspace-root-check}'[required to run yarn remove inside a workspace root]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_run {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_tag {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_team {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_unlink {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_unplug {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--clear[Delete the selected packages]' \
            '--clear-all[Delete all unplugged packages]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_upgrade {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-S,--scope}'[upgrade packages under the specified scope]' \
            {-L,--latest}'[list the latest version of packages, ignoring version ranges in package.json]' \
            {-E,--exact}'[install exact version. Only used when --latest is specified.]' \
            {-P,--pattern}'[upgrade packages that match pattern]' \
            {-T,--tilde}'[install most recent release with the same minor version. Only used when --latest is specified.]' \
            {-C,--caret}'[install most recent release with the same major version. Only used when --latest is specified.]' \
            {-A,--audit}'[Run vulnerability audit on installed packages]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_upgrade-interactive {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-S,--scope}'[upgrade packages under the specified scope]' \
            '--latest[list the latest version of packages, ignoring version ranges in package.json]' \
            {-E,--exact}'[install exact version. Only used when --latest is specified.]' \
            {-T,--tilde}'[install most recent release with the same minor version. Only used when --latest is specified.]' \
            {-C,--caret}'[install most recent release with the same major version. Only used when --latest is specified.]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_version {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            '--new-version[new version]' \
            '--major[auto-increment major version number]' \
            '--minor[auto-increment minor version number]' \
            '--patch[auto-increment patch version number]' \
            '--premajor[auto-increment premajor version number]' \
            '--preminor[auto-increment preminor version number]' \
            '--prepatch[auto-increment prepatch version number]' \
            '--prerelease[auto-increment prerelease version number]' \
            '--preid[add a custom identifier to the prerelease]' \
            '--message[message]' \
            '--no-git-tag-version[no git tag version]' \
            '--no-commit-hooks[bypass git hooks when committing new version]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_versions {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_why {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_workspace {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }

    function _yarn_workspaces {
        _arguments \
            {-v,--version}'[output the version number]' \
            '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
            '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
            '--verbose[output verbose messages on internal operations]' \
            '--offline[trigger an error if any required dependencies are not available in local cache]' \
            '--prefer-offline[use network only if dependencies are not available in local cache]' \
            {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
            '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
            '--strict-semver[strict-semver]' \
            '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
            '--ignore-scripts[don'\''t run lifecycle scripts]' \
            '--har[save HAR output of network traffic]' \
            '--ignore-platform[ignore platform checks]' \
            '--ignore-engines[ignore engines check]' \
            '--ignore-optional[ignore optional dependencies]' \
            '--force[install and build packages even if they were built before, overwrite lockfile]' \
            '--skip-integrity-check[run install without checking if node_modules is installed]' \
            '--check-files[install will verify file tree of packages for consistency]' \
            '--no-bin-links[don'\''t generate bin links when setting up packages]' \
            '--flat[only allow one version of a package]' \
            {--prod,--production}'[production]' \
            '--no-lockfile[don'\''t read or generate a lockfile]' \
            '--pure-lockfile[don'\''t generate a lockfile]' \
            '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
            '--update-checksums[update package checksums from current repository]' \
            '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
            '--link-folder[specify a custom folder to store global links]':file:_files \
            '--global-folder[specify a custom folder to store global packages]':file:_files \
            '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
            '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
            '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
            '--mutex[use a mutex to ensure only one yarn instance is executing]' \
            '--emoji[enable emoji in output (default: false)]' \
            {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
            '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data/general)]' \
            {--proxy,--https-proxy}'[proxy]' \
            '--registry[override configuration registry]' \
            '--no-progress[disable progress bar]' \
            '--network-concurrency[maximum number of concurrent network requests]' \
            '--network-timeout[TCP timeout for network requests]' \
            '--non-interactive[do not show interactive prompts]' \
            '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
            '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
            '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
            '--otp[one-time password for two factor authentication]' \
            {-h,--help}'[output usage information]' \
            "*: :_files"

    }


function _yarn {
    local line state

    function _commands {
        local -a commands
        commands=(
            'access:Lists licenses for installed packages.'
            'add:Installs a package and any packages that it depends on.'
            'audit:Checks for known security issues with the installed packages.'
            'autoclean:Cleans and removes unnecessary files from package dependencies.'
            'bin:Displays the location of the yarn bin folder.'
            'cache:Yarn cache list will print out every cached package.'
            'check:Verifies if versions in the current project’s package.json match that of yarn’s lock file.'
            'config:Manages the yarn configuration files.'
            'create:Creates new projects from any create-* starter kits.'
            'exec:exec'
            'generate-lock-entry:Generates a lock file entry.'
            'global:Installs packages globally on your operating system.'
            'help:Displays help information.'
            'import:Generates yarn.lock from an npm package-lock.json file or an existing npm-installed node_modules folder.'
            'info:Shows information about a package.'
            'init:Interactively creates or updates a package.json file.'
            'install:Yarn install is used to install all dependencies for a project.'
            'licenses:Lists licenses for installed packages.'
            'link:Symlink a package folder during development.'
            'list:Lists installed packages.'
            'login:Stores registry username and email.'
            'logout:Clears registry username and email.'
            'node:Runs Node with the same version that the one used by Yarn itself, and by default from the project root'
            'outdated:Checks for outdated package dependencies.'
            'owner:Manages package owners.'
            'pack:Creates a compressed gzip archive of package dependencies.'
            'policies:policies'
            'publish:Publishes a package to the npm registry.'
            'remove:Removes a package from your direct dependencies updating your package.json and yarn.lock.'
            'run:Runs a defined package script.'
            'tag:Add, remove, or list tags on a package.'
            'team:Maintain team memberships'
            'unlink:Unlink a previously created symlink for a package.'
            'unplug:Temporarily copies a package (with an optional @range suffix) outside of the global cache for debugging purposes'
            'upgrade:Upgrades packages to their latest version based on the specified range.'
            'upgrade-interactive:Provides an easy way to update outdated packages.'
            'version:Update the version of your package via the command line.'
            'versions:Displays version information of currently installed Yarn, Node.js, and its dependencies.'
            'why:Identifies why a package has been installed, detailing which other packages depend on it.'
            'workspace:workspace'
            'workspaces:workspaces'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        '--cache-folder[specify a custom folder that must be used to store the yarn cache]':file:_files \
        '--check-files[install will verify file tree of packages for consistency]' \
        '--cwd[working directory to use (default: /home/vierbein/repos/h2o-curated-data)]' \
        '--disable-pnp[disable the Plug'\''n'\''Play installation]' \
        '--emoji[enable emoji in output (default: false)]' \
        {--enable-pnp,--pnp}'[enable the Plug'\''n'\''Play installation]' \
        '--flat[only allow one version of a package]' \
        '--focus[Focus on a single workspace by installing remote copies of its sibling workspaces.]' \
        '--force[install and build packages even if they were built before, overwrite lockfile]' \
        '--frozen-lockfile[don'\''t generate a lockfile and fail if an update is needed]' \
        '--global-folder[specify a custom folder to store global packages]':file:_files \
        '--har[save HAR output of network traffic]' \
        '--https-proxy[https proxy]' \
        '--ignore-engines[ignore engines check]' \
        '--ignore-optional[ignore optional dependencies]' \
        '--ignore-platform[ignore platform checks]' \
        '--ignore-scripts[don'\''t run lifecycle scripts]' \
        '--json[format Yarn log messages as lines of JSON (see jsonlines.org)]' \
        '--link-duplicates[create hardlinks to the repeated modules in node_modules]' \
        '--link-folder[specify a custom folder to store global links]':file:_files \
        '--modules-folder[rather than installing modules into the node_modules folder relative to the cwd, output them here]':file:_files \
        '--mutex[use a mutex to ensure only one yarn instance is executing]' \
        '--network-concurrency[maximum number of concurrent network requests]' \
        '--network-timeout[TCP timeout for network requests]' \
        '--no-bin-links[don'\''t generate bin links when setting up packages]' \
        '--no-default-rc[prevent Yarn from automatically detecting yarnrc and npmrc files]' \
        '--no-lockfile[don'\''t read or generate a lockfile]' \
        '--non-interactive[do not show interactive prompts]' \
        '--no-node-version-check[do not warn when using a potentially unsupported Node version]' \
        '--no-progress[disable progress bar]' \
        '--offline[trigger an error if any required dependencies are not available in local cache]' \
        '--otp[one-time password for two factor authentication]' \
        '--prefer-offline[use network only if dependencies are not available in local cache]' \
        '--preferred-cache-folder[specify a custom folder to store the yarn cache if possible]':file:_files \
        {--prod,--production}'[set production]' \
        '--proxy[proxy]' \
        '--pure-lockfile[don'\''t generate a lockfile]' \
        '--registry[override configuration registry]' \
        {-s,--silent}'[skip Yarn console logs, other types of logs (script output) will be printed]' \
        '--scripts-prepend-node-path[prepend the node executable dir to the PATH in scripts]' \
        '--skip-integrity-check[run install without checking if node_modules is installed]' \
        '--strict-semver[strict semver]' \
        '--update-checksums[update package checksums from current repository]' \
        '--use-yarnrc[specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )]':file:_files \
        {-v,--version}'[output the version number]' \
        '--verbose[output verbose messages on internal operations]' \
        {-h,--help}'[output usage information]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (access)
            _yarn_access
            ;;

        (add)
            _yarn_add
            ;;

        (audit)
            _yarn_audit
            ;;

        (autoclean)
            _yarn_autoclean
            ;;

        (bin)
            _yarn_bin
            ;;

        (cache)
            _yarn_cache
            ;;

        (check)
            _yarn_check
            ;;

        (config)
            _yarn_config
            ;;

        (create)
            _yarn_create
            ;;

        (exec)
            _yarn_exec
            ;;

        (generate-lock-entry)
            _yarn_generate-lock-entry
            ;;

        (global)
            _yarn_global
            ;;

        (help)
            _yarn_help
            ;;

        (import)
            _yarn_import
            ;;

        (info)
            _yarn_info
            ;;

        (init)
            _yarn_init
            ;;

        (install)
            _yarn_install
            ;;

        (licenses)
            _yarn_licenses
            ;;

        (link)
            _yarn_link
            ;;

        (list)
            _yarn_list
            ;;

        (login)
            _yarn_login
            ;;

        (logout)
            _yarn_logout
            ;;

        (node)
            _yarn_node
            ;;

        (outdated)
            _yarn_outdated
            ;;

        (owner)
            _yarn_owner
            ;;

        (pack)
            _yarn_pack
            ;;

        (policies)
            _yarn_policies
            ;;

        (publish)
            _yarn_publish
            ;;

        (remove)
            _yarn_remove
            ;;

        (run)
            _yarn_run
            ;;

        (tag)
            _yarn_tag
            ;;

        (team)
            _yarn_team
            ;;

        (unlink)
            _yarn_unlink
            ;;

        (unplug)
            _yarn_unplug
            ;;

        (upgrade)
            _yarn_upgrade
            ;;

        (upgrade-interactive)
            _yarn_upgrade-interactive
            ;;

        (version)
            _yarn_version
            ;;

        (versions)
            _yarn_versions
            ;;

        (why)
            _yarn_why
            ;;

        (workspace)
            _yarn_workspace
            ;;

        (workspaces)
            _yarn_workspaces
            ;;

        esac
        ;;
     esac

}

