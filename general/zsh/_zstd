#compdef _zstd zstd

# Auto-generated with h2o


function _zstd {
    local line state

    function _commands {
        local -a commands
        commands=(
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18}'[: # compression level (1-19, default: 3)]' \
        {-d,-D}'[use DICT as Dictionary for compression or decompression]' \
        '-o[result stored into `file` (only 1 output file)]':file:_files \
        '-f[disable input and output checks. Allows overwriting existing files, input from console, output to stdout, operating on links, block devices, etc.]' \
        '--rm[remove source file(s) after successful de/compression]' \
        '-k[preserve source file(s) (default)]' \
        {-h,-H}'[display help/long help and exit]' \
        '-V[display Version number and exit]' \
        '-c[write to standard output (even if it is the console)]' \
        '-v[verbose mode; specify multiple times to increase verbosity]' \
        '-q[suppress warnings; specify twice to suppress errors too]' \
        '--progress[forcibly display, or never display the progress counter. note: any (de)compressed output to terminal will mix with progress counter text.]' \
        '--no-progress[forcibly display, or never display the progress counter. note: any (de)compressed output to terminal will mix with progress counter text.]' \
        '-r[operate recursively on directories]' \
        '--filelist[read list of files to operate upon from FILE]':file:_files \
        '--output-dir-flat[processed files are stored into DIR]':file:_files \
        '--output-dir-mirror[processed files are stored into DIR respecting original directory structure]':file:_files \
        '--check[during compression, add XXH64 integrity checksum to frame (default: enabled). If specified with -d, decompressor will ignore/validate checksums in compressed frame (default: validate).]' \
        '--no-check[during compression, add XXH64 integrity checksum to frame (default: enabled). If specified with -d, decompressor will ignore/validate checksums in compressed frame (default: validate).]' \
        '--trace[log tracing information to FILE.]':file:_files \
        '--[All arguments after "--" are treated as files]' \
        '--ultra[enable levels beyond 19, up to 22 (requires more memory)]' \
        '--long[enable long distance matching with given window log (default: 27)]' \
        '--fast[switch to very fast compression levels (default: 1)]' \
        '--adapt[dynamically adapt compression level to I/O conditions]' \
        '--row-match-finder[force enable/disable usage of fast row-based matchfinder for greedy, lazy, and lazy2 strategies]' \
        '--no-row-match-finder[force enable/disable usage of fast row-based matchfinder for greedy, lazy, and lazy2 strategies]' \
        '--patch-from[specify the file to be used as a reference point for zstd'\''s diff engine.]':file:_files \
        '-T[spawns # compression threads (default: 1, 0==# cores)]' \
        '-B[select size of each job (default: 0==automatic)]' \
        '--single-thread[use a single thread for both I/O and compression (result slightly different than -T1)]' \
        '--auto-threads[use either physical cores or logical cores as default when specifying -T0 (default: physical)]' \
        '--rsyncable[compress using a rsync-friendly method (-B sets block size)]' \
        '--exclude-compressed[only compress files that are not already compressed]' \
        '--stream-size[specify size of streaming input from `stdin`]' \
        '--size-hint[optimize compression parameters for streaming input of approximately this size]' \
        '--target-compressed-block-size[generate compressed block of approximately targeted size]' \
        '--no-dictID[don'\''t write dictID into header (dictionary compression only)]' \
        '--compress-literals[force (un)compressed literals]' \
        '--no-compress-literals[force (un)compressed literals]' \
        '--format[compress files to the .zst format (default)]' \
        '-l[print information about zstd compressed files]' \
        '--test[test compressed file integrity]' \
        '-M[Set a memory usage limit for decompression]' \
        '--sparse[sparse mode (default: enabled on file, disabled on stdout)]' \
        '--no-sparse[sparse mode (default: enabled on file, disabled on stdout)]' \
        '--train[create a dictionary from a training set of files]' \
        '--train-cover[use the cover algorithm with optional args]' \
        '--train-fastcover[use the fast cover algorithm with optional args]' \
        '--train-legacy[use the legacy algorithm with selectivity (default: 9)]' \
        '-o[DICT is dictionary name (default: dictionary)]' \
        '--maxdict[limit dictionary to specified size (default: 112640)]' \
        '--dictID[force dictionary ID to specified value (default: random)]' \
        '-b[benchmark file(s), using # compression level (default: 3)]' \
        '-e[test all compression levels successively from -b# to -e# (default: 1)]' \
        '-i[minimum evaluation time in seconds (default: 3s)]' \
        '-B[cut file into independent blocks of size # (default: no block)]' \
        '-S[output one benchmark result per input file (default: consolidated result)]' \
        '--priority[set process priority to real-time]' \
        '*: :_files'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        esac
        ;;
     esac

}

