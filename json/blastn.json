{
  "name": "blastn",
  "description": "blastn",
  "options": [
    {
      "names": [
        "-h"
      ],
      "argument": "",
      "description": "Print USAGE and DESCRIPTION;  ignore all other parameters"
    },
    {
      "names": [
        "-help"
      ],
      "argument": "",
      "description": "Print USAGE, DESCRIPTION and ARGUMENTS; ignore all other parameters"
    },
    {
      "names": [
        "-version"
      ],
      "argument": "",
      "description": "Print version number;  ignore other arguments"
    },
    {
      "names": [
        "-query"
      ],
      "argument": "<File_In>",
      "description": "Input file name"
    },
    {
      "names": [
        "-query_loc"
      ],
      "argument": "<String>",
      "description": "Location on the query sequence in 1-based offsets (Format: start-stop)"
    },
    {
      "names": [
        "-strand"
      ],
      "argument": "<String, `both', `minus', `plus'>",
      "description": "Query strand(s) to search against database/subject"
    },
    {
      "names": [
        "-db"
      ],
      "argument": "<String>",
      "description": "BLAST database name"
    },
    {
      "names": [
        "-out"
      ],
      "argument": "<File_Out>",
      "description": "Output file name"
    },
    {
      "names": [
        "-evalue"
      ],
      "argument": "<Real>",
      "description": "Expectation value (E) threshold for saving hits "
    },
    {
      "names": [
        "-gapopen"
      ],
      "argument": "<Integer>",
      "description": "Cost to open a gap"
    },
    {
      "names": [
        "-gapextend"
      ],
      "argument": "<Integer>",
      "description": "Cost to extend a gap"
    },
    {
      "names": [
        "-use_index"
      ],
      "argument": "<Boolean>",
      "description": "Use MegaBLAST database index"
    },
    {
      "names": [
        "-index_name"
      ],
      "argument": "<String>",
      "description": "MegaBLAST database index name (deprecated; use only for old style indices)"
    },
    {
      "names": [
        "-subject"
      ],
      "argument": "<File_In>",
      "description": "Subject sequence(s) to search"
    },
    {
      "names": [
        "-subject_loc"
      ],
      "argument": "<String>",
      "description": "Location on the subject sequence in 1-based offsets (Format: start-stop)"
    },
    {
      "names": [
        "-outfmt"
      ],
      "argument": "<String>",
      "description": "alignment view options:"
    },
    {
      "names": [
        "-show_gis"
      ],
      "argument": "",
      "description": "Show NCBI GIs in deflines?"
    },
    {
      "names": [
        "-html"
      ],
      "argument": "",
      "description": "Produce HTML output?"
    },
    {
      "names": [
        "-dust"
      ],
      "argument": "<String>",
      "description": "Filter query sequence with DUST (Format: 'yes', 'level window linker', or"
    },
    {
      "names": [
        "-filtering_db"
      ],
      "argument": "<String>",
      "description": "BLAST database containing filtering elements (i.e.: repeats)"
    },
    {
      "names": [
        "-window_masker_taxid"
      ],
      "argument": "<Integer>",
      "description": "Enable WindowMasker filtering using a Taxonomic ID"
    },
    {
      "names": [
        "-window_masker_db"
      ],
      "argument": "<String>",
      "description": "Enable WindowMasker filtering using this repeats database."
    },
    {
      "names": [
        "-soft_masking"
      ],
      "argument": "<Boolean>",
      "description": "Apply filtering locations as soft masks"
    },
    {
      "names": [
        "-lcase_masking"
      ],
      "argument": "",
      "description": "Use lower case filtering in query and subject sequence(s)?"
    },
    {
      "names": [
        "-gilist"
      ],
      "argument": "<String>",
      "description": "Restrict search of database to list of GI's"
    },
    {
      "names": [
        "-seqidlist"
      ],
      "argument": "<String>",
      "description": "Restrict search of database to list of SeqId's"
    },
    {
      "names": [
        "-negative_gilist"
      ],
      "argument": "<String>",
      "description": "Restrict search of database to everything except the listed GIs"
    },
    {
      "names": [
        "-entrez_query"
      ],
      "argument": "<String>",
      "description": "Restrict search with the given Entrez query"
    },
    {
      "names": [
        "-db_soft_mask"
      ],
      "argument": "<String>",
      "description": "Filtering algorithm ID to apply to the BLAST database as soft masking"
    },
    {
      "names": [
        "-db_hard_mask"
      ],
      "argument": "<String>",
      "description": "Filtering algorithm ID to apply to the BLAST database as hard masking"
    },
    {
      "names": [
        "-perc_identity"
      ],
      "argument": "<Real, 0..100>",
      "description": "Percent identity"
    },
    {
      "names": [
        "-qcov_hsp_perc"
      ],
      "argument": "<Real, 0..100>",
      "description": "Percent query coverage per hsp"
    },
    {
      "names": [
        "-template_type"
      ],
      "argument": "<String, `coding', `coding_and_optimal', `optimal'>",
      "description": "Discontiguous MegaBLAST template type"
    },
    {
      "names": [
        "-dbsize"
      ],
      "argument": "<Int8>",
      "description": "Effective length of the database "
    },
    {
      "names": [
        "-sum_stats"
      ],
      "argument": "<Boolean>",
      "description": "Use sum statistics"
    },
    {
      "names": [
        "-import_search_strategy"
      ],
      "argument": "<File_In>",
      "description": "Search strategy to use"
    },
    {
      "names": [
        "-export_search_strategy"
      ],
      "argument": "<File_Out>",
      "description": "File name to record the search strategy used"
    },
    {
      "names": [
        "-xdrop_ungap"
      ],
      "argument": "<Real>",
      "description": "X-dropoff value (in bits) for ungapped extensions"
    },
    {
      "names": [
        "-xdrop_gap"
      ],
      "argument": "<Real>",
      "description": "X-dropoff value (in bits) for preliminary gapped extensions"
    },
    {
      "names": [
        "-xdrop_gap_final"
      ],
      "argument": "<Real>",
      "description": "X-dropoff value (in bits) for final gapped alignment"
    },
    {
      "names": [
        "-no_greedy"
      ],
      "argument": "",
      "description": "Use non-greedy dynamic programming extension"
    },
    {
      "names": [
        "-min_raw_gapped_score"
      ],
      "argument": "<Integer>",
      "description": "Minimum raw gapped score to keep an alignment in the preliminary gapped and"
    },
    {
      "names": [
        "-ungapped"
      ],
      "argument": "",
      "description": "Perform ungapped alignment only?"
    },
    {
      "names": [
        "-parse_deflines"
      ],
      "argument": "",
      "description": "Should the query and subject defline(s) be parsed?"
    },
    {
      "names": [
        "-remote"
      ],
      "argument": "",
      "description": "Execute search remotely?"
    }
  ]
}
