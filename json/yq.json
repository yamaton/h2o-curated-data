{
  "name": "yq",
  "description": "yq",
  "options": [
    {
      "names": [
        "-C",
        "--colors"
      ],
      "argument": "",
      "description": "force print with colors"
    },
    {
      "names": [
        "-e",
        "--exit-status"
      ],
      "argument": "",
      "description": "set exit status if there are no matches or null or false is returned"
    },
    {
      "names": [
        "-h",
        "--help"
      ],
      "argument": "",
      "description": "help for yq"
    },
    {
      "names": [
        "-I",
        "--indent"
      ],
      "argument": "int",
      "description": "sets indent level for output (default 2)"
    },
    {
      "names": [
        "-i",
        "--inplace"
      ],
      "argument": "",
      "description": "update the yaml file inplace of first yaml file given."
    },
    {
      "names": [
        "-M",
        "--no-colors"
      ],
      "argument": "",
      "description": "force print with no colors"
    },
    {
      "names": [
        "-N",
        "--no-doc"
      ],
      "argument": "",
      "description": "Don't print document separators (---)"
    },
    {
      "names": [
        "-n",
        "--null-input"
      ],
      "argument": "",
      "description": "Don't read input, simply evaluate the expression given. Useful for creating yaml docs from scratch."
    },
    {
      "names": [
        "-P",
        "--prettyPrint"
      ],
      "argument": "",
      "description": "pretty print, shorthand for '... style = \"\"'"
    },
    {
      "names": [
        "-j",
        "--tojson"
      ],
      "argument": "",
      "description": "output as json. Set indent to 0 to print json in one line."
    },
    {
      "names": [
        "--unwrapScalar"
      ],
      "argument": "",
      "description": "unwrap scalar, print the value with no quotes, colors or comments (default true)"
    },
    {
      "names": [
        "-v",
        "--verbose"
      ],
      "argument": "",
      "description": "verbose mode"
    },
    {
      "names": [
        "-V",
        "--version"
      ],
      "argument": "",
      "description": "Print version information and quit"
    }
  ],
  "subcommands": [
    {
      "name": "eval",
      "description": "Apply expression to each document in each yaml file given in sequence",
      "options": [
        {
          "names": [
            "-h",
            "--help"
          ],
          "argument": "help for",
          "description": "eval"
        },
        {
          "names": [
            "-C",
            "--colors"
          ],
          "argument": "",
          "description": "force print with colors"
        },
        {
          "names": [
            "-e",
            "--exit-status"
          ],
          "argument": "",
          "description": "set exit status if there are no matches or null or false is returned"
        },
        {
          "names": [
            "-I",
            "--indent"
          ],
          "argument": "int",
          "description": "sets indent level for output (default 2)"
        },
        {
          "names": [
            "-i",
            "--inplace"
          ],
          "argument": "",
          "description": "update the yaml file inplace of first yaml file given."
        },
        {
          "names": [
            "-M",
            "--no-colors"
          ],
          "argument": "",
          "description": "force print with no colors"
        },
        {
          "names": [
            "-N",
            "--no-doc"
          ],
          "argument": "",
          "description": "Don't print document separators (---)"
        },
        {
          "names": [
            "-n",
            "--null-input"
          ],
          "argument": "",
          "description": "Don't read input, simply evaluate the expression given. Useful for creating yaml docs from scratch."
        },
        {
          "names": [
            "-P",
            "--prettyPrint"
          ],
          "argument": "",
          "description": "pretty print, shorthand for '... style = \"\"'"
        },
        {
          "names": [
            "-j",
            "--tojson"
          ],
          "argument": "",
          "description": "output as json. Set indent to 0 to print json in one line."
        },
        {
          "names": [
            "--unwrapScalar"
          ],
          "argument": "",
          "description": "unwrap scalar, print the value with no quotes, colors or comments (default true)"
        },
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "verbose mode"
        }
      ]
    },
    {
      "name": "eval-all",
      "description": "Loads _all_ yaml documents of _all_ yaml files and runs expression once",
      "options": [
        {
          "names": [
            "-h",
            "--help"
          ],
          "argument": "help for",
          "description": "eval-all"
        },
        {
          "names": [
            "-C",
            "--colors"
          ],
          "argument": "",
          "description": "force print with colors"
        },
        {
          "names": [
            "-e",
            "--exit-status"
          ],
          "argument": "",
          "description": "set exit status if there are no matches or null or false is returned"
        },
        {
          "names": [
            "-I",
            "--indent"
          ],
          "argument": "int",
          "description": "sets indent level for output (default 2)"
        },
        {
          "names": [
            "-i",
            "--inplace"
          ],
          "argument": "",
          "description": "update the yaml file inplace of first yaml file given."
        },
        {
          "names": [
            "-M",
            "--no-colors"
          ],
          "argument": "",
          "description": "force print with no colors"
        },
        {
          "names": [
            "-N",
            "--no-doc"
          ],
          "argument": "",
          "description": "Don't print document separators (---)"
        },
        {
          "names": [
            "-n",
            "--null-input"
          ],
          "argument": "",
          "description": "Don't read input, simply evaluate the expression given. Useful for creating yaml docs from scratch."
        },
        {
          "names": [
            "-P",
            "--prettyPrint"
          ],
          "argument": "",
          "description": "pretty print, shorthand for '... style = \"\"'"
        },
        {
          "names": [
            "-j",
            "--tojson"
          ],
          "argument": "",
          "description": "output as json. Set indent to 0 to print json in one line."
        },
        {
          "names": [
            "--unwrapScalar"
          ],
          "argument": "",
          "description": "unwrap scalar, print the value with no quotes, colors or comments (default true)"
        },
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "verbose mode"
        }
      ]
    },
    {
      "name": "help",
      "description": "Help about any command",
      "options": [
        {
          "names": [
            "-h",
            "--help"
          ],
          "argument": "help for",
          "description": "help"
        },
        {
          "names": [
            "-C",
            "--colors"
          ],
          "argument": "",
          "description": "force print with colors"
        },
        {
          "names": [
            "-e",
            "--exit-status"
          ],
          "argument": "",
          "description": "set exit status if there are no matches or null or false is returned"
        },
        {
          "names": [
            "-I",
            "--indent"
          ],
          "argument": "int",
          "description": "sets indent level for output (default 2)"
        },
        {
          "names": [
            "-i",
            "--inplace"
          ],
          "argument": "",
          "description": "update the yaml file inplace of first yaml file given."
        },
        {
          "names": [
            "-M",
            "--no-colors"
          ],
          "argument": "",
          "description": "force print with no colors"
        },
        {
          "names": [
            "-N",
            "--no-doc"
          ],
          "argument": "",
          "description": "Don't print document separators (---)"
        },
        {
          "names": [
            "-n",
            "--null-input"
          ],
          "argument": "",
          "description": "Don't read input, simply evaluate the expression given. Useful for creating yaml docs from scratch."
        },
        {
          "names": [
            "-P",
            "--prettyPrint"
          ],
          "argument": "",
          "description": "pretty print, shorthand for '... style = \"\"'"
        },
        {
          "names": [
            "-j",
            "--tojson"
          ],
          "argument": "",
          "description": "output as json. Set indent to 0 to print json in one line."
        },
        {
          "names": [
            "--unwrapScalar"
          ],
          "argument": "",
          "description": "unwrap scalar, print the value with no quotes, colors or comments (default true)"
        },
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "verbose mode"
        }
      ]
    },
    {
      "name": "shell-completion",
      "description": "Generate completion script",
      "options": [
        {
          "names": [
            "-h",
            "--help"
          ],
          "argument": "help for",
          "description": "shell-completion"
        },
        {
          "names": [
            "-C",
            "--colors"
          ],
          "argument": "",
          "description": "force print with colors"
        },
        {
          "names": [
            "-e",
            "--exit-status"
          ],
          "argument": "",
          "description": "set exit status if there are no matches or null or false is returned"
        },
        {
          "names": [
            "-I",
            "--indent"
          ],
          "argument": "int",
          "description": "sets indent level for output (default 2)"
        },
        {
          "names": [
            "-i",
            "--inplace"
          ],
          "argument": "",
          "description": "update the yaml file inplace of first yaml file given."
        },
        {
          "names": [
            "-M",
            "--no-colors"
          ],
          "argument": "",
          "description": "force print with no colors"
        },
        {
          "names": [
            "-N",
            "--no-doc"
          ],
          "argument": "",
          "description": "Don't print document separators (---)"
        },
        {
          "names": [
            "-n",
            "--null-input"
          ],
          "argument": "",
          "description": "Don't read input, simply evaluate the expression given. Useful for creating yaml docs from scratch."
        },
        {
          "names": [
            "-P",
            "--prettyPrint"
          ],
          "argument": "",
          "description": "pretty print, shorthand for '... style = \"\"'"
        },
        {
          "names": [
            "-j",
            "--tojson"
          ],
          "argument": "",
          "description": "output as json. Set indent to 0 to print json in one line."
        },
        {
          "names": [
            "--unwrapScalar"
          ],
          "argument": "",
          "description": "unwrap scalar, print the value with no quotes, colors or comments (default true)"
        },
        {
          "names": [
            "-v",
            "--verbose"
          ],
          "argument": "",
          "description": "verbose mode"
        }
      ]
    }
  ]
}
