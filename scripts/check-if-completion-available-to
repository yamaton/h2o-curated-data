#!/usr/bin/env bash
#
# Check if completion script is provided in the official Bash/Zsh/Fish channels
#
# Usage: check-if-completion-available-to {bash|zsh|fish} <command-name>
#
#   Create fish completion script for conda.
#
#   $ ./check-if-completion-available-to fish conda
#
#

set -o errexit
set -o nounset
set -o pipefail
if [[ "${TRACE-0}" == "1" ]]; then
    set -o xtrace
fi

if [[ ! "$(command -v git)" ]]; then
    echo "[error] git is missing"
    exit 1
fi

toshell=$1
name="$2"

if (( "$#" != 2 ))  || [[ "${1-}" =~ ^-*h(elp)?$ ]]; then
    echo "Usage: check-if-completion-available-to {bash|zsh|fish} <command>"
    exit 1
fi

rootdir="$HOME/repos"
mkdir -p "$rootdir"

case "$toshell" in
  bash)
    file="$rootdir/bash-completion/completions/$name"
    url="https://github.com/scop/bash-completion"
    ;;
  zsh)
    file="$rootdir/zsh-completions/src/_$name"
    url="https://github.com/zsh-users/zsh-completions"
    #
    # set variable skip=1 if the completion script is 'go'
    # NOTE: go completion script exists but named as _golang
    if [[ "$name" == "go" ]]; then
        skip=1
    fi
    ;;
  fish)
    file="$rootdir/fish-shell/share/completions/$name.fish"
    url="https://github.com/fish-shell/fish-shell"
    ;;
  *)
    echo "ERROR: The first argument must be either 'bash', 'zsh', or 'fish'."
    exit 1
    ;;
esac

dir="$(dirname "$file")"
# If the directory does not exist, clone the repository
if [[ ! -d "$dir" ]]; then
    # get the repository name
    name="$(basename "$url")";
    echo "Cloning $name to $rootdir ...";
    pushd "$rootdir" >/dev/null
      git clone "$url"
    popd >/dev/null;
fi

# Check if the file exists OR skip=1
if [[ -f "$file" ]] || [[ -n "${skip-}" ]]; then
    # echo "✨  $name: the completion script is already available to $toshell.";
    exit 0;
else
    # echo "❌  $name: the completion script is NOT available to $toshell.";
    exit 1;
fi
